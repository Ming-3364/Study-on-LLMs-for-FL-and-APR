
================== buggy_file ==================
faultyVersion.java
================== buggy_method ==================
{'method_name': 'main', 'method_body': 'public static void main(String[] args) throws Exception {\n        n = sc.nextInt();\n        m = sc.nextInt();\n        a = new int[n];\n        b = new int[m];\n        for(int i = 0; i < n; i ++) a[i] = sc.nextInt();\n        for(int i = 0; i < m; i ++) b[i] = sc.nextInt();\n        Arrays.sort(a);\n        Arrays.sort(b);\n        int i = 0, j = 0;\n        long ans = 0;\n        while(i < n && j < m){\n            if(b[j] <= a[i]) {\n                j ++;\n                ans += a[i];\n            }\n            i ++;\n            if(n - i < m - j){pw.print(-1);return;}//优化 可无\n        }\n        pw.println(j == m ? ans : -1);\n        pw.flush();pw.close(); \n    }\n}', 'start_line': 8, 'end_line': 29}
================== buggy_method_src ==================
public static void main(String[] args) throws Exception {
        n = sc.nextInt();
        m = sc.nextInt();
        a = new int[n];
        b = new int[m];
        for(int i = 0; i < n; i ++) a[i] = sc.nextInt();
        for(int i = 0; i < m; i ++) b[i] = sc.nextInt();
        Arrays.sort(a);
        Arrays.sort(b);
        int i = 0, j = 0;
        long ans = 0;
        while(i < n && j < m){
            if(b[j] <= a[i]) {
                j ++;
                ans += a[i];
            }
            i ++;
            if(n - i < m - j){pw.print(-1);return;}//优化 可无
        }
        pw.println(j == m ? ans : -1);
        pw.flush();pw.close(); 
    }
}
================== test_stack ==================
None
================== test_assert ==================
None
================== buggy_lines_in_method ==================
[18]
================== buggy_statements ==================
['            if(n - i < m - j){pw.print(-1);return;}//优化 可无']
================== buggy_method_src_endswith_buggy_statement ==================
public static void main(String[] args) throws Exception {
        n = sc.nextInt();
        m = sc.nextInt();
        a = new int[n];
        b = new int[m];
        for(int i = 0; i < n; i ++) a[i] = sc.nextInt();
        for(int i = 0; i < m; i ++) b[i] = sc.nextInt();
        Arrays.sort(a);
        Arrays.sort(b);
        int i = 0, j = 0;
        long ans = 0;
        while(i < n && j < m){
            if(b[j] <= a[i]) {
                j ++;
                ans += a[i];
            }
            i ++;
            if(n - i < m - j){pw.print(-1);return;}//优化 可无