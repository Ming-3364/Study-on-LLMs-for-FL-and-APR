[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "main",
            "method_body": "public static void main(String[] args) {\n    Scanner scanner = new Scanner(System.in);\n    int N = scanner.nextInt();\n    int M = scanner.nextInt();\n    int[][] roads = new int[M][];\n    int[][] AList = new int[M][];\n    for (int i=0; i<M; i++){\n      int K = scanner.nextInt();\n      int C = scanner.nextInt();\n      int[] A = new int[K];\n      for (int j=0; j<K; j++){\n        A[j] = scanner.nextInt();\n      }\n      int[] tmp = {C,K,i};\n      roads[i] = tmp;\n      AList[i] = A;\n    }\n    Arrays.sort(roads, (a,b) -> a[0] - b[0]);\n    int ans = 0;\n    UnionFind uf = new UnionFind(N);\n    for (int[] road : roads){\n      int cost = road[0];\n      int amount = road[1];\n      int[] roadList = AList[road[2]];\n      for (int i=0; i<amount-1; i++){\n        if (uf.same(roadList[i]-1,roadList[i+1]-1) == false){\n          uf.union(roadList[i]-1,roadList[i+1]-1);\n          ans += cost;\n        }\n      }\n    }\n    if (uf.groupCount() == 1){\n      System.out.println(ans);\n    } else {\n      System.out.println(-1);\n    }\n    \n  }",
            "start_line": 69,
            "end_line": 106
        },
        "buggy_method_src": "public static void main(String[] args) {\n    Scanner scanner = new Scanner(System.in);\n    int N = scanner.nextInt();\n    int M = scanner.nextInt();\n    int[][] roads = new int[M][];\n    int[][] AList = new int[M][];\n    for (int i=0; i<M; i++){\n      int K = scanner.nextInt();\n      int C = scanner.nextInt();\n      int[] A = new int[K];\n      for (int j=0; j<K; j++){\n        A[j] = scanner.nextInt();\n      }\n      int[] tmp = {C,K,i};\n      roads[i] = tmp;\n      AList[i] = A;\n    }\n    Arrays.sort(roads, (a,b) -> a[0] - b[0]);\n    int ans = 0;\n    UnionFind uf = new UnionFind(N);\n    for (int[] road : roads){\n      int cost = road[0];\n      int amount = road[1];\n      int[] roadList = AList[road[2]];\n      for (int i=0; i<amount-1; i++){\n        if (uf.same(roadList[i]-1,roadList[i+1]-1) == false){\n          uf.union(roadList[i]-1,roadList[i+1]-1);\n          ans += cost;\n        }\n      }\n    }\n    if (uf.groupCount() == 1){\n      System.out.println(ans);\n    } else {\n      System.out.println(-1);\n    }\n    \n  }",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            19
        ],
        "buggy_statements": [
            "    int ans = 0;"
        ],
        "buggy_method_src_endswith_buggy_statement": "public static void main(String[] args) {\n    Scanner scanner = new Scanner(System.in);\n    int N = scanner.nextInt();\n    int M = scanner.nextInt();\n    int[][] roads = new int[M][];\n    int[][] AList = new int[M][];\n    for (int i=0; i<M; i++){\n      int K = scanner.nextInt();\n      int C = scanner.nextInt();\n      int[] A = new int[K];\n      for (int j=0; j<K; j++){\n        A[j] = scanner.nextInt();\n      }\n      int[] tmp = {C,K,i};\n      roads[i] = tmp;\n      AList[i] = A;\n    }\n    Arrays.sort(roads, (a,b) -> a[0] - b[0]);\n    int ans = 0;"
    }
]