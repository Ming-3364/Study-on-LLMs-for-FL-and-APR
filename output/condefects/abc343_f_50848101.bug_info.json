[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "add",
            "method_body": "    t.secCnt = 0;\n\n        if (l.max == r.max){\n            t.max = l.max;\n            t.maxCnt = l.maxCnt + r.maxCnt;\n            t.sec = Math.max(l.sec, r.sec);\n            if (t.sec == l.sec) t.secCnt += l.secCnt;\n            if (t.sec == r.sec) t.secCnt += r.secCnt;\n        } else if (l.max > r.max) {\n            t.max = l.max;\n            t.maxCnt = l.maxCnt;\n            if (l.sec == r.max){\n                t.sec = l.sec;\n                t.secCnt = l.secCnt + r.maxCnt;\n            } else if (l.sec > r.max) {\n                t.sec = l.sec;\n                t.secCnt = l.secCnt;\n            }else {\n                t.sec = r.max;\n                t.secCnt = t.maxCnt;\n            }\n        }else {\n            t.max = r.max;\n            t.maxCnt = r.maxCnt;\n            if (l.max == r.sec){\n                t.sec = l.max;\n                t.secCnt = l.maxCnt + r.secCnt;\n            } else if (l.max > r.sec) {\n                t.sec = l.max;\n                t.secCnt = l.maxCnt;\n            }else {\n                t.sec = r.sec;\n                t.secCnt = r.secCnt;\n            }\n        }\n    }\n    public static class Node{\n        int l, r;\n        int max;\n        ",
            "start_line": 103,
            "end_line": 140
        },
        "buggy_method_src": "    t.secCnt = 0;\n\n        if (l.max == r.max){\n            t.max = l.max;\n            t.maxCnt = l.maxCnt + r.maxCnt;\n            t.sec = Math.max(l.sec, r.sec);\n            if (t.sec == l.sec) t.secCnt += l.secCnt;\n            if (t.sec == r.sec) t.secCnt += r.secCnt;\n        } else if (l.max > r.max) {\n            t.max = l.max;\n            t.maxCnt = l.maxCnt;\n            if (l.sec == r.max){\n                t.sec = l.sec;\n                t.secCnt = l.secCnt + r.maxCnt;\n            } else if (l.sec > r.max) {\n                t.sec = l.sec;\n                t.secCnt = l.secCnt;\n            }else {\n                t.sec = r.max;\n                t.secCnt = t.maxCnt;\n            }\n        }else {\n            t.max = r.max;\n            t.maxCnt = r.maxCnt;\n            if (l.max == r.sec){\n                t.sec = l.max;\n                t.secCnt = l.maxCnt + r.secCnt;\n            } else if (l.max > r.sec) {\n                t.sec = l.max;\n                t.secCnt = l.maxCnt;\n            }else {\n                t.sec = r.sec;\n                t.secCnt = r.secCnt;\n            }\n        }\n    }\n    public static class Node{\n        int l, r;\n        int max;\n        ",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            22
        ],
        "buggy_statements": [
            "        }else {"
        ],
        "buggy_method_src_endswith_buggy_statement": "    t.secCnt = 0;\n\n        if (l.max == r.max){\n            t.max = l.max;\n            t.maxCnt = l.maxCnt + r.maxCnt;\n            t.sec = Math.max(l.sec, r.sec);\n            if (t.sec == l.sec) t.secCnt += l.secCnt;\n            if (t.sec == r.sec) t.secCnt += r.secCnt;\n        } else if (l.max > r.max) {\n            t.max = l.max;\n            t.maxCnt = l.maxCnt;\n            if (l.sec == r.max){\n                t.sec = l.sec;\n                t.secCnt = l.secCnt + r.maxCnt;\n            } else if (l.sec > r.max) {\n                t.sec = l.sec;\n                t.secCnt = l.secCnt;\n            }else {\n                t.sec = r.max;\n                t.secCnt = t.maxCnt;\n            }\n        }else {"
    }
]