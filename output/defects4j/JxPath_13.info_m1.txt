
================== buggy_file ==================
src/java/org/apache/commons/jxpath/ri/NamespaceResolver.java
================== buggy_method ==================
{'method_name': 'getPrefix', 'method_body': 'public synchronized String getPrefix(String namespaceURI) {\n\n    /**\n     * Get the nearest prefix found that matches an externally-registered namespace. \n     * @param namespaceURI\n     * @return String prefix if found.\n     * @since JXPath 1.3\n     */\n        if (reverseMap == null) {\n            reverseMap = new HashMap();\n            NodeIterator ni = pointer.namespaceIterator();\n            if (ni != null) {\n                for (int position = 1; ni.setPosition(position); position++) {\n                    NodePointer nsPointer = ni.getNodePointer();\n                    String uri = nsPointer.getNamespaceURI();                    \n                    String prefix = nsPointer.getName().getName();\n                    if (!"".equals(prefix)) {\n                        reverseMap.put(uri, prefix);\n                    }\n                }\n            }\n            Iterator it = namespaceMap.entrySet().iterator();\n            while (it.hasNext()) {\n                Map.Entry entry = (Map.Entry) it.next();\n                reverseMap.put(entry.getValue(), entry.getKey());\n            }\n        }\n        String prefix = (String) reverseMap.get(namespaceURI);\n        if (prefix == null && parent != null) {\n            return parent.getPrefix(namespaceURI);\n        }\n        return prefix;\n    }', 'start_line': 131, 'end_line': 163, 'buggy_lines': [141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 160, 161, 162]}
================== buggy_method_src ==================
public synchronized String getPrefix(String namespaceURI) {

    /**
     * Get the nearest prefix found that matches an externally-registered namespace. 
     * @param namespaceURI
     * @return String prefix if found.
     * @since JXPath 1.3
     */
        if (reverseMap == null) {
            reverseMap = new HashMap();
            NodeIterator ni = pointer.namespaceIterator();
            if (ni != null) {
                for (int position = 1; ni.setPosition(position); position++) {
                    NodePointer nsPointer = ni.getNodePointer();
                    String uri = nsPointer.getNamespaceURI();                    
                    String prefix = nsPointer.getName().getName();
                    if (!"".equals(prefix)) {
                        reverseMap.put(uri, prefix);
                    }
                }
            }
            Iterator it = namespaceMap.entrySet().iterator();
            while (it.hasNext()) {
                Map.Entry entry = (Map.Entry) it.next();
                reverseMap.put(entry.getValue(), entry.getKey());
            }
        }
        String prefix = (String) reverseMap.get(namespaceURI);
        if (prefix == null && parent != null) {
            return parent.getPrefix(namespaceURI);
        }
        return prefix;
    }
================== test_stack ==================
org.apache.commons.jxpath.ri.model.ExternalXMLNamespaceTest::testCreateAndSetAttributeDOM
org.apache.commons.jxpath.JXPathException: Unknown namespace prefix: A
	at org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.createPathAndSetValue(JXPathContextReferenceImpl.java:479)
	at org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.createPathAndSetValue(JXPathContextReferenceImpl.java:467)
	at org.apache.commons.jxpath.JXPathTestCase.assertXPathCreatePathAndSetValue(JXPathTestCase.java:108)
	at org.apache.commons.jxpath.ri.model.ExternalXMLNamespaceTest.doTestCreateAndSetAttribute(ExternalXMLNamespaceTest.java:70)
	at org.apache.commons.jxpath.ri.model.ExternalXMLNamespaceTest.testCreateAndSetAttributeDOM(ExternalXMLNamespaceTest.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
Caused by: org.apache.commons.jxpath.JXPathException: Unknown namespace prefix: A
	at org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.createAttribute(DOMNodePointer.java:417)
	at org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.createPath(NullPropertyPointer.java:136)
	at org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.setValue(JXPathContextReferenceImpl.java:510)
	at org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.createPathAndSetValue(JXPathContextReferenceImpl.java:476)
	... 38 more

================== test_assert ==================
doTestCreateAndSetAttribute(DocumentContainer.MODEL_DOM);

================== buggy_lines_in_method ==================
[11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32]
================== buggy_statements ==================
['            NodeIterator ni = pointer.namespaceIterator();', '            if (ni != null) {', '                for (int position = 1; ni.setPosition(position); position++) {', '                    NodePointer nsPointer = ni.getNodePointer();', '                    String uri = nsPointer.getNamespaceURI();                    ', '                    String prefix = nsPointer.getName().getName();', '                    if (!"".equals(prefix)) {', '                        reverseMap.put(uri, prefix);', '                    }', '                }', '            }', '        if (prefix == null && parent != null) {', '            return parent.getPrefix(namespaceURI);', '        }', '        return prefix;']
================== buggy_method_src_endswith_buggy_statement ==================
public synchronized String getPrefix(String namespaceURI) {

    /**
     * Get the nearest prefix found that matches an externally-registered namespace. 
     * @param namespaceURI
     * @return String prefix if found.
     * @since JXPath 1.3
     */
        if (reverseMap == null) {
            reverseMap = new HashMap();
            NodeIterator ni = pointer.namespaceIterator();
            if (ni != null) {
                for (int position = 1; ni.setPosition(position); position++) {
                    NodePointer nsPointer = ni.getNodePointer();
                    String uri = nsPointer.getNamespaceURI();                    
                    String prefix = nsPointer.getName().getName();
                    if (!"".equals(prefix)) {
                        reverseMap.put(uri, prefix);
                    }
                }
            }
            Iterator it = namespaceMap.entrySet().iterator();
            while (it.hasNext()) {
                Map.Entry entry = (Map.Entry) it.next();
                reverseMap.put(entry.getValue(), entry.getKey());
            }
        }
        String prefix = (String) reverseMap.get(namespaceURI);
        if (prefix == null && parent != null) {
            return parent.getPrefix(namespaceURI);
        }
        return prefix;