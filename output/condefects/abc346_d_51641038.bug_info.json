[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "solve",
            "method_body": "static final void solve() {\n\t\tfinal int n = io.ni();\n\t\tfinal var s = io.ns();\n\t\tfinal var c = io.ni(n);\n\t\tfinal long[] ne = new long[n + 1], no = new long[n + 1], re = new long[n + 1], ro = new long[n + 1];\n\t\tfor(int i = 0; i < n; ++i) {\n\t\t\tne[i + 1] = ne[i];\n\t\t\tno[i + 1] = no[i];\n\t\t\tif(i % 2 == 0) {\n\t\t\t\tif(s.charAt(i) == '0') {\n\t\t\t\t\tno[i + 1] += c[i];\n\t\t\t\t} else {\n\t\t\t\t\tne[i + 1] += c[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(s.charAt(i) == '0') {\n\t\t\t\t\tne[i + 1] += c[i];\n\t\t\t\t} else {\n\t\t\t\t\tno[i + 1] += c[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = n; --i >= 0;) {\n\t\t\tre[i] = re[i + 1];\n\t\t\tro[i] = ro[i + 1];\n\t\t\tif(i % 2 == 0) {\n\t\t\t\tif(s.charAt(i) == '0') {\n\t\t\t\t\tre[i] += c[i];\n\t\t\t\t} else {\n\t\t\t\t\tro[i] += c[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(s.charAt(i) == '0') {\n\t\t\t\t\tro[i] += c[i];\n\t\t\t\t} else {\n\t\t\t\t\tre[i] += c[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlong ans = LINF;\n\t\tfor(int i = 0; i <= n; ++i) {\n\t\t\tans = min(ans, ne[i] + re[i]);\n\t\t\tans = min(ans, no[i] + ro[i]);\n\t\t}\n\t\tio.out(ans);\n\t}",
            "start_line": 63,
            "end_line": 108
        },
        "buggy_method_src": "static final void solve() {\n\t\tfinal int n = io.ni();\n\t\tfinal var s = io.ns();\n\t\tfinal var c = io.ni(n);\n\t\tfinal long[] ne = new long[n + 1], no = new long[n + 1], re = new long[n + 1], ro = new long[n + 1];\n\t\tfor(int i = 0; i < n; ++i) {\n\t\t\tne[i + 1] = ne[i];\n\t\t\tno[i + 1] = no[i];\n\t\t\tif(i % 2 == 0) {\n\t\t\t\tif(s.charAt(i) == '0') {\n\t\t\t\t\tno[i + 1] += c[i];\n\t\t\t\t} else {\n\t\t\t\t\tne[i + 1] += c[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(s.charAt(i) == '0') {\n\t\t\t\t\tne[i + 1] += c[i];\n\t\t\t\t} else {\n\t\t\t\t\tno[i + 1] += c[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = n; --i >= 0;) {\n\t\t\tre[i] = re[i + 1];\n\t\t\tro[i] = ro[i + 1];\n\t\t\tif(i % 2 == 0) {\n\t\t\t\tif(s.charAt(i) == '0') {\n\t\t\t\t\tre[i] += c[i];\n\t\t\t\t} else {\n\t\t\t\t\tro[i] += c[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(s.charAt(i) == '0') {\n\t\t\t\t\tro[i] += c[i];\n\t\t\t\t} else {\n\t\t\t\t\tre[i] += c[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlong ans = LINF;\n\t\tfor(int i = 0; i <= n; ++i) {\n\t\t\tans = min(ans, ne[i] + re[i]);\n\t\t\tans = min(ans, no[i] + ro[i]);\n\t\t}\n\t\tio.out(ans);\n\t}",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            41
        ],
        "buggy_statements": [
            "\t\tfor(int i = 0; i <= n; ++i) {"
        ],
        "buggy_method_src_endswith_buggy_statement": "static final void solve() {\n\t\tfinal int n = io.ni();\n\t\tfinal var s = io.ns();\n\t\tfinal var c = io.ni(n);\n\t\tfinal long[] ne = new long[n + 1], no = new long[n + 1], re = new long[n + 1], ro = new long[n + 1];\n\t\tfor(int i = 0; i < n; ++i) {\n\t\t\tne[i + 1] = ne[i];\n\t\t\tno[i + 1] = no[i];\n\t\t\tif(i % 2 == 0) {\n\t\t\t\tif(s.charAt(i) == '0') {\n\t\t\t\t\tno[i + 1] += c[i];\n\t\t\t\t} else {\n\t\t\t\t\tne[i + 1] += c[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(s.charAt(i) == '0') {\n\t\t\t\t\tne[i + 1] += c[i];\n\t\t\t\t} else {\n\t\t\t\t\tno[i + 1] += c[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = n; --i >= 0;) {\n\t\t\tre[i] = re[i + 1];\n\t\t\tro[i] = ro[i + 1];\n\t\t\tif(i % 2 == 0) {\n\t\t\t\tif(s.charAt(i) == '0') {\n\t\t\t\t\tre[i] += c[i];\n\t\t\t\t} else {\n\t\t\t\t\tro[i] += c[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(s.charAt(i) == '0') {\n\t\t\t\t\tro[i] += c[i];\n\t\t\t\t} else {\n\t\t\t\t\tre[i] += c[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlong ans = LINF;\n\t\tfor(int i = 0; i <= n; ++i) {"
    }
]