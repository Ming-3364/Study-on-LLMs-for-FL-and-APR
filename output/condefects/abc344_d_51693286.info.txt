
================== buggy_file ==================
faultyVersion.java
================== buggy_method ==================
{'method_name': 'solve', 'method_body': 'public static void solve() throws IOException {\n        str = readString();\n        n = readInt();\n        m = str.length();\n        for (int i = 0; i < N; i++) Arrays.fill(f[i], INF);\n        f[0][0] = 0;\n        for (int i = 1; i <= n; i++) {\n            int cnt = readInt();\n            while (cnt-- != 0) {\n                String s = readString();\n                for (int j = 1; j <= m; j++) {\n                    f[i][j] = Math.min(f[i][j], f[i - 1][j]);\n                    if (s.equals(str.substring(Math.max(0, j - s.length()), j))) {\n                        f[i][j] = Math.min(f[i][j], f[i - 1][j - s.length()] + 1);\n                    }\n                }\n            }\n        }\n        pw.println(f[n][m] == INF ? -1 : f[n][m]);\n    }', 'start_line': 24, 'end_line': 43}
================== buggy_method_src ==================
public static void solve() throws IOException {
        str = readString();
        n = readInt();
        m = str.length();
        for (int i = 0; i < N; i++) Arrays.fill(f[i], INF);
        f[0][0] = 0;
        for (int i = 1; i <= n; i++) {
            int cnt = readInt();
            while (cnt-- != 0) {
                String s = readString();
                for (int j = 1; j <= m; j++) {
                    f[i][j] = Math.min(f[i][j], f[i - 1][j]);
                    if (s.equals(str.substring(Math.max(0, j - s.length()), j))) {
                        f[i][j] = Math.min(f[i][j], f[i - 1][j - s.length()] + 1);
                    }
                }
            }
        }
        pw.println(f[n][m] == INF ? -1 : f[n][m]);
    }
================== test_stack ==================
None
================== test_assert ==================
None
================== buggy_lines_in_method ==================
[11]
================== buggy_statements ==================
['                for (int j = 1; j <= m; j++) {']
================== buggy_method_src_endswith_buggy_statement ==================
public static void solve() throws IOException {
        str = readString();
        n = readInt();
        m = str.length();
        for (int i = 0; i < N; i++) Arrays.fill(f[i], INF);
        f[0][0] = 0;
        for (int i = 1; i <= n; i++) {
            int cnt = readInt();
            while (cnt-- != 0) {
                String s = readString();
                for (int j = 1; j <= m; j++) {