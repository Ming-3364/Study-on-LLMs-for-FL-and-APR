[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "main",
            "method_body": "public static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint n = sc.nextInt();\n\t\tMap<Integer, Integer> map = new HashMap<>();\n\n\t\tfor(int i=0; i<n; i++){\n\t\t\tint taste = sc.nextInt();\n\t\t\tint color = sc.nextInt();\n\n\t\t\tif(map.containsKey(color)){\n\t\t\t\tint getTaste = map.get(color);\n\n\t\t\t\tif(getTaste < taste){\n\t\t\t\t\tmap.put(color, taste);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmap.put(color, taste);\n\t\t\t}\n\t\t}\n\n\t\tInteger maxValue = 0;\n\n\t\tfor(Integer value : map.values()){\n\t\t\tif(maxValue < value){\n\t\t\t\tmaxValue = value;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(maxValue);\n\t}",
            "start_line": 6,
            "end_line": 35
        },
        "buggy_method_src": "public static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint n = sc.nextInt();\n\t\tMap<Integer, Integer> map = new HashMap<>();\n\n\t\tfor(int i=0; i<n; i++){\n\t\t\tint taste = sc.nextInt();\n\t\t\tint color = sc.nextInt();\n\n\t\t\tif(map.containsKey(color)){\n\t\t\t\tint getTaste = map.get(color);\n\n\t\t\t\tif(getTaste < taste){\n\t\t\t\t\tmap.put(color, taste);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmap.put(color, taste);\n\t\t\t}\n\t\t}\n\n\t\tInteger maxValue = 0;\n\n\t\tfor(Integer value : map.values()){\n\t\t\tif(maxValue < value){\n\t\t\t\tmaxValue = value;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(maxValue);\n\t}",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            14
        ],
        "buggy_statements": [
            "\t\t\t\tif(getTaste < taste){"
        ],
        "buggy_method_src_endswith_buggy_statement": "public static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tint n = sc.nextInt();\n\t\tMap<Integer, Integer> map = new HashMap<>();\n\n\t\tfor(int i=0; i<n; i++){\n\t\t\tint taste = sc.nextInt();\n\t\t\tint color = sc.nextInt();\n\n\t\t\tif(map.containsKey(color)){\n\t\t\t\tint getTaste = map.get(color);\n\n\t\t\t\tif(getTaste < taste){"
    }
]