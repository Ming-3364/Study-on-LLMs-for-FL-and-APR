
================== buggy_file ==================
src/com/google/javascript/jscomp/PrepareAst.java
================== buggy_method ==================
{'method_name': 'annotateCalls', 'method_body': 'private void annotateCalls(Node n) {\n      Preconditions.checkState(n.isCall());\n\n      // Keep track of of the "this" context of a call.  A call without an\n      // explicit "this" is a free call.\n      Node first = n.getFirstChild();\n\n      // ignore cast nodes.\n\n      if (!NodeUtil.isGet(first)) {\n        n.putBooleanProp(Node.FREE_CALL, true);\n      }\n\n      // Keep track of the context in which eval is called. It is important\n      // to distinguish between "(0, eval)()" and "eval()".\n      if (first.isName() &&\n          "eval".equals(first.getString())) {\n        first.putBooleanProp(Node.DIRECT_EVAL, true);\n      }\n    }', 'start_line': 158, 'end_line': 177, 'buggy_lines': [168]}
================== buggy_method_src ==================
private void annotateCalls(Node n) {
      Preconditions.checkState(n.isCall());

      // Keep track of of the "this" context of a call.  A call without an
      // explicit "this" is a free call.
      Node first = n.getFirstChild();

      // ignore cast nodes.

      if (!NodeUtil.isGet(first)) {
        n.putBooleanProp(Node.FREE_CALL, true);
      }

      // Keep track of the context in which eval is called. It is important
      // to distinguish between "(0, eval)()" and "eval()".
      if (first.isName() &&
          "eval".equals(first.getString())) {
        first.putBooleanProp(Node.DIRECT_EVAL, true);
      }
    }
================== test_stack ==================
com.google.javascript.jscomp.IntegrationTest::testIssue937
junit.framework.AssertionFailedError:
Expected: console.log((new x).abc())
Result: console.log((0,(new x).abc)())
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: input0] [input_id: InputId: input0]
        EXPR_RESULT 1 [source_file: input0]
            CALL 1 [source_file: input0]
                GETPROP 1 [source_file: input0]
                    NAME console 1 [source_file: input0]
                    STRING log 1 [source_file: input0]
                CALL 1 [source_file: input0]
                    GETPROP 1 [source_file: input0]
                        NEW 1 [source_file: input0]
                            NAME x 1 [source_file: input0]
                        STRING abc 1 [source_file: input0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: i0] [input_id: InputId: i0]
        EXPR_RESULT 1 [source_file: i0]
            CALL 1 [source_file: i0]
                GETPROP 1 [source_file: i0]
                    NAME console 1 [source_file: i0]
                    STRING log 1 [source_file: i0]
                CALL 1 [free_call: 1] [source_file: i0]
                    GETPROP 1 [source_file: i0]
                        NEW 1 [source_file: i0]
                            NAME x 1 [source_file: i0]
                        STRING abc 1 [source_file: i0]


Subtree1: CALL 1 [source_file: input0]
    GETPROP 1 [source_file: input0]
        NEW 1 [source_file: input0]
            NAME x 1 [source_file: input0]
        STRING abc 1 [source_file: input0]


Subtree2: CALL 1 [free_call: 1] [source_file: i0]
    GETPROP 1 [source_file: i0]
        NEW 1 [source_file: i0]
            NAME x 1 [source_file: i0]
        STRING abc 1 [source_file: i0]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:97)
	at com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:79)
	at com.google.javascript.jscomp.IntegrationTest.testIssue937(IntegrationTest.java:2430)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)

================== test_assert ==================
test(options, code, result);

================== buggy_lines_in_method ==================
[11]
================== buggy_statements ==================
['        n.putBooleanProp(Node.FREE_CALL, true);']
================== buggy_method_src_endswith_buggy_statement ==================
private void annotateCalls(Node n) {
      Preconditions.checkState(n.isCall());

      // Keep track of of the "this" context of a call.  A call without an
      // explicit "this" is a free call.
      Node first = n.getFirstChild();

      // ignore cast nodes.

      if (!NodeUtil.isGet(first)) {
        n.putBooleanProp(Node.FREE_CALL, true);