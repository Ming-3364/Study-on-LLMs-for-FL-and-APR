
================== buggy_file ==================
faultyVersion.java
================== buggy_method ==================
{'method_name': 'main', 'method_body': 'public static void main(String[] args) throws Exception {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tlong[] a = new long[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\t\tsc.close();\n\n\t\tArrays.sort(a);\n\t\tint[] d = new int[n];\n\t\tPriorityQueue<Obj> que = new PriorityQueue<>((o1, o2) -> Long.compare(o1.v, o2.v));\n\t\tfor (int i = 0; i < 2; i++) {\n\t\t\tObj o = new Obj();\n\t\t\to.i = i;\n\t\t\to.v = a[i] * 3;\n\t\t\tque.add(o);\n\t\t\td[i] = 1;\n\t\t}\n\n\t\tfor (int i = 2; i < n; i++) {\n\t\t\tObj o = que.poll();\n\t\t\tlong d0 = d[o.i];\n\t\t\tlong d1 = d0 + 1;\n\t\t\tlong d2 = d1 * d1 - d0 * d0;\n\t\t\to.v = a[o.i] * d2;\n\t\t\tque.add(o);\n\t\t\td[o.i]++;\n\n\t\t\to = new Obj();\n\t\t\to.i = i;\n\t\t\to.v = a[i] * 3;\n\t\t\tque.add(o);\n\t\t\td[i] = 1;\n\t\t}\n\n\t\tlong ans = 0;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tlong di = d[i];\n\t\t\tans += a[i] * di * di;\n\t\t}\n\t\tSystem.out.println(ans);\n\t}', 'start_line': 6, 'end_line': 48}
================== buggy_method_src ==================
public static void main(String[] args) throws Exception {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		long[] a = new long[n];
		for (int i = 0; i < n; i++) {
			a[i] = sc.nextInt();
		}
		sc.close();

		Arrays.sort(a);
		int[] d = new int[n];
		PriorityQueue<Obj> que = new PriorityQueue<>((o1, o2) -> Long.compare(o1.v, o2.v));
		for (int i = 0; i < 2; i++) {
			Obj o = new Obj();
			o.i = i;
			o.v = a[i] * 3;
			que.add(o);
			d[i] = 1;
		}

		for (int i = 2; i < n; i++) {
			Obj o = que.poll();
			long d0 = d[o.i];
			long d1 = d0 + 1;
			long d2 = d1 * d1 - d0 * d0;
			o.v = a[o.i] * d2;
			que.add(o);
			d[o.i]++;

			o = new Obj();
			o.i = i;
			o.v = a[i] * 3;
			que.add(o);
			d[i] = 1;
		}

		long ans = 0;
		for (int i = 0; i < n; i++) {
			long di = d[i];
			ans += a[i] * di * di;
		}
		System.out.println(ans);
	}
================== test_stack ==================
None
================== test_assert ==================
None
================== buggy_lines_in_method ==================
[23]
================== buggy_statements ==================
['\t\t\tlong d0 = d[o.i];']
================== buggy_method_src_endswith_buggy_statement ==================
public static void main(String[] args) throws Exception {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		long[] a = new long[n];
		for (int i = 0; i < n; i++) {
			a[i] = sc.nextInt();
		}
		sc.close();

		Arrays.sort(a);
		int[] d = new int[n];
		PriorityQueue<Obj> que = new PriorityQueue<>((o1, o2) -> Long.compare(o1.v, o2.v));
		for (int i = 0; i < 2; i++) {
			Obj o = new Obj();
			o.i = i;
			o.v = a[i] * 3;
			que.add(o);
			d[i] = 1;
		}

		for (int i = 2; i < n; i++) {
			Obj o = que.poll();
			long d0 = d[o.i];