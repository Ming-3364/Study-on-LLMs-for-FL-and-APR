
================== prompt_fl_1 ==================

source code:
boolean canCollapseUnannotatedChildNames() {
      if (type == Type.OTHER || globalSets != 1 || localSets != 0) {
        return false;
      }

      // Don't try to collapse if the one global set is a twin reference.
      // We could theoretically handle this case in CollapseProperties, but
      // it's probably not worth the effort.
      Preconditions.checkNotNull(declaration);
      if (declaration.getTwin() != null) {
        return false;
      }

      if (isClassOrEnum) {
        return true;
      }

      // If this is a key of an aliased object literal, then it will be aliased
      // later. So we won't be able to collapse its properties.
      if (parent != null && parent.shouldKeepKeys()) {
        return false;
      }

      // If this is aliased, then its properties can't be collapsed either.
      if (type != Type.FUNCTION && aliasingGets > 0) {
        return false;
      }

      return (parent == null || parent.canCollapseUnannotatedChildNames());
    }

There is a bug in the above code, please help me locate it.

Please output **only one integer**: the line number of the buggy code (The code starts from line 1). Do not provide any explanations or additional content.

================== prompt_fl_2 ==================

source code:
boolean canCollapseUnannotatedChildNames() {
      if (type == Type.OTHER || globalSets != 1 || localSets != 0) {
        return false;
      }

      // Don't try to collapse if the one global set is a twin reference.
      // We could theoretically handle this case in CollapseProperties, but
      // it's probably not worth the effort.
      Preconditions.checkNotNull(declaration);
      if (declaration.getTwin() != null) {
        return false;
      }

      if (isClassOrEnum) {
        return true;
      }

      // If this is a key of an aliased object literal, then it will be aliased
      // later. So we won't be able to collapse its properties.
      if (parent != null && parent.shouldKeepKeys()) {
        return false;
      }

      // If this is aliased, then its properties can't be collapsed either.
      if (type != Type.FUNCTION && aliasingGets > 0) {
        return false;
      }

      return (parent == null || parent.canCollapseUnannotatedChildNames());
    }

stack trace:
com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToChildOfUncollapsibleFunctionInLocalScope
junit.framework.AssertionFailedError:
Expected: function a(){}a.b={x:0};var c=a;(function(){a.b.y=0})();a.b.y
Result: function a(){}var a$b$x=0;var a$b$y;var c=a;(function(){a$b$y=0})();a$b$y
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                OBJECTLIT 1 [sourcename: expected0]
                    STRING x 1 [sourcename: expected0]
                        NUMBER 0.0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
                        EXPR_RESULT 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        NAME a 1 [sourcename: expected0]
                                        STRING b 1 [sourcename: expected0]
                                    STRING y 1 [sourcename: expected0]
                                NUMBER 0.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                STRING y 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b$x 1 [sourcename: testcode]
                NUMBER 0.0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b$y 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
                        EXPR_RESULT 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]
                                NUMBER 0.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]


Subtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]
    FUNCTION  1 [sourcename: expected0]
        NAME a 1 [sourcename: expected0]
        LP 1 [sourcename: expected0]
        BLOCK 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        ASSIGN 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]
            OBJECTLIT 1 [sourcename: expected0]
                STRING x 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    VAR 1 [sourcename: expected0]
        NAME c 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        CALL 1 [sourcename: expected0] [free_call: 1]
            FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
                    EXPR_RESULT 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            GETPROP 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    NAME a 1 [sourcename: expected0]
                                    STRING b 1 [sourcename: expected0]
                                STRING y 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]
            STRING y 1 [sourcename: expected0]


Subtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]
    FUNCTION  1 [sourcename: testcode]
        NAME a 1 [sourcename: testcode]
        LP 1 [sourcename: testcode]
        BLOCK 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b$x 1 [sourcename: testcode]
            NUMBER 0.0 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b$y 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME c 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        CALL 1 [sourcename: testcode] [free_call: 1]
            FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
                    EXPR_RESULT 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]
                            NUMBER 0.0 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToChildOfUncollapsibleFunctionInLocalScope(CollapsePropertiesTest.java:610)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth1_1
junit.framework.AssertionFailedError:
Expected: var a=function(){};a.b=1;var c=a;c.b=2;a.b!=c.b
Result: var a=function(){};var a$b=1;var c=a;c.b=2;a$b!=c.b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                NUMBER 1.0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME c 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                NUMBER 2.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            NE 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME c 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                NUMBER 1.0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                GETPROP 1 [sourcename: testcode]
                    NAME c 1 [sourcename: testcode]
                    STRING b 1 [sourcename: testcode]
                NUMBER 2.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NE 1 [sourcename: testcode]
                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                GETPROP 1 [sourcename: testcode]
                    NAME c 1 [sourcename: testcode]
                    STRING b 1 [sourcename: testcode]


Subtree1: EXPR_RESULT 1 [sourcename: expected0]
    ASSIGN 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]
        NUMBER 1.0 1 [sourcename: expected0]


Subtree2: VAR 1 [sourcename: testcode]
    NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_1(CollapsePropertiesTest.java:279)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth1_2
junit.framework.AssertionFailedError:
Expected: var a=function(){};a.b=1;f(a);a.b
Result: var a=function(){};var a$b=1;f(a);a$b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                NUMBER 1.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                NUMBER 1.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]


Subtree1: EXPR_RESULT 1 [sourcename: expected0]
    ASSIGN 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]
        NUMBER 1.0 1 [sourcename: expected0]


Subtree2: VAR 1 [sourcename: testcode]
    NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_2(CollapsePropertiesTest.java:295)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth1_3
junit.framework.AssertionFailedError:
Expected: var a=function(){};a.b=1;new f(a);a.b
Result: var a=function(){};var a$b=1;new f(a);a$b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                NUMBER 1.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            NEW 1 [sourcename: expected0]
                NAME f 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                NUMBER 1.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NEW 1 [sourcename: testcode]
                NAME f 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]


Subtree1: EXPR_RESULT 1 [sourcename: expected0]
    ASSIGN 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]
        NUMBER 1.0 1 [sourcename: expected0]


Subtree2: VAR 1 [sourcename: testcode]
    NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_3(CollapsePropertiesTest.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1
junit.framework.AssertionFailedError:
Expected: function a(){}var c=a;(function(){a.b=0})();a.b
Result: function a(){}var a$b;var c=a;(function(){a$b=0})();a$b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0] [jsdoc_info: JSDocInfo]
            NAME a 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
                        EXPR_RESULT 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    NAME a 1 [sourcename: expected0]
                                    STRING b 1 [sourcename: expected0]
                                NUMBER 0.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode] [jsdoc_info: JSDocInfo]
            NAME a 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
                        EXPR_RESULT 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                                NUMBER 0.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]


Subtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]
    FUNCTION  1 [sourcename: expected0] [jsdoc_info: JSDocInfo]
        NAME a 1 [sourcename: expected0]
        LP 1 [sourcename: expected0]
        BLOCK 1 [sourcename: expected0]
    VAR 1 [sourcename: expected0]
        NAME c 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        CALL 1 [sourcename: expected0] [free_call: 1]
            FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
                    EXPR_RESULT 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            GETPROP 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                                STRING b 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]


Subtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]
    FUNCTION  1 [sourcename: testcode] [jsdoc_info: JSDocInfo]
        NAME a 1 [sourcename: testcode]
        LP 1 [sourcename: testcode]
        BLOCK 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME c 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        CALL 1 [sourcename: testcode] [free_call: 1]
            FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
                    EXPR_RESULT 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                            NUMBER 0.0 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode] [originalname: a.b]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1(CollapsePropertiesTest.java:552)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1
junit.framework.AssertionFailedError:
Expected: function a(){}var c=a;(function(){a.b=0})();a.b
Result: function a(){}var a$b;var c=a;(function(){a$b=0})();a$b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
                        EXPR_RESULT 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    NAME a 1 [sourcename: expected0]
                                    STRING b 1 [sourcename: expected0]
                                NUMBER 0.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
                        EXPR_RESULT 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                                NUMBER 0.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]


Subtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]
    FUNCTION  1 [sourcename: expected0]
        NAME a 1 [sourcename: expected0]
        LP 1 [sourcename: expected0]
        BLOCK 1 [sourcename: expected0]
    VAR 1 [sourcename: expected0]
        NAME c 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        CALL 1 [sourcename: expected0] [free_call: 1]
            FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
                    EXPR_RESULT 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            GETPROP 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                                STRING b 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]


Subtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]
    FUNCTION  1 [sourcename: testcode]
        NAME a 1 [sourcename: testcode]
        LP 1 [sourcename: testcode]
        BLOCK 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME c 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        CALL 1 [sourcename: testcode] [free_call: 1]
            FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
                    EXPR_RESULT 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                            NUMBER 0.0 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode] [originalname: a.b]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1(CollapsePropertiesTest.java:544)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2
junit.framework.AssertionFailedError:
Expected: var a$b=function(){};var d=a$b;(function(){a$b.c=0})();a$b.c
Result: var a$b=function(){};var a$b$c;var d=a$b;(function(){a$b$c=0})();a$b$c
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME d 1 [sourcename: expected0]
                NAME a$b 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
                        EXPR_RESULT 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    NAME a$b 1 [sourcename: expected0]
                                    STRING c 1 [sourcename: expected0]
                                NUMBER 0.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a$b 1 [sourcename: expected0]
                STRING c 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b$c 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME d 1 [sourcename: testcode]
                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
                        EXPR_RESULT 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
                                NUMBER 0.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]


Subtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]
    VAR 1 [sourcename: expected0]
        NAME a$b 1 [sourcename: expected0]
            FUNCTION  1 [sourcename: expected0]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
    VAR 1 [sourcename: expected0]
        NAME d 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        CALL 1 [sourcename: expected0] [free_call: 1]
            FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
                    EXPR_RESULT 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            GETPROP 1 [sourcename: expected0]
                                NAME a$b 1 [sourcename: expected0]
                                STRING c 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
            STRING c 1 [sourcename: expected0]


Subtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]
    VAR 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode] [originalname: a.b]
            FUNCTION  1 [sourcename: testcode]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b$c 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME d 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
    EXPR_RESULT 1 [sourcename: testcode]
        CALL 1 [sourcename: testcode] [free_call: 1]
            FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
                    EXPR_RESULT 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
                            NUMBER 0.0 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2(CollapsePropertiesTest.java:572)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth2
junit.framework.AssertionFailedError:
Expected: var a$b=function(){};a$b.c=1;var d=a$b;a$b.c!=d.c
Result: var a$b=function(){};var a$b$c=1;var d=a$b;a$b$c!=d.c
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a$b 1 [sourcename: expected0]
                    STRING c 1 [sourcename: expected0]
                NUMBER 1.0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME d 1 [sourcename: expected0]
                NAME a$b 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            NE 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a$b 1 [sourcename: expected0]
                    STRING c 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME d 1 [sourcename: expected0]
                    STRING c 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
                NUMBER 1.0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME d 1 [sourcename: testcode]
                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        EXPR_RESULT 1 [sourcename: testcode]
            NE 1 [sourcename: testcode]
                NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
                GETPROP 1 [sourcename: testcode]
                    NAME d 1 [sourcename: testcode]
                    STRING c 1 [sourcename: testcode]


Subtree1: EXPR_RESULT 1 [sourcename: expected0]
    ASSIGN 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
            STRING c 1 [sourcename: expected0]
        NUMBER 1.0 1 [sourcename: expected0]


Subtree2: VAR 1 [sourcename: testcode]
    NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
        NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth2(CollapsePropertiesTest.java:313)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)


There is a bug in the above code, please help me locate it by considering the stack trace.

Please output **only one integer**: the line number of the buggy code (The code starts from line 1). Do not provide any explanations or additional content.

================== prompt_fl_3 ==================

source code:
boolean canCollapseUnannotatedChildNames() {
      if (type == Type.OTHER || globalSets != 1 || localSets != 0) {
        return false;
      }

      // Don't try to collapse if the one global set is a twin reference.
      // We could theoretically handle this case in CollapseProperties, but
      // it's probably not worth the effort.
      Preconditions.checkNotNull(declaration);
      if (declaration.getTwin() != null) {
        return false;
      }

      if (isClassOrEnum) {
        return true;
      }

      // If this is a key of an aliased object literal, then it will be aliased
      // later. So we won't be able to collapse its properties.
      if (parent != null && parent.shouldKeepKeys()) {
        return false;
      }

      // If this is aliased, then its properties can't be collapsed either.
      if (type != Type.FUNCTION && aliasingGets > 0) {
        return false;
      }

      return (parent == null || parent.canCollapseUnannotatedChildNames());
    }

stack trace:
com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToChildOfUncollapsibleFunctionInLocalScope
junit.framework.AssertionFailedError:
Expected: function a(){}a.b={x:0};var c=a;(function(){a.b.y=0})();a.b.y
Result: function a(){}var a$b$x=0;var a$b$y;var c=a;(function(){a$b$y=0})();a$b$y
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                OBJECTLIT 1 [sourcename: expected0]
                    STRING x 1 [sourcename: expected0]
                        NUMBER 0.0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
                        EXPR_RESULT 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        NAME a 1 [sourcename: expected0]
                                        STRING b 1 [sourcename: expected0]
                                    STRING y 1 [sourcename: expected0]
                                NUMBER 0.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                STRING y 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b$x 1 [sourcename: testcode]
                NUMBER 0.0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b$y 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
                        EXPR_RESULT 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]
                                NUMBER 0.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]


Subtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]
    FUNCTION  1 [sourcename: expected0]
        NAME a 1 [sourcename: expected0]
        LP 1 [sourcename: expected0]
        BLOCK 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        ASSIGN 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]
            OBJECTLIT 1 [sourcename: expected0]
                STRING x 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    VAR 1 [sourcename: expected0]
        NAME c 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        CALL 1 [sourcename: expected0] [free_call: 1]
            FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
                    EXPR_RESULT 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            GETPROP 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    NAME a 1 [sourcename: expected0]
                                    STRING b 1 [sourcename: expected0]
                                STRING y 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]
            STRING y 1 [sourcename: expected0]


Subtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]
    FUNCTION  1 [sourcename: testcode]
        NAME a 1 [sourcename: testcode]
        LP 1 [sourcename: testcode]
        BLOCK 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b$x 1 [sourcename: testcode]
            NUMBER 0.0 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b$y 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME c 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        CALL 1 [sourcename: testcode] [free_call: 1]
            FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
                    EXPR_RESULT 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]
                            NUMBER 0.0 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToChildOfUncollapsibleFunctionInLocalScope(CollapsePropertiesTest.java:610)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth1_1
junit.framework.AssertionFailedError:
Expected: var a=function(){};a.b=1;var c=a;c.b=2;a.b!=c.b
Result: var a=function(){};var a$b=1;var c=a;c.b=2;a$b!=c.b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                NUMBER 1.0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME c 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                NUMBER 2.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            NE 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME c 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                NUMBER 1.0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                GETPROP 1 [sourcename: testcode]
                    NAME c 1 [sourcename: testcode]
                    STRING b 1 [sourcename: testcode]
                NUMBER 2.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NE 1 [sourcename: testcode]
                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                GETPROP 1 [sourcename: testcode]
                    NAME c 1 [sourcename: testcode]
                    STRING b 1 [sourcename: testcode]


Subtree1: EXPR_RESULT 1 [sourcename: expected0]
    ASSIGN 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]
        NUMBER 1.0 1 [sourcename: expected0]


Subtree2: VAR 1 [sourcename: testcode]
    NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_1(CollapsePropertiesTest.java:279)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth1_2
junit.framework.AssertionFailedError:
Expected: var a=function(){};a.b=1;f(a);a.b
Result: var a=function(){};var a$b=1;f(a);a$b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                NUMBER 1.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                NUMBER 1.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]


Subtree1: EXPR_RESULT 1 [sourcename: expected0]
    ASSIGN 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]
        NUMBER 1.0 1 [sourcename: expected0]


Subtree2: VAR 1 [sourcename: testcode]
    NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_2(CollapsePropertiesTest.java:295)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth1_3
junit.framework.AssertionFailedError:
Expected: var a=function(){};a.b=1;new f(a);a.b
Result: var a=function(){};var a$b=1;new f(a);a$b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                NUMBER 1.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            NEW 1 [sourcename: expected0]
                NAME f 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                NUMBER 1.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NEW 1 [sourcename: testcode]
                NAME f 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]


Subtree1: EXPR_RESULT 1 [sourcename: expected0]
    ASSIGN 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]
        NUMBER 1.0 1 [sourcename: expected0]


Subtree2: VAR 1 [sourcename: testcode]
    NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_3(CollapsePropertiesTest.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1
junit.framework.AssertionFailedError:
Expected: function a(){}var c=a;(function(){a.b=0})();a.b
Result: function a(){}var a$b;var c=a;(function(){a$b=0})();a$b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0] [jsdoc_info: JSDocInfo]
            NAME a 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
                        EXPR_RESULT 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    NAME a 1 [sourcename: expected0]
                                    STRING b 1 [sourcename: expected0]
                                NUMBER 0.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode] [jsdoc_info: JSDocInfo]
            NAME a 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
                        EXPR_RESULT 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                                NUMBER 0.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]


Subtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]
    FUNCTION  1 [sourcename: expected0] [jsdoc_info: JSDocInfo]
        NAME a 1 [sourcename: expected0]
        LP 1 [sourcename: expected0]
        BLOCK 1 [sourcename: expected0]
    VAR 1 [sourcename: expected0]
        NAME c 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        CALL 1 [sourcename: expected0] [free_call: 1]
            FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
                    EXPR_RESULT 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            GETPROP 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                                STRING b 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]


Subtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]
    FUNCTION  1 [sourcename: testcode] [jsdoc_info: JSDocInfo]
        NAME a 1 [sourcename: testcode]
        LP 1 [sourcename: testcode]
        BLOCK 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME c 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        CALL 1 [sourcename: testcode] [free_call: 1]
            FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
                    EXPR_RESULT 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                            NUMBER 0.0 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode] [originalname: a.b]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1(CollapsePropertiesTest.java:552)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1
junit.framework.AssertionFailedError:
Expected: function a(){}var c=a;(function(){a.b=0})();a.b
Result: function a(){}var a$b;var c=a;(function(){a$b=0})();a$b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
                        EXPR_RESULT 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    NAME a 1 [sourcename: expected0]
                                    STRING b 1 [sourcename: expected0]
                                NUMBER 0.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
                        EXPR_RESULT 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                                NUMBER 0.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]


Subtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]
    FUNCTION  1 [sourcename: expected0]
        NAME a 1 [sourcename: expected0]
        LP 1 [sourcename: expected0]
        BLOCK 1 [sourcename: expected0]
    VAR 1 [sourcename: expected0]
        NAME c 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        CALL 1 [sourcename: expected0] [free_call: 1]
            FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
                    EXPR_RESULT 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            GETPROP 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                                STRING b 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]


Subtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]
    FUNCTION  1 [sourcename: testcode]
        NAME a 1 [sourcename: testcode]
        LP 1 [sourcename: testcode]
        BLOCK 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME c 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        CALL 1 [sourcename: testcode] [free_call: 1]
            FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
                    EXPR_RESULT 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                            NUMBER 0.0 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode] [originalname: a.b]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1(CollapsePropertiesTest.java:544)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2
junit.framework.AssertionFailedError:
Expected: var a$b=function(){};var d=a$b;(function(){a$b.c=0})();a$b.c
Result: var a$b=function(){};var a$b$c;var d=a$b;(function(){a$b$c=0})();a$b$c
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME d 1 [sourcename: expected0]
                NAME a$b 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
                        EXPR_RESULT 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    NAME a$b 1 [sourcename: expected0]
                                    STRING c 1 [sourcename: expected0]
                                NUMBER 0.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a$b 1 [sourcename: expected0]
                STRING c 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b$c 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME d 1 [sourcename: testcode]
                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
                        EXPR_RESULT 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
                                NUMBER 0.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]


Subtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]
    VAR 1 [sourcename: expected0]
        NAME a$b 1 [sourcename: expected0]
            FUNCTION  1 [sourcename: expected0]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
    VAR 1 [sourcename: expected0]
        NAME d 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        CALL 1 [sourcename: expected0] [free_call: 1]
            FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
                    EXPR_RESULT 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            GETPROP 1 [sourcename: expected0]
                                NAME a$b 1 [sourcename: expected0]
                                STRING c 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
            STRING c 1 [sourcename: expected0]


Subtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]
    VAR 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode] [originalname: a.b]
            FUNCTION  1 [sourcename: testcode]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b$c 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME d 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
    EXPR_RESULT 1 [sourcename: testcode]
        CALL 1 [sourcename: testcode] [free_call: 1]
            FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
                    EXPR_RESULT 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
                            NUMBER 0.0 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2(CollapsePropertiesTest.java:572)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth2
junit.framework.AssertionFailedError:
Expected: var a$b=function(){};a$b.c=1;var d=a$b;a$b.c!=d.c
Result: var a$b=function(){};var a$b$c=1;var d=a$b;a$b$c!=d.c
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a$b 1 [sourcename: expected0]
                    STRING c 1 [sourcename: expected0]
                NUMBER 1.0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME d 1 [sourcename: expected0]
                NAME a$b 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            NE 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a$b 1 [sourcename: expected0]
                    STRING c 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME d 1 [sourcename: expected0]
                    STRING c 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
                NUMBER 1.0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME d 1 [sourcename: testcode]
                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        EXPR_RESULT 1 [sourcename: testcode]
            NE 1 [sourcename: testcode]
                NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
                GETPROP 1 [sourcename: testcode]
                    NAME d 1 [sourcename: testcode]
                    STRING c 1 [sourcename: testcode]


Subtree1: EXPR_RESULT 1 [sourcename: expected0]
    ASSIGN 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
            STRING c 1 [sourcename: expected0]
        NUMBER 1.0 1 [sourcename: expected0]


Subtree2: VAR 1 [sourcename: testcode]
    NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
        NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth2(CollapsePropertiesTest.java:313)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)


failure assertion code:
testSame(


There is a bug in the above code, please help me locate it by considering the stack trace information and failure assertion code.

Please output **only one integer**: the line number of the buggy code (The code starts from line 1). Do not provide any explanations or additional content.

================== prompt_fl_4 ==================

source code:
boolean canCollapseUnannotatedChildNames() {
      if (type == Type.OTHER || globalSets != 1 || localSets != 0) {
        return false;
      }

      // Don't try to collapse if the one global set is a twin reference.
      // We could theoretically handle this case in CollapseProperties, but
      // it's probably not worth the effort.
      Preconditions.checkNotNull(declaration);
      if (declaration.getTwin() != null) {
        return false;
      }

      if (isClassOrEnum) {
        return true;
      }

      // If this is a key of an aliased object literal, then it will be aliased
      // later. So we won't be able to collapse its properties.
      if (parent != null && parent.shouldKeepKeys()) {
        return false;
      }

      // If this is aliased, then its properties can't be collapsed either.
      if (type != Type.FUNCTION && aliasingGets > 0) {
        return false;
      }

      return (parent == null || parent.canCollapseUnannotatedChildNames());
    }

There is a bug in the above code, please help me locate it.

Output **only** the exact buggy statement, with no line numbers, explanations, or additional content. Your response should contain just the buggy code line. Do not include ```java or ``` markers in the response.

================== prompt_fl_5 ==================

source code:
boolean canCollapseUnannotatedChildNames() {
      if (type == Type.OTHER || globalSets != 1 || localSets != 0) {
        return false;
      }

      // Don't try to collapse if the one global set is a twin reference.
      // We could theoretically handle this case in CollapseProperties, but
      // it's probably not worth the effort.
      Preconditions.checkNotNull(declaration);
      if (declaration.getTwin() != null) {
        return false;
      }

      if (isClassOrEnum) {
        return true;
      }

      // If this is a key of an aliased object literal, then it will be aliased
      // later. So we won't be able to collapse its properties.
      if (parent != null && parent.shouldKeepKeys()) {
        return false;
      }

      // If this is aliased, then its properties can't be collapsed either.
      if (type != Type.FUNCTION && aliasingGets > 0) {
        return false;
      }

      return (parent == null || parent.canCollapseUnannotatedChildNames());
    }

stack trace:
com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToChildOfUncollapsibleFunctionInLocalScope
junit.framework.AssertionFailedError:
Expected: function a(){}a.b={x:0};var c=a;(function(){a.b.y=0})();a.b.y
Result: function a(){}var a$b$x=0;var a$b$y;var c=a;(function(){a$b$y=0})();a$b$y
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                OBJECTLIT 1 [sourcename: expected0]
                    STRING x 1 [sourcename: expected0]
                        NUMBER 0.0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
                        EXPR_RESULT 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        NAME a 1 [sourcename: expected0]
                                        STRING b 1 [sourcename: expected0]
                                    STRING y 1 [sourcename: expected0]
                                NUMBER 0.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                STRING y 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b$x 1 [sourcename: testcode]
                NUMBER 0.0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b$y 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
                        EXPR_RESULT 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]
                                NUMBER 0.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]


Subtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]
    FUNCTION  1 [sourcename: expected0]
        NAME a 1 [sourcename: expected0]
        LP 1 [sourcename: expected0]
        BLOCK 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        ASSIGN 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]
            OBJECTLIT 1 [sourcename: expected0]
                STRING x 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    VAR 1 [sourcename: expected0]
        NAME c 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        CALL 1 [sourcename: expected0] [free_call: 1]
            FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
                    EXPR_RESULT 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            GETPROP 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    NAME a 1 [sourcename: expected0]
                                    STRING b 1 [sourcename: expected0]
                                STRING y 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]
            STRING y 1 [sourcename: expected0]


Subtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]
    FUNCTION  1 [sourcename: testcode]
        NAME a 1 [sourcename: testcode]
        LP 1 [sourcename: testcode]
        BLOCK 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b$x 1 [sourcename: testcode]
            NUMBER 0.0 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b$y 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME c 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        CALL 1 [sourcename: testcode] [free_call: 1]
            FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
                    EXPR_RESULT 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]
                            NUMBER 0.0 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToChildOfUncollapsibleFunctionInLocalScope(CollapsePropertiesTest.java:610)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth1_1
junit.framework.AssertionFailedError:
Expected: var a=function(){};a.b=1;var c=a;c.b=2;a.b!=c.b
Result: var a=function(){};var a$b=1;var c=a;c.b=2;a$b!=c.b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                NUMBER 1.0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME c 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                NUMBER 2.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            NE 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME c 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                NUMBER 1.0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                GETPROP 1 [sourcename: testcode]
                    NAME c 1 [sourcename: testcode]
                    STRING b 1 [sourcename: testcode]
                NUMBER 2.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NE 1 [sourcename: testcode]
                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                GETPROP 1 [sourcename: testcode]
                    NAME c 1 [sourcename: testcode]
                    STRING b 1 [sourcename: testcode]


Subtree1: EXPR_RESULT 1 [sourcename: expected0]
    ASSIGN 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]
        NUMBER 1.0 1 [sourcename: expected0]


Subtree2: VAR 1 [sourcename: testcode]
    NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_1(CollapsePropertiesTest.java:279)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth1_2
junit.framework.AssertionFailedError:
Expected: var a=function(){};a.b=1;f(a);a.b
Result: var a=function(){};var a$b=1;f(a);a$b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                NUMBER 1.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                NUMBER 1.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]


Subtree1: EXPR_RESULT 1 [sourcename: expected0]
    ASSIGN 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]
        NUMBER 1.0 1 [sourcename: expected0]


Subtree2: VAR 1 [sourcename: testcode]
    NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_2(CollapsePropertiesTest.java:295)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth1_3
junit.framework.AssertionFailedError:
Expected: var a=function(){};a.b=1;new f(a);a.b
Result: var a=function(){};var a$b=1;new f(a);a$b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                NUMBER 1.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            NEW 1 [sourcename: expected0]
                NAME f 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                NUMBER 1.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NEW 1 [sourcename: testcode]
                NAME f 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]


Subtree1: EXPR_RESULT 1 [sourcename: expected0]
    ASSIGN 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]
        NUMBER 1.0 1 [sourcename: expected0]


Subtree2: VAR 1 [sourcename: testcode]
    NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_3(CollapsePropertiesTest.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1
junit.framework.AssertionFailedError:
Expected: function a(){}var c=a;(function(){a.b=0})();a.b
Result: function a(){}var a$b;var c=a;(function(){a$b=0})();a$b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0] [jsdoc_info: JSDocInfo]
            NAME a 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
                        EXPR_RESULT 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    NAME a 1 [sourcename: expected0]
                                    STRING b 1 [sourcename: expected0]
                                NUMBER 0.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode] [jsdoc_info: JSDocInfo]
            NAME a 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
                        EXPR_RESULT 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                                NUMBER 0.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]


Subtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]
    FUNCTION  1 [sourcename: expected0] [jsdoc_info: JSDocInfo]
        NAME a 1 [sourcename: expected0]
        LP 1 [sourcename: expected0]
        BLOCK 1 [sourcename: expected0]
    VAR 1 [sourcename: expected0]
        NAME c 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        CALL 1 [sourcename: expected0] [free_call: 1]
            FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
                    EXPR_RESULT 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            GETPROP 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                                STRING b 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]


Subtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]
    FUNCTION  1 [sourcename: testcode] [jsdoc_info: JSDocInfo]
        NAME a 1 [sourcename: testcode]
        LP 1 [sourcename: testcode]
        BLOCK 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME c 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        CALL 1 [sourcename: testcode] [free_call: 1]
            FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
                    EXPR_RESULT 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                            NUMBER 0.0 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode] [originalname: a.b]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1(CollapsePropertiesTest.java:552)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1
junit.framework.AssertionFailedError:
Expected: function a(){}var c=a;(function(){a.b=0})();a.b
Result: function a(){}var a$b;var c=a;(function(){a$b=0})();a$b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
                        EXPR_RESULT 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    NAME a 1 [sourcename: expected0]
                                    STRING b 1 [sourcename: expected0]
                                NUMBER 0.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
                        EXPR_RESULT 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                                NUMBER 0.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]


Subtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]
    FUNCTION  1 [sourcename: expected0]
        NAME a 1 [sourcename: expected0]
        LP 1 [sourcename: expected0]
        BLOCK 1 [sourcename: expected0]
    VAR 1 [sourcename: expected0]
        NAME c 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        CALL 1 [sourcename: expected0] [free_call: 1]
            FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
                    EXPR_RESULT 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            GETPROP 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                                STRING b 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]


Subtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]
    FUNCTION  1 [sourcename: testcode]
        NAME a 1 [sourcename: testcode]
        LP 1 [sourcename: testcode]
        BLOCK 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME c 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        CALL 1 [sourcename: testcode] [free_call: 1]
            FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
                    EXPR_RESULT 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                            NUMBER 0.0 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode] [originalname: a.b]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1(CollapsePropertiesTest.java:544)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2
junit.framework.AssertionFailedError:
Expected: var a$b=function(){};var d=a$b;(function(){a$b.c=0})();a$b.c
Result: var a$b=function(){};var a$b$c;var d=a$b;(function(){a$b$c=0})();a$b$c
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME d 1 [sourcename: expected0]
                NAME a$b 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
                        EXPR_RESULT 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    NAME a$b 1 [sourcename: expected0]
                                    STRING c 1 [sourcename: expected0]
                                NUMBER 0.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a$b 1 [sourcename: expected0]
                STRING c 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b$c 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME d 1 [sourcename: testcode]
                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
                        EXPR_RESULT 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
                                NUMBER 0.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]


Subtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]
    VAR 1 [sourcename: expected0]
        NAME a$b 1 [sourcename: expected0]
            FUNCTION  1 [sourcename: expected0]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
    VAR 1 [sourcename: expected0]
        NAME d 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        CALL 1 [sourcename: expected0] [free_call: 1]
            FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
                    EXPR_RESULT 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            GETPROP 1 [sourcename: expected0]
                                NAME a$b 1 [sourcename: expected0]
                                STRING c 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
            STRING c 1 [sourcename: expected0]


Subtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]
    VAR 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode] [originalname: a.b]
            FUNCTION  1 [sourcename: testcode]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b$c 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME d 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
    EXPR_RESULT 1 [sourcename: testcode]
        CALL 1 [sourcename: testcode] [free_call: 1]
            FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
                    EXPR_RESULT 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
                            NUMBER 0.0 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2(CollapsePropertiesTest.java:572)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth2
junit.framework.AssertionFailedError:
Expected: var a$b=function(){};a$b.c=1;var d=a$b;a$b.c!=d.c
Result: var a$b=function(){};var a$b$c=1;var d=a$b;a$b$c!=d.c
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a$b 1 [sourcename: expected0]
                    STRING c 1 [sourcename: expected0]
                NUMBER 1.0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME d 1 [sourcename: expected0]
                NAME a$b 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            NE 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a$b 1 [sourcename: expected0]
                    STRING c 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME d 1 [sourcename: expected0]
                    STRING c 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
                NUMBER 1.0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME d 1 [sourcename: testcode]
                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        EXPR_RESULT 1 [sourcename: testcode]
            NE 1 [sourcename: testcode]
                NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
                GETPROP 1 [sourcename: testcode]
                    NAME d 1 [sourcename: testcode]
                    STRING c 1 [sourcename: testcode]


Subtree1: EXPR_RESULT 1 [sourcename: expected0]
    ASSIGN 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
            STRING c 1 [sourcename: expected0]
        NUMBER 1.0 1 [sourcename: expected0]


Subtree2: VAR 1 [sourcename: testcode]
    NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
        NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth2(CollapsePropertiesTest.java:313)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)


There is a bug in the above code, please help me locate it by considering the stack trace.

Output **only** the exact buggy statement, with no line numbers, explanations, or additional content. Your response should contain just the buggy code line. Do not include ```java or ``` markers in the response.

================== prompt_fl_6 ==================

source code:
boolean canCollapseUnannotatedChildNames() {
      if (type == Type.OTHER || globalSets != 1 || localSets != 0) {
        return false;
      }

      // Don't try to collapse if the one global set is a twin reference.
      // We could theoretically handle this case in CollapseProperties, but
      // it's probably not worth the effort.
      Preconditions.checkNotNull(declaration);
      if (declaration.getTwin() != null) {
        return false;
      }

      if (isClassOrEnum) {
        return true;
      }

      // If this is a key of an aliased object literal, then it will be aliased
      // later. So we won't be able to collapse its properties.
      if (parent != null && parent.shouldKeepKeys()) {
        return false;
      }

      // If this is aliased, then its properties can't be collapsed either.
      if (type != Type.FUNCTION && aliasingGets > 0) {
        return false;
      }

      return (parent == null || parent.canCollapseUnannotatedChildNames());
    }

stack trace:
com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToChildOfUncollapsibleFunctionInLocalScope
junit.framework.AssertionFailedError:
Expected: function a(){}a.b={x:0};var c=a;(function(){a.b.y=0})();a.b.y
Result: function a(){}var a$b$x=0;var a$b$y;var c=a;(function(){a$b$y=0})();a$b$y
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                OBJECTLIT 1 [sourcename: expected0]
                    STRING x 1 [sourcename: expected0]
                        NUMBER 0.0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
                        EXPR_RESULT 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    GETPROP 1 [sourcename: expected0]
                                        NAME a 1 [sourcename: expected0]
                                        STRING b 1 [sourcename: expected0]
                                    STRING y 1 [sourcename: expected0]
                                NUMBER 0.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                STRING y 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b$x 1 [sourcename: testcode]
                NUMBER 0.0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b$y 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
                        EXPR_RESULT 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]
                                NUMBER 0.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]


Subtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]
    FUNCTION  1 [sourcename: expected0]
        NAME a 1 [sourcename: expected0]
        LP 1 [sourcename: expected0]
        BLOCK 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        ASSIGN 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]
            OBJECTLIT 1 [sourcename: expected0]
                STRING x 1 [sourcename: expected0]
                    NUMBER 0.0 1 [sourcename: expected0]
    VAR 1 [sourcename: expected0]
        NAME c 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        CALL 1 [sourcename: expected0] [free_call: 1]
            FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
                    EXPR_RESULT 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            GETPROP 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    NAME a 1 [sourcename: expected0]
                                    STRING b 1 [sourcename: expected0]
                                STRING y 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]
            STRING y 1 [sourcename: expected0]


Subtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]
    FUNCTION  1 [sourcename: testcode]
        NAME a 1 [sourcename: testcode]
        LP 1 [sourcename: testcode]
        BLOCK 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b$x 1 [sourcename: testcode]
            NUMBER 0.0 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b$y 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME c 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        CALL 1 [sourcename: testcode] [free_call: 1]
            FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
                    EXPR_RESULT 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]
                            NUMBER 0.0 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToChildOfUncollapsibleFunctionInLocalScope(CollapsePropertiesTest.java:610)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth1_1
junit.framework.AssertionFailedError:
Expected: var a=function(){};a.b=1;var c=a;c.b=2;a.b!=c.b
Result: var a=function(){};var a$b=1;var c=a;c.b=2;a$b!=c.b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                NUMBER 1.0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME c 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                NUMBER 2.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            NE 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME c 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                NUMBER 1.0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                GETPROP 1 [sourcename: testcode]
                    NAME c 1 [sourcename: testcode]
                    STRING b 1 [sourcename: testcode]
                NUMBER 2.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NE 1 [sourcename: testcode]
                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                GETPROP 1 [sourcename: testcode]
                    NAME c 1 [sourcename: testcode]
                    STRING b 1 [sourcename: testcode]


Subtree1: EXPR_RESULT 1 [sourcename: expected0]
    ASSIGN 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]
        NUMBER 1.0 1 [sourcename: expected0]


Subtree2: VAR 1 [sourcename: testcode]
    NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_1(CollapsePropertiesTest.java:279)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth1_2
junit.framework.AssertionFailedError:
Expected: var a=function(){};a.b=1;f(a);a.b
Result: var a=function(){};var a$b=1;f(a);a$b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                NUMBER 1.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                NUMBER 1.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]


Subtree1: EXPR_RESULT 1 [sourcename: expected0]
    ASSIGN 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]
        NUMBER 1.0 1 [sourcename: expected0]


Subtree2: VAR 1 [sourcename: testcode]
    NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_2(CollapsePropertiesTest.java:295)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth1_3
junit.framework.AssertionFailedError:
Expected: var a=function(){};a.b=1;new f(a);a.b
Result: var a=function(){};var a$b=1;new f(a);a$b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a 1 [sourcename: expected0]
                    STRING b 1 [sourcename: expected0]
                NUMBER 1.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            NEW 1 [sourcename: expected0]
                NAME f 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                NUMBER 1.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NEW 1 [sourcename: testcode]
                NAME f 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]


Subtree1: EXPR_RESULT 1 [sourcename: expected0]
    ASSIGN 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]
        NUMBER 1.0 1 [sourcename: expected0]


Subtree2: VAR 1 [sourcename: testcode]
    NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_3(CollapsePropertiesTest.java:304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1
junit.framework.AssertionFailedError:
Expected: function a(){}var c=a;(function(){a.b=0})();a.b
Result: function a(){}var a$b;var c=a;(function(){a$b=0})();a$b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0] [jsdoc_info: JSDocInfo]
            NAME a 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
                        EXPR_RESULT 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    NAME a 1 [sourcename: expected0]
                                    STRING b 1 [sourcename: expected0]
                                NUMBER 0.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode] [jsdoc_info: JSDocInfo]
            NAME a 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
                        EXPR_RESULT 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                                NUMBER 0.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]


Subtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]
    FUNCTION  1 [sourcename: expected0] [jsdoc_info: JSDocInfo]
        NAME a 1 [sourcename: expected0]
        LP 1 [sourcename: expected0]
        BLOCK 1 [sourcename: expected0]
    VAR 1 [sourcename: expected0]
        NAME c 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        CALL 1 [sourcename: expected0] [free_call: 1]
            FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
                    EXPR_RESULT 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            GETPROP 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                                STRING b 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]


Subtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]
    FUNCTION  1 [sourcename: testcode] [jsdoc_info: JSDocInfo]
        NAME a 1 [sourcename: testcode]
        LP 1 [sourcename: testcode]
        BLOCK 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME c 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        CALL 1 [sourcename: testcode] [free_call: 1]
            FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
                    EXPR_RESULT 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                            NUMBER 0.0 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode] [originalname: a.b]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1(CollapsePropertiesTest.java:552)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1
junit.framework.AssertionFailedError:
Expected: function a(){}var c=a;(function(){a.b=0})();a.b
Result: function a(){}var a$b;var c=a;(function(){a$b=0})();a$b
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME c 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
                        EXPR_RESULT 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    NAME a 1 [sourcename: expected0]
                                    STRING b 1 [sourcename: expected0]
                                NUMBER 0.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
                STRING b 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME c 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
                        EXPR_RESULT 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                                NUMBER 0.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]


Subtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]
    FUNCTION  1 [sourcename: expected0]
        NAME a 1 [sourcename: expected0]
        LP 1 [sourcename: expected0]
        BLOCK 1 [sourcename: expected0]
    VAR 1 [sourcename: expected0]
        NAME c 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        CALL 1 [sourcename: expected0] [free_call: 1]
            FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
                    EXPR_RESULT 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            GETPROP 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
                                STRING b 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a 1 [sourcename: expected0]
            STRING b 1 [sourcename: expected0]


Subtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]
    FUNCTION  1 [sourcename: testcode]
        NAME a 1 [sourcename: testcode]
        LP 1 [sourcename: testcode]
        BLOCK 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME c 1 [sourcename: testcode]
            NAME a 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        CALL 1 [sourcename: testcode] [free_call: 1]
            FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
                    EXPR_RESULT 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                            NUMBER 0.0 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode] [originalname: a.b]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1(CollapsePropertiesTest.java:544)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2
junit.framework.AssertionFailedError:
Expected: var a$b=function(){};var d=a$b;(function(){a$b.c=0})();a$b.c
Result: var a$b=function(){};var a$b$c;var d=a$b;(function(){a$b$c=0})();a$b$c
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME d 1 [sourcename: expected0]
                NAME a$b 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
                        EXPR_RESULT 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0]
                                GETPROP 1 [sourcename: expected0]
                                    NAME a$b 1 [sourcename: expected0]
                                    STRING c 1 [sourcename: expected0]
                                NUMBER 0.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            GETPROP 1 [sourcename: expected0]
                NAME a$b 1 [sourcename: expected0]
                STRING c 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b$c 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME d 1 [sourcename: testcode]
                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
                        EXPR_RESULT 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode]
                                NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
                                NUMBER 0.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]


Subtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]
    VAR 1 [sourcename: expected0]
        NAME a$b 1 [sourcename: expected0]
            FUNCTION  1 [sourcename: expected0]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
    VAR 1 [sourcename: expected0]
        NAME d 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        CALL 1 [sourcename: expected0] [free_call: 1]
            FUNCTION  1 [sourcename: expected0] [parenthesized: true]
                NAME  1 [sourcename: expected0]
                LP 1 [sourcename: expected0]
                BLOCK 1 [sourcename: expected0]
                    EXPR_RESULT 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0]
                            GETPROP 1 [sourcename: expected0]
                                NAME a$b 1 [sourcename: expected0]
                                STRING c 1 [sourcename: expected0]
                            NUMBER 0.0 1 [sourcename: expected0]
    EXPR_RESULT 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
            STRING c 1 [sourcename: expected0]


Subtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]
    VAR 1 [sourcename: testcode]
        NAME a$b 1 [sourcename: testcode] [originalname: a.b]
            FUNCTION  1 [sourcename: testcode]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME a$b$c 1 [sourcename: testcode]
    VAR 1 [sourcename: testcode]
        NAME d 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
    EXPR_RESULT 1 [sourcename: testcode]
        CALL 1 [sourcename: testcode] [free_call: 1]
            FUNCTION  1 [sourcename: testcode] [parenthesized: true]
                NAME  1 [sourcename: testcode]
                LP 1 [sourcename: testcode]
                BLOCK 1 [sourcename: testcode]
                    EXPR_RESULT 1 [sourcename: testcode]
                        ASSIGN 1 [sourcename: testcode]
                            NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
                            NUMBER 0.0 1 [sourcename: testcode]
    EXPR_RESULT 1 [sourcename: testcode]
        NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2(CollapsePropertiesTest.java:572)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth2
junit.framework.AssertionFailedError:
Expected: var a$b=function(){};a$b.c=1;var d=a$b;a$b.c!=d.c
Result: var a$b=function(){};var a$b$c=1;var d=a$b;a$b$c!=d.c
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        VAR 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a$b 1 [sourcename: expected0]
                    STRING c 1 [sourcename: expected0]
                NUMBER 1.0 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME d 1 [sourcename: expected0]
                NAME a$b 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            NE 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME a$b 1 [sourcename: expected0]
                    STRING c 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME d 1 [sourcename: expected0]
                    STRING c 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        VAR 1 [sourcename: testcode]
            NAME a$b 1 [sourcename: testcode] [originalname: a.b]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
                NUMBER 1.0 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME d 1 [sourcename: testcode]
                NAME a$b 1 [sourcename: testcode] [originalname: a.b]
        EXPR_RESULT 1 [sourcename: testcode]
            NE 1 [sourcename: testcode]
                NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
                GETPROP 1 [sourcename: testcode]
                    NAME d 1 [sourcename: testcode]
                    STRING c 1 [sourcename: testcode]


Subtree1: EXPR_RESULT 1 [sourcename: expected0]
    ASSIGN 1 [sourcename: expected0]
        GETPROP 1 [sourcename: expected0]
            NAME a$b 1 [sourcename: expected0]
            STRING c 1 [sourcename: expected0]
        NUMBER 1.0 1 [sourcename: expected0]


Subtree2: VAR 1 [sourcename: testcode]
    NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]
        NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth2(CollapsePropertiesTest.java:313)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)


failure assertion code:
testSame(


There is a bug in the above code, please help me locate it by considering the stack trace information and failure assertion code.

Output **only** the exact buggy statement, with no line numbers, explanations, or additional content. Your response should contain just the buggy code line. Do not include ```java or ``` markers in the response.

================== prompt_apr_1 ==================

boolean canCollapseUnannotatedChildNames() {
      if (type == Type.OTHER || globalSets != 1 || localSets != 0) {
        return false;
      }

      // Don't try to collapse if the one global set is a twin reference.
      // We could theoretically handle this case in CollapseProperties, but
      // it's probably not worth the effort.
      Preconditions.checkNotNull(declaration);
      if (declaration.getTwin() != null) {
        return false;
      }

      if (isClassOrEnum) {
        return true;
      }

      // If this is a key of an aliased object literal, then it will be aliased
      // later. So we won't be able to collapse its properties.
      if (parent != null && parent.shouldKeepKeys()) {
        return false;
      }

      // If this is aliased, then its properties can't be collapsed either.
      if (type != Type.FUNCTION && aliasingGets > 0) {
        return false;
      }

      return (parent == null || parent.canCollapseUnannotatedChildNames());
    }

There is a bug in line [25] of the code, please help me fix it.

Please return the **complete corrected method**. Do not skip or omit any part of the code. Do not include ```java or ``` markers in the response.

================== prompt_apr_2 ==================

boolean canCollapseUnannotatedChildNames() {
      if (type == Type.OTHER || globalSets != 1 || localSets != 0) {
        return false;
      }

      // Don't try to collapse if the one global set is a twin reference.
      // We could theoretically handle this case in CollapseProperties, but
      // it's probably not worth the effort.
      Preconditions.checkNotNull(declaration);
      if (declaration.getTwin() != null) {
        return false;
      }

      if (isClassOrEnum) {
        return true;
      }

      // If this is a key of an aliased object literal, then it will be aliased
      // later. So we won't be able to collapse its properties.
      if (parent != null && parent.shouldKeepKeys()) {
        return false;
      }

      // If this is aliased, then its properties can't be collapsed either.
      if (type != Type.FUNCTION && aliasingGets > 0) {
        return false;
      }

      return (parent == null || parent.canCollapseUnannotatedChildNames());
    }

There is a bug in ['      if (type != Type.FUNCTION && aliasingGets > 0) {'] , please help me fix it. 

Please return the **complete corrected method**. Do not skip or omit any part of the code. Do not include ```java or ``` markers in the response.

================== prompt_apr_3 ==================

boolean canCollapseUnannotatedChildNames() {
      if (type == Type.OTHER || globalSets != 1 || localSets != 0) {
        return false;
      }

      // Don't try to collapse if the one global set is a twin reference.
      // We could theoretically handle this case in CollapseProperties, but
      // it's probably not worth the effort.
      Preconditions.checkNotNull(declaration);
      if (declaration.getTwin() != null) {
        return false;
      }

      if (isClassOrEnum) {
        return true;
      }

      // If this is a key of an aliased object literal, then it will be aliased
      // later. So we won't be able to collapse its properties.
      if (parent != null && parent.shouldKeepKeys()) {
        return false;
      }

      // If this is aliased, then its properties can't be collapsed either.
      if (type != Type.FUNCTION && aliasingGets > 0) {

There is a bug in the last statement, please help me fix it.

Return the code **only from the method declaration to the fixed statement**, without completing or adding additional code. Do not modify anything beyond fixing the bug, and do not complete the `if` statement or other unfinished parts. Do not include ```java or ``` markers in the response.

================== prompt_apr_4 ==================

boolean canCollapseUnannotatedChildNames() {
      if (type == Type.OTHER || globalSets != 1 || localSets != 0) {
        return false;
      }

      // Don't try to collapse if the one global set is a twin reference.
      // We could theoretically handle this case in CollapseProperties, but
      // it's probably not worth the effort.
      Preconditions.checkNotNull(declaration);
      if (declaration.getTwin() != null) {
        return false;
      }

      if (isClassOrEnum) {
        return true;
      }

      // If this is a key of an aliased object literal, then it will be aliased
      // later. So we won't be able to collapse its properties.
      if (parent != null && parent.shouldKeepKeys()) {
        return false;
      }

      // If this is aliased, then its properties can't be collapsed either.
      if (type != Type.FUNCTION && aliasingGets > 0) {
        return false;
      }

      return (parent == null || parent.canCollapseUnannotatedChildNames());
    }

There is a bug in line [25] of the code, please help me fix it.

Please return the results in a strict JSON format as described below. Please follow these instructions carefully:
1. Your output must include each repaired line's number (`line_number`) and the corresponding fixed code statement (`fixed_statement`).
2. The output format must be a valid JSON array, where each element represents one repaired line, with the following structure:
   - `"line_number"`: The line number of the buggy code that was repaired (integer).
   - `"fixed_statement"`: The repaired statement for that specific line (string).

3. The result must strictly follow this format:
[
    {
        "line_number": int,
        "fixed_statement": "string"
    },
    {
        "line_number": int,
        "fixed_statement": "string"
    }
]
4. The repaired statement in "fixed_statement" must replace the corresponding line in the buggy code.
5. You must NOT include any additional explanation or description in your response. Only return the JSON array. Do not include ```json or ``` markers in the response.

================== prompt_apr_5 ==================

boolean canCollapseUnannotatedChildNames() {
      if (type == Type.OTHER || globalSets != 1 || localSets != 0) {
        return false;
      }

      // Don't try to collapse if the one global set is a twin reference.
      // We could theoretically handle this case in CollapseProperties, but
      // it's probably not worth the effort.
      Preconditions.checkNotNull(declaration);
      if (declaration.getTwin() != null) {
        return false;
      }

      if (isClassOrEnum) {
        return true;
      }

      // If this is a key of an aliased object literal, then it will be aliased
      // later. So we won't be able to collapse its properties.
      if (parent != null && parent.shouldKeepKeys()) {
        return false;
      }

      // If this is aliased, then its properties can't be collapsed either.
      if (type != Type.FUNCTION && aliasingGets > 0) {
        return false;
      }

      return (parent == null || parent.canCollapseUnannotatedChildNames());
    }

There is a bug in ['      if (type != Type.FUNCTION && aliasingGets > 0) {'] , please help me fix it. 

Please return the results in a strict JSON format as described below. Please follow these instructions carefully:
1. Your output must include each repaired line's number (`line_number`) and the corresponding fixed code statement (`fixed_statement`).
2. The output format must be a valid JSON array, where each element represents one repaired line, with the following structure:
   - `"line_number"`: The line number of the buggy code that was repaired (integer).
   - `"fixed_statement"`: The repaired statement for that specific line (string).

3. The result must strictly follow this format:
[
    {
        "line_number": int,
        "fixed_statement": "string"
    },
    {
        "line_number": int,
        "fixed_statement": "string"
    }
]
4. The repaired statement in "fixed_statement" must replace the corresponding line in the buggy code.
5. You must NOT include any additional explanation or description in your response. Only return the JSON array. Do not include ```json or ``` markers in the response.

================== prompt_apr_6 ==================

boolean canCollapseUnannotatedChildNames() {
      if (type == Type.OTHER || globalSets != 1 || localSets != 0) {
        return false;
      }

      // Don't try to collapse if the one global set is a twin reference.
      // We could theoretically handle this case in CollapseProperties, but
      // it's probably not worth the effort.
      Preconditions.checkNotNull(declaration);
      if (declaration.getTwin() != null) {
        return false;
      }

      if (isClassOrEnum) {
        return true;
      }

      // If this is a key of an aliased object literal, then it will be aliased
      // later. So we won't be able to collapse its properties.
      if (parent != null && parent.shouldKeepKeys()) {
        return false;
      }

      // If this is aliased, then its properties can't be collapsed either.
      if (type != Type.FUNCTION && aliasingGets > 0) {

There is a bug in the last statement, please help me fix it.

Please return the results in a strict JSON format as described below. Please follow these instructions carefully:
1. Your output must include each repaired line's number (`line_number`) and the corresponding fixed code statement (`fixed_statement`).
2. The output format must be a valid JSON array, where each element represents one repaired line, with the following structure:
   - `"line_number"`: The line number of the buggy code that was repaired (integer).
   - `"fixed_statement"`: The repaired statement for that specific line (string).

3. The result must strictly follow this format:
[
    {
        "line_number": int,
        "fixed_statement": "string"
    },
    {
        "line_number": int,
        "fixed_statement": "string"
    }
]
4. The repaired statement in "fixed_statement" must replace the corresponding line in the buggy code.
5. You must NOT include any additional explanation or description in your response. Only return the JSON array. Do not include ```json or ``` markers in the response.
