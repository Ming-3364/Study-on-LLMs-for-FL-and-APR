[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "solve",
            "method_body": "public Object solve(){\n    int N = in.it();\n    int K = in.it();\n    int[] P = in.idx(N);\n    int[] Q = new int[N];\n    for (int i = 0;i < N;i++)\n      Q[P[i]] = i;\n    List<int[]> list = new ArrayList<>();\n    for (int x = 0;x < N;x++) {\n      Stack<Integer> stk = new Stack<>();\n      for (int i = 0;i < x;i++)\n        if (Q[i] -Q[x] >= K)\n          stk.add(i);\n      stk.add(x);\n      int b = stk.pop();\n      while (!stk.isEmpty()) {\n        int a = stk.pop();\n        list.add(new int[]{Q[a] +1, Q[b] +1});\n        Q[a] ^= Q[b];\n        Q[b] ^= Q[a];\n        Q[a] ^= Q[b];\n        b = a;\n      }\n    }\n    out.println(list.size());\n    return list;\n  }",
            "start_line": 27,
            "end_line": 53
        },
        "buggy_method_src": "public Object solve(){\n    int N = in.it();\n    int K = in.it();\n    int[] P = in.idx(N);\n    int[] Q = new int[N];\n    for (int i = 0;i < N;i++)\n      Q[P[i]] = i;\n    List<int[]> list = new ArrayList<>();\n    for (int x = 0;x < N;x++) {\n      Stack<Integer> stk = new Stack<>();\n      for (int i = 0;i < x;i++)\n        if (Q[i] -Q[x] >= K)\n          stk.add(i);\n      stk.add(x);\n      int b = stk.pop();\n      while (!stk.isEmpty()) {\n        int a = stk.pop();\n        list.add(new int[]{Q[a] +1, Q[b] +1});\n        Q[a] ^= Q[b];\n        Q[b] ^= Q[a];\n        Q[a] ^= Q[b];\n        b = a;\n      }\n    }\n    out.println(list.size());\n    return list;\n  }",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            18
        ],
        "buggy_statements": [
            "        list.add(new int[]{Q[a] +1, Q[b] +1});"
        ],
        "buggy_method_src_endswith_buggy_statement": "public Object solve(){\n    int N = in.it();\n    int K = in.it();\n    int[] P = in.idx(N);\n    int[] Q = new int[N];\n    for (int i = 0;i < N;i++)\n      Q[P[i]] = i;\n    List<int[]> list = new ArrayList<>();\n    for (int x = 0;x < N;x++) {\n      Stack<Integer> stk = new Stack<>();\n      for (int i = 0;i < x;i++)\n        if (Q[i] -Q[x] >= K)\n          stk.add(i);\n      stk.add(x);\n      int b = stk.pop();\n      while (!stk.isEmpty()) {\n        int a = stk.pop();\n        list.add(new int[]{Q[a] +1, Q[b] +1});"
    }
]