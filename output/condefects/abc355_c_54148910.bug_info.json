[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "init",
            "method_body": "void init() {\n        N = sc.nextInt();\n        T = sc.nextInt();\n        for (int i = 0; i < T; i++) {\n            int t = sc.nextInt();\n            int I = geti(t);\n            int J = getj(t);\n            // System.out.printf(\"I = %d, J = %d\\n\", I, J);\n            if (!rowCntMp.containsKey(I)) {\n                rowCntMp.put(I, 0);\n            }\n            if (!columnCntMp.containsKey(J)) {\n                columnCntMp.put(J, 0);\n            }\n            rowCntMp.put(I, rowCntMp.get(I) + 1);\n            if (rowCntMp.get(I).equals(N)) {\n                System.out.println(i + 1);\n                return;\n            }\n            columnCntMp.put(J, columnCntMp.get(J) + 1);\n            if (columnCntMp.get(J).equals(N)) {\n                System.out.println(i + 1);\n                return;\n            }\n            if (I == J) {\n                leftDiagonalCnt += 1;\n                if (leftDiagonalCnt == N) {\n                    System.out.println(i + 1);\n                    return;\n                }\n            }\n            if (I + J == N) {\n                rightDiagonalCnt += 1;\n                if (rightDiagonalCnt == N) {\n\n                    System.out.println(i + 1);\n                    return;\n                }\n            }\n        }\n        System.out.println(-1);\n    }",
            "start_line": 12,
            "end_line": 53
        },
        "buggy_method_src": "void init() {\n        N = sc.nextInt();\n        T = sc.nextInt();\n        for (int i = 0; i < T; i++) {\n            int t = sc.nextInt();\n            int I = geti(t);\n            int J = getj(t);\n            // System.out.printf(\"I = %d, J = %d\\n\", I, J);\n            if (!rowCntMp.containsKey(I)) {\n                rowCntMp.put(I, 0);\n            }\n            if (!columnCntMp.containsKey(J)) {\n                columnCntMp.put(J, 0);\n            }\n            rowCntMp.put(I, rowCntMp.get(I) + 1);\n            if (rowCntMp.get(I).equals(N)) {\n                System.out.println(i + 1);\n                return;\n            }\n            columnCntMp.put(J, columnCntMp.get(J) + 1);\n            if (columnCntMp.get(J).equals(N)) {\n                System.out.println(i + 1);\n                return;\n            }\n            if (I == J) {\n                leftDiagonalCnt += 1;\n                if (leftDiagonalCnt == N) {\n                    System.out.println(i + 1);\n                    return;\n                }\n            }\n            if (I + J == N) {\n                rightDiagonalCnt += 1;\n                if (rightDiagonalCnt == N) {\n\n                    System.out.println(i + 1);\n                    return;\n                }\n            }\n        }\n        System.out.println(-1);\n    }",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            32
        ],
        "buggy_statements": [
            "            if (I + J == N) {"
        ],
        "buggy_method_src_endswith_buggy_statement": "void init() {\n        N = sc.nextInt();\n        T = sc.nextInt();\n        for (int i = 0; i < T; i++) {\n            int t = sc.nextInt();\n            int I = geti(t);\n            int J = getj(t);\n            // System.out.printf(\"I = %d, J = %d\\n\", I, J);\n            if (!rowCntMp.containsKey(I)) {\n                rowCntMp.put(I, 0);\n            }\n            if (!columnCntMp.containsKey(J)) {\n                columnCntMp.put(J, 0);\n            }\n            rowCntMp.put(I, rowCntMp.get(I) + 1);\n            if (rowCntMp.get(I).equals(N)) {\n                System.out.println(i + 1);\n                return;\n            }\n            columnCntMp.put(J, columnCntMp.get(J) + 1);\n            if (columnCntMp.get(J).equals(N)) {\n                System.out.println(i + 1);\n                return;\n            }\n            if (I == J) {\n                leftDiagonalCnt += 1;\n                if (leftDiagonalCnt == N) {\n                    System.out.println(i + 1);\n                    return;\n                }\n            }\n            if (I + J == N) {"
    }
]