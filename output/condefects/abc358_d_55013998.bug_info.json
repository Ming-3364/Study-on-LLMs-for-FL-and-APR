[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "solve",
            "method_body": "private static void solve() {\n        int n = in.nextInt(), m = in.nextInt();\n        map = new TreeMap<>();\n        for(int i = 0; i < n; i++) {\n            int num = in.nextInt();\n            map.put(num, map.getOrDefault(num, 0) + 1);\n        }\n        int res = 0;\n        int[] b = new int[m];\n        for(int i = 0; i < m; i++) b[i] = in.nextInt();\n        Arrays.sort(b);\n        for(int i = 0; i < m; i++) {\n            int need = b[i];\n            Integer num = map.ceilingKey(need);\n            if(num == null) {\n                System.out.println(-1);\n                return;\n            }\n            res += num;\n            if(map.get(num) == 1) map.remove(num);\n            else map.put(num, map.get(num) - 1);\n        }\n        System.out.println(res);\n    }",
            "start_line": 9,
            "end_line": 32
        },
        "buggy_method_src": "private static void solve() {\n        int n = in.nextInt(), m = in.nextInt();\n        map = new TreeMap<>();\n        for(int i = 0; i < n; i++) {\n            int num = in.nextInt();\n            map.put(num, map.getOrDefault(num, 0) + 1);\n        }\n        int res = 0;\n        int[] b = new int[m];\n        for(int i = 0; i < m; i++) b[i] = in.nextInt();\n        Arrays.sort(b);\n        for(int i = 0; i < m; i++) {\n            int need = b[i];\n            Integer num = map.ceilingKey(need);\n            if(num == null) {\n                System.out.println(-1);\n                return;\n            }\n            res += num;\n            if(map.get(num) == 1) map.remove(num);\n            else map.put(num, map.get(num) - 1);\n        }\n        System.out.println(res);\n    }",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            8
        ],
        "buggy_statements": [
            "        int res = 0;"
        ],
        "buggy_method_src_endswith_buggy_statement": "private static void solve() {\n        int n = in.nextInt(), m = in.nextInt();\n        map = new TreeMap<>();\n        for(int i = 0; i < n; i++) {\n            int num = in.nextInt();\n            map.put(num, map.getOrDefault(num, 0) + 1);\n        }\n        int res = 0;"
    }
]