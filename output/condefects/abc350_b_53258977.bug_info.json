[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "main",
            "method_body": "public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        \n        int N = sc.nextInt(); // \u6b6f\u306e\u672c\u6570\n        int Q = sc.nextInt(); // \u6cbb\u7642\u306e\u56de\u6570\n        \n        // \u6b6f\u306e\u72b6\u614b\u3092\u7ba1\u7406\u3059\u308b\u914d\u5217\u3092\u521d\u671f\u5316 (true: \u6b6f\u304c\u751f\u3048\u3066\u3044\u308b, false: \u6b6f\u304c\u751f\u3048\u3066\u3044\u306a\u3044)\n        boolean[] teeth = new boolean[N + 1]; // \u30a4\u30f3\u30c7\u30c3\u30af\u30b91\u304b\u3089\u4f7f\u3046\u305f\u3081\u3001\u30b5\u30a4\u30ba\u3092N+1\u306b\u8a2d\u5b9a\n        \n        // \u6cbb\u7642\u3092\u884c\u3046\n        for (int i = 0; i < Q; i++) {\n            int hole = sc.nextInt(); // \u7a74\u306e\u756a\u53f7\n            \n            // \u6cbb\u7642\u5185\u5bb9\u306b\u5fdc\u3058\u3066\u7a74\u306e\u72b6\u614b\u3092\u66f4\u65b0\u3059\u308b\n            if (teeth[hole]) {\n                teeth[hole] = false; // \u6b6f\u304c\u751f\u3048\u3066\u3044\u308b\u5834\u5408\u306f\u6b6f\u3092\u629c\u304f\n            } else {\n                teeth[hole] = true; // \u6b6f\u304c\u751f\u3048\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u6b6f\u3092\u751f\u3084\u3059\n            }\n        }\n        \n        // \u6b6f\u306e\u672c\u6570\u3092\u6570\u3048\u308b\n        int count = 0;\n        for (int i = 1; i <= N; i++) {\n            if (teeth[i]) { // \u6b6f\u304c\u751f\u3048\u3066\u3044\u308b\u5834\u5408\u306f\u672c\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\n                count++;\n            }\n        }\n        \n        // \u7b54\u3048\u3092\u51fa\u529b\u3059\u308b\n        System.out.println(count);\n    }\n}",
            "start_line": 4,
            "end_line": 35
        },
        "buggy_method_src": "public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        \n        int N = sc.nextInt(); // \u6b6f\u306e\u672c\u6570\n        int Q = sc.nextInt(); // \u6cbb\u7642\u306e\u56de\u6570\n        \n        // \u6b6f\u306e\u72b6\u614b\u3092\u7ba1\u7406\u3059\u308b\u914d\u5217\u3092\u521d\u671f\u5316 (true: \u6b6f\u304c\u751f\u3048\u3066\u3044\u308b, false: \u6b6f\u304c\u751f\u3048\u3066\u3044\u306a\u3044)\n        boolean[] teeth = new boolean[N + 1]; // \u30a4\u30f3\u30c7\u30c3\u30af\u30b91\u304b\u3089\u4f7f\u3046\u305f\u3081\u3001\u30b5\u30a4\u30ba\u3092N+1\u306b\u8a2d\u5b9a\n        \n        // \u6cbb\u7642\u3092\u884c\u3046\n        for (int i = 0; i < Q; i++) {\n            int hole = sc.nextInt(); // \u7a74\u306e\u756a\u53f7\n            \n            // \u6cbb\u7642\u5185\u5bb9\u306b\u5fdc\u3058\u3066\u7a74\u306e\u72b6\u614b\u3092\u66f4\u65b0\u3059\u308b\n            if (teeth[hole]) {\n                teeth[hole] = false; // \u6b6f\u304c\u751f\u3048\u3066\u3044\u308b\u5834\u5408\u306f\u6b6f\u3092\u629c\u304f\n            } else {\n                teeth[hole] = true; // \u6b6f\u304c\u751f\u3048\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u6b6f\u3092\u751f\u3084\u3059\n            }\n        }\n        \n        // \u6b6f\u306e\u672c\u6570\u3092\u6570\u3048\u308b\n        int count = 0;\n        for (int i = 1; i <= N; i++) {\n            if (teeth[i]) { // \u6b6f\u304c\u751f\u3048\u3066\u3044\u308b\u5834\u5408\u306f\u672c\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\n                count++;\n            }\n        }\n        \n        // \u7b54\u3048\u3092\u51fa\u529b\u3059\u308b\n        System.out.println(count);\n    }\n}",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            31
        ],
        "buggy_statements": [
            "        System.out.println(count);"
        ],
        "buggy_method_src_endswith_buggy_statement": "public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        \n        int N = sc.nextInt(); // \u6b6f\u306e\u672c\u6570\n        int Q = sc.nextInt(); // \u6cbb\u7642\u306e\u56de\u6570\n        \n        // \u6b6f\u306e\u72b6\u614b\u3092\u7ba1\u7406\u3059\u308b\u914d\u5217\u3092\u521d\u671f\u5316 (true: \u6b6f\u304c\u751f\u3048\u3066\u3044\u308b, false: \u6b6f\u304c\u751f\u3048\u3066\u3044\u306a\u3044)\n        boolean[] teeth = new boolean[N + 1]; // \u30a4\u30f3\u30c7\u30c3\u30af\u30b91\u304b\u3089\u4f7f\u3046\u305f\u3081\u3001\u30b5\u30a4\u30ba\u3092N+1\u306b\u8a2d\u5b9a\n        \n        // \u6cbb\u7642\u3092\u884c\u3046\n        for (int i = 0; i < Q; i++) {\n            int hole = sc.nextInt(); // \u7a74\u306e\u756a\u53f7\n            \n            // \u6cbb\u7642\u5185\u5bb9\u306b\u5fdc\u3058\u3066\u7a74\u306e\u72b6\u614b\u3092\u66f4\u65b0\u3059\u308b\n            if (teeth[hole]) {\n                teeth[hole] = false; // \u6b6f\u304c\u751f\u3048\u3066\u3044\u308b\u5834\u5408\u306f\u6b6f\u3092\u629c\u304f\n            } else {\n                teeth[hole] = true; // \u6b6f\u304c\u751f\u3048\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u6b6f\u3092\u751f\u3084\u3059\n            }\n        }\n        \n        // \u6b6f\u306e\u672c\u6570\u3092\u6570\u3048\u308b\n        int count = 0;\n        for (int i = 1; i <= N; i++) {\n            if (teeth[i]) { // \u6b6f\u304c\u751f\u3048\u3066\u3044\u308b\u5834\u5408\u306f\u672c\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\n                count++;\n            }\n        }\n        \n        // \u7b54\u3048\u3092\u51fa\u529b\u3059\u308b\n        System.out.println(count);"
    }
]