[
    {
        "prompt_fl_1": "\nsource code:\n@Override\n  public void enterScope(NodeTraversal t) {\n    Node declarationRoot = t.getScopeRoot();\n    Renamer renamer;\n    if (nameStack.isEmpty()) {\n      // If the contextual renamer is being used the starting context can not\n      // be a function.\n      Preconditions.checkState(\n          declarationRoot.getType() != Token.FUNCTION ||\n          !(rootRenamer instanceof ContextualRenamer));\n      Preconditions.checkState(t.inGlobalScope());\n      renamer = rootRenamer;\n    } else {\n      renamer = nameStack.peek().forChildScope();\n    }\n\n    if (declarationRoot.getType() == Token.FUNCTION) {\n      for (Node c = declarationRoot.getFirstChild().getNext().getFirstChild(); c != null; c = c.getNext()) {\n        String name = c.getString();\n        renamer.addDeclaredName(name);\n      }\n      Node functionBody = declarationRoot.getLastChild();\n      findDeclaredNames(functionBody, null, renamer);\n    }  else \n    if (declarationRoot.getType() != Token.FUNCTION) {\n      // Add the block declarations\n      findDeclaredNames(declarationRoot, null, renamer);\n    }\n    nameStack.push(renamer);\n  }\n\nThere is a bug in the above code, please help me locate it.\n\nPlease output **only one integer**: the line number of the buggy code (The code starts from line 1). Do not provide any explanations or additional content.\n",
        "prompt_fl_2": "\nsource code:\n@Override\n  public void enterScope(NodeTraversal t) {\n    Node declarationRoot = t.getScopeRoot();\n    Renamer renamer;\n    if (nameStack.isEmpty()) {\n      // If the contextual renamer is being used the starting context can not\n      // be a function.\n      Preconditions.checkState(\n          declarationRoot.getType() != Token.FUNCTION ||\n          !(rootRenamer instanceof ContextualRenamer));\n      Preconditions.checkState(t.inGlobalScope());\n      renamer = rootRenamer;\n    } else {\n      renamer = nameStack.peek().forChildScope();\n    }\n\n    if (declarationRoot.getType() == Token.FUNCTION) {\n      for (Node c = declarationRoot.getFirstChild().getNext().getFirstChild(); c != null; c = c.getNext()) {\n        String name = c.getString();\n        renamer.addDeclaredName(name);\n      }\n      Node functionBody = declarationRoot.getLastChild();\n      findDeclaredNames(functionBody, null, renamer);\n    }  else \n    if (declarationRoot.getType() != Token.FUNCTION) {\n      // Add the block declarations\n      findDeclaredNames(declarationRoot, null, renamer);\n    }\n    nameStack.push(renamer);\n  }\n\nstack trace:\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline19b\njunit.framework.AssertionFailedError:\nExpected: var x=1;var y=2;function foo(a,b){y=a;x=b}function bar(){var b$$inline_1=y;y=x;x=b$$inline_1}\nResult: var x=1;var y=2;function foo(a,b){y=a;x=b}function bar(){var b$$inline_3=y;y=x;x=b$$inline_3}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n            NUMBER 1.0 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME y 1 [source_file:  [testcode] ]\n            NUMBER 2.0 1 [source_file:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n            NAME b 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            EXPR_RESULT 1 [source_file:  [testcode] ]\n                ASSIGN 1 [source_file:  [testcode] ]\n                    NAME y 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n            EXPR_RESULT 1 [source_file:  [testcode] ]\n                ASSIGN 1 [source_file:  [testcode] ]\n                    NAME x 1 [source_file:  [testcode] ]\n                    NAME b 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FUNCTION bar 1 [source_file:  [testcode] ]\n        NAME bar 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_1 1 [source_file:  [testcode] ]\n                        NAME y 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    ASSIGN 1 [source_file:  [testcode] ]\n                        NAME y 1 [source_file:  [testcode] ]\n                        NAME x 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    ASSIGN 1 [source_file:  [testcode] ]\n                        NAME x 1 [source_file:  [testcode] ]\n                        NAME b$$inline_1 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    VAR 1 [source_file: code]\n        NAME x 1 [source_file: code]\n            NUMBER 1.0 1 [source_file: code]\n    VAR 1 [source_file: code]\n        NAME y 1 [source_file: code]\n            NUMBER 2.0 1 [source_file: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n            NAME b 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            EXPR_RESULT 1 [source_file: code]\n                ASSIGN 1 [source_file: code]\n                    NAME y 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n            EXPR_RESULT 1 [source_file: code]\n                ASSIGN 1 [source_file: code]\n                    NAME x 1 [source_file: code]\n                    NAME b 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FUNCTION bar 1 [source_file: code]\n        NAME bar 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME b$$inline_3 1 [source_file: code]\n                        NAME y 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    ASSIGN 1 [source_file: code]\n                        NAME y 1 [source_file: code]\n                        NAME x 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    ASSIGN 1 [source_file: code]\n                        NAME x 1 [source_file: code]\n                        NAME b$$inline_3 1 [source_file: code]\n\n\nSubtree1: NAME b$$inline_1 1 [source_file:  [testcode] ]\n    NAME y 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME b$$inline_3 1 [source_file: code]\n    NAME y 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline19b(FunctionInjectorTest.java:945)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInlineIntoLoop\njunit.framework.AssertionFailedError:\nExpected: function foo(a){var b;return a}for(;1;){var b$$inline_1=void 0;1}\nResult: function foo(a){var b;return a}for(;1;){var b$$inline_3=void 0;1}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            VAR 1 [source_file:  [testcode] ]\n                NAME b 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FOR 1 [source_file:  [testcode] ]\n        EMPTY 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n        EMPTY 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_1 1 [source_file:  [testcode] ]\n                        VOID 1 [source_file:  [testcode] ]\n                            NUMBER 0.0 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            VAR 1 [source_file: code]\n                NAME b 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FOR 1 [source_file: code]\n        EMPTY 1 [source_file: code]\n        NUMBER 1.0 1 [source_file: code]\n        EMPTY 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME b$$inline_3 1 [source_file: code]\n                        VOID 1 [source_file: code]\n                            NUMBER 0.0 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    NUMBER 1.0 1 [source_file: code]\n\n\nSubtree1: NAME b$$inline_1 1 [source_file:  [testcode] ]\n    VOID 1 [source_file:  [testcode] ]\n        NUMBER 0.0 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME b$$inline_3 1 [source_file: code]\n    VOID 1 [source_file: code]\n        NUMBER 0.0 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInlineIntoLoop(FunctionInjectorTest.java:960)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline13\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return a}function x(){var a$$inline_0=x++;a$$inline_0}\nResult: function foo(a){return a}function x(){var a$$inline_1=x++;a$$inline_1}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FUNCTION x 1 [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n                        INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                            NAME x 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FUNCTION x 1 [source_file: code]\n        NAME x 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME a$$inline_1 1 [source_file: code]\n                        INC 1 [incrdecr: 1] [source_file: code]\n                            NAME x 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    NAME a$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    INC 1 [incrdecr: 1] [source_file: code]\n        NAME x 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline13(FunctionInjectorTest.java:866)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline14\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return a+a}var a$$inline_0=x++;a$$inline_0+a$$inline_0\nResult: function foo(a){return a+a}var a$$inline_1=x++;a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                ADD 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                    NAME x 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            ADD 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                ADD 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                INC 1 [incrdecr: 1] [source_file: code]\n                    NAME x 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            ADD 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    INC 1 [incrdecr: 1] [source_file: code]\n        NAME x 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline14(FunctionInjectorTest.java:877)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline15\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return a+a}var a$$inline_0=new Date;a$$inline_0+a$$inline_0\nResult: function foo(a){return a+a}var a$$inline_1=new Date;a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                ADD 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                NEW 1 [source_file:  [testcode] ]\n                    NAME Date 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            ADD 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                ADD 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                NEW 1 [source_file: code]\n                    NAME Date 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            ADD 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    NEW 1 [source_file:  [testcode] ]\n        NAME Date 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    NEW 1 [source_file: code]\n        NAME Date 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline15(FunctionInjectorTest.java:888)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline16\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return a+a}var a$$inline_0=function(){};a$$inline_0+a$$inline_0\nResult: function foo(a){return a+a}var a$$inline_1=function(){};a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                ADD 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                FUNCTION  1 [source_file:  [testcode] ]\n                    NAME  1 [source_file:  [testcode] ]\n                    LP 1 [source_file:  [testcode] ]\n                    BLOCK 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            ADD 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                ADD 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                FUNCTION  1 [source_file: code]\n                    NAME  1 [source_file: code]\n                    LP 1 [source_file: code]\n                    BLOCK 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            ADD 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    FUNCTION  1 [source_file:  [testcode] ]\n        NAME  1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    FUNCTION  1 [source_file: code]\n        NAME  1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline16(FunctionInjectorTest.java:899)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline17\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return true}var a$$inline_0=goo();true\nResult: function foo(a){return true}var a$$inline_1=goo();true\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                TRUE 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                    NAME goo 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            TRUE 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                TRUE 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                CALL 1 [free_call: 1] [source_file: code]\n                    NAME goo 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            TRUE 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME goo 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    CALL 1 [free_call: 1] [source_file: code]\n        NAME goo 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline17(FunctionInjectorTest.java:910)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline18\njunit.framework.AssertionFailedError:\nExpected: function foo(a){var b;return a}function x(){var a$$inline_0=goo();var b$$inline_1;a$$inline_0}\nResult: function foo(a){var b;return a}function x(){var a$$inline_2=goo();var b$$inline_3;a$$inline_2}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            VAR 1 [source_file:  [testcode] ]\n                NAME b 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FUNCTION x 1 [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n                        CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                            NAME goo 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_1 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            VAR 1 [source_file: code]\n                NAME b 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FUNCTION x 1 [source_file: code]\n        NAME x 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME a$$inline_2 1 [source_file: code]\n                        CALL 1 [free_call: 1] [source_file: code]\n                            NAME goo 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME b$$inline_3 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    NAME a$$inline_2 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME goo 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_2 1 [source_file: code]\n    CALL 1 [free_call: 1] [source_file: code]\n        NAME goo 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline18(FunctionInjectorTest.java:919)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline19\njunit.framework.AssertionFailedError:\nExpected: var x=1;var y=2;function foo(a,b){x=b;y=a}function bar(){var a$$inline_0=x;x=y;y=a$$inline_0}\nResult: var x=1;var y=2;function foo(a,b){x=b;y=a}function bar(){var a$$inline_2=x;x=y;y=a$$inline_2}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n            NUMBER 1.0 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME y 1 [source_file:  [testcode] ]\n            NUMBER 2.0 1 [source_file:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n            NAME b 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            EXPR_RESULT 1 [source_file:  [testcode] ]\n                ASSIGN 1 [source_file:  [testcode] ]\n                    NAME x 1 [source_file:  [testcode] ]\n                    NAME b 1 [source_file:  [testcode] ]\n            EXPR_RESULT 1 [source_file:  [testcode] ]\n                ASSIGN 1 [source_file:  [testcode] ]\n                    NAME y 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FUNCTION bar 1 [source_file:  [testcode] ]\n        NAME bar 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n                        NAME x 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    ASSIGN 1 [source_file:  [testcode] ]\n                        NAME x 1 [source_file:  [testcode] ]\n                        NAME y 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    ASSIGN 1 [source_file:  [testcode] ]\n                        NAME y 1 [source_file:  [testcode] ]\n                        NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    VAR 1 [source_file: code]\n        NAME x 1 [source_file: code]\n            NUMBER 1.0 1 [source_file: code]\n    VAR 1 [source_file: code]\n        NAME y 1 [source_file: code]\n            NUMBER 2.0 1 [source_file: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n            NAME b 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            EXPR_RESULT 1 [source_file: code]\n                ASSIGN 1 [source_file: code]\n                    NAME x 1 [source_file: code]\n                    NAME b 1 [source_file: code]\n            EXPR_RESULT 1 [source_file: code]\n                ASSIGN 1 [source_file: code]\n                    NAME y 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FUNCTION bar 1 [source_file: code]\n        NAME bar 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME a$$inline_2 1 [source_file: code]\n                        NAME x 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    ASSIGN 1 [source_file: code]\n                        NAME x 1 [source_file: code]\n                        NAME y 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    ASSIGN 1 [source_file: code]\n                        NAME y 1 [source_file: code]\n                        NAME a$$inline_2 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_2 1 [source_file: code]\n    NAME x 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline19(FunctionInjectorTest.java:930)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testBug1897706\njunit.framework.AssertionFailedError:\nExpected: function foo(a){}var a$$inline_0=x()\nResult: function foo(a){}var a$$inline_1=x()\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                    NAME x 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                CALL 1 [free_call: 1] [source_file: code]\n                    NAME x 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    CALL 1 [free_call: 1] [source_file: code]\n        NAME x 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testBug1897706(FunctionInjectorTest.java:1315)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInlineFunctionWithInnerFunction5\njunit.framework.AssertionFailedError:\nExpected: function foo(){function x(){var a;return true}return x}var x$$inline_0=function(){var a$$inline_1;return true};x$$inline_0\nResult: function foo(){function x(){var a;return true}return x}var x$$inline_1=function(){var a$$inline_2;return true};x$$inline_1\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            FUNCTION x 1 [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n                LP 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n                    VAR 1 [source_file:  [testcode] ]\n                        NAME a 1 [source_file:  [testcode] ]\n                    RETURN 1 [source_file:  [testcode] ]\n                        TRUE 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME x$$inline_0 1 [source_file:  [testcode] ]\n                FUNCTION  1 [source_file:  [testcode] ]\n                    NAME  1 [source_file:  [testcode] ]\n                    LP 1 [source_file:  [testcode] ]\n                    BLOCK 1 [source_file:  [testcode] ]\n                        VAR 1 [source_file:  [testcode] ]\n                            NAME a$$inline_1 1 [source_file:  [testcode] ]\n                        RETURN 1 [source_file:  [testcode] ]\n                            TRUE 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            NAME x$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            FUNCTION x 1 [source_file: code]\n                NAME x 1 [source_file: code]\n                LP 1 [source_file: code]\n                BLOCK 1 [source_file: code]\n                    VAR 1 [source_file: code]\n                        NAME a 1 [source_file: code]\n                    RETURN 1 [source_file: code]\n                        TRUE 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                NAME x 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME x$$inline_1 1 [source_file: code]\n                FUNCTION  1 [source_file: code]\n                    NAME  1 [source_file: code]\n                    LP 1 [source_file: code]\n                    BLOCK 1 [source_file: code]\n                        VAR 1 [source_file: code]\n                            NAME a$$inline_2 1 [source_file: code]\n                        RETURN 1 [source_file: code]\n                            TRUE 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            NAME x$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file:  [testcode] ]\n    FUNCTION  1 [source_file:  [testcode] ]\n        NAME  1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            VAR 1 [source_file:  [testcode] ]\n                NAME a$$inline_1 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                TRUE 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: code]\n    FUNCTION  1 [source_file: code]\n        NAME  1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            VAR 1 [source_file: code]\n                NAME a$$inline_2 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                TRUE 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInlineFunctionWithInnerFunction5(FunctionInjectorTest.java:1025)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateWithParameters3\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=x++;a$$inline_0\nResult: var a$$inline_1=x++;a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME a$$inline_0 1 [source_file:  [testcode] ]\n            INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME a$$inline_1 1 [source_file:  [testcode] ]\n            INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NAME a$$inline_1 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateWithParameters3(FunctionToBlockMutatorTest.java:112)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateCallInLoopVars1\njunit.framework.AssertionFailedError:\nExpected: var B$$inline_1=bar();1\nResult: var B$$inline_3=bar();1\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME B$$inline_1 1 [source_file:  [testcode] ]\n            CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                NAME bar 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME B$$inline_3 1 [source_file:  [testcode] ]\n            CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                NAME bar 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME B$$inline_1 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME bar 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME B$$inline_3 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME bar 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateCallInLoopVars1(FunctionToBlockMutatorTest.java:151)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateInitializeUninitializedVars1\njunit.framework.AssertionFailedError:\nExpected: var b$$inline_1=void 0;1\nResult: var b$$inline_3=void 0;1\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME b$$inline_1 1 [source_file:  [testcode] ]\n            VOID 1 [source_file:  [testcode] ]\n                NUMBER 0.0 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME b$$inline_3 1 [source_file:  [testcode] ]\n            VOID 1 [source_file:  [testcode] ]\n                NUMBER 0.0 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME b$$inline_1 1 [source_file:  [testcode] ]\n    VOID 1 [source_file:  [testcode] ]\n        NUMBER 0.0 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME b$$inline_3 1 [source_file:  [testcode] ]\n    VOID 1 [source_file:  [testcode] ]\n        NUMBER 0.0 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateInitializeUninitializedVars1(FunctionToBlockMutatorTest.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateInitializeUninitializedVars2\njunit.framework.AssertionFailedError:\nExpected: JSCompiler_inline_label_foo_2:for(var b$$inline_1 in c){1;break JSCompiler_inline_label_foo_2}\nResult: JSCompiler_inline_label_foo_4:for(var b$$inline_3 in c){1;break JSCompiler_inline_label_foo_4}\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    LABEL 1 [source_file:  [testcode] ]\n        LABEL_NAME JSCompiler_inline_label_foo_2 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            FOR 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_1 1 [source_file:  [testcode] ]\n                NAME c 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n                    EXPR_RESULT 1 [source_file:  [testcode] ]\n                        NUMBER 1.0 1 [source_file:  [testcode] ]\n                    BREAK 1 [source_file:  [testcode] ]\n                        LABEL_NAME JSCompiler_inline_label_foo_2 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    LABEL 1 [source_file:  [testcode] ]\n        LABEL_NAME JSCompiler_inline_label_foo_4 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            FOR 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_3 1 [source_file:  [testcode] ]\n                NAME c 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n                    EXPR_RESULT 1 [source_file:  [testcode] ]\n                        NUMBER 1.0 1 [source_file:  [testcode] ]\n                    BREAK 1 [source_file:  [testcode] ]\n                        LABEL_NAME JSCompiler_inline_label_foo_4 1 [source_file:  [testcode] ]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_foo_2 1 [source_file:  [testcode] ]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_foo_4 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateInitializeUninitializedVars2(FunctionToBlockMutatorTest.java:136)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateFunctionDefinition\njunit.framework.AssertionFailedError:\nExpected: var g$$inline_1=function(){}\nResult: var g$$inline_3=function(){}\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME g$$inline_1 1 [source_file:  [testcode] ]\n            FUNCTION  1 [source_file:  [testcode] ]\n                NAME  1 [source_file:  [testcode] ]\n                LP 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME g$$inline_3 1 [source_file:  [testcode] ]\n            FUNCTION  1 [source_file:  [testcode] ]\n                NAME  1 [source_file:  [testcode] ]\n                LP 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME g$$inline_1 1 [source_file:  [testcode] ]\n    FUNCTION  1 [source_file:  [testcode] ]\n        NAME  1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME g$$inline_3 1 [source_file:  [testcode] ]\n    FUNCTION  1 [source_file:  [testcode] ]\n        NAME  1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateFunctionDefinition(FunctionToBlockMutatorTest.java:167)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutate8\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=x++;a$$inline_0+a$$inline_0\nResult: var a$$inline_1=x++;a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME a$$inline_0 1 [source_file:  [testcode] ]\n            INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        ADD 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME a$$inline_1 1 [source_file:  [testcode] ]\n            INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        ADD 1 [source_file:  [testcode] ]\n            NAME a$$inline_1 1 [source_file:  [testcode] ]\n            NAME a$$inline_1 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutate8(FunctionToBlockMutatorTest.java:121)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testLoopWithFunctionWithFunction\njunit.framework.AssertionFailedError:\nExpected: function _testLocalVariableInLoop_(){var result=0;var arr$$inline_0=[1,2,3,4,5];var i$$inline_1=0;var l$$inline_2=arr$$inline_0.length;for(;i$$inline_1<l$$inline_2;i$$inline_1++){var j$$inline_3=arr$$inline_0[i$$inline_1];(function(){var k$$inline_4=j$$inline_3;setTimeout(function(){result+=k$$inline_4},5*i$$inline_1)})()}}\nResult: function _testLocalVariableInLoop_(){var result=0;var arr$$inline_4=[1,2,3,4,5];var i$$inline_5=0;var l$$inline_6=arr$$inline_4.length;for(;i$$inline_5<l$$inline_6;i$$inline_5++){var j$$inline_7=arr$$inline_4[i$$inline_5];(function(){var k$$inline_8=j$$inline_7;setTimeout(function(){result+=k$$inline_8},5*i$$inline_5)})()}}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        FUNCTION _testLocalVariableInLoop_ 1 [source_file: expected0]\n            NAME _testLocalVariableInLoop_ 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 2 [source_file: expected0]\n                    NAME result 2 [source_file: expected0]\n                        NUMBER 0.0 2 [source_file: expected0]\n                BLOCK 3 [source_file: expected0]\n                    VAR 3 [source_file: expected0]\n                        NAME arr$$inline_0 3 [source_file: expected0]\n                            ARRAYLIT 3 [source_file: expected0]\n                                NUMBER 1.0 3 [source_file: expected0]\n                                NUMBER 2.0 3 [source_file: expected0]\n                                NUMBER 3.0 3 [source_file: expected0]\n                                NUMBER 4.0 3 [source_file: expected0]\n                                NUMBER 5.0 3 [source_file: expected0]\n                    VAR 4 [source_file: expected0]\n                        NAME i$$inline_1 4 [source_file: expected0]\n                            NUMBER 0.0 4 [source_file: expected0]\n                    VAR 5 [source_file: expected0]\n                        NAME l$$inline_2 5 [source_file: expected0]\n                            GETPROP 5 [source_file: expected0]\n                                NAME arr$$inline_0 5 [source_file: expected0]\n                                STRING length 5 [source_file: expected0]\n                    FOR 6 [source_file: expected0]\n                        EMPTY 6 [source_file: expected0]\n                        LT 6 [source_file: expected0]\n                            NAME i$$inline_1 6 [source_file: expected0]\n                            NAME l$$inline_2 6 [source_file: expected0]\n                        INC 6 [incrdecr: 1] [source_file: expected0]\n                            NAME i$$inline_1 6 [source_file: expected0]\n                        BLOCK 6 [source_file: expected0]\n                            VAR 7 [source_file: expected0]\n                                NAME j$$inline_3 7 [source_file: expected0]\n                                    GETELEM 7 [source_file: expected0]\n                                        NAME arr$$inline_0 7 [source_file: expected0]\n                                        NAME i$$inline_1 7 [source_file: expected0]\n                            EXPR_RESULT 8 [source_file: expected0]\n                                CALL 11 [free_call: 1] [source_file: expected0]\n                                    FUNCTION  8 [parenthesized: true] [source_file: expected0]\n                                        NAME  8 [source_file: expected0]\n                                        LP 8 [source_file: expected0]\n                                        BLOCK 8 [source_file: expected0]\n                                            VAR 9 [source_file: expected0]\n                                                NAME k$$inline_4 9 [source_file: expected0]\n                                                    NAME j$$inline_3 9 [source_file: expected0]\n                                            EXPR_RESULT 10 [source_file: expected0]\n                                                CALL 10 [free_call: 1] [source_file: expected0]\n                                                    NAME setTimeout 10 [source_file: expected0]\n                                                    FUNCTION  10 [source_file: expected0]\n                                                        NAME  10 [source_file: expected0]\n                                                        LP 10 [source_file: expected0]\n                                                        BLOCK 10 [source_file: expected0]\n                                                            EXPR_RESULT 10 [source_file: expected0]\n                                                                ASSIGN_ADD 10 [source_file: expected0]\n                                                                    NAME result 10 [source_file: expected0]\n                                                                    NAME k$$inline_4 10 [source_file: expected0]\n                                                    MUL 10 [source_file: expected0]\n                                                        NUMBER 5.0 10 [source_file: expected0]\n                                                        NAME i$$inline_1 10 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        FUNCTION _testLocalVariableInLoop_ 1 [source_file: testcode]\n            NAME _testLocalVariableInLoop_ 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 2 [source_file: testcode]\n                    NAME result 2 [source_file: testcode]\n                        NUMBER 0.0 2 [source_file: testcode]\n                BLOCK 3 [source_file: testcode]\n                    VAR 4 [source_file: testcode]\n                        NAME arr$$inline_4 4 [source_file: testcode]\n                            ARRAYLIT 4 [source_file: testcode]\n                                NUMBER 1.0 4 [source_file: testcode]\n                                NUMBER 2.0 4 [source_file: testcode]\n                                NUMBER 3.0 4 [source_file: testcode]\n                                NUMBER 4.0 4 [source_file: testcode]\n                                NUMBER 5.0 4 [source_file: testcode]\n                    VAR 3\n                        NAME i$$inline_5 5 [source_file: testcode]\n                            NUMBER 0.0 5 [source_file: testcode]\n                    VAR 5 [source_file: testcode]\n                        NAME l$$inline_6 5 [source_file: testcode]\n                            GETPROP 5 [source_file: testcode]\n                                NAME arr$$inline_4 5 [source_file: testcode]\n                                STRING length 5 [source_file: testcode]\n                    FOR 5 [source_file: testcode]\n                        EMPTY 5 [source_file: testcode]\n                        LT 5 [source_file: testcode]\n                            NAME i$$inline_5 5 [source_file: testcode]\n                            NAME l$$inline_6 5 [source_file: testcode]\n                        INC 5 [incrdecr: 1] [source_file: testcode]\n                            NAME i$$inline_5 5 [source_file: testcode]\n                        BLOCK 5 [source_file: testcode]\n                            VAR 6 [source_file: testcode]\n                                NAME j$$inline_7 6 [source_file: testcode]\n                                    GETELEM 6 [source_file: testcode]\n                                        NAME arr$$inline_4 6 [source_file: testcode]\n                                        NAME i$$inline_5 6 [source_file: testcode]\n                            EXPR_RESULT 7 [source_file: testcode]\n                                CALL 10 [free_call: 1] [source_file: testcode]\n                                    FUNCTION  7 [parenthesized: true] [source_file: testcode]\n                                        NAME  7 [source_file: testcode]\n                                        LP 7 [source_file: testcode]\n                                        BLOCK 7 [source_file: testcode]\n                                            VAR 8 [source_file: testcode]\n                                                NAME k$$inline_8 8 [source_file: testcode]\n                                                    NAME j$$inline_7 8 [source_file: testcode]\n                                            EXPR_RESULT 9 [source_file: testcode]\n                                                CALL 9 [free_call: 1] [source_file: testcode]\n                                                    NAME setTimeout 9 [source_file: testcode]\n                                                    FUNCTION  9 [source_file: testcode]\n                                                        NAME  9 [source_file: testcode]\n                                                        LP 9 [source_file: testcode]\n                                                        BLOCK 9 [source_file: testcode]\n                                                            EXPR_RESULT 9 [source_file: testcode]\n                                                                ASSIGN_ADD 9 [source_file: testcode]\n                                                                    NAME result 9 [source_file: testcode]\n                                                                    NAME k$$inline_8 9 [source_file: testcode]\n                                                    MUL 9 [source_file: testcode]\n                                                        NUMBER 5.0 9 [source_file: testcode]\n                                                        NAME i$$inline_5 9 [source_file: testcode]\n\n\nSubtree1: NAME arr$$inline_0 3 [source_file: expected0]\n    ARRAYLIT 3 [source_file: expected0]\n        NUMBER 1.0 3 [source_file: expected0]\n        NUMBER 2.0 3 [source_file: expected0]\n        NUMBER 3.0 3 [source_file: expected0]\n        NUMBER 4.0 3 [source_file: expected0]\n        NUMBER 5.0 3 [source_file: expected0]\n\n\nSubtree2: NAME arr$$inline_4 4 [source_file: testcode]\n    ARRAYLIT 4 [source_file: testcode]\n        NUMBER 1.0 4 [source_file: testcode]\n        NUMBER 2.0 4 [source_file: testcode]\n        NUMBER 3.0 4 [source_file: testcode]\n        NUMBER 4.0 4 [source_file: testcode]\n        NUMBER 5.0 4 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testLoopWithFunctionWithFunction(InlineFunctionsTest.java:2201)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables16\njunit.framework.AssertionFailedError:\nExpected: var a=3;var a$$inline_0=5;a\nResult: var a=3;var a$$inline_1=5;a\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 3.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 5.0 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    NAME a 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 3.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 5.0 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    NAME a 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 5.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 5.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables16(InlineFunctionsTest.java:845)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables18\njunit.framework.AssertionFailedError:\nExpected: var a=0;function _goo(){var a$$2=2;var x;var a$$inline_0=3;x=a+a}\nResult: var a=0;function _goo(){var a$$2=2;var x;var a$$inline_1=3;x=a+a}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 0.0 1 [source_file: expected0]\n        FUNCTION _goo 1 [source_file: expected0]\n            NAME _goo 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME a$$2 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME x 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                            NUMBER 3.0 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME x 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NAME a 1 [source_file: expected0]\n                                NAME a 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 0.0 1 [source_file: testcode]\n        FUNCTION _goo 1 [source_file: testcode]\n            NAME _goo 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME a$$2 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME x 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                            NUMBER 3.0 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME x 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                NAME a 1 [source_file: testcode]\n                                NAME a 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 3.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 3.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables18(InlineFunctionsTest.java:874)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testCostBasedInlining11\njunit.framework.AssertionFailedError:\nExpected: var a;var a$$inline_0=1+1;a=a$$inline_0+a$$inline_0\nResult: var a;var a$$inline_1=1+1;a=a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME a 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME a 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    ADD 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    ADD 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testCostBasedInlining11(InlineFunctionsTest.java:996)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testMixedModeInliningCosting3\njunit.framework.AssertionFailedError:\nExpected: 1+2+1+2+4+5+6+7+8+9+1+2+3+10;var JSCompiler_inline_anon_param_2=x();2+3+2+3+4+5+6+7+8+9+1+2+3+10\nResult: 1+2+1+2+4+5+6+7+8+9+1+2+3+10;var JSCompiler_inline_anon_param_4=x();2+3+2+3+4+5+6+7+8+9+1+2+3+10\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ADD 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                ADD 1 [source_file: expected0]\n                                    ADD 1 [source_file: expected0]\n                                        ADD 1 [source_file: expected0]\n                                            ADD 1 [source_file: expected0]\n                                                ADD 1 [source_file: expected0]\n                                                    ADD 1 [source_file: expected0]\n                                                        ADD 1 [source_file: expected0]\n                                                            ADD 1 [source_file: expected0]\n                                                                NUMBER 1.0 1 [source_file: expected0]\n                                                                NUMBER 2.0 1 [source_file: expected0]\n                                                            NUMBER 1.0 1 [source_file: expected0]\n                                                        NUMBER 2.0 1 [source_file: expected0]\n                                                    NUMBER 4.0 1 [source_file: expected0]\n                                                NUMBER 5.0 1 [source_file: expected0]\n                                            NUMBER 6.0 1 [source_file: expected0]\n                                        NUMBER 7.0 1 [source_file: expected0]\n                                    NUMBER 8.0 1 [source_file: expected0]\n                                NUMBER 9.0 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 3.0 1 [source_file: expected0]\n                NUMBER 10.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME JSCompiler_inline_anon_param_2 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME x 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                ADD 1 [source_file: expected0]\n                                    ADD 1 [source_file: expected0]\n                                        ADD 1 [source_file: expected0]\n                                            ADD 1 [source_file: expected0]\n                                                ADD 1 [source_file: expected0]\n                                                    ADD 1 [source_file: expected0]\n                                                        ADD 1 [source_file: expected0]\n                                                            ADD 1 [source_file: expected0]\n                                                                ADD 1 [source_file: expected0]\n                                                                    NUMBER 2.0 1 [source_file: expected0]\n                                                                    NUMBER 3.0 1 [source_file: expected0]\n                                                                NUMBER 2.0 1 [source_file: expected0]\n                                                            NUMBER 3.0 1 [source_file: expected0]\n                                                        NUMBER 4.0 1 [source_file: expected0]\n                                                    NUMBER 5.0 1 [source_file: expected0]\n                                                NUMBER 6.0 1 [source_file: expected0]\n                                            NUMBER 7.0 1 [source_file: expected0]\n                                        NUMBER 8.0 1 [source_file: expected0]\n                                    NUMBER 9.0 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n                        NUMBER 3.0 1 [source_file: expected0]\n                    NUMBER 10.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            ADD 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                ADD 1 [source_file: testcode]\n                                    ADD 1 [source_file: testcode]\n                                        ADD 1 [source_file: testcode]\n                                            ADD 1 [source_file: testcode]\n                                                ADD 1 [source_file: testcode]\n                                                    ADD 1 [source_file: testcode]\n                                                        ADD 1 [source_file: testcode]\n                                                            ADD 1 [source_file: testcode]\n                                                                NUMBER 1.0 1 [source_file: testcode]\n                                                                NUMBER 2.0 1 [source_file: testcode]\n                                                            NUMBER 1.0 1 [source_file: testcode]\n                                                        NUMBER 2.0 1 [source_file: testcode]\n                                                    NUMBER 4.0 1 [source_file: testcode]\n                                                NUMBER 5.0 1 [source_file: testcode]\n                                            NUMBER 6.0 1 [source_file: testcode]\n                                        NUMBER 7.0 1 [source_file: testcode]\n                                    NUMBER 8.0 1 [source_file: testcode]\n                                NUMBER 9.0 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                    NUMBER 3.0 1 [source_file: testcode]\n                NUMBER 10.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME JSCompiler_inline_anon_param_4 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME x 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                ADD 1 [source_file: testcode]\n                                    ADD 1 [source_file: testcode]\n                                        ADD 1 [source_file: testcode]\n                                            ADD 1 [source_file: testcode]\n                                                ADD 1 [source_file: testcode]\n                                                    ADD 1 [source_file: testcode]\n                                                        ADD 1 [source_file: testcode]\n                                                            ADD 1 [source_file: testcode]\n                                                                ADD 1 [source_file: testcode]\n                                                                    NUMBER 2.0 1 [source_file: testcode]\n                                                                    NUMBER 3.0 1 [source_file: testcode]\n                                                                NUMBER 2.0 1 [source_file: testcode]\n                                                            NUMBER 3.0 1 [source_file: testcode]\n                                                        NUMBER 4.0 1 [source_file: testcode]\n                                                    NUMBER 5.0 1 [source_file: testcode]\n                                                NUMBER 6.0 1 [source_file: testcode]\n                                            NUMBER 7.0 1 [source_file: testcode]\n                                        NUMBER 8.0 1 [source_file: testcode]\n                                    NUMBER 9.0 1 [source_file: testcode]\n                                NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n                        NUMBER 3.0 1 [source_file: testcode]\n                    NUMBER 10.0 1 [source_file: testcode]\n\n\nSubtree1: NAME JSCompiler_inline_anon_param_2 1 [source_file: expected0]\n    CALL 1 [free_call: 1] [source_file: expected0]\n        NAME x 1 [source_file: expected0]\n\n\nSubtree2: NAME JSCompiler_inline_anon_param_4 1 [source_file: testcode]\n    CALL 1 [free_call: 1] [source_file: testcode]\n        NAME x 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testMixedModeInliningCosting3(InlineFunctionsTest.java:529)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineNeverMutateConstants\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=undefined;x$$inline_0=1\nResult: var x$$inline_1=undefined;x$$inline_1=1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NAME undefined 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NAME undefined 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NAME undefined 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NAME undefined 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineNeverMutateConstants(InlineFunctionsTest.java:617)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineWithThis7\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=void 0;a$$inline_0=1;void 0\nResult: var a$$inline_1=void 0;a$$inline_1=1;void 0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    VOID 1 [source_file: expected0]\n                        NUMBER 0.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                VOID 1 [source_file: expected0]\n                    NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    VOID 1 [source_file: testcode]\n                        NUMBER 0.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                VOID 1 [source_file: testcode]\n                    NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    VOID 1 [source_file: expected0]\n        NUMBER 0.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    VOID 1 [source_file: testcode]\n        NUMBER 0.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineWithThis7(InlineFunctionsTest.java:1895)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testAnonymous1\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=10;var b$$inline_1=a$$inline_0;a$$inline_0++;alert(b$$inline_1)\nResult: var a$$inline_2=10;var b$$inline_3=a$$inline_2;a$$inline_2++;alert(b$$inline_3)\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 10.0 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME b$$inline_1 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME alert 1 [source_file: expected0]\n                        NAME b$$inline_1 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_2 1 [source_file: testcode]\n                    NUMBER 10.0 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME b$$inline_3 1 [source_file: testcode]\n                        NAME a$$inline_2 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME a$$inline_2 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME alert 1 [source_file: testcode]\n                        NAME b$$inline_3 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 10.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_2 1 [source_file: testcode]\n    NUMBER 10.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testAnonymous1(InlineFunctionsTest.java:2169)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testAnonymous3\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=10;(function(){arguments})()\nResult: var a$$inline_1=10;(function(){arguments})()\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 10.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    FUNCTION  1 [parenthesized: true] [source_file: expected0]\n                        NAME  1 [source_file: expected0]\n                        LP 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                NAME arguments 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 10.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    FUNCTION  1 [parenthesized: true] [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                NAME arguments 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 10.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 10.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testAnonymous3(InlineFunctionsTest.java:2191)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables1\njunit.framework.AssertionFailedError:\nExpected: var a=0;var a$$inline_0=3+4\nResult: var a=0;var a$$inline_1=3+4\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 0.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        NUMBER 3.0 1 [source_file: expected0]\n                        NUMBER 4.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 0.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        NUMBER 3.0 1 [source_file: testcode]\n                        NUMBER 4.0 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    ADD 1 [source_file: expected0]\n        NUMBER 3.0 1 [source_file: expected0]\n        NUMBER 4.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    ADD 1 [source_file: testcode]\n        NUMBER 3.0 1 [source_file: testcode]\n        NUMBER 4.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables1(InlineFunctionsTest.java:682)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables3\njunit.framework.AssertionFailedError:\nExpected: var a=0;function _bar(){var a$$inline_0=2;a=3+a$$inline_0}\nResult: var a=0;function _bar(){var a$$inline_1=2;a=3+a$$inline_1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 0.0 1 [source_file: expected0]\n        FUNCTION _bar 1 [source_file: expected0]\n            NAME _bar 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME a 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NUMBER 3.0 1 [source_file: expected0]\n                                NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 0.0 1 [source_file: testcode]\n        FUNCTION _bar 1 [source_file: testcode]\n            NAME _bar 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME a 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                NUMBER 3.0 1 [source_file: testcode]\n                                NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables3(InlineFunctionsTest.java:706)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables6\njunit.framework.AssertionFailedError:\nExpected: var a=0;function _bar(a$$2){var a$$inline_0=4;a$$2=3+a$$inline_0}\nResult: var a=0;function _bar(a$$2){var a$$inline_1=4;a$$2=3+a$$inline_1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 0.0 1 [source_file: expected0]\n        FUNCTION _bar 1 [source_file: expected0]\n            NAME _bar 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n                NAME a$$2 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                            NUMBER 4.0 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME a$$2 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NUMBER 3.0 1 [source_file: expected0]\n                                NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 0.0 1 [source_file: testcode]\n        FUNCTION _bar 1 [source_file: testcode]\n            NAME _bar 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n                NAME a$$2 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                            NUMBER 4.0 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME a$$2 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                NUMBER 3.0 1 [source_file: testcode]\n                                NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 4.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 4.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables6(InlineFunctionsTest.java:737)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables7\njunit.framework.AssertionFailedError:\nExpected: var a=3;var a$$inline_0=5;a\nResult: var a=3;var a$$inline_1=5;a\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 3.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 5.0 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    NAME a 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 3.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 5.0 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    NAME a 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 5.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 5.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables7(InlineFunctionsTest.java:748)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testFunctionExpressionCallInlining11b\njunit.framework.AssertionFailedError:\nExpected: var JSCompiler_inline_result$$0;var a$$inline_1;JSCompiler_inline_result$$0=function(){foo()};JSCompiler_inline_result$$0()\nResult: var JSCompiler_inline_result$$0;var a$$inline_2;JSCompiler_inline_result$$0=function(){foo()};JSCompiler_inline_result$$0()\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_1 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n                    FUNCTION  1 [source_file: expected0]\n                        NAME  1 [source_file: expected0]\n                        LP 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                CALL 1 [free_call: 1] [source_file: expected0]\n                                    NAME foo 1 [source_file: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            CALL 1 [free_call: 1] [source_file: expected0]\n                NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME JSCompiler_inline_result$$0 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_2 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$0 1 [source_file: testcode]\n                    FUNCTION  1 [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                CALL 1 [free_call: 1] [source_file: testcode]\n                                    NAME foo 1 [source_file: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            CALL 1 [free_call: 1] [source_file: testcode]\n                NAME JSCompiler_inline_result$$0 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_1 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_2 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testFunctionExpressionCallInlining11b(InlineFunctionsTest.java:1682)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexInlineNoResultNoParamCall3\njunit.framework.AssertionFailedError:\nExpected: function _foo(){a();b();var z$$inline_0=1+1}\nResult: function _foo(){a();b();var z$$inline_1=1+1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        FUNCTION _foo 1 [source_file: expected0]\n            NAME _foo 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME a 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME b 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME z$$inline_0 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        FUNCTION _foo 1 [source_file: testcode]\n            NAME _foo 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        CALL 1 [free_call: 1] [source_file: testcode]\n                            NAME a 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        CALL 1 [free_call: 1] [source_file: testcode]\n                            NAME b 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME z$$inline_1 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                NUMBER 1.0 1 [source_file: testcode]\n                                NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME z$$inline_0 1 [source_file: expected0]\n    ADD 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME z$$inline_1 1 [source_file: testcode]\n    ADD 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexInlineNoResultNoParamCall3(InlineFunctionsTest.java:1212)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testCostBasedInlining9\njunit.framework.AssertionFailedError:\nExpected: var a;var a$$inline_0=1+1+1;a=1+a$$inline_0+a$$inline_0\nResult: var a;var a$$inline_1=1+1+1;a=1+a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME a 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NAME a$$inline_0 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME a 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NAME a$$inline_1 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    ADD 1 [source_file: expected0]\n        ADD 1 [source_file: expected0]\n            NUMBER 1.0 1 [source_file: expected0]\n            NUMBER 1.0 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    ADD 1 [source_file: testcode]\n        ADD 1 [source_file: testcode]\n            NUMBER 1.0 1 [source_file: testcode]\n            NUMBER 1.0 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testCostBasedInlining9(InlineFunctionsTest.java:977)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testMethodWithFunctionWithFunction\njunit.framework.AssertionFailedError:\nExpected: function _testLocalVariable_(){var result=0;var j$$inline_2=[i];var j$$inline_0=j$$inline_2;setTimeout(function(){result+=j$$inline_0},5*i);j$$inline_2=null}\nResult: function _testLocalVariable_(){var result=0;var j$$inline_4=[i];var j$$inline_1=j$$inline_4;setTimeout(function(){result+=j$$inline_1},5*i);j$$inline_4=null}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        FUNCTION _testLocalVariable_ 1 [source_file: expected0]\n            NAME _testLocalVariable_ 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 2 [source_file: expected0]\n                    NAME result 2 [source_file: expected0]\n                        NUMBER 0.0 2 [source_file: expected0]\n                BLOCK 3 [source_file: expected0]\n                    VAR 4 [source_file: expected0]\n                        NAME j$$inline_2 4 [source_file: expected0]\n                            ARRAYLIT 4 [source_file: expected0]\n                                NAME i 4 [source_file: expected0]\n                    BLOCK 5 [source_file: expected0]\n                        VAR 6 [source_file: expected0]\n                            NAME j$$inline_0 6 [source_file: expected0]\n                                NAME j$$inline_2 6 [source_file: expected0]\n                        EXPR_RESULT 7 [source_file: expected0]\n                            CALL 7 [free_call: 1] [source_file: expected0]\n                                NAME setTimeout 7 [source_file: expected0]\n                                FUNCTION  7 [source_file: expected0]\n                                    NAME  7 [source_file: expected0]\n                                    LP 7 [source_file: expected0]\n                                    BLOCK 7 [source_file: expected0]\n                                        EXPR_RESULT 7 [source_file: expected0]\n                                            ASSIGN_ADD 7 [source_file: expected0]\n                                                NAME result 7 [source_file: expected0]\n                                                NAME j$$inline_0 7 [source_file: expected0]\n                                MUL 7 [source_file: expected0]\n                                    NUMBER 5.0 7 [source_file: expected0]\n                                    NAME i 7 [source_file: expected0]\n                    EXPR_RESULT 9 [source_file: expected0]\n                        ASSIGN 9 [source_file: expected0]\n                            NAME j$$inline_2 9 [source_file: expected0]\n                            NULL 9 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        FUNCTION _testLocalVariable_ 1 [source_file: testcode]\n            NAME _testLocalVariable_ 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 2 [source_file: testcode]\n                    NAME result 2 [source_file: testcode]\n                        NUMBER 0.0 2 [source_file: testcode]\n                BLOCK 3 [source_file: testcode]\n                    VAR 4 [source_file: testcode]\n                        NAME j$$inline_4 4 [source_file: testcode]\n                            ARRAYLIT 4 [source_file: testcode]\n                                NAME i 4 [source_file: testcode]\n                    BLOCK 5 [source_file: testcode]\n                        VAR 7 [source_file: testcode]\n                            NAME j$$inline_1 7 [source_file: testcode]\n                                NAME j$$inline_4 7 [source_file: testcode]\n                        EXPR_RESULT 6 [source_file: testcode]\n                            CALL 6 [free_call: 1] [source_file: testcode]\n                                NAME setTimeout 6 [source_file: testcode]\n                                FUNCTION  6 [source_file: testcode]\n                                    NAME  6 [source_file: testcode]\n                                    LP 6 [source_file: testcode]\n                                    BLOCK 6 [source_file: testcode]\n                                        EXPR_RESULT 6 [source_file: testcode]\n                                            ASSIGN_ADD 6 [source_file: testcode]\n                                                NAME result 6 [source_file: testcode]\n                                                NAME j$$inline_1 6 [source_file: testcode]\n                                MUL 6 [source_file: testcode]\n                                    NUMBER 5.0 6 [source_file: testcode]\n                                    NAME i 6 [source_file: testcode]\n                    EXPR_RESULT 8 [source_file: testcode]\n                        ASSIGN 8 [source_file: testcode]\n                            NAME j$$inline_4 8 [source_file: testcode]\n                            NULL 8 [source_file: testcode]\n\n\nSubtree1: NAME j$$inline_2 4 [source_file: expected0]\n    ARRAYLIT 4 [source_file: expected0]\n        NAME i 4 [source_file: expected0]\n\n\nSubtree2: NAME j$$inline_4 4 [source_file: testcode]\n    ARRAYLIT 4 [source_file: testcode]\n        NAME i 4 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testMethodWithFunctionWithFunction(InlineFunctionsTest.java:2236)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testFunctionExpressionYCombinator\njunit.framework.AssertionFailedError:\nExpected: var factorial;var M$$inline_4=function(f$$2){return function(n){if(n===0)return 1;else return n*f$$2(n-1)}};var f$$inline_0=function(f$$inline_7){return M$$inline_4(function(arg$$inline_8){return f$$inline_7(f$$inline_7)(arg$$inline_8)})};factorial=M$$inline_4(function(arg$$inline_1){return f$$inline_0(f$$inline_0)(arg$$inline_1)});factorial(5)\nResult: var factorial;var M$$inline_6=function(f$$2){return function(n){if(n===0)return 1;else return n*f$$2(n-1)}};var f$$inline_1=function(f$$inline_9){return M$$inline_6(function(arg$$inline_10){return f$$inline_9(f$$inline_9)(arg$$inline_10)})};factorial=M$$inline_6(function(arg$$inline_2){return f$$inline_1(f$$inline_1)(arg$$inline_2)});factorial(5)\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME factorial 1 [source_file: expected0]\n        BLOCK 2 [source_file: expected0]\n            VAR 3 [source_file: expected0]\n                NAME M$$inline_4 3 [source_file: expected0]\n                    FUNCTION  3 [source_file: expected0]\n                        NAME  3 [source_file: expected0]\n                        LP 3 [source_file: expected0]\n                            NAME f$$2 3 [source_file: expected0]\n                        BLOCK 3 [source_file: expected0]\n                            RETURN 4 [source_file: expected0]\n                                FUNCTION  4 [source_file: expected0]\n                                    NAME  4 [source_file: expected0]\n                                    LP 4 [source_file: expected0]\n                                        NAME n 4 [source_file: expected0]\n                                    BLOCK 4 [source_file: expected0]\n                                        IF 4 [source_file: expected0]\n                                            SHEQ 4 [source_file: expected0]\n                                                NAME n 4 [source_file: expected0]\n                                                NUMBER 0.0 4 [source_file: expected0]\n                                            BLOCK 4 [source_file: expected0]\n                                                RETURN 4 [source_file: expected0]\n                                                    NUMBER 1.0 4 [source_file: expected0]\n                                            BLOCK 4 [source_file: expected0]\n                                                RETURN 4 [source_file: expected0]\n                                                    MUL 4 [source_file: expected0]\n                                                        NAME n 4 [source_file: expected0]\n                                                        CALL 4 [free_call: 1] [source_file: expected0]\n                                                            NAME f$$2 4 [source_file: expected0]\n                                                            SUB 4 [source_file: expected0]\n                                                                NAME n 4 [source_file: expected0]\n                                                                NUMBER 1.0 4 [source_file: expected0]\n            BLOCK 6 [source_file: expected0]\n                VAR 7 [source_file: expected0]\n                    NAME f$$inline_0 7 [source_file: expected0]\n                        FUNCTION  7 [source_file: expected0]\n                            NAME  7 [source_file: expected0]\n                            LP 7 [source_file: expected0]\n                                NAME f$$inline_7 7 [source_file: expected0]\n                            BLOCK 7 [source_file: expected0]\n                                RETURN 8 [source_file: expected0]\n                                    CALL 8 [free_call: 1] [source_file: expected0]\n                                        NAME M$$inline_4 8 [source_file: expected0]\n                                        FUNCTION  9 [source_file: expected0]\n                                            NAME  9 [source_file: expected0]\n                                            LP 9 [source_file: expected0]\n                                                NAME arg$$inline_8 9 [source_file: expected0]\n                                            BLOCK 9 [source_file: expected0]\n                                                RETURN 10 [source_file: expected0]\n                                                    CALL 10 [free_call: 1] [source_file: expected0]\n                                                        CALL 10 [free_call: 1] [source_file: expected0]\n                                                            NAME f$$inline_7 10 [source_file: expected0]\n                                                            NAME f$$inline_7 10 [source_file: expected0]\n                                                        NAME arg$$inline_8 10 [source_file: expected0]\n                EXPR_RESULT 13 [source_file: expected0]\n                    ASSIGN 13 [source_file: expected0]\n                        NAME factorial 13 [source_file: expected0]\n                        CALL 13 [free_call: 1] [source_file: expected0]\n                            NAME M$$inline_4 13 [source_file: expected0]\n                            FUNCTION  14 [source_file: expected0]\n                                NAME  14 [source_file: expected0]\n                                LP 14 [source_file: expected0]\n                                    NAME arg$$inline_1 14 [source_file: expected0]\n                                BLOCK 14 [source_file: expected0]\n                                    RETURN 15 [source_file: expected0]\n                                        CALL 15 [free_call: 1] [source_file: expected0]\n                                            CALL 15 [free_call: 1] [source_file: expected0]\n                                                NAME f$$inline_0 15 [source_file: expected0]\n                                                NAME f$$inline_0 15 [source_file: expected0]\n                                            NAME arg$$inline_1 15 [source_file: expected0]\n        EXPR_RESULT 18 [source_file: expected0]\n            CALL 18 [free_call: 1] [source_file: expected0]\n                NAME factorial 18 [source_file: expected0]\n                NUMBER 5.0 18 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME factorial 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 13 [source_file: testcode]\n                NAME M$$inline_6 13 [source_file: testcode]\n                    FUNCTION  13 [source_file: testcode]\n                        NAME  13 [source_file: testcode]\n                        LP 13 [source_file: testcode]\n                            NAME f$$2 13 [source_file: testcode]\n                        BLOCK 13 [source_file: testcode]\n                            RETURN 14 [source_file: testcode]\n                                FUNCTION  14 [source_file: testcode]\n                                    NAME  14 [source_file: testcode]\n                                    LP 14 [source_file: testcode]\n                                        NAME n 14 [source_file: testcode]\n                                    BLOCK 14 [source_file: testcode]\n                                        IF 15 [source_file: testcode]\n                                            SHEQ 15 [source_file: testcode]\n                                                NAME n 15 [source_file: testcode]\n                                                NUMBER 0.0 15 [source_file: testcode]\n                                            BLOCK 16 [source_file: testcode]\n                                                RETURN 16 [source_file: testcode]\n                                                    NUMBER 1.0 16 [source_file: testcode]\n                                            BLOCK 18 [source_file: testcode]\n                                                RETURN 18 [source_file: testcode]\n                                                    MUL 18 [source_file: testcode]\n                                                        NAME n 18 [source_file: testcode]\n                                                        CALL 18 [free_call: 1] [source_file: testcode]\n                                                            NAME f$$2 18 [source_file: testcode]\n                                                            SUB 18 [source_file: testcode]\n                                                                NAME n 18 [source_file: testcode]\n                                                                NUMBER 1.0 18 [source_file: testcode]\n            BLOCK 2 [source_file: testcode]\n                VAR 7 [source_file: testcode]\n                    NAME f$$inline_1 7 [source_file: testcode]\n                        FUNCTION  7 [source_file: testcode]\n                            NAME  7 [source_file: testcode]\n                            LP 7 [source_file: testcode]\n                                NAME f$$inline_9 7 [source_file: testcode]\n                            BLOCK 7 [source_file: testcode]\n                                RETURN 8 [source_file: testcode]\n                                    CALL 8 [free_call: 1] [source_file: testcode]\n                                        NAME M$$inline_6 8 [source_file: testcode]\n                                        FUNCTION  8 [source_file: testcode]\n                                            NAME  8 [source_file: testcode]\n                                            LP 8 [source_file: testcode]\n                                                NAME arg$$inline_10 8 [source_file: testcode]\n                                            BLOCK 8 [source_file: testcode]\n                                                RETURN 9 [source_file: testcode]\n                                                    CALL 9 [free_call: 1] [source_file: testcode]\n                                                        CALL 9 [parenthesized: true] [free_call: 1] [source_file: testcode]\n                                                            NAME f$$inline_9 9 [source_file: testcode]\n                                                            NAME f$$inline_9 9 [source_file: testcode]\n                                                        NAME arg$$inline_10 9 [source_file: testcode]\n                EXPR_RESULT 3 [source_file: testcode]\n                    ASSIGN 3 [source_file: testcode]\n                        NAME factorial 3 [source_file: testcode]\n                        CALL 3 [free_call: 1] [source_file: testcode]\n                            NAME M$$inline_6 3 [source_file: testcode]\n                            FUNCTION  3 [source_file: testcode]\n                                NAME  3 [source_file: testcode]\n                                LP 3 [source_file: testcode]\n                                    NAME arg$$inline_2 3 [source_file: testcode]\n                                BLOCK 3 [source_file: testcode]\n                                    RETURN 4 [source_file: testcode]\n                                        CALL 4 [free_call: 1] [source_file: testcode]\n                                            CALL 4 [parenthesized: true] [free_call: 1] [source_file: testcode]\n                                                NAME f$$inline_1 4 [source_file: testcode]\n                                                NAME f$$inline_1 4 [source_file: testcode]\n                                            NAME arg$$inline_2 4 [source_file: testcode]\n        EXPR_RESULT 22 [source_file: testcode]\n            CALL 22 [free_call: 1] [source_file: testcode]\n                NAME factorial 22 [source_file: testcode]\n                NUMBER 5.0 22 [source_file: testcode]\n\n\nSubtree1: NAME M$$inline_4 3 [source_file: expected0]\n    FUNCTION  3 [source_file: expected0]\n        NAME  3 [source_file: expected0]\n        LP 3 [source_file: expected0]\n            NAME f$$2 3 [source_file: expected0]\n        BLOCK 3 [source_file: expected0]\n            RETURN 4 [source_file: expected0]\n                FUNCTION  4 [source_file: expected0]\n                    NAME  4 [source_file: expected0]\n                    LP 4 [source_file: expected0]\n                        NAME n 4 [source_file: expected0]\n                    BLOCK 4 [source_file: expected0]\n                        IF 4 [source_file: expected0]\n                            SHEQ 4 [source_file: expected0]\n                                NAME n 4 [source_file: expected0]\n                                NUMBER 0.0 4 [source_file: expected0]\n                            BLOCK 4 [source_file: expected0]\n                                RETURN 4 [source_file: expected0]\n                                    NUMBER 1.0 4 [source_file: expected0]\n                            BLOCK 4 [source_file: expected0]\n                                RETURN 4 [source_file: expected0]\n                                    MUL 4 [source_file: expected0]\n                                        NAME n 4 [source_file: expected0]\n                                        CALL 4 [free_call: 1] [source_file: expected0]\n                                            NAME f$$2 4 [source_file: expected0]\n                                            SUB 4 [source_file: expected0]\n                                                NAME n 4 [source_file: expected0]\n                                                NUMBER 1.0 4 [source_file: expected0]\n\n\nSubtree2: NAME M$$inline_6 13 [source_file: testcode]\n    FUNCTION  13 [source_file: testcode]\n        NAME  13 [source_file: testcode]\n        LP 13 [source_file: testcode]\n            NAME f$$2 13 [source_file: testcode]\n        BLOCK 13 [source_file: testcode]\n            RETURN 14 [source_file: testcode]\n                FUNCTION  14 [source_file: testcode]\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexInlineVars7\njunit.framework.AssertionFailedError:\nExpected: var b=1;var z;JSCompiler_inline_label_f_2:{if(1){z=b();break JSCompiler_inline_label_f_2}else{z=true;break JSCompiler_inline_label_f_2}z=void 0}\nResult: var b=1;var z;JSCompiler_inline_label_f_4:{if(1){z=b();break JSCompiler_inline_label_f_4}else{z=true;break JSCompiler_inline_label_f_4}z=void 0}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME b 1 [source_file: expected0]\n                NUMBER 1.0 1 [source_file: expected0]\n        VAR 1 [source_file: expected0]\n            NAME z 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            LABEL 1 [source_file: expected0]\n                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME z 1 [source_file: expected0]\n                                    CALL 1 [free_call: 1] [source_file: expected0]\n                                        NAME b 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME z 1 [source_file: expected0]\n                                    TRUE 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME z 1 [source_file: expected0]\n                            VOID 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME b 1 [source_file: testcode]\n                NUMBER 1.0 1 [source_file: testcode]\n        VAR 1 [source_file: testcode]\n            NAME z 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            LABEL 1 [source_file: testcode]\n                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    IF 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME z 1 [source_file: testcode]\n                                    CALL 1 [free_call: 1] [source_file: testcode]\n                                        NAME b 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME z 1 [source_file: testcode]\n                                    TRUE 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME z 1 [source_file: testcode]\n                            VOID 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexInlineVars7(InlineFunctionsTest.java:1319)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexFunctionWithFunctionDefinition2a\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=void 0;call(function(){return a$$inline_0})\nResult: var a$$inline_1=void 0;call(function(){return a$$inline_1})\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME a$$inline_0 1 [source_file: expected0]\n                        VOID 1 [source_file: expected0]\n                            NUMBER 0.0 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME call 1 [source_file: expected0]\n                        FUNCTION  1 [source_file: expected0]\n                            NAME  1 [source_file: expected0]\n                            LP 1 [source_file: expected0]\n                            BLOCK 1 [source_file: expected0]\n                                RETURN 1 [source_file: expected0]\n                                    NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME a$$inline_1 1 [source_file: testcode]\n                        VOID 1 [source_file: testcode]\n                            NUMBER 0.0 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME call 1 [source_file: testcode]\n                        FUNCTION  1 [source_file: testcode]\n                            NAME  1 [source_file: testcode]\n                            LP 1 [source_file: testcode]\n                            BLOCK 1 [source_file: testcode]\n                                RETURN 1 [source_file: testcode]\n                                    NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    VOID 1 [source_file: expected0]\n        NUMBER 0.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    VOID 1 [source_file: testcode]\n        NUMBER 0.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexFunctionWithFunctionDefinition2a(InlineFunctionsTest.java:1525)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexInline7\njunit.framework.AssertionFailedError:\nExpected: var b=1;JSCompiler_inline_label_f_2:{if(1){z=b();break JSCompiler_inline_label_f_2}else{z=true;break JSCompiler_inline_label_f_2}z=void 0}\nResult: var b=1;JSCompiler_inline_label_f_4:{if(1){z=b();break JSCompiler_inline_label_f_4}else{z=true;break JSCompiler_inline_label_f_4}z=void 0}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME b 1 [source_file: expected0]\n                NUMBER 1.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            LABEL 1 [source_file: expected0]\n                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME z 1 [source_file: expected0]\n                                    CALL 1 [free_call: 1] [source_file: expected0]\n                                        NAME b 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME z 1 [source_file: expected0]\n                                    TRUE 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME z 1 [source_file: expected0]\n                            VOID 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME b 1 [source_file: testcode]\n                NUMBER 1.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            LABEL 1 [source_file: testcode]\n                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    IF 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME z 1 [source_file: testcode]\n                                    CALL 1 [free_call: 1] [source_file: testcode]\n                                        NAME b 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME z 1 [source_file: testcode]\n                                    TRUE 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME z 1 [source_file: testcode]\n                            VOID 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexInline7(InlineFunctionsTest.java:1269)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testFunctionExpressionOmega\njunit.framework.AssertionFailedError:\nExpected: var f$$inline_0=function(f$$1){f$$1(f$$1)};f$$inline_0(f$$inline_0)\nResult: var f$$inline_1=function(f$$1){f$$1(f$$1)};f$$inline_1(f$$inline_1)\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME f$$inline_0 1 [source_file: expected0]\n                    FUNCTION  1 [source_file: expected0]\n                        NAME  1 [source_file: expected0]\n                        LP 1 [source_file: expected0]\n                            NAME f$$1 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                CALL 1 [free_call: 1] [source_file: expected0]\n                                    NAME f$$1 1 [source_file: expected0]\n                                    NAME f$$1 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME f$$inline_0 1 [source_file: expected0]\n                            NAME f$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME f$$inline_1 1 [source_file: testcode]\n                    FUNCTION  1 [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                            NAME f$$1 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                CALL 1 [free_call: 1] [source_file: testcode]\n                                    NAME f$$1 1 [source_file: testcode]\n                                    NAME f$$1 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        CALL 1 [free_call: 1] [source_file: testcode]\n                            NAME f$$inline_1 1 [source_file: testcode]\n                            NAME f$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME f$$inline_0 1 [source_file: expected0]\n    FUNCTION  1 [source_file: expected0]\n        NAME  1 [source_file: expected0]\n        LP 1 [source_file: expected0]\n            NAME f$$1 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    NAME f$$1 1 [source_file: expected0]\n                    NAME f$$1 1 [source_file: expected0]\n\n\nSubtree2: NAME f$$inline_1 1 [source_file: testcode]\n    FUNCTION  1 [source_file: testcode]\n        NAME  1 [source_file: testcode]\n        LP 1 [source_file: testcode]\n            NAME f$$1 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    NAME f$$1 1 [source_file: testcode]\n                    NAME f$$1 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testFunctionExpressionOmega(InlineFunctionsTest.java:1758)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions15b\njunit.framework.AssertionFailedError:\nExpected: var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_2;JSCompiler_inline_result$$1=function(a$$inline_3){return a$$inline_3+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1\nResult: var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_3;JSCompiler_inline_result$$1=function(a$$inline_4){return a$$inline_4+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                NAME c 1 [source_file: expected0]\n        BLOCK 2 [source_file: expected0]\n            VAR 3 [source_file: expected0]\n                NAME JSCompiler_inline_result$$1 3 [source_file: expected0]\n            VAR 4 [source_file: expected0]\n                NAME x$$inline_2 4 [source_file: expected0]\n            EXPR_RESULT 5 [source_file: expected0]\n                ASSIGN 5 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$1 5 [source_file: expected0]\n                    FUNCTION  5 [source_file: expected0]\n                        NAME  5 [source_file: expected0]\n                        LP 5 [source_file: expected0]\n                            NAME a$$inline_3 5 [source_file: expected0]\n                        BLOCK 5 [source_file: expected0]\n                            RETURN 5 [source_file: expected0]\n                                ADD 5 [source_file: expected0]\n                                    NAME a$$inline_3 5 [source_file: expected0]\n                                    NUMBER 1.0 5 [source_file: expected0]\n        VAR 6 [source_file: expected0]\n            NAME d 6 [source_file: expected0]\n                ADD 6 [source_file: expected0]\n                    NAME JSCompiler_temp_const$$0 6 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$1 6 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME JSCompiler_temp_const$$0 1 [source_file: testcode]\n                NAME c 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_3 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n                    FUNCTION  1 [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                            NAME a$$inline_4 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            RETURN 1 [source_file: testcode]\n                                ADD 1 [source_file: testcode]\n                                    NAME a$$inline_4 1 [source_file: testcode]\n                                    NUMBER 1.0 1 [source_file: testcode]\n        VAR 1 [source_file: testcode]\n            NAME d 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME JSCompiler_temp_const$$0 1 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_2 4 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_3 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions15b(InlineFunctionsTest.java:246)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions15d\njunit.framework.AssertionFailedError:\nExpected: function _x(){var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_2;JSCompiler_inline_result$$1=function(a$$inline_3){return a$$inline_3+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1}\nResult: function _x(){var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_3;JSCompiler_inline_result$$1=function(a$$inline_4){return a$$inline_4+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        FUNCTION _x 1 [source_file: expected0]\n            NAME _x 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 2 [source_file: expected0]\n                    NAME JSCompiler_temp_const$$0 2 [source_file: expected0]\n                        NAME c 2 [source_file: expected0]\n                BLOCK 3 [source_file: expected0]\n                    VAR 4 [source_file: expected0]\n                        NAME JSCompiler_inline_result$$1 4 [source_file: expected0]\n                    VAR 5 [source_file: expected0]\n                        NAME x$$inline_2 5 [source_file: expected0]\n                    EXPR_RESULT 6 [source_file: expected0]\n                        ASSIGN 6 [source_file: expected0]\n                            NAME JSCompiler_inline_result$$1 6 [source_file: expected0]\n                            FUNCTION  6 [source_file: expected0]\n                                NAME  6 [source_file: expected0]\n                                LP 6 [source_file: expected0]\n                                    NAME a$$inline_3 6 [source_file: expected0]\n                                BLOCK 6 [source_file: expected0]\n                                    RETURN 6 [source_file: expected0]\n                                        ADD 6 [source_file: expected0]\n                                            NAME a$$inline_3 6 [source_file: expected0]\n                                            NUMBER 1.0 6 [source_file: expected0]\n                VAR 8 [source_file: expected0]\n                    NAME d 8 [source_file: expected0]\n                        ADD 8 [source_file: expected0]\n                            NAME JSCompiler_temp_const$$0 8 [source_file: expected0]\n                            NAME JSCompiler_inline_result$$1 8 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        FUNCTION _x 1 [source_file: testcode]\n            NAME _x 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME JSCompiler_temp_const$$0 1 [source_file: testcode]\n                        NAME c 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME x$$inline_3 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n                            FUNCTION  1 [source_file: testcode]\n                                NAME  1 [source_file: testcode]\n                                LP 1 [source_file: testcode]\n                                    NAME a$$inline_4 1 [source_file: testcode]\n                                BLOCK 1 [source_file: testcode]\n                                    RETURN 1 [source_file: testcode]\n                                        ADD 1 [source_file: testcode]\n                                            NAME a$$inline_4 1 [source_file: testcode]\n                                            NUMBER 1.0 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME d 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NAME JSCompiler_temp_const$$0 1 [source_file: testcode]\n                            NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_2 5 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_3 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions15d(InlineFunctionsTest.java:296)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions16a\njunit.framework.AssertionFailedError:\nExpected: var d;var b$$inline_0=e;d=window.bar(function(){c(b$$inline_0)})\nResult: var d;var b$$inline_1=e;d=window.bar(function(){c(b$$inline_1)})\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME d 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME b$$inline_0 1 [source_file: expected0]\n                    NAME e 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME d 1 [source_file: expected0]\n                    CALL 1 [source_file: expected0]\n                        GETPROP 1 [source_file: expected0]\n                            NAME window 1 [source_file: expected0]\n                            STRING bar 1 [source_file: expected0]\n                        FUNCTION  1 [source_file: expected0]\n                            NAME  1 [source_file: expected0]\n                            LP 1 [source_file: expected0]\n                            BLOCK 1 [source_file: expected0]\n                                EXPR_RESULT 1 [source_file: expected0]\n                                    CALL 1 [free_call: 1] [source_file: expected0]\n                                        NAME c 1 [source_file: expected0]\n                                        NAME b$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME d 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME b$$inline_1 1 [source_file: testcode]\n                    NAME e 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME d 1 [source_file: testcode]\n                    CALL 1 [source_file: testcode]\n                        GETPROP 1 [source_file: testcode]\n                            NAME window 1 [source_file: testcode]\n                            STRING bar 1 [source_file: testcode]\n                        FUNCTION  1 [source_file: testcode]\n                            NAME  1 [source_file: testcode]\n                            LP 1 [source_file: testcode]\n                            BLOCK 1 [source_file: testcode]\n                                EXPR_RESULT 1 [source_file: testcode]\n                                    CALL 1 [free_call: 1] [source_file: testcode]\n                                        NAME c 1 [source_file: testcode]\n                                        NAME b$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME b$$inline_0 1 [source_file: expected0]\n    NAME e 1 [source_file: expected0]\n\n\nSubtree2: NAME b$$inline_1 1 [source_file: testcode]\n    NAME e 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions16a(InlineFunctionsTest.java:320)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testBug4944818\njunit.framework.AssertionFailedError:\nExpected: HangoutStarter.prototype.launchHangout=function(){var self$$2=a.b;var JSCompiler_temp_const$$0=goog.Uri;var JSCompiler_inline_result$$1;var self$$inline_2=self$$2;if(!self$$inline_2.domServices_)self$$inline_2.domServices_=goog$component$DomServices.get(self$$inline_2.appContext_);JSCompiler_inline_result$$1=self$$inline_2.domServices_;var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.getDomHelper().getWindow().location.href)}\nResult: HangoutStarter.prototype.launchHangout=function(){var self$$2=a.b;var JSCompiler_temp_const$$0=goog.Uri;var JSCompiler_inline_result$$1;var self$$inline_3=self$$2;if(!self$$inline_3.domServices_)self$$inline_3.domServices_=goog$component$DomServices.get(self$$inline_3.appContext_);JSCompiler_inline_result$$1=self$$inline_3.domServices_;var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.getDomHelper().getWindow().location.href)}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ASSIGN 1 [source_file: expected0]\n                GETPROP 1 [source_file: expected0]\n                    GETPROP 1 [source_file: expected0]\n                        NAME HangoutStarter 1 [source_file: expected0]\n                        STRING prototype 1 [source_file: expected0]\n                    STRING launchHangout 1 [source_file: expected0]\n                FUNCTION  1 [source_file: expected0]\n                    NAME  1 [source_file: expected0]\n                    LP 1 [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME self$$2 1 [source_file: expected0]\n                                GETPROP 1 [source_file: expected0]\n                                    NAME a 1 [source_file: expected0]\n                                    STRING b 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                                GETPROP 1 [source_file: expected0]\n                                    NAME goog 1 [source_file: expected0]\n                                    STRING Uri 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            VAR 1 [source_file: expected0]\n                                NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                            VAR 1 [source_file: expected0]\n                                NAME self$$inline_2 1 [source_file: expected0]\n                                    NAME self$$2 1 [source_file: expected0]\n                            IF 1 [source_file: expected0]\n                                NOT 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        NAME self$$inline_2 1 [source_file: expected0]\n                                        STRING domServices_ 1 [source_file: expected0]\n                                BLOCK 1 [source_file: expected0]\n                                    EXPR_RESULT 1 [source_file: expected0]\n                                        ASSIGN 1 [source_file: expected0]\n                                            GETPROP 1 [source_file: expected0]\n                                                NAME self$$inline_2 1 [source_file: expected0]\n                                                STRING domServices_ 1 [source_file: expected0]\n                                            CALL 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    NAME goog$component$DomServices 1 [source_file: expected0]\n                                                    STRING get 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    NAME self$$inline_2 1 [source_file: expected0]\n                                                    STRING appContext_ 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        NAME self$$inline_2 1 [source_file: expected0]\n                                        STRING domServices_ 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME myUrl 1 [source_file: expected0]\n                                NEW 1 [source_file: expected0]\n                                    NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            CALL 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    CALL 1 [source_file: expected0]\n                                                        GETPROP 1 [source_file: expected0]\n                                                            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                                                            STRING getDomHelper 1 [source_file: expected0]\n                                                    STRING getWindow 1 [source_file: expected0]\n                                            STRING location 1 [source_file: expected0]\n                                        STRING href 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 13 [source_file: testcode]\n            ASSIGN 13 [source_file: testcode]\n                GETPROP 13 [source_file: testcode]\n                    GETPROP 13 [source_file: testcode]\n                        NAME HangoutStarter 13 [source_file: testcode]\n                        STRING prototype 13 [source_file: testcode]\n                    STRING launchHangout 13 [source_file: testcode]\n                FUNCTION  13 [source_file: testcode]\n                    NAME  13 [source_file: testcode]\n                    LP 13 [source_file: testcode]\n                    BLOCK 13 [source_file: testcode]\n                        VAR 14 [source_file: testcode]\n                            NAME self$$2 14 [source_file: testcode]\n                                GETPROP 14 [source_file: testcode]\n                                    NAME a 14 [source_file: testcode]\n                                    STRING b 14 [source_file: testcode]\n                        VAR 15 [source_file: testcode]\n                            NAME JSCompiler_temp_const$$0 15 [source_file: testcode]\n                                GETPROP 15 [source_file: testcode]\n                                    NAME goog 15 [source_file: testcode]\n                                    STRING Uri 15 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            VAR 10 [source_file: testcode]\n                                NAME JSCompiler_inline_result$$1 10 [source_file: testcode]\n                            VAR 15 [source_file: testcode]\n                                NAME self$$inline_3 15 [source_file: testcode]\n                                    NAME self$$2 15 [source_file: testcode]\n                            IF 2 [source_file: testcode]\n                                NOT 2 [source_file: testcode]\n                                    GETPROP 2 [source_file: testcode]\n                                        NAME self$$inline_3 2 [source_file: testcode]\n                                        STRING domServices_ 2 [source_file: testcode]\n                                BLOCK 2 [source_file: testcode]\n                                    EXPR_RESULT 3 [source_file: testcode]\n                                        ASSIGN 3 [source_file: testcode]\n                                            GETPROP 3 [source_file: testcode]\n                                                NAME self$$inline_3 3 [source_file: testcode]\n                                                STRING domServices_ 3 [source_file: testcode]\n                                            CALL 3 [source_file: testcode]\n                                                GETPROP 3 [source_file: testcode]\n                                                    NAME goog$component$DomServices 3 [source_file: testcode]\n                                                    STRING get 3 [source_file: testcode]\n                                                GETPROP 3 [source_file: testcode]\n                                                    NAME self$$inline_3 3 [source_file: testcode]\n                                                    STRING appContext_ 3 [source_file: testcode]\n                            EXPR_RESULT 6 [source_file: testcode]\n                                ASSIGN 6 [source_file: testcode]\n                                    NAME JSCompiler_inline_result$$1 6 [source_file: testcode]\n                                    GETPROP 6 [source_file: testcode]\n                                        NAME self$$inline_3 6 [source_file: testcode]\n                                        STRING domServices_ 6 [source_file: testcode]\n                        VAR 15 [source_file: testcode]\n                            NAME myUrl 15 [source_file: testcode]\n                                NEW 15 [source_file: testcode]\n                                    NAME JSCompiler_temp_const$$0 15 [source_file: testcode]\n                                    GETPROP 15 [source_file: testcode]\n                                        GETPROP 15 [source_file: testcode]\n                                            CALL 10 [source_file: testcode]\n                                                GETPROP 10 [source_file: testcode]\n                                                    CALL 10 [source_file: testcode]\n                                                        GETPROP 10 [source_file: testcode]\n                                                            NAME JSCompiler_inline_result$$1 10 [source_file: testcode]\n                                                            STRING getDomHelper 10 [source_file: testcode]\n                                                    STRING getWindow 10 [source_file: testcode]\n                                            STRING location 15 [source_file: testcode]\n                                        STRING href 15 [source_file: testcode]\n\n\nSubtree1: NAME self$$inline_2 1 [source_file: expected0]\n    NAME self$$2 1 [source_file: expected0]\n\n\nSubtree2: NAME self$$inline_3 15 [source_file: testcode]\n    NAME self$$2 15 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testBug4944818(InlineFunctionsTest.java:2077)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexSample\njunit.framework.AssertionFailedError:\nExpected: var styleSheet$$inline_2=null;if(goog$userAgent$IE)styleSheet$$inline_2=0;else var head$$inline_3=0;var element$$inline_4=styleSheet$$inline_2;var stylesString$$inline_5=a;if(goog$userAgent$IE)element$$inline_4.cssText=stylesString$$inline_5;else{var propToSet$$inline_6=\"innerText\";element$$inline_4[propToSet$$inline_6]=stylesString$$inline_5}styleSheet$$inline_2\nResult: var styleSheet$$inline_9=null;if(goog$userAgent$IE)styleSheet$$inline_9=0;else var head$$inline_10=0;var element$$inline_11=styleSheet$$inline_9;var stylesString$$inline_12=a;if(goog$userAgent$IE)element$$inline_11.cssText=stylesString$$inline_12;else{var propToSet$$inline_13=\"innerText\";element$$inline_11[propToSet$$inline_13]=stylesString$$inline_12}styleSheet$$inline_9\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME styleSheet$$inline_2 1 [source_file: expected0]\n                        NULL 1 [source_file: expected0]\n                IF 1 [source_file: expected0]\n                    NAME goog$userAgent$IE 1 [is_constant_name: 1] [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        EXPR_RESULT 1 [source_file: expected0]\n                            ASSIGN 1 [source_file: expected0]\n                                NAME styleSheet$$inline_2 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME head$$inline_3 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME element$$inline_4 1 [source_file: expected0]\n                            NAME styleSheet$$inline_2 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME stylesString$$inline_5 1 [source_file: expected0]\n                            NAME a 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        NAME goog$userAgent$IE 1 [is_constant_name: 1] [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        NAME element$$inline_4 1 [source_file: expected0]\n                                        STRING cssText 1 [source_file: expected0]\n                                    NAME stylesString$$inline_5 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            VAR 1 [source_file: expected0]\n                                NAME propToSet$$inline_6 1 [source_file: expected0]\n                                    STRING innerText 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    GETELEM 1 [source_file: expected0]\n                                        NAME element$$inline_4 1 [source_file: expected0]\n                                        NAME propToSet$$inline_6 1 [source_file: expected0]\n                                    NAME stylesString$$inline_5 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    NAME styleSheet$$inline_2 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 2 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME styleSheet$$inline_9 1 [source_file: testcode]\n                        NULL 1 [source_file: testcode]\n                IF 1 [source_file: testcode]\n                    NAME goog$userAgent$IE 1 [is_constant_name: 1] [source_file: testcode]\n                    BLOCK 1 [source_file: testcode]\n                        EXPR_RESULT 1 [source_file: testcode]\n                            ASSIGN 1 [source_file: testcode]\n                                NAME styleSheet$$inline_9 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n                    BLOCK 1 [source_file: testcode]\n                        VAR 1 [source_file: testcode]\n                            NAME head$$inline_10 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n                BLOCK 2 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME element$$inline_11 1 [source_file: testcode]\n                            NAME styleSheet$$inline_9 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME stylesString$$inline_12 1 [source_file: testcode]\n                            NAME a 2 [source_file: testcode]\n                    IF 2 [source_file: testcode]\n                        NAME goog$userAgent$IE 2 [is_constant_name: 1] [source_file: testcode]\n                        BLOCK 2 [source_file: testcode]\n                            EXPR_RESULT 2 [source_file: testcode]\n                                ASSIGN 2 [source_file: testcode]\n                                    GETPROP 2 [source_file: testcode]\n                                        NAME element$$inline_11 2 [source_file: testcode]\n                                        STRING cssText 2 [source_file: testcode]\n                                    NAME stylesString$$inline_12 2 [source_file: testcode]\n                        BLOCK 2 [source_file: testcode]\n                            VAR 2 [source_file: testcode]\n                                NAME propToSet$$inline_13 2 [source_file: testcode]\n                                    STRING innerText 2 [source_file: testcode]\n                            EXPR_RESULT 2 [source_file: testcode]\n                                ASSIGN 2 [source_file: testcode]\n                                    GETELEM 2 [source_file: testcode]\n                                        NAME element$$inline_11 2 [source_file: testcode]\n                                        NAME propToSet$$inline_13 2 [source_file: testcode]\n                                    NAME stylesString$$inline_12 2 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    NAME styleSheet$$inline_9 1 [source_file: testcode]\n\n\nSubtree1: NAME styleSheet$$inline_2 1 [source_file: expected0]\n    NULL 1 [source_file: expected0]\n\n\nSubtree2: NAME styleSheet$$inline_9 1 [source_file: testcode]\n    NULL 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexSample(InlineFunctionsTest.java:1418)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified1\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=undefined;x$$inline_0=1\nResult: var x$$inline_1=undefined;x$$inline_1=1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NAME undefined 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NAME undefined 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NAME undefined 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NAME undefined 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified1(InlineFunctionsTest.java:549)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified2\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=2;x$$inline_0=1\nResult: var x$$inline_1=2;x$$inline_1=1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [parenthesized: true] [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified2(InlineFunctionsTest.java:555)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified3\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=2;x$$inline_0*=2\nResult: var x$$inline_1=2;x$$inline_1*=2\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN_MUL 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN_MUL 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified3(InlineFunctionsTest.java:562)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified4\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=2;x$$inline_0?x$$inline_0=2:0\nResult: var x$$inline_1=2;x$$inline_1?x$$inline_1=2:0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                HOOK 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    ASSIGN 1 [parenthesized: true] [source_file: expected0]\n                        NAME x$$inline_0 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                HOOK 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    ASSIGN 1 [parenthesized: true] [source_file: testcode]\n                        NAME x$$inline_1 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                    NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified4(InlineFunctionsTest.java:569)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified5\njunit.framework.AssertionFailedError:\nExpected: var y$$inline_1=undefined;2?y$$inline_1=2:0\nResult: var y$$inline_3=undefined;2?y$$inline_3=2:0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME y$$inline_1 1 [source_file: expected0]\n                    NAME undefined 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                HOOK 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n                    ASSIGN 1 [parenthesized: true] [source_file: expected0]\n                        NAME y$$inline_1 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME y$$inline_3 1 [source_file: testcode]\n                    NAME undefined 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                HOOK 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n                    ASSIGN 1 [parenthesized: true] [source_file: testcode]\n                        NAME y$$inline_3 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                    NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: NAME y$$inline_1 1 [source_file: expected0]\n    NAME undefined 1 [source_file: expected0]\n\n\nSubtree2: NAME y$$inline_3 1 [source_file: testcode]\n    NAME undefined 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified5(InlineFunctionsTest.java:577)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified6\njunit.framework.AssertionFailedError:\nExpected: var y$$inline_1=void 0;2?y$$inline_1=2:0\nResult: var y$$inline_3=void 0;2?y$$inline_3=2:0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME y$$inline_1 1 [source_file: expected0]\n                    VOID 1 [source_file: expected0]\n                        NUMBER 0.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                HOOK 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n                    ASSIGN 1 [parenthesized: true] [source_file: expected0]\n                        NAME y$$inline_1 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME y$$inline_3 1 [source_file: testcode]\n                    VOID 1 [source_file: testcode]\n                        NUMBER 0.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                HOOK 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n                    ASSIGN 1 [parenthesized: true] [source_file: testcode]\n                        NAME y$$inline_3 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                    NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: NAME y$$inline_1 1 [source_file: expected0]\n    VOID 1 [source_file: expected0]\n        NUMBER 0.0 1 [source_file: expected0]\n\n\nSubtree2: NAME y$$inline_3 1 [source_file: testcode]\n    VOID 1 [source_file: testcode]\n        NUMBER 0.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified6(InlineFunctionsTest.java:583)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified7\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=1;++a$$inline_0<++a$$inline_0\nResult: var a$$inline_1=1;++a$$inline_1<++a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                LT 1 [source_file: expected0]\n                    INC 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                    INC 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                LT 1 [source_file: testcode]\n                    INC 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                    INC 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified7(InlineFunctionsTest.java:590)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testIssue423\njunit.framework.AssertionFailedError:\nExpected: var $$$inline_0=jQuery;$$$inline_0.fn.multicheck=function(options$$inline_4){options$$inline_4.checkboxes=$$$inline_0(this).siblings(\":checkbox\");$$$inline_0(this).data(\"checkboxes\")}\nResult: var $$$inline_3=jQuery;$$$inline_3.fn.multicheck=function(options$$inline_7){options$$inline_7.checkboxes=$$$inline_3(this).siblings(\":checkbox\");$$$inline_3(this).data(\"checkboxes\")}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME $$$inline_0 1 [source_file: expected0]\n                    NAME jQuery 1 [source_file: expected0]\n            EXPR_RESULT 2 [source_file: expected0]\n                ASSIGN 2 [source_file: expected0]\n                    GETPROP 2 [source_file: expected0]\n                        GETPROP 2 [source_file: expected0]\n                            NAME $$$inline_0 2 [source_file: expected0]\n                            STRING fn 2 [source_file: expected0]\n                        STRING multicheck 2 [source_file: expected0]\n                    FUNCTION  2 [source_file: expected0]\n                        NAME  2 [source_file: expected0]\n                        LP 2 [source_file: expected0]\n                            NAME options$$inline_4 2 [source_file: expected0]\n                        BLOCK 2 [source_file: expected0]\n                            BLOCK 3 [source_file: expected0]\n                                EXPR_RESULT 3 [source_file: expected0]\n                                    ASSIGN 3 [source_file: expected0]\n                                        GETPROP 3 [source_file: expected0]\n                                            NAME options$$inline_4 3 [source_file: expected0]\n                                            STRING checkboxes 3 [source_file: expected0]\n                                        CALL 3 [source_file: expected0]\n                                            GETPROP 3 [source_file: expected0]\n                                                CALL 3 [free_call: 1] [source_file: expected0]\n                                                    NAME $$$inline_0 3 [source_file: expected0]\n                                                    THIS 3 [source_file: expected0]\n                                                STRING siblings 3 [source_file: expected0]\n                                            STRING :checkbox 3 [source_file: expected0]\n                                BLOCK 4 [source_file: expected0]\n                                    EXPR_RESULT 4 [source_file: expected0]\n                                        CALL 4 [source_file: expected0]\n                                            GETPROP 4 [source_file: expected0]\n                                                CALL 4 [free_call: 1] [source_file: expected0]\n                                                    NAME $$$inline_0 4 [source_file: expected0]\n                                                    THIS 4 [source_file: expected0]\n                                                STRING data 4 [source_file: expected0]\n                                            STRING checkboxes 4 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 14 [source_file: testcode]\n                NAME $$$inline_3 14 [source_file: testcode]\n                    NAME jQuery 14 [source_file: testcode]\n            EXPR_RESULT 2 [source_file: testcode]\n                ASSIGN 2 [source_file: testcode]\n                    GETPROP 2 [source_file: testcode]\n                        GETPROP 2 [source_file: testcode]\n                            NAME $$$inline_3 2 [source_file: testcode]\n                            STRING fn 2 [source_file: testcode]\n                        STRING multicheck 2 [source_file: testcode]\n                    FUNCTION  2 [source_file: testcode]\n                        NAME  2 [source_file: testcode]\n                        LP 2 [source_file: testcode]\n                            NAME options$$inline_7 2 [source_file: testcode]\n                        BLOCK 2 [source_file: testcode]\n                            BLOCK 6 [source_file: testcode]\n                                EXPR_RESULT 7 [source_file: testcode]\n                                    ASSIGN 7 [source_file: testcode]\n                                        GETPROP 7 [source_file: testcode]\n                                            NAME options$$inline_7 3 [source_file: testcode]\n                                            STRING checkboxes 7 [source_file: testcode]\n                                        CALL 7 [source_file: testcode]\n                                            GETPROP 7 [source_file: testcode]\n                                                CALL 7 [free_call: 1] [source_file: testcode]\n                                                    NAME $$$inline_3 7 [source_file: testcode]\n                                                    THIS 7 [source_file: testcode]\n                                                STRING siblings 7 [source_file: testcode]\n                                            STRING :checkbox 7 [source_file: testcode]\n                                BLOCK 11 [source_file: testcode]\n                                    EXPR_RESULT 12 [source_file: testcode]\n                                        CALL 12 [source_file: testcode]\n                                            GETPROP 12 [source_file: testcode]\n                                                CALL 12 [free_call: 1] [source_file: testcode]\n                                                    NAME $$$inline_3 12 [source_file: testcode]\n                                                    THIS 12 [source_file: testcode]\n                                                STRING data 12 [source_file: testcode]\n                                            STRING checkboxes 12 [source_file: testcode]\n\n\nSubtree1: NAME $$$inline_0 1 [source_file: expected0]\n    NAME jQuery 1 [source_file: expected0]\n\n\nSubtree2: NAME $$$inline_3 14 [source_file: testcode]\n    NAME jQuery 14 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testIssue423(InlineFunctionsTest.java:2142)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexFunctionWithFunctionDefinition2\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=void 0;call(function(){return a$$inline_0})\nResult: var a$$inline_1=void 0;call(function(){return a$$inline_1})\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME a$$inline_0 1 [source_file: expected0]\n                        VOID 1 [source_file: expected0]\n                            NUMBER 0.0 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME call 1 [source_file: expected0]\n                        FUNCTION  1 [source_file: expected0]\n                            NAME  1 [source_file: expected0]\n                            LP 1 [source_file: expected0]\n                            BLOCK 1 [source_file: expected0]\n                                RETURN 1 [source_file: expected0]\n                                    NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME a$$inline_1 1 [source_file: testcode]\n                        VOID 1 [source_file: testcode]\n                            NUMBER 0.0 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME call 1 [source_file: testcode]\n                        FUNCTION  1 [source_file: testcode]\n                            NAME  1 [source_file: testcode]\n                            LP 1 [source_file: testcode]\n                            BLOCK 1 [source_file: testcode]\n                                RETURN 1 [source_file: testcode]\n                                    NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    VOID 1 [source_file: expected0]\n        NUMBER 0.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    VOID 1 [source_file: testcode]\n        NUMBER 0.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexFunctionWithFunctionDefinition2(InlineFunctionsTest.java:1511)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexFunctionWithFunctionDefinition3\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0;call(function(){return a$$inline_0})\nResult: var a$$inline_1;call(function(){return a$$inline_1})\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    NAME call 1 [source_file: expected0]\n                    FUNCTION  1 [source_file: expected0]\n                        NAME  1 [source_file: expected0]\n                        LP 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            RETURN 1 [source_file: expected0]\n                                NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    NAME call 1 [source_file: testcode]\n                    FUNCTION  1 [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            RETURN 1 [source_file: testcode]\n                                NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexFunctionWithFunctionDefinition3(InlineFunctionsTest.java:1538)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testDecomposeFunctionExpressionInCall\njunit.framework.AssertionFailedError:\nExpected: var JSCompiler_inline_result$$0;var ret$$inline_1={};ret$$inline_1[ONE]=\"a\";ret$$inline_1[TWO]=\"b\";JSCompiler_inline_result$$0=ret$$inline_1;descriptions_=JSCompiler_inline_result$$0\nResult: var JSCompiler_inline_result$$0;var ret$$inline_2={};ret$$inline_2[ONE]=\"a\";ret$$inline_2[TWO]=\"b\";JSCompiler_inline_result$$0=ret$$inline_2;descriptions_=JSCompiler_inline_result$$0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME ret$$inline_1 1 [source_file: expected0]\n                    OBJECTLIT 1 [source_file: expected0]\n            EXPR_RESULT 2 [source_file: expected0]\n                ASSIGN 2 [source_file: expected0]\n                    GETELEM 2 [source_file: expected0]\n                        NAME ret$$inline_1 2 [source_file: expected0]\n                        NAME ONE 2 [is_constant_name: 1] [source_file: expected0]\n                    STRING a 2 [source_file: expected0]\n            EXPR_RESULT 3 [source_file: expected0]\n                ASSIGN 3 [source_file: expected0]\n                    GETELEM 3 [source_file: expected0]\n                        NAME ret$$inline_1 3 [source_file: expected0]\n                        NAME TWO 3 [is_constant_name: 1] [source_file: expected0]\n                    STRING b 3 [source_file: expected0]\n            EXPR_RESULT 4 [source_file: expected0]\n                ASSIGN 4 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$0 4 [source_file: expected0]\n                    NAME ret$$inline_1 4 [source_file: expected0]\n        BLOCK 5 [source_file: expected0]\n            EXPR_RESULT 5 [source_file: expected0]\n                ASSIGN 5 [source_file: expected0]\n                    NAME descriptions_ 5 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$0 5 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 2 [source_file: testcode]\n            VAR 7 [source_file: testcode]\n                NAME JSCompiler_inline_result$$0 7 [source_file: testcode]\n            VAR 3 [source_file: testcode]\n                NAME ret$$inline_2 3 [source_file: testcode]\n                    OBJECTLIT 3 [source_file: testcode]\n            EXPR_RESULT 4 [source_file: testcode]\n                ASSIGN 4 [source_file: testcode]\n                    GETELEM 4 [source_file: testcode]\n                        NAME ret$$inline_2 4 [source_file: testcode]\n                        NAME ONE 4 [is_constant_name: 1] [source_file: testcode]\n                    STRING a 4 [source_file: testcode]\n            EXPR_RESULT 5 [source_file: testcode]\n                ASSIGN 5 [source_file: testcode]\n                    GETELEM 5 [source_file: testcode]\n                        NAME ret$$inline_2 5 [source_file: testcode]\n                        NAME TWO 5 [is_constant_name: 1] [source_file: testcode]\n                    STRING b 5 [source_file: testcode]\n            EXPR_RESULT 6 [source_file: testcode]\n                ASSIGN 6 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$0 6 [source_file: testcode]\n                    NAME ret$$inline_2 6 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME descriptions_ 1 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$0 7 [source_file: testcode]\n\n\nSubtree1: NAME ret$$inline_1 1 [source_file: expected0]\n    OBJECTLIT 1 [source_file: expected0]\n\n\nSubtree2: NAME ret$$inline_2 3 [source_file: testcode]\n    OBJECTLIT 3 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testDecomposeFunctionExpressionInCall(InlineFunctionsTest.java:1553)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineNeverOverrideNewValues\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=1;++a$$inline_0<++a$$inline_0\nResult: var a$$inline_1=1;++a$$inline_1<++a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                LT 1 [source_file: expected0]\n                    INC 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                    INC 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                LT 1 [source_file: testcode]\n                    INC 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                    INC 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineNeverOverrideNewValues(InlineFunctionsTest.java:623)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineBlockMutableArgs1\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=[];x$$inline_0+x$$inline_0\nResult: var x$$inline_1=[];x$$inline_1+x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    ARRAYLIT 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    ARRAYLIT 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    ARRAYLIT 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    ARRAYLIT 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs1(InlineFunctionsTest.java:653)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineBlockMutableArgs2\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=new Date;x$$inline_0+x$$inline_0\nResult: var x$$inline_1=new Date;x$$inline_1+x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NEW 1 [source_file: expected0]\n                        NAME Date 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NEW 1 [source_file: testcode]\n                        NAME Date 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NEW 1 [source_file: expected0]\n        NAME Date 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NEW 1 [source_file: testcode]\n        NAME Date 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs2(InlineFunctionsTest.java:659)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineBlockMutableArgs3\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=true&&new Date;x$$inline_0+x$$inline_0\nResult: var x$$inline_1=true&&new Date;x$$inline_1+x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    AND 1 [source_file: expected0]\n                        TRUE 1 [source_file: expected0]\n                        NEW 1 [source_file: expected0]\n                            NAME Date 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    AND 1 [source_file: testcode]\n                        TRUE 1 [source_file: testcode]\n                        NEW 1 [source_file: testcode]\n                            NAME Date 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    AND 1 [source_file: expected0]\n        TRUE 1 [source_file: expected0]\n        NEW 1 [source_file: expected0]\n            NAME Date 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    AND 1 [source_file: testcode]\n        TRUE 1 [source_file: testcode]\n        NEW 1 [source_file: testcode]\n            NAME Date 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs3(InlineFunctionsTest.java:665)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineBlockMutableArgs4\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0={};x$$inline_0+x$$inline_0\nResult: var x$$inline_1={};x$$inline_1+x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    OBJECTLIT 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    OBJECTLIT 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    OBJECTLIT 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    OBJECTLIT 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs4(InlineFunctionsTest.java:671)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions10\njunit.framework.AssertionFailedError:\nExpected: var y;var x$$inline_0=i;y=x$$inline_0++;var x$$inline_2=i;y=x$$inline_2++\nResult: var y;var x$$inline_1=i;y=x$$inline_1++;var x$$inline_4=i;y=x$$inline_4++\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME y 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NAME i 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME y 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME x$$inline_0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_2 1 [source_file: expected0]\n                    NAME i 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME y 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME x$$inline_2 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME y 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NAME i 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME y 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME x$$inline_1 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_4 1 [source_file: testcode]\n                    NAME i 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME y 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME x$$inline_4 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NAME i 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NAME i 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions10(InlineFunctionsTest.java:183)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions13\njunit.framework.AssertionFailedError:\nExpected: var y;var x$$inline_0=i++;y=x$$inline_0\nResult: var y;var x$$inline_1=i++;y=x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME y 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME i 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME y 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME y 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME i 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME y 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    INC 1 [incrdecr: 1] [source_file: expected0]\n        NAME i 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    INC 1 [incrdecr: 1] [source_file: testcode]\n        NAME i 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions13(InlineFunctionsTest.java:210)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions22\njunit.framework.AssertionFailedError:\nExpected: var d;JSCompiler_inline_label_plex_1:{if(1+2){d=0;break JSCompiler_inline_label_plex_1}else{d=1;break JSCompiler_inline_label_plex_1}d=void 0}\nResult: var d;JSCompiler_inline_label_plex_2:{if(1+2){d=0;break JSCompiler_inline_label_plex_2}else{d=1;break JSCompiler_inline_label_plex_2}d=void 0}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME d 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            LABEL 1 [source_file: expected0]\n                LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME d 1 [source_file: expected0]\n                                    NUMBER 0.0 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME d 1 [source_file: expected0]\n                                    NUMBER 1.0 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME d 1 [source_file: expected0]\n                            VOID 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME d 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            LABEL 1 [source_file: testcode]\n                LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    IF 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME d 1 [source_file: testcode]\n                                    NUMBER 0.0 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME d 1 [source_file: testcode]\n                                    NUMBER 1.0 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME d 1 [source_file: testcode]\n                            VOID 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions22(InlineFunctionsTest.java:375)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions23\njunit.framework.AssertionFailedError:\nExpected: var d;JSCompiler_inline_label_complex_1:{if(1+2){d=0;break JSCompiler_inline_label_complex_1}else{d=1;break JSCompiler_inline_label_complex_1}d=void 0}\nResult: var d;JSCompiler_inline_label_complex_2:{if(1+2){d=0;break JSCompiler_inline_label_complex_2}else{d=1;break JSCompiler_inline_label_complex_2}d=void 0}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME d 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            LABEL 1 [source_file: expected0]\n                LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME d 1 [source_file: expected0]\n                                    NUMBER 0.0 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME d 1 [source_file: expected0]\n                                    NUMBER 1.0 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME d 1 [source_file: expected0]\n                            VOID 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME d 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            LABEL 1 [source_file: testcode]\n                LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    IF 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME d 1 [source_file: testcode]\n                                    NUMBER 0.0 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME d 1 [source_file: testcode]\n                                    NUMBER 1.0 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME d 1 [source_file: testcode]\n                            VOID 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions23(InlineFunctionsTest.java:389)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions9\njunit.framework.AssertionFailedError:\nExpected: var y;var x$$inline_0=i;y=x$$inline_0++\nResult: var y;var x$$inline_1=i;y=x$$inline_1++\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME y 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NAME i 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME y 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME y 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NAME i 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME y 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NAME i 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NAME i 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions9(InlineFunctionsTest.java:176)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.MakeDeclaredNamesUniqueTest::testMakeLocalNamesUniqueWithContext5\njunit.framework.AssertionFailedError:\nExpected: var fn=function f(){var f$$1;f$$1=1}\nResult: var fn=function f$$1(){var f$$1;f$$1=1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME fn 1 [source_file: expected0]\n                FUNCTION f 1 [source_file: expected0]\n                    NAME f 1 [source_file: expected0]\n                    LP 1 [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME f$$1 1 [source_file: expected0]\n                        EXPR_RESULT 1 [source_file: expected0]\n                            ASSIGN 1 [source_file: expected0]\n                                NAME f$$1 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME fn 1 [source_file: testcode]\n                FUNCTION f$$1 1 [source_file: testcode]\n                    NAME f$$1 1 [source_file: testcode]\n                    LP 1 [source_file: testcode]\n                    BLOCK 1 [source_file: testcode]\n                        VAR 1 [source_file: testcode]\n                            NAME f$$1 1 [source_file: testcode]\n                        EXPR_RESULT 1 [source_file: testcode]\n                            ASSIGN 1 [source_file: testcode]\n                                NAME f$$1 1 [source_file: testcode]\n                                NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME f 1 [source_file: expected0]\n\n\nSubtree2: NAME f$$1 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest.testMakeLocalNamesUniqueWithContext5(MakeDeclaredNamesUniqueTest.java:222)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n\n\nThere is a bug in the above code, please help me locate it by considering the stack trace.\n\nPlease output **only one integer**: the line number of the buggy code (The code starts from line 1). Do not provide any explanations or additional content.\n",
        "prompt_fl_3": "\nsource code:\n@Override\n  public void enterScope(NodeTraversal t) {\n    Node declarationRoot = t.getScopeRoot();\n    Renamer renamer;\n    if (nameStack.isEmpty()) {\n      // If the contextual renamer is being used the starting context can not\n      // be a function.\n      Preconditions.checkState(\n          declarationRoot.getType() != Token.FUNCTION ||\n          !(rootRenamer instanceof ContextualRenamer));\n      Preconditions.checkState(t.inGlobalScope());\n      renamer = rootRenamer;\n    } else {\n      renamer = nameStack.peek().forChildScope();\n    }\n\n    if (declarationRoot.getType() == Token.FUNCTION) {\n      for (Node c = declarationRoot.getFirstChild().getNext().getFirstChild(); c != null; c = c.getNext()) {\n        String name = c.getString();\n        renamer.addDeclaredName(name);\n      }\n      Node functionBody = declarationRoot.getLastChild();\n      findDeclaredNames(functionBody, null, renamer);\n    }  else \n    if (declarationRoot.getType() != Token.FUNCTION) {\n      // Add the block declarations\n      findDeclaredNames(declarationRoot, null, renamer);\n    }\n    nameStack.push(renamer);\n  }\n\nstack trace:\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline19b\njunit.framework.AssertionFailedError:\nExpected: var x=1;var y=2;function foo(a,b){y=a;x=b}function bar(){var b$$inline_1=y;y=x;x=b$$inline_1}\nResult: var x=1;var y=2;function foo(a,b){y=a;x=b}function bar(){var b$$inline_3=y;y=x;x=b$$inline_3}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n            NUMBER 1.0 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME y 1 [source_file:  [testcode] ]\n            NUMBER 2.0 1 [source_file:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n            NAME b 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            EXPR_RESULT 1 [source_file:  [testcode] ]\n                ASSIGN 1 [source_file:  [testcode] ]\n                    NAME y 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n            EXPR_RESULT 1 [source_file:  [testcode] ]\n                ASSIGN 1 [source_file:  [testcode] ]\n                    NAME x 1 [source_file:  [testcode] ]\n                    NAME b 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FUNCTION bar 1 [source_file:  [testcode] ]\n        NAME bar 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_1 1 [source_file:  [testcode] ]\n                        NAME y 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    ASSIGN 1 [source_file:  [testcode] ]\n                        NAME y 1 [source_file:  [testcode] ]\n                        NAME x 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    ASSIGN 1 [source_file:  [testcode] ]\n                        NAME x 1 [source_file:  [testcode] ]\n                        NAME b$$inline_1 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    VAR 1 [source_file: code]\n        NAME x 1 [source_file: code]\n            NUMBER 1.0 1 [source_file: code]\n    VAR 1 [source_file: code]\n        NAME y 1 [source_file: code]\n            NUMBER 2.0 1 [source_file: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n            NAME b 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            EXPR_RESULT 1 [source_file: code]\n                ASSIGN 1 [source_file: code]\n                    NAME y 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n            EXPR_RESULT 1 [source_file: code]\n                ASSIGN 1 [source_file: code]\n                    NAME x 1 [source_file: code]\n                    NAME b 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FUNCTION bar 1 [source_file: code]\n        NAME bar 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME b$$inline_3 1 [source_file: code]\n                        NAME y 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    ASSIGN 1 [source_file: code]\n                        NAME y 1 [source_file: code]\n                        NAME x 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    ASSIGN 1 [source_file: code]\n                        NAME x 1 [source_file: code]\n                        NAME b$$inline_3 1 [source_file: code]\n\n\nSubtree1: NAME b$$inline_1 1 [source_file:  [testcode] ]\n    NAME y 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME b$$inline_3 1 [source_file: code]\n    NAME y 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline19b(FunctionInjectorTest.java:945)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInlineIntoLoop\njunit.framework.AssertionFailedError:\nExpected: function foo(a){var b;return a}for(;1;){var b$$inline_1=void 0;1}\nResult: function foo(a){var b;return a}for(;1;){var b$$inline_3=void 0;1}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            VAR 1 [source_file:  [testcode] ]\n                NAME b 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FOR 1 [source_file:  [testcode] ]\n        EMPTY 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n        EMPTY 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_1 1 [source_file:  [testcode] ]\n                        VOID 1 [source_file:  [testcode] ]\n                            NUMBER 0.0 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            VAR 1 [source_file: code]\n                NAME b 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FOR 1 [source_file: code]\n        EMPTY 1 [source_file: code]\n        NUMBER 1.0 1 [source_file: code]\n        EMPTY 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME b$$inline_3 1 [source_file: code]\n                        VOID 1 [source_file: code]\n                            NUMBER 0.0 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    NUMBER 1.0 1 [source_file: code]\n\n\nSubtree1: NAME b$$inline_1 1 [source_file:  [testcode] ]\n    VOID 1 [source_file:  [testcode] ]\n        NUMBER 0.0 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME b$$inline_3 1 [source_file: code]\n    VOID 1 [source_file: code]\n        NUMBER 0.0 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInlineIntoLoop(FunctionInjectorTest.java:960)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline13\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return a}function x(){var a$$inline_0=x++;a$$inline_0}\nResult: function foo(a){return a}function x(){var a$$inline_1=x++;a$$inline_1}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FUNCTION x 1 [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n                        INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                            NAME x 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FUNCTION x 1 [source_file: code]\n        NAME x 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME a$$inline_1 1 [source_file: code]\n                        INC 1 [incrdecr: 1] [source_file: code]\n                            NAME x 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    NAME a$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    INC 1 [incrdecr: 1] [source_file: code]\n        NAME x 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline13(FunctionInjectorTest.java:866)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline14\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return a+a}var a$$inline_0=x++;a$$inline_0+a$$inline_0\nResult: function foo(a){return a+a}var a$$inline_1=x++;a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                ADD 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                    NAME x 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            ADD 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                ADD 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                INC 1 [incrdecr: 1] [source_file: code]\n                    NAME x 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            ADD 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    INC 1 [incrdecr: 1] [source_file: code]\n        NAME x 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline14(FunctionInjectorTest.java:877)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline15\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return a+a}var a$$inline_0=new Date;a$$inline_0+a$$inline_0\nResult: function foo(a){return a+a}var a$$inline_1=new Date;a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                ADD 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                NEW 1 [source_file:  [testcode] ]\n                    NAME Date 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            ADD 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                ADD 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                NEW 1 [source_file: code]\n                    NAME Date 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            ADD 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    NEW 1 [source_file:  [testcode] ]\n        NAME Date 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    NEW 1 [source_file: code]\n        NAME Date 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline15(FunctionInjectorTest.java:888)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline16\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return a+a}var a$$inline_0=function(){};a$$inline_0+a$$inline_0\nResult: function foo(a){return a+a}var a$$inline_1=function(){};a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                ADD 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                FUNCTION  1 [source_file:  [testcode] ]\n                    NAME  1 [source_file:  [testcode] ]\n                    LP 1 [source_file:  [testcode] ]\n                    BLOCK 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            ADD 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                ADD 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                FUNCTION  1 [source_file: code]\n                    NAME  1 [source_file: code]\n                    LP 1 [source_file: code]\n                    BLOCK 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            ADD 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    FUNCTION  1 [source_file:  [testcode] ]\n        NAME  1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    FUNCTION  1 [source_file: code]\n        NAME  1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline16(FunctionInjectorTest.java:899)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline17\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return true}var a$$inline_0=goo();true\nResult: function foo(a){return true}var a$$inline_1=goo();true\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                TRUE 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                    NAME goo 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            TRUE 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                TRUE 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                CALL 1 [free_call: 1] [source_file: code]\n                    NAME goo 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            TRUE 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME goo 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    CALL 1 [free_call: 1] [source_file: code]\n        NAME goo 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline17(FunctionInjectorTest.java:910)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline18\njunit.framework.AssertionFailedError:\nExpected: function foo(a){var b;return a}function x(){var a$$inline_0=goo();var b$$inline_1;a$$inline_0}\nResult: function foo(a){var b;return a}function x(){var a$$inline_2=goo();var b$$inline_3;a$$inline_2}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            VAR 1 [source_file:  [testcode] ]\n                NAME b 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FUNCTION x 1 [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n                        CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                            NAME goo 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_1 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            VAR 1 [source_file: code]\n                NAME b 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FUNCTION x 1 [source_file: code]\n        NAME x 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME a$$inline_2 1 [source_file: code]\n                        CALL 1 [free_call: 1] [source_file: code]\n                            NAME goo 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME b$$inline_3 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    NAME a$$inline_2 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME goo 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_2 1 [source_file: code]\n    CALL 1 [free_call: 1] [source_file: code]\n        NAME goo 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline18(FunctionInjectorTest.java:919)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline19\njunit.framework.AssertionFailedError:\nExpected: var x=1;var y=2;function foo(a,b){x=b;y=a}function bar(){var a$$inline_0=x;x=y;y=a$$inline_0}\nResult: var x=1;var y=2;function foo(a,b){x=b;y=a}function bar(){var a$$inline_2=x;x=y;y=a$$inline_2}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n            NUMBER 1.0 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME y 1 [source_file:  [testcode] ]\n            NUMBER 2.0 1 [source_file:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n            NAME b 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            EXPR_RESULT 1 [source_file:  [testcode] ]\n                ASSIGN 1 [source_file:  [testcode] ]\n                    NAME x 1 [source_file:  [testcode] ]\n                    NAME b 1 [source_file:  [testcode] ]\n            EXPR_RESULT 1 [source_file:  [testcode] ]\n                ASSIGN 1 [source_file:  [testcode] ]\n                    NAME y 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FUNCTION bar 1 [source_file:  [testcode] ]\n        NAME bar 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n                        NAME x 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    ASSIGN 1 [source_file:  [testcode] ]\n                        NAME x 1 [source_file:  [testcode] ]\n                        NAME y 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    ASSIGN 1 [source_file:  [testcode] ]\n                        NAME y 1 [source_file:  [testcode] ]\n                        NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    VAR 1 [source_file: code]\n        NAME x 1 [source_file: code]\n            NUMBER 1.0 1 [source_file: code]\n    VAR 1 [source_file: code]\n        NAME y 1 [source_file: code]\n            NUMBER 2.0 1 [source_file: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n            NAME b 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            EXPR_RESULT 1 [source_file: code]\n                ASSIGN 1 [source_file: code]\n                    NAME x 1 [source_file: code]\n                    NAME b 1 [source_file: code]\n            EXPR_RESULT 1 [source_file: code]\n                ASSIGN 1 [source_file: code]\n                    NAME y 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FUNCTION bar 1 [source_file: code]\n        NAME bar 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME a$$inline_2 1 [source_file: code]\n                        NAME x 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    ASSIGN 1 [source_file: code]\n                        NAME x 1 [source_file: code]\n                        NAME y 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    ASSIGN 1 [source_file: code]\n                        NAME y 1 [source_file: code]\n                        NAME a$$inline_2 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_2 1 [source_file: code]\n    NAME x 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline19(FunctionInjectorTest.java:930)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testBug1897706\njunit.framework.AssertionFailedError:\nExpected: function foo(a){}var a$$inline_0=x()\nResult: function foo(a){}var a$$inline_1=x()\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                    NAME x 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                CALL 1 [free_call: 1] [source_file: code]\n                    NAME x 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    CALL 1 [free_call: 1] [source_file: code]\n        NAME x 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testBug1897706(FunctionInjectorTest.java:1315)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInlineFunctionWithInnerFunction5\njunit.framework.AssertionFailedError:\nExpected: function foo(){function x(){var a;return true}return x}var x$$inline_0=function(){var a$$inline_1;return true};x$$inline_0\nResult: function foo(){function x(){var a;return true}return x}var x$$inline_1=function(){var a$$inline_2;return true};x$$inline_1\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            FUNCTION x 1 [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n                LP 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n                    VAR 1 [source_file:  [testcode] ]\n                        NAME a 1 [source_file:  [testcode] ]\n                    RETURN 1 [source_file:  [testcode] ]\n                        TRUE 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME x$$inline_0 1 [source_file:  [testcode] ]\n                FUNCTION  1 [source_file:  [testcode] ]\n                    NAME  1 [source_file:  [testcode] ]\n                    LP 1 [source_file:  [testcode] ]\n                    BLOCK 1 [source_file:  [testcode] ]\n                        VAR 1 [source_file:  [testcode] ]\n                            NAME a$$inline_1 1 [source_file:  [testcode] ]\n                        RETURN 1 [source_file:  [testcode] ]\n                            TRUE 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            NAME x$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            FUNCTION x 1 [source_file: code]\n                NAME x 1 [source_file: code]\n                LP 1 [source_file: code]\n                BLOCK 1 [source_file: code]\n                    VAR 1 [source_file: code]\n                        NAME a 1 [source_file: code]\n                    RETURN 1 [source_file: code]\n                        TRUE 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                NAME x 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME x$$inline_1 1 [source_file: code]\n                FUNCTION  1 [source_file: code]\n                    NAME  1 [source_file: code]\n                    LP 1 [source_file: code]\n                    BLOCK 1 [source_file: code]\n                        VAR 1 [source_file: code]\n                            NAME a$$inline_2 1 [source_file: code]\n                        RETURN 1 [source_file: code]\n                            TRUE 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            NAME x$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file:  [testcode] ]\n    FUNCTION  1 [source_file:  [testcode] ]\n        NAME  1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            VAR 1 [source_file:  [testcode] ]\n                NAME a$$inline_1 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                TRUE 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: code]\n    FUNCTION  1 [source_file: code]\n        NAME  1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            VAR 1 [source_file: code]\n                NAME a$$inline_2 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                TRUE 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInlineFunctionWithInnerFunction5(FunctionInjectorTest.java:1025)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateWithParameters3\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=x++;a$$inline_0\nResult: var a$$inline_1=x++;a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME a$$inline_0 1 [source_file:  [testcode] ]\n            INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME a$$inline_1 1 [source_file:  [testcode] ]\n            INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NAME a$$inline_1 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateWithParameters3(FunctionToBlockMutatorTest.java:112)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateCallInLoopVars1\njunit.framework.AssertionFailedError:\nExpected: var B$$inline_1=bar();1\nResult: var B$$inline_3=bar();1\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME B$$inline_1 1 [source_file:  [testcode] ]\n            CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                NAME bar 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME B$$inline_3 1 [source_file:  [testcode] ]\n            CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                NAME bar 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME B$$inline_1 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME bar 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME B$$inline_3 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME bar 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateCallInLoopVars1(FunctionToBlockMutatorTest.java:151)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateInitializeUninitializedVars1\njunit.framework.AssertionFailedError:\nExpected: var b$$inline_1=void 0;1\nResult: var b$$inline_3=void 0;1\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME b$$inline_1 1 [source_file:  [testcode] ]\n            VOID 1 [source_file:  [testcode] ]\n                NUMBER 0.0 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME b$$inline_3 1 [source_file:  [testcode] ]\n            VOID 1 [source_file:  [testcode] ]\n                NUMBER 0.0 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME b$$inline_1 1 [source_file:  [testcode] ]\n    VOID 1 [source_file:  [testcode] ]\n        NUMBER 0.0 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME b$$inline_3 1 [source_file:  [testcode] ]\n    VOID 1 [source_file:  [testcode] ]\n        NUMBER 0.0 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateInitializeUninitializedVars1(FunctionToBlockMutatorTest.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateInitializeUninitializedVars2\njunit.framework.AssertionFailedError:\nExpected: JSCompiler_inline_label_foo_2:for(var b$$inline_1 in c){1;break JSCompiler_inline_label_foo_2}\nResult: JSCompiler_inline_label_foo_4:for(var b$$inline_3 in c){1;break JSCompiler_inline_label_foo_4}\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    LABEL 1 [source_file:  [testcode] ]\n        LABEL_NAME JSCompiler_inline_label_foo_2 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            FOR 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_1 1 [source_file:  [testcode] ]\n                NAME c 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n                    EXPR_RESULT 1 [source_file:  [testcode] ]\n                        NUMBER 1.0 1 [source_file:  [testcode] ]\n                    BREAK 1 [source_file:  [testcode] ]\n                        LABEL_NAME JSCompiler_inline_label_foo_2 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    LABEL 1 [source_file:  [testcode] ]\n        LABEL_NAME JSCompiler_inline_label_foo_4 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            FOR 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_3 1 [source_file:  [testcode] ]\n                NAME c 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n                    EXPR_RESULT 1 [source_file:  [testcode] ]\n                        NUMBER 1.0 1 [source_file:  [testcode] ]\n                    BREAK 1 [source_file:  [testcode] ]\n                        LABEL_NAME JSCompiler_inline_label_foo_4 1 [source_file:  [testcode] ]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_foo_2 1 [source_file:  [testcode] ]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_foo_4 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateInitializeUninitializedVars2(FunctionToBlockMutatorTest.java:136)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateFunctionDefinition\njunit.framework.AssertionFailedError:\nExpected: var g$$inline_1=function(){}\nResult: var g$$inline_3=function(){}\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME g$$inline_1 1 [source_file:  [testcode] ]\n            FUNCTION  1 [source_file:  [testcode] ]\n                NAME  1 [source_file:  [testcode] ]\n                LP 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME g$$inline_3 1 [source_file:  [testcode] ]\n            FUNCTION  1 [source_file:  [testcode] ]\n                NAME  1 [source_file:  [testcode] ]\n                LP 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME g$$inline_1 1 [source_file:  [testcode] ]\n    FUNCTION  1 [source_file:  [testcode] ]\n        NAME  1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME g$$inline_3 1 [source_file:  [testcode] ]\n    FUNCTION  1 [source_file:  [testcode] ]\n        NAME  1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateFunctionDefinition(FunctionToBlockMutatorTest.java:167)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutate8\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=x++;a$$inline_0+a$$inline_0\nResult: var a$$inline_1=x++;a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME a$$inline_0 1 [source_file:  [testcode] ]\n            INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        ADD 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME a$$inline_1 1 [source_file:  [testcode] ]\n            INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        ADD 1 [source_file:  [testcode] ]\n            NAME a$$inline_1 1 [source_file:  [testcode] ]\n            NAME a$$inline_1 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutate8(FunctionToBlockMutatorTest.java:121)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testLoopWithFunctionWithFunction\njunit.framework.AssertionFailedError:\nExpected: function _testLocalVariableInLoop_(){var result=0;var arr$$inline_0=[1,2,3,4,5];var i$$inline_1=0;var l$$inline_2=arr$$inline_0.length;for(;i$$inline_1<l$$inline_2;i$$inline_1++){var j$$inline_3=arr$$inline_0[i$$inline_1];(function(){var k$$inline_4=j$$inline_3;setTimeout(function(){result+=k$$inline_4},5*i$$inline_1)})()}}\nResult: function _testLocalVariableInLoop_(){var result=0;var arr$$inline_4=[1,2,3,4,5];var i$$inline_5=0;var l$$inline_6=arr$$inline_4.length;for(;i$$inline_5<l$$inline_6;i$$inline_5++){var j$$inline_7=arr$$inline_4[i$$inline_5];(function(){var k$$inline_8=j$$inline_7;setTimeout(function(){result+=k$$inline_8},5*i$$inline_5)})()}}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        FUNCTION _testLocalVariableInLoop_ 1 [source_file: expected0]\n            NAME _testLocalVariableInLoop_ 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 2 [source_file: expected0]\n                    NAME result 2 [source_file: expected0]\n                        NUMBER 0.0 2 [source_file: expected0]\n                BLOCK 3 [source_file: expected0]\n                    VAR 3 [source_file: expected0]\n                        NAME arr$$inline_0 3 [source_file: expected0]\n                            ARRAYLIT 3 [source_file: expected0]\n                                NUMBER 1.0 3 [source_file: expected0]\n                                NUMBER 2.0 3 [source_file: expected0]\n                                NUMBER 3.0 3 [source_file: expected0]\n                                NUMBER 4.0 3 [source_file: expected0]\n                                NUMBER 5.0 3 [source_file: expected0]\n                    VAR 4 [source_file: expected0]\n                        NAME i$$inline_1 4 [source_file: expected0]\n                            NUMBER 0.0 4 [source_file: expected0]\n                    VAR 5 [source_file: expected0]\n                        NAME l$$inline_2 5 [source_file: expected0]\n                            GETPROP 5 [source_file: expected0]\n                                NAME arr$$inline_0 5 [source_file: expected0]\n                                STRING length 5 [source_file: expected0]\n                    FOR 6 [source_file: expected0]\n                        EMPTY 6 [source_file: expected0]\n                        LT 6 [source_file: expected0]\n                            NAME i$$inline_1 6 [source_file: expected0]\n                            NAME l$$inline_2 6 [source_file: expected0]\n                        INC 6 [incrdecr: 1] [source_file: expected0]\n                            NAME i$$inline_1 6 [source_file: expected0]\n                        BLOCK 6 [source_file: expected0]\n                            VAR 7 [source_file: expected0]\n                                NAME j$$inline_3 7 [source_file: expected0]\n                                    GETELEM 7 [source_file: expected0]\n                                        NAME arr$$inline_0 7 [source_file: expected0]\n                                        NAME i$$inline_1 7 [source_file: expected0]\n                            EXPR_RESULT 8 [source_file: expected0]\n                                CALL 11 [free_call: 1] [source_file: expected0]\n                                    FUNCTION  8 [parenthesized: true] [source_file: expected0]\n                                        NAME  8 [source_file: expected0]\n                                        LP 8 [source_file: expected0]\n                                        BLOCK 8 [source_file: expected0]\n                                            VAR 9 [source_file: expected0]\n                                                NAME k$$inline_4 9 [source_file: expected0]\n                                                    NAME j$$inline_3 9 [source_file: expected0]\n                                            EXPR_RESULT 10 [source_file: expected0]\n                                                CALL 10 [free_call: 1] [source_file: expected0]\n                                                    NAME setTimeout 10 [source_file: expected0]\n                                                    FUNCTION  10 [source_file: expected0]\n                                                        NAME  10 [source_file: expected0]\n                                                        LP 10 [source_file: expected0]\n                                                        BLOCK 10 [source_file: expected0]\n                                                            EXPR_RESULT 10 [source_file: expected0]\n                                                                ASSIGN_ADD 10 [source_file: expected0]\n                                                                    NAME result 10 [source_file: expected0]\n                                                                    NAME k$$inline_4 10 [source_file: expected0]\n                                                    MUL 10 [source_file: expected0]\n                                                        NUMBER 5.0 10 [source_file: expected0]\n                                                        NAME i$$inline_1 10 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        FUNCTION _testLocalVariableInLoop_ 1 [source_file: testcode]\n            NAME _testLocalVariableInLoop_ 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 2 [source_file: testcode]\n                    NAME result 2 [source_file: testcode]\n                        NUMBER 0.0 2 [source_file: testcode]\n                BLOCK 3 [source_file: testcode]\n                    VAR 4 [source_file: testcode]\n                        NAME arr$$inline_4 4 [source_file: testcode]\n                            ARRAYLIT 4 [source_file: testcode]\n                                NUMBER 1.0 4 [source_file: testcode]\n                                NUMBER 2.0 4 [source_file: testcode]\n                                NUMBER 3.0 4 [source_file: testcode]\n                                NUMBER 4.0 4 [source_file: testcode]\n                                NUMBER 5.0 4 [source_file: testcode]\n                    VAR 3\n                        NAME i$$inline_5 5 [source_file: testcode]\n                            NUMBER 0.0 5 [source_file: testcode]\n                    VAR 5 [source_file: testcode]\n                        NAME l$$inline_6 5 [source_file: testcode]\n                            GETPROP 5 [source_file: testcode]\n                                NAME arr$$inline_4 5 [source_file: testcode]\n                                STRING length 5 [source_file: testcode]\n                    FOR 5 [source_file: testcode]\n                        EMPTY 5 [source_file: testcode]\n                        LT 5 [source_file: testcode]\n                            NAME i$$inline_5 5 [source_file: testcode]\n                            NAME l$$inline_6 5 [source_file: testcode]\n                        INC 5 [incrdecr: 1] [source_file: testcode]\n                            NAME i$$inline_5 5 [source_file: testcode]\n                        BLOCK 5 [source_file: testcode]\n                            VAR 6 [source_file: testcode]\n                                NAME j$$inline_7 6 [source_file: testcode]\n                                    GETELEM 6 [source_file: testcode]\n                                        NAME arr$$inline_4 6 [source_file: testcode]\n                                        NAME i$$inline_5 6 [source_file: testcode]\n                            EXPR_RESULT 7 [source_file: testcode]\n                                CALL 10 [free_call: 1] [source_file: testcode]\n                                    FUNCTION  7 [parenthesized: true] [source_file: testcode]\n                                        NAME  7 [source_file: testcode]\n                                        LP 7 [source_file: testcode]\n                                        BLOCK 7 [source_file: testcode]\n                                            VAR 8 [source_file: testcode]\n                                                NAME k$$inline_8 8 [source_file: testcode]\n                                                    NAME j$$inline_7 8 [source_file: testcode]\n                                            EXPR_RESULT 9 [source_file: testcode]\n                                                CALL 9 [free_call: 1] [source_file: testcode]\n                                                    NAME setTimeout 9 [source_file: testcode]\n                                                    FUNCTION  9 [source_file: testcode]\n                                                        NAME  9 [source_file: testcode]\n                                                        LP 9 [source_file: testcode]\n                                                        BLOCK 9 [source_file: testcode]\n                                                            EXPR_RESULT 9 [source_file: testcode]\n                                                                ASSIGN_ADD 9 [source_file: testcode]\n                                                                    NAME result 9 [source_file: testcode]\n                                                                    NAME k$$inline_8 9 [source_file: testcode]\n                                                    MUL 9 [source_file: testcode]\n                                                        NUMBER 5.0 9 [source_file: testcode]\n                                                        NAME i$$inline_5 9 [source_file: testcode]\n\n\nSubtree1: NAME arr$$inline_0 3 [source_file: expected0]\n    ARRAYLIT 3 [source_file: expected0]\n        NUMBER 1.0 3 [source_file: expected0]\n        NUMBER 2.0 3 [source_file: expected0]\n        NUMBER 3.0 3 [source_file: expected0]\n        NUMBER 4.0 3 [source_file: expected0]\n        NUMBER 5.0 3 [source_file: expected0]\n\n\nSubtree2: NAME arr$$inline_4 4 [source_file: testcode]\n    ARRAYLIT 4 [source_file: testcode]\n        NUMBER 1.0 4 [source_file: testcode]\n        NUMBER 2.0 4 [source_file: testcode]\n        NUMBER 3.0 4 [source_file: testcode]\n        NUMBER 4.0 4 [source_file: testcode]\n        NUMBER 5.0 4 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testLoopWithFunctionWithFunction(InlineFunctionsTest.java:2201)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables16\njunit.framework.AssertionFailedError:\nExpected: var a=3;var a$$inline_0=5;a\nResult: var a=3;var a$$inline_1=5;a\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 3.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 5.0 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    NAME a 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 3.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 5.0 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    NAME a 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 5.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 5.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables16(InlineFunctionsTest.java:845)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables18\njunit.framework.AssertionFailedError:\nExpected: var a=0;function _goo(){var a$$2=2;var x;var a$$inline_0=3;x=a+a}\nResult: var a=0;function _goo(){var a$$2=2;var x;var a$$inline_1=3;x=a+a}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 0.0 1 [source_file: expected0]\n        FUNCTION _goo 1 [source_file: expected0]\n            NAME _goo 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME a$$2 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME x 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                            NUMBER 3.0 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME x 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NAME a 1 [source_file: expected0]\n                                NAME a 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 0.0 1 [source_file: testcode]\n        FUNCTION _goo 1 [source_file: testcode]\n            NAME _goo 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME a$$2 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME x 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                            NUMBER 3.0 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME x 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                NAME a 1 [source_file: testcode]\n                                NAME a 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 3.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 3.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables18(InlineFunctionsTest.java:874)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testCostBasedInlining11\njunit.framework.AssertionFailedError:\nExpected: var a;var a$$inline_0=1+1;a=a$$inline_0+a$$inline_0\nResult: var a;var a$$inline_1=1+1;a=a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME a 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME a 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    ADD 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    ADD 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testCostBasedInlining11(InlineFunctionsTest.java:996)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testMixedModeInliningCosting3\njunit.framework.AssertionFailedError:\nExpected: 1+2+1+2+4+5+6+7+8+9+1+2+3+10;var JSCompiler_inline_anon_param_2=x();2+3+2+3+4+5+6+7+8+9+1+2+3+10\nResult: 1+2+1+2+4+5+6+7+8+9+1+2+3+10;var JSCompiler_inline_anon_param_4=x();2+3+2+3+4+5+6+7+8+9+1+2+3+10\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ADD 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                ADD 1 [source_file: expected0]\n                                    ADD 1 [source_file: expected0]\n                                        ADD 1 [source_file: expected0]\n                                            ADD 1 [source_file: expected0]\n                                                ADD 1 [source_file: expected0]\n                                                    ADD 1 [source_file: expected0]\n                                                        ADD 1 [source_file: expected0]\n                                                            ADD 1 [source_file: expected0]\n                                                                NUMBER 1.0 1 [source_file: expected0]\n                                                                NUMBER 2.0 1 [source_file: expected0]\n                                                            NUMBER 1.0 1 [source_file: expected0]\n                                                        NUMBER 2.0 1 [source_file: expected0]\n                                                    NUMBER 4.0 1 [source_file: expected0]\n                                                NUMBER 5.0 1 [source_file: expected0]\n                                            NUMBER 6.0 1 [source_file: expected0]\n                                        NUMBER 7.0 1 [source_file: expected0]\n                                    NUMBER 8.0 1 [source_file: expected0]\n                                NUMBER 9.0 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 3.0 1 [source_file: expected0]\n                NUMBER 10.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME JSCompiler_inline_anon_param_2 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME x 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                ADD 1 [source_file: expected0]\n                                    ADD 1 [source_file: expected0]\n                                        ADD 1 [source_file: expected0]\n                                            ADD 1 [source_file: expected0]\n                                                ADD 1 [source_file: expected0]\n                                                    ADD 1 [source_file: expected0]\n                                                        ADD 1 [source_file: expected0]\n                                                            ADD 1 [source_file: expected0]\n                                                                ADD 1 [source_file: expected0]\n                                                                    NUMBER 2.0 1 [source_file: expected0]\n                                                                    NUMBER 3.0 1 [source_file: expected0]\n                                                                NUMBER 2.0 1 [source_file: expected0]\n                                                            NUMBER 3.0 1 [source_file: expected0]\n                                                        NUMBER 4.0 1 [source_file: expected0]\n                                                    NUMBER 5.0 1 [source_file: expected0]\n                                                NUMBER 6.0 1 [source_file: expected0]\n                                            NUMBER 7.0 1 [source_file: expected0]\n                                        NUMBER 8.0 1 [source_file: expected0]\n                                    NUMBER 9.0 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n                        NUMBER 3.0 1 [source_file: expected0]\n                    NUMBER 10.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            ADD 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                ADD 1 [source_file: testcode]\n                                    ADD 1 [source_file: testcode]\n                                        ADD 1 [source_file: testcode]\n                                            ADD 1 [source_file: testcode]\n                                                ADD 1 [source_file: testcode]\n                                                    ADD 1 [source_file: testcode]\n                                                        ADD 1 [source_file: testcode]\n                                                            ADD 1 [source_file: testcode]\n                                                                NUMBER 1.0 1 [source_file: testcode]\n                                                                NUMBER 2.0 1 [source_file: testcode]\n                                                            NUMBER 1.0 1 [source_file: testcode]\n                                                        NUMBER 2.0 1 [source_file: testcode]\n                                                    NUMBER 4.0 1 [source_file: testcode]\n                                                NUMBER 5.0 1 [source_file: testcode]\n                                            NUMBER 6.0 1 [source_file: testcode]\n                                        NUMBER 7.0 1 [source_file: testcode]\n                                    NUMBER 8.0 1 [source_file: testcode]\n                                NUMBER 9.0 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                    NUMBER 3.0 1 [source_file: testcode]\n                NUMBER 10.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME JSCompiler_inline_anon_param_4 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME x 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                ADD 1 [source_file: testcode]\n                                    ADD 1 [source_file: testcode]\n                                        ADD 1 [source_file: testcode]\n                                            ADD 1 [source_file: testcode]\n                                                ADD 1 [source_file: testcode]\n                                                    ADD 1 [source_file: testcode]\n                                                        ADD 1 [source_file: testcode]\n                                                            ADD 1 [source_file: testcode]\n                                                                ADD 1 [source_file: testcode]\n                                                                    NUMBER 2.0 1 [source_file: testcode]\n                                                                    NUMBER 3.0 1 [source_file: testcode]\n                                                                NUMBER 2.0 1 [source_file: testcode]\n                                                            NUMBER 3.0 1 [source_file: testcode]\n                                                        NUMBER 4.0 1 [source_file: testcode]\n                                                    NUMBER 5.0 1 [source_file: testcode]\n                                                NUMBER 6.0 1 [source_file: testcode]\n                                            NUMBER 7.0 1 [source_file: testcode]\n                                        NUMBER 8.0 1 [source_file: testcode]\n                                    NUMBER 9.0 1 [source_file: testcode]\n                                NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n                        NUMBER 3.0 1 [source_file: testcode]\n                    NUMBER 10.0 1 [source_file: testcode]\n\n\nSubtree1: NAME JSCompiler_inline_anon_param_2 1 [source_file: expected0]\n    CALL 1 [free_call: 1] [source_file: expected0]\n        NAME x 1 [source_file: expected0]\n\n\nSubtree2: NAME JSCompiler_inline_anon_param_4 1 [source_file: testcode]\n    CALL 1 [free_call: 1] [source_file: testcode]\n        NAME x 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testMixedModeInliningCosting3(InlineFunctionsTest.java:529)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineNeverMutateConstants\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=undefined;x$$inline_0=1\nResult: var x$$inline_1=undefined;x$$inline_1=1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NAME undefined 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NAME undefined 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NAME undefined 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NAME undefined 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineNeverMutateConstants(InlineFunctionsTest.java:617)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineWithThis7\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=void 0;a$$inline_0=1;void 0\nResult: var a$$inline_1=void 0;a$$inline_1=1;void 0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    VOID 1 [source_file: expected0]\n                        NUMBER 0.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                VOID 1 [source_file: expected0]\n                    NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    VOID 1 [source_file: testcode]\n                        NUMBER 0.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                VOID 1 [source_file: testcode]\n                    NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    VOID 1 [source_file: expected0]\n        NUMBER 0.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    VOID 1 [source_file: testcode]\n        NUMBER 0.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineWithThis7(InlineFunctionsTest.java:1895)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testAnonymous1\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=10;var b$$inline_1=a$$inline_0;a$$inline_0++;alert(b$$inline_1)\nResult: var a$$inline_2=10;var b$$inline_3=a$$inline_2;a$$inline_2++;alert(b$$inline_3)\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 10.0 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME b$$inline_1 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME alert 1 [source_file: expected0]\n                        NAME b$$inline_1 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_2 1 [source_file: testcode]\n                    NUMBER 10.0 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME b$$inline_3 1 [source_file: testcode]\n                        NAME a$$inline_2 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME a$$inline_2 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME alert 1 [source_file: testcode]\n                        NAME b$$inline_3 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 10.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_2 1 [source_file: testcode]\n    NUMBER 10.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testAnonymous1(InlineFunctionsTest.java:2169)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testAnonymous3\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=10;(function(){arguments})()\nResult: var a$$inline_1=10;(function(){arguments})()\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 10.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    FUNCTION  1 [parenthesized: true] [source_file: expected0]\n                        NAME  1 [source_file: expected0]\n                        LP 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                NAME arguments 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 10.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    FUNCTION  1 [parenthesized: true] [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                NAME arguments 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 10.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 10.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testAnonymous3(InlineFunctionsTest.java:2191)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables1\njunit.framework.AssertionFailedError:\nExpected: var a=0;var a$$inline_0=3+4\nResult: var a=0;var a$$inline_1=3+4\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 0.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        NUMBER 3.0 1 [source_file: expected0]\n                        NUMBER 4.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 0.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        NUMBER 3.0 1 [source_file: testcode]\n                        NUMBER 4.0 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    ADD 1 [source_file: expected0]\n        NUMBER 3.0 1 [source_file: expected0]\n        NUMBER 4.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    ADD 1 [source_file: testcode]\n        NUMBER 3.0 1 [source_file: testcode]\n        NUMBER 4.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables1(InlineFunctionsTest.java:682)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables3\njunit.framework.AssertionFailedError:\nExpected: var a=0;function _bar(){var a$$inline_0=2;a=3+a$$inline_0}\nResult: var a=0;function _bar(){var a$$inline_1=2;a=3+a$$inline_1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 0.0 1 [source_file: expected0]\n        FUNCTION _bar 1 [source_file: expected0]\n            NAME _bar 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME a 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NUMBER 3.0 1 [source_file: expected0]\n                                NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 0.0 1 [source_file: testcode]\n        FUNCTION _bar 1 [source_file: testcode]\n            NAME _bar 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME a 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                NUMBER 3.0 1 [source_file: testcode]\n                                NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables3(InlineFunctionsTest.java:706)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables6\njunit.framework.AssertionFailedError:\nExpected: var a=0;function _bar(a$$2){var a$$inline_0=4;a$$2=3+a$$inline_0}\nResult: var a=0;function _bar(a$$2){var a$$inline_1=4;a$$2=3+a$$inline_1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 0.0 1 [source_file: expected0]\n        FUNCTION _bar 1 [source_file: expected0]\n            NAME _bar 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n                NAME a$$2 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                            NUMBER 4.0 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME a$$2 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NUMBER 3.0 1 [source_file: expected0]\n                                NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 0.0 1 [source_file: testcode]\n        FUNCTION _bar 1 [source_file: testcode]\n            NAME _bar 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n                NAME a$$2 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                            NUMBER 4.0 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME a$$2 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                NUMBER 3.0 1 [source_file: testcode]\n                                NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 4.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 4.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables6(InlineFunctionsTest.java:737)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables7\njunit.framework.AssertionFailedError:\nExpected: var a=3;var a$$inline_0=5;a\nResult: var a=3;var a$$inline_1=5;a\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 3.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 5.0 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    NAME a 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 3.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 5.0 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    NAME a 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 5.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 5.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables7(InlineFunctionsTest.java:748)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testFunctionExpressionCallInlining11b\njunit.framework.AssertionFailedError:\nExpected: var JSCompiler_inline_result$$0;var a$$inline_1;JSCompiler_inline_result$$0=function(){foo()};JSCompiler_inline_result$$0()\nResult: var JSCompiler_inline_result$$0;var a$$inline_2;JSCompiler_inline_result$$0=function(){foo()};JSCompiler_inline_result$$0()\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_1 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n                    FUNCTION  1 [source_file: expected0]\n                        NAME  1 [source_file: expected0]\n                        LP 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                CALL 1 [free_call: 1] [source_file: expected0]\n                                    NAME foo 1 [source_file: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            CALL 1 [free_call: 1] [source_file: expected0]\n                NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME JSCompiler_inline_result$$0 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_2 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$0 1 [source_file: testcode]\n                    FUNCTION  1 [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                CALL 1 [free_call: 1] [source_file: testcode]\n                                    NAME foo 1 [source_file: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            CALL 1 [free_call: 1] [source_file: testcode]\n                NAME JSCompiler_inline_result$$0 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_1 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_2 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testFunctionExpressionCallInlining11b(InlineFunctionsTest.java:1682)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexInlineNoResultNoParamCall3\njunit.framework.AssertionFailedError:\nExpected: function _foo(){a();b();var z$$inline_0=1+1}\nResult: function _foo(){a();b();var z$$inline_1=1+1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        FUNCTION _foo 1 [source_file: expected0]\n            NAME _foo 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME a 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME b 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME z$$inline_0 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        FUNCTION _foo 1 [source_file: testcode]\n            NAME _foo 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        CALL 1 [free_call: 1] [source_file: testcode]\n                            NAME a 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        CALL 1 [free_call: 1] [source_file: testcode]\n                            NAME b 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME z$$inline_1 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                NUMBER 1.0 1 [source_file: testcode]\n                                NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME z$$inline_0 1 [source_file: expected0]\n    ADD 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME z$$inline_1 1 [source_file: testcode]\n    ADD 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexInlineNoResultNoParamCall3(InlineFunctionsTest.java:1212)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testCostBasedInlining9\njunit.framework.AssertionFailedError:\nExpected: var a;var a$$inline_0=1+1+1;a=1+a$$inline_0+a$$inline_0\nResult: var a;var a$$inline_1=1+1+1;a=1+a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME a 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NAME a$$inline_0 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME a 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NAME a$$inline_1 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    ADD 1 [source_file: expected0]\n        ADD 1 [source_file: expected0]\n            NUMBER 1.0 1 [source_file: expected0]\n            NUMBER 1.0 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    ADD 1 [source_file: testcode]\n        ADD 1 [source_file: testcode]\n            NUMBER 1.0 1 [source_file: testcode]\n            NUMBER 1.0 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testCostBasedInlining9(InlineFunctionsTest.java:977)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testMethodWithFunctionWithFunction\njunit.framework.AssertionFailedError:\nExpected: function _testLocalVariable_(){var result=0;var j$$inline_2=[i];var j$$inline_0=j$$inline_2;setTimeout(function(){result+=j$$inline_0},5*i);j$$inline_2=null}\nResult: function _testLocalVariable_(){var result=0;var j$$inline_4=[i];var j$$inline_1=j$$inline_4;setTimeout(function(){result+=j$$inline_1},5*i);j$$inline_4=null}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        FUNCTION _testLocalVariable_ 1 [source_file: expected0]\n            NAME _testLocalVariable_ 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 2 [source_file: expected0]\n                    NAME result 2 [source_file: expected0]\n                        NUMBER 0.0 2 [source_file: expected0]\n                BLOCK 3 [source_file: expected0]\n                    VAR 4 [source_file: expected0]\n                        NAME j$$inline_2 4 [source_file: expected0]\n                            ARRAYLIT 4 [source_file: expected0]\n                                NAME i 4 [source_file: expected0]\n                    BLOCK 5 [source_file: expected0]\n                        VAR 6 [source_file: expected0]\n                            NAME j$$inline_0 6 [source_file: expected0]\n                                NAME j$$inline_2 6 [source_file: expected0]\n                        EXPR_RESULT 7 [source_file: expected0]\n                            CALL 7 [free_call: 1] [source_file: expected0]\n                                NAME setTimeout 7 [source_file: expected0]\n                                FUNCTION  7 [source_file: expected0]\n                                    NAME  7 [source_file: expected0]\n                                    LP 7 [source_file: expected0]\n                                    BLOCK 7 [source_file: expected0]\n                                        EXPR_RESULT 7 [source_file: expected0]\n                                            ASSIGN_ADD 7 [source_file: expected0]\n                                                NAME result 7 [source_file: expected0]\n                                                NAME j$$inline_0 7 [source_file: expected0]\n                                MUL 7 [source_file: expected0]\n                                    NUMBER 5.0 7 [source_file: expected0]\n                                    NAME i 7 [source_file: expected0]\n                    EXPR_RESULT 9 [source_file: expected0]\n                        ASSIGN 9 [source_file: expected0]\n                            NAME j$$inline_2 9 [source_file: expected0]\n                            NULL 9 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        FUNCTION _testLocalVariable_ 1 [source_file: testcode]\n            NAME _testLocalVariable_ 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 2 [source_file: testcode]\n                    NAME result 2 [source_file: testcode]\n                        NUMBER 0.0 2 [source_file: testcode]\n                BLOCK 3 [source_file: testcode]\n                    VAR 4 [source_file: testcode]\n                        NAME j$$inline_4 4 [source_file: testcode]\n                            ARRAYLIT 4 [source_file: testcode]\n                                NAME i 4 [source_file: testcode]\n                    BLOCK 5 [source_file: testcode]\n                        VAR 7 [source_file: testcode]\n                            NAME j$$inline_1 7 [source_file: testcode]\n                                NAME j$$inline_4 7 [source_file: testcode]\n                        EXPR_RESULT 6 [source_file: testcode]\n                            CALL 6 [free_call: 1] [source_file: testcode]\n                                NAME setTimeout 6 [source_file: testcode]\n                                FUNCTION  6 [source_file: testcode]\n                                    NAME  6 [source_file: testcode]\n                                    LP 6 [source_file: testcode]\n                                    BLOCK 6 [source_file: testcode]\n                                        EXPR_RESULT 6 [source_file: testcode]\n                                            ASSIGN_ADD 6 [source_file: testcode]\n                                                NAME result 6 [source_file: testcode]\n                                                NAME j$$inline_1 6 [source_file: testcode]\n                                MUL 6 [source_file: testcode]\n                                    NUMBER 5.0 6 [source_file: testcode]\n                                    NAME i 6 [source_file: testcode]\n                    EXPR_RESULT 8 [source_file: testcode]\n                        ASSIGN 8 [source_file: testcode]\n                            NAME j$$inline_4 8 [source_file: testcode]\n                            NULL 8 [source_file: testcode]\n\n\nSubtree1: NAME j$$inline_2 4 [source_file: expected0]\n    ARRAYLIT 4 [source_file: expected0]\n        NAME i 4 [source_file: expected0]\n\n\nSubtree2: NAME j$$inline_4 4 [source_file: testcode]\n    ARRAYLIT 4 [source_file: testcode]\n        NAME i 4 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testMethodWithFunctionWithFunction(InlineFunctionsTest.java:2236)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testFunctionExpressionYCombinator\njunit.framework.AssertionFailedError:\nExpected: var factorial;var M$$inline_4=function(f$$2){return function(n){if(n===0)return 1;else return n*f$$2(n-1)}};var f$$inline_0=function(f$$inline_7){return M$$inline_4(function(arg$$inline_8){return f$$inline_7(f$$inline_7)(arg$$inline_8)})};factorial=M$$inline_4(function(arg$$inline_1){return f$$inline_0(f$$inline_0)(arg$$inline_1)});factorial(5)\nResult: var factorial;var M$$inline_6=function(f$$2){return function(n){if(n===0)return 1;else return n*f$$2(n-1)}};var f$$inline_1=function(f$$inline_9){return M$$inline_6(function(arg$$inline_10){return f$$inline_9(f$$inline_9)(arg$$inline_10)})};factorial=M$$inline_6(function(arg$$inline_2){return f$$inline_1(f$$inline_1)(arg$$inline_2)});factorial(5)\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME factorial 1 [source_file: expected0]\n        BLOCK 2 [source_file: expected0]\n            VAR 3 [source_file: expected0]\n                NAME M$$inline_4 3 [source_file: expected0]\n                    FUNCTION  3 [source_file: expected0]\n                        NAME  3 [source_file: expected0]\n                        LP 3 [source_file: expected0]\n                            NAME f$$2 3 [source_file: expected0]\n                        BLOCK 3 [source_file: expected0]\n                            RETURN 4 [source_file: expected0]\n                                FUNCTION  4 [source_file: expected0]\n                                    NAME  4 [source_file: expected0]\n                                    LP 4 [source_file: expected0]\n                                        NAME n 4 [source_file: expected0]\n                                    BLOCK 4 [source_file: expected0]\n                                        IF 4 [source_file: expected0]\n                                            SHEQ 4 [source_file: expected0]\n                                                NAME n 4 [source_file: expected0]\n                                                NUMBER 0.0 4 [source_file: expected0]\n                                            BLOCK 4 [source_file: expected0]\n                                                RETURN 4 [source_file: expected0]\n                                                    NUMBER 1.0 4 [source_file: expected0]\n                                            BLOCK 4 [source_file: expected0]\n                                                RETURN 4 [source_file: expected0]\n                                                    MUL 4 [source_file: expected0]\n                                                        NAME n 4 [source_file: expected0]\n                                                        CALL 4 [free_call: 1] [source_file: expected0]\n                                                            NAME f$$2 4 [source_file: expected0]\n                                                            SUB 4 [source_file: expected0]\n                                                                NAME n 4 [source_file: expected0]\n                                                                NUMBER 1.0 4 [source_file: expected0]\n            BLOCK 6 [source_file: expected0]\n                VAR 7 [source_file: expected0]\n                    NAME f$$inline_0 7 [source_file: expected0]\n                        FUNCTION  7 [source_file: expected0]\n                            NAME  7 [source_file: expected0]\n                            LP 7 [source_file: expected0]\n                                NAME f$$inline_7 7 [source_file: expected0]\n                            BLOCK 7 [source_file: expected0]\n                                RETURN 8 [source_file: expected0]\n                                    CALL 8 [free_call: 1] [source_file: expected0]\n                                        NAME M$$inline_4 8 [source_file: expected0]\n                                        FUNCTION  9 [source_file: expected0]\n                                            NAME  9 [source_file: expected0]\n                                            LP 9 [source_file: expected0]\n                                                NAME arg$$inline_8 9 [source_file: expected0]\n                                            BLOCK 9 [source_file: expected0]\n                                                RETURN 10 [source_file: expected0]\n                                                    CALL 10 [free_call: 1] [source_file: expected0]\n                                                        CALL 10 [free_call: 1] [source_file: expected0]\n                                                            NAME f$$inline_7 10 [source_file: expected0]\n                                                            NAME f$$inline_7 10 [source_file: expected0]\n                                                        NAME arg$$inline_8 10 [source_file: expected0]\n                EXPR_RESULT 13 [source_file: expected0]\n                    ASSIGN 13 [source_file: expected0]\n                        NAME factorial 13 [source_file: expected0]\n                        CALL 13 [free_call: 1] [source_file: expected0]\n                            NAME M$$inline_4 13 [source_file: expected0]\n                            FUNCTION  14 [source_file: expected0]\n                                NAME  14 [source_file: expected0]\n                                LP 14 [source_file: expected0]\n                                    NAME arg$$inline_1 14 [source_file: expected0]\n                                BLOCK 14 [source_file: expected0]\n                                    RETURN 15 [source_file: expected0]\n                                        CALL 15 [free_call: 1] [source_file: expected0]\n                                            CALL 15 [free_call: 1] [source_file: expected0]\n                                                NAME f$$inline_0 15 [source_file: expected0]\n                                                NAME f$$inline_0 15 [source_file: expected0]\n                                            NAME arg$$inline_1 15 [source_file: expected0]\n        EXPR_RESULT 18 [source_file: expected0]\n            CALL 18 [free_call: 1] [source_file: expected0]\n                NAME factorial 18 [source_file: expected0]\n                NUMBER 5.0 18 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME factorial 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 13 [source_file: testcode]\n                NAME M$$inline_6 13 [source_file: testcode]\n                    FUNCTION  13 [source_file: testcode]\n                        NAME  13 [source_file: testcode]\n                        LP 13 [source_file: testcode]\n                            NAME f$$2 13 [source_file: testcode]\n                        BLOCK 13 [source_file: testcode]\n                            RETURN 14 [source_file: testcode]\n                                FUNCTION  14 [source_file: testcode]\n                                    NAME  14 [source_file: testcode]\n                                    LP 14 [source_file: testcode]\n                                        NAME n 14 [source_file: testcode]\n                                    BLOCK 14 [source_file: testcode]\n                                        IF 15 [source_file: testcode]\n                                            SHEQ 15 [source_file: testcode]\n                                                NAME n 15 [source_file: testcode]\n                                                NUMBER 0.0 15 [source_file: testcode]\n                                            BLOCK 16 [source_file: testcode]\n                                                RETURN 16 [source_file: testcode]\n                                                    NUMBER 1.0 16 [source_file: testcode]\n                                            BLOCK 18 [source_file: testcode]\n                                                RETURN 18 [source_file: testcode]\n                                                    MUL 18 [source_file: testcode]\n                                                        NAME n 18 [source_file: testcode]\n                                                        CALL 18 [free_call: 1] [source_file: testcode]\n                                                            NAME f$$2 18 [source_file: testcode]\n                                                            SUB 18 [source_file: testcode]\n                                                                NAME n 18 [source_file: testcode]\n                                                                NUMBER 1.0 18 [source_file: testcode]\n            BLOCK 2 [source_file: testcode]\n                VAR 7 [source_file: testcode]\n                    NAME f$$inline_1 7 [source_file: testcode]\n                        FUNCTION  7 [source_file: testcode]\n                            NAME  7 [source_file: testcode]\n                            LP 7 [source_file: testcode]\n                                NAME f$$inline_9 7 [source_file: testcode]\n                            BLOCK 7 [source_file: testcode]\n                                RETURN 8 [source_file: testcode]\n                                    CALL 8 [free_call: 1] [source_file: testcode]\n                                        NAME M$$inline_6 8 [source_file: testcode]\n                                        FUNCTION  8 [source_file: testcode]\n                                            NAME  8 [source_file: testcode]\n                                            LP 8 [source_file: testcode]\n                                                NAME arg$$inline_10 8 [source_file: testcode]\n                                            BLOCK 8 [source_file: testcode]\n                                                RETURN 9 [source_file: testcode]\n                                                    CALL 9 [free_call: 1] [source_file: testcode]\n                                                        CALL 9 [parenthesized: true] [free_call: 1] [source_file: testcode]\n                                                            NAME f$$inline_9 9 [source_file: testcode]\n                                                            NAME f$$inline_9 9 [source_file: testcode]\n                                                        NAME arg$$inline_10 9 [source_file: testcode]\n                EXPR_RESULT 3 [source_file: testcode]\n                    ASSIGN 3 [source_file: testcode]\n                        NAME factorial 3 [source_file: testcode]\n                        CALL 3 [free_call: 1] [source_file: testcode]\n                            NAME M$$inline_6 3 [source_file: testcode]\n                            FUNCTION  3 [source_file: testcode]\n                                NAME  3 [source_file: testcode]\n                                LP 3 [source_file: testcode]\n                                    NAME arg$$inline_2 3 [source_file: testcode]\n                                BLOCK 3 [source_file: testcode]\n                                    RETURN 4 [source_file: testcode]\n                                        CALL 4 [free_call: 1] [source_file: testcode]\n                                            CALL 4 [parenthesized: true] [free_call: 1] [source_file: testcode]\n                                                NAME f$$inline_1 4 [source_file: testcode]\n                                                NAME f$$inline_1 4 [source_file: testcode]\n                                            NAME arg$$inline_2 4 [source_file: testcode]\n        EXPR_RESULT 22 [source_file: testcode]\n            CALL 22 [free_call: 1] [source_file: testcode]\n                NAME factorial 22 [source_file: testcode]\n                NUMBER 5.0 22 [source_file: testcode]\n\n\nSubtree1: NAME M$$inline_4 3 [source_file: expected0]\n    FUNCTION  3 [source_file: expected0]\n        NAME  3 [source_file: expected0]\n        LP 3 [source_file: expected0]\n            NAME f$$2 3 [source_file: expected0]\n        BLOCK 3 [source_file: expected0]\n            RETURN 4 [source_file: expected0]\n                FUNCTION  4 [source_file: expected0]\n                    NAME  4 [source_file: expected0]\n                    LP 4 [source_file: expected0]\n                        NAME n 4 [source_file: expected0]\n                    BLOCK 4 [source_file: expected0]\n                        IF 4 [source_file: expected0]\n                            SHEQ 4 [source_file: expected0]\n                                NAME n 4 [source_file: expected0]\n                                NUMBER 0.0 4 [source_file: expected0]\n                            BLOCK 4 [source_file: expected0]\n                                RETURN 4 [source_file: expected0]\n                                    NUMBER 1.0 4 [source_file: expected0]\n                            BLOCK 4 [source_file: expected0]\n                                RETURN 4 [source_file: expected0]\n                                    MUL 4 [source_file: expected0]\n                                        NAME n 4 [source_file: expected0]\n                                        CALL 4 [free_call: 1] [source_file: expected0]\n                                            NAME f$$2 4 [source_file: expected0]\n                                            SUB 4 [source_file: expected0]\n                                                NAME n 4 [source_file: expected0]\n                                                NUMBER 1.0 4 [source_file: expected0]\n\n\nSubtree2: NAME M$$inline_6 13 [source_file: testcode]\n    FUNCTION  13 [source_file: testcode]\n        NAME  13 [source_file: testcode]\n        LP 13 [source_file: testcode]\n            NAME f$$2 13 [source_file: testcode]\n        BLOCK 13 [source_file: testcode]\n            RETURN 14 [source_file: testcode]\n                FUNCTION  14 [source_file: testcode]\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexInlineVars7\njunit.framework.AssertionFailedError:\nExpected: var b=1;var z;JSCompiler_inline_label_f_2:{if(1){z=b();break JSCompiler_inline_label_f_2}else{z=true;break JSCompiler_inline_label_f_2}z=void 0}\nResult: var b=1;var z;JSCompiler_inline_label_f_4:{if(1){z=b();break JSCompiler_inline_label_f_4}else{z=true;break JSCompiler_inline_label_f_4}z=void 0}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME b 1 [source_file: expected0]\n                NUMBER 1.0 1 [source_file: expected0]\n        VAR 1 [source_file: expected0]\n            NAME z 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            LABEL 1 [source_file: expected0]\n                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME z 1 [source_file: expected0]\n                                    CALL 1 [free_call: 1] [source_file: expected0]\n                                        NAME b 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME z 1 [source_file: expected0]\n                                    TRUE 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME z 1 [source_file: expected0]\n                            VOID 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME b 1 [source_file: testcode]\n                NUMBER 1.0 1 [source_file: testcode]\n        VAR 1 [source_file: testcode]\n            NAME z 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            LABEL 1 [source_file: testcode]\n                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    IF 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME z 1 [source_file: testcode]\n                                    CALL 1 [free_call: 1] [source_file: testcode]\n                                        NAME b 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME z 1 [source_file: testcode]\n                                    TRUE 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME z 1 [source_file: testcode]\n                            VOID 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexInlineVars7(InlineFunctionsTest.java:1319)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexFunctionWithFunctionDefinition2a\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=void 0;call(function(){return a$$inline_0})\nResult: var a$$inline_1=void 0;call(function(){return a$$inline_1})\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME a$$inline_0 1 [source_file: expected0]\n                        VOID 1 [source_file: expected0]\n                            NUMBER 0.0 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME call 1 [source_file: expected0]\n                        FUNCTION  1 [source_file: expected0]\n                            NAME  1 [source_file: expected0]\n                            LP 1 [source_file: expected0]\n                            BLOCK 1 [source_file: expected0]\n                                RETURN 1 [source_file: expected0]\n                                    NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME a$$inline_1 1 [source_file: testcode]\n                        VOID 1 [source_file: testcode]\n                            NUMBER 0.0 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME call 1 [source_file: testcode]\n                        FUNCTION  1 [source_file: testcode]\n                            NAME  1 [source_file: testcode]\n                            LP 1 [source_file: testcode]\n                            BLOCK 1 [source_file: testcode]\n                                RETURN 1 [source_file: testcode]\n                                    NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    VOID 1 [source_file: expected0]\n        NUMBER 0.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    VOID 1 [source_file: testcode]\n        NUMBER 0.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexFunctionWithFunctionDefinition2a(InlineFunctionsTest.java:1525)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexInline7\njunit.framework.AssertionFailedError:\nExpected: var b=1;JSCompiler_inline_label_f_2:{if(1){z=b();break JSCompiler_inline_label_f_2}else{z=true;break JSCompiler_inline_label_f_2}z=void 0}\nResult: var b=1;JSCompiler_inline_label_f_4:{if(1){z=b();break JSCompiler_inline_label_f_4}else{z=true;break JSCompiler_inline_label_f_4}z=void 0}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME b 1 [source_file: expected0]\n                NUMBER 1.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            LABEL 1 [source_file: expected0]\n                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME z 1 [source_file: expected0]\n                                    CALL 1 [free_call: 1] [source_file: expected0]\n                                        NAME b 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME z 1 [source_file: expected0]\n                                    TRUE 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME z 1 [source_file: expected0]\n                            VOID 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME b 1 [source_file: testcode]\n                NUMBER 1.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            LABEL 1 [source_file: testcode]\n                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    IF 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME z 1 [source_file: testcode]\n                                    CALL 1 [free_call: 1] [source_file: testcode]\n                                        NAME b 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME z 1 [source_file: testcode]\n                                    TRUE 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME z 1 [source_file: testcode]\n                            VOID 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexInline7(InlineFunctionsTest.java:1269)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testFunctionExpressionOmega\njunit.framework.AssertionFailedError:\nExpected: var f$$inline_0=function(f$$1){f$$1(f$$1)};f$$inline_0(f$$inline_0)\nResult: var f$$inline_1=function(f$$1){f$$1(f$$1)};f$$inline_1(f$$inline_1)\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME f$$inline_0 1 [source_file: expected0]\n                    FUNCTION  1 [source_file: expected0]\n                        NAME  1 [source_file: expected0]\n                        LP 1 [source_file: expected0]\n                            NAME f$$1 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                CALL 1 [free_call: 1] [source_file: expected0]\n                                    NAME f$$1 1 [source_file: expected0]\n                                    NAME f$$1 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME f$$inline_0 1 [source_file: expected0]\n                            NAME f$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME f$$inline_1 1 [source_file: testcode]\n                    FUNCTION  1 [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                            NAME f$$1 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                CALL 1 [free_call: 1] [source_file: testcode]\n                                    NAME f$$1 1 [source_file: testcode]\n                                    NAME f$$1 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        CALL 1 [free_call: 1] [source_file: testcode]\n                            NAME f$$inline_1 1 [source_file: testcode]\n                            NAME f$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME f$$inline_0 1 [source_file: expected0]\n    FUNCTION  1 [source_file: expected0]\n        NAME  1 [source_file: expected0]\n        LP 1 [source_file: expected0]\n            NAME f$$1 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    NAME f$$1 1 [source_file: expected0]\n                    NAME f$$1 1 [source_file: expected0]\n\n\nSubtree2: NAME f$$inline_1 1 [source_file: testcode]\n    FUNCTION  1 [source_file: testcode]\n        NAME  1 [source_file: testcode]\n        LP 1 [source_file: testcode]\n            NAME f$$1 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    NAME f$$1 1 [source_file: testcode]\n                    NAME f$$1 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testFunctionExpressionOmega(InlineFunctionsTest.java:1758)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions15b\njunit.framework.AssertionFailedError:\nExpected: var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_2;JSCompiler_inline_result$$1=function(a$$inline_3){return a$$inline_3+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1\nResult: var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_3;JSCompiler_inline_result$$1=function(a$$inline_4){return a$$inline_4+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                NAME c 1 [source_file: expected0]\n        BLOCK 2 [source_file: expected0]\n            VAR 3 [source_file: expected0]\n                NAME JSCompiler_inline_result$$1 3 [source_file: expected0]\n            VAR 4 [source_file: expected0]\n                NAME x$$inline_2 4 [source_file: expected0]\n            EXPR_RESULT 5 [source_file: expected0]\n                ASSIGN 5 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$1 5 [source_file: expected0]\n                    FUNCTION  5 [source_file: expected0]\n                        NAME  5 [source_file: expected0]\n                        LP 5 [source_file: expected0]\n                            NAME a$$inline_3 5 [source_file: expected0]\n                        BLOCK 5 [source_file: expected0]\n                            RETURN 5 [source_file: expected0]\n                                ADD 5 [source_file: expected0]\n                                    NAME a$$inline_3 5 [source_file: expected0]\n                                    NUMBER 1.0 5 [source_file: expected0]\n        VAR 6 [source_file: expected0]\n            NAME d 6 [source_file: expected0]\n                ADD 6 [source_file: expected0]\n                    NAME JSCompiler_temp_const$$0 6 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$1 6 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME JSCompiler_temp_const$$0 1 [source_file: testcode]\n                NAME c 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_3 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n                    FUNCTION  1 [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                            NAME a$$inline_4 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            RETURN 1 [source_file: testcode]\n                                ADD 1 [source_file: testcode]\n                                    NAME a$$inline_4 1 [source_file: testcode]\n                                    NUMBER 1.0 1 [source_file: testcode]\n        VAR 1 [source_file: testcode]\n            NAME d 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME JSCompiler_temp_const$$0 1 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_2 4 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_3 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions15b(InlineFunctionsTest.java:246)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions15d\njunit.framework.AssertionFailedError:\nExpected: function _x(){var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_2;JSCompiler_inline_result$$1=function(a$$inline_3){return a$$inline_3+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1}\nResult: function _x(){var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_3;JSCompiler_inline_result$$1=function(a$$inline_4){return a$$inline_4+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        FUNCTION _x 1 [source_file: expected0]\n            NAME _x 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 2 [source_file: expected0]\n                    NAME JSCompiler_temp_const$$0 2 [source_file: expected0]\n                        NAME c 2 [source_file: expected0]\n                BLOCK 3 [source_file: expected0]\n                    VAR 4 [source_file: expected0]\n                        NAME JSCompiler_inline_result$$1 4 [source_file: expected0]\n                    VAR 5 [source_file: expected0]\n                        NAME x$$inline_2 5 [source_file: expected0]\n                    EXPR_RESULT 6 [source_file: expected0]\n                        ASSIGN 6 [source_file: expected0]\n                            NAME JSCompiler_inline_result$$1 6 [source_file: expected0]\n                            FUNCTION  6 [source_file: expected0]\n                                NAME  6 [source_file: expected0]\n                                LP 6 [source_file: expected0]\n                                    NAME a$$inline_3 6 [source_file: expected0]\n                                BLOCK 6 [source_file: expected0]\n                                    RETURN 6 [source_file: expected0]\n                                        ADD 6 [source_file: expected0]\n                                            NAME a$$inline_3 6 [source_file: expected0]\n                                            NUMBER 1.0 6 [source_file: expected0]\n                VAR 8 [source_file: expected0]\n                    NAME d 8 [source_file: expected0]\n                        ADD 8 [source_file: expected0]\n                            NAME JSCompiler_temp_const$$0 8 [source_file: expected0]\n                            NAME JSCompiler_inline_result$$1 8 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        FUNCTION _x 1 [source_file: testcode]\n            NAME _x 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME JSCompiler_temp_const$$0 1 [source_file: testcode]\n                        NAME c 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME x$$inline_3 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n                            FUNCTION  1 [source_file: testcode]\n                                NAME  1 [source_file: testcode]\n                                LP 1 [source_file: testcode]\n                                    NAME a$$inline_4 1 [source_file: testcode]\n                                BLOCK 1 [source_file: testcode]\n                                    RETURN 1 [source_file: testcode]\n                                        ADD 1 [source_file: testcode]\n                                            NAME a$$inline_4 1 [source_file: testcode]\n                                            NUMBER 1.0 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME d 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NAME JSCompiler_temp_const$$0 1 [source_file: testcode]\n                            NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_2 5 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_3 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions15d(InlineFunctionsTest.java:296)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions16a\njunit.framework.AssertionFailedError:\nExpected: var d;var b$$inline_0=e;d=window.bar(function(){c(b$$inline_0)})\nResult: var d;var b$$inline_1=e;d=window.bar(function(){c(b$$inline_1)})\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME d 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME b$$inline_0 1 [source_file: expected0]\n                    NAME e 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME d 1 [source_file: expected0]\n                    CALL 1 [source_file: expected0]\n                        GETPROP 1 [source_file: expected0]\n                            NAME window 1 [source_file: expected0]\n                            STRING bar 1 [source_file: expected0]\n                        FUNCTION  1 [source_file: expected0]\n                            NAME  1 [source_file: expected0]\n                            LP 1 [source_file: expected0]\n                            BLOCK 1 [source_file: expected0]\n                                EXPR_RESULT 1 [source_file: expected0]\n                                    CALL 1 [free_call: 1] [source_file: expected0]\n                                        NAME c 1 [source_file: expected0]\n                                        NAME b$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME d 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME b$$inline_1 1 [source_file: testcode]\n                    NAME e 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME d 1 [source_file: testcode]\n                    CALL 1 [source_file: testcode]\n                        GETPROP 1 [source_file: testcode]\n                            NAME window 1 [source_file: testcode]\n                            STRING bar 1 [source_file: testcode]\n                        FUNCTION  1 [source_file: testcode]\n                            NAME  1 [source_file: testcode]\n                            LP 1 [source_file: testcode]\n                            BLOCK 1 [source_file: testcode]\n                                EXPR_RESULT 1 [source_file: testcode]\n                                    CALL 1 [free_call: 1] [source_file: testcode]\n                                        NAME c 1 [source_file: testcode]\n                                        NAME b$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME b$$inline_0 1 [source_file: expected0]\n    NAME e 1 [source_file: expected0]\n\n\nSubtree2: NAME b$$inline_1 1 [source_file: testcode]\n    NAME e 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions16a(InlineFunctionsTest.java:320)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testBug4944818\njunit.framework.AssertionFailedError:\nExpected: HangoutStarter.prototype.launchHangout=function(){var self$$2=a.b;var JSCompiler_temp_const$$0=goog.Uri;var JSCompiler_inline_result$$1;var self$$inline_2=self$$2;if(!self$$inline_2.domServices_)self$$inline_2.domServices_=goog$component$DomServices.get(self$$inline_2.appContext_);JSCompiler_inline_result$$1=self$$inline_2.domServices_;var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.getDomHelper().getWindow().location.href)}\nResult: HangoutStarter.prototype.launchHangout=function(){var self$$2=a.b;var JSCompiler_temp_const$$0=goog.Uri;var JSCompiler_inline_result$$1;var self$$inline_3=self$$2;if(!self$$inline_3.domServices_)self$$inline_3.domServices_=goog$component$DomServices.get(self$$inline_3.appContext_);JSCompiler_inline_result$$1=self$$inline_3.domServices_;var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.getDomHelper().getWindow().location.href)}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ASSIGN 1 [source_file: expected0]\n                GETPROP 1 [source_file: expected0]\n                    GETPROP 1 [source_file: expected0]\n                        NAME HangoutStarter 1 [source_file: expected0]\n                        STRING prototype 1 [source_file: expected0]\n                    STRING launchHangout 1 [source_file: expected0]\n                FUNCTION  1 [source_file: expected0]\n                    NAME  1 [source_file: expected0]\n                    LP 1 [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME self$$2 1 [source_file: expected0]\n                                GETPROP 1 [source_file: expected0]\n                                    NAME a 1 [source_file: expected0]\n                                    STRING b 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                                GETPROP 1 [source_file: expected0]\n                                    NAME goog 1 [source_file: expected0]\n                                    STRING Uri 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            VAR 1 [source_file: expected0]\n                                NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                            VAR 1 [source_file: expected0]\n                                NAME self$$inline_2 1 [source_file: expected0]\n                                    NAME self$$2 1 [source_file: expected0]\n                            IF 1 [source_file: expected0]\n                                NOT 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        NAME self$$inline_2 1 [source_file: expected0]\n                                        STRING domServices_ 1 [source_file: expected0]\n                                BLOCK 1 [source_file: expected0]\n                                    EXPR_RESULT 1 [source_file: expected0]\n                                        ASSIGN 1 [source_file: expected0]\n                                            GETPROP 1 [source_file: expected0]\n                                                NAME self$$inline_2 1 [source_file: expected0]\n                                                STRING domServices_ 1 [source_file: expected0]\n                                            CALL 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    NAME goog$component$DomServices 1 [source_file: expected0]\n                                                    STRING get 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    NAME self$$inline_2 1 [source_file: expected0]\n                                                    STRING appContext_ 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        NAME self$$inline_2 1 [source_file: expected0]\n                                        STRING domServices_ 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME myUrl 1 [source_file: expected0]\n                                NEW 1 [source_file: expected0]\n                                    NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            CALL 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    CALL 1 [source_file: expected0]\n                                                        GETPROP 1 [source_file: expected0]\n                                                            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                                                            STRING getDomHelper 1 [source_file: expected0]\n                                                    STRING getWindow 1 [source_file: expected0]\n                                            STRING location 1 [source_file: expected0]\n                                        STRING href 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 13 [source_file: testcode]\n            ASSIGN 13 [source_file: testcode]\n                GETPROP 13 [source_file: testcode]\n                    GETPROP 13 [source_file: testcode]\n                        NAME HangoutStarter 13 [source_file: testcode]\n                        STRING prototype 13 [source_file: testcode]\n                    STRING launchHangout 13 [source_file: testcode]\n                FUNCTION  13 [source_file: testcode]\n                    NAME  13 [source_file: testcode]\n                    LP 13 [source_file: testcode]\n                    BLOCK 13 [source_file: testcode]\n                        VAR 14 [source_file: testcode]\n                            NAME self$$2 14 [source_file: testcode]\n                                GETPROP 14 [source_file: testcode]\n                                    NAME a 14 [source_file: testcode]\n                                    STRING b 14 [source_file: testcode]\n                        VAR 15 [source_file: testcode]\n                            NAME JSCompiler_temp_const$$0 15 [source_file: testcode]\n                                GETPROP 15 [source_file: testcode]\n                                    NAME goog 15 [source_file: testcode]\n                                    STRING Uri 15 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            VAR 10 [source_file: testcode]\n                                NAME JSCompiler_inline_result$$1 10 [source_file: testcode]\n                            VAR 15 [source_file: testcode]\n                                NAME self$$inline_3 15 [source_file: testcode]\n                                    NAME self$$2 15 [source_file: testcode]\n                            IF 2 [source_file: testcode]\n                                NOT 2 [source_file: testcode]\n                                    GETPROP 2 [source_file: testcode]\n                                        NAME self$$inline_3 2 [source_file: testcode]\n                                        STRING domServices_ 2 [source_file: testcode]\n                                BLOCK 2 [source_file: testcode]\n                                    EXPR_RESULT 3 [source_file: testcode]\n                                        ASSIGN 3 [source_file: testcode]\n                                            GETPROP 3 [source_file: testcode]\n                                                NAME self$$inline_3 3 [source_file: testcode]\n                                                STRING domServices_ 3 [source_file: testcode]\n                                            CALL 3 [source_file: testcode]\n                                                GETPROP 3 [source_file: testcode]\n                                                    NAME goog$component$DomServices 3 [source_file: testcode]\n                                                    STRING get 3 [source_file: testcode]\n                                                GETPROP 3 [source_file: testcode]\n                                                    NAME self$$inline_3 3 [source_file: testcode]\n                                                    STRING appContext_ 3 [source_file: testcode]\n                            EXPR_RESULT 6 [source_file: testcode]\n                                ASSIGN 6 [source_file: testcode]\n                                    NAME JSCompiler_inline_result$$1 6 [source_file: testcode]\n                                    GETPROP 6 [source_file: testcode]\n                                        NAME self$$inline_3 6 [source_file: testcode]\n                                        STRING domServices_ 6 [source_file: testcode]\n                        VAR 15 [source_file: testcode]\n                            NAME myUrl 15 [source_file: testcode]\n                                NEW 15 [source_file: testcode]\n                                    NAME JSCompiler_temp_const$$0 15 [source_file: testcode]\n                                    GETPROP 15 [source_file: testcode]\n                                        GETPROP 15 [source_file: testcode]\n                                            CALL 10 [source_file: testcode]\n                                                GETPROP 10 [source_file: testcode]\n                                                    CALL 10 [source_file: testcode]\n                                                        GETPROP 10 [source_file: testcode]\n                                                            NAME JSCompiler_inline_result$$1 10 [source_file: testcode]\n                                                            STRING getDomHelper 10 [source_file: testcode]\n                                                    STRING getWindow 10 [source_file: testcode]\n                                            STRING location 15 [source_file: testcode]\n                                        STRING href 15 [source_file: testcode]\n\n\nSubtree1: NAME self$$inline_2 1 [source_file: expected0]\n    NAME self$$2 1 [source_file: expected0]\n\n\nSubtree2: NAME self$$inline_3 15 [source_file: testcode]\n    NAME self$$2 15 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testBug4944818(InlineFunctionsTest.java:2077)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexSample\njunit.framework.AssertionFailedError:\nExpected: var styleSheet$$inline_2=null;if(goog$userAgent$IE)styleSheet$$inline_2=0;else var head$$inline_3=0;var element$$inline_4=styleSheet$$inline_2;var stylesString$$inline_5=a;if(goog$userAgent$IE)element$$inline_4.cssText=stylesString$$inline_5;else{var propToSet$$inline_6=\"innerText\";element$$inline_4[propToSet$$inline_6]=stylesString$$inline_5}styleSheet$$inline_2\nResult: var styleSheet$$inline_9=null;if(goog$userAgent$IE)styleSheet$$inline_9=0;else var head$$inline_10=0;var element$$inline_11=styleSheet$$inline_9;var stylesString$$inline_12=a;if(goog$userAgent$IE)element$$inline_11.cssText=stylesString$$inline_12;else{var propToSet$$inline_13=\"innerText\";element$$inline_11[propToSet$$inline_13]=stylesString$$inline_12}styleSheet$$inline_9\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME styleSheet$$inline_2 1 [source_file: expected0]\n                        NULL 1 [source_file: expected0]\n                IF 1 [source_file: expected0]\n                    NAME goog$userAgent$IE 1 [is_constant_name: 1] [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        EXPR_RESULT 1 [source_file: expected0]\n                            ASSIGN 1 [source_file: expected0]\n                                NAME styleSheet$$inline_2 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME head$$inline_3 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME element$$inline_4 1 [source_file: expected0]\n                            NAME styleSheet$$inline_2 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME stylesString$$inline_5 1 [source_file: expected0]\n                            NAME a 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        NAME goog$userAgent$IE 1 [is_constant_name: 1] [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        NAME element$$inline_4 1 [source_file: expected0]\n                                        STRING cssText 1 [source_file: expected0]\n                                    NAME stylesString$$inline_5 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            VAR 1 [source_file: expected0]\n                                NAME propToSet$$inline_6 1 [source_file: expected0]\n                                    STRING innerText 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    GETELEM 1 [source_file: expected0]\n                                        NAME element$$inline_4 1 [source_file: expected0]\n                                        NAME propToSet$$inline_6 1 [source_file: expected0]\n                                    NAME stylesString$$inline_5 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    NAME styleSheet$$inline_2 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 2 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME styleSheet$$inline_9 1 [source_file: testcode]\n                        NULL 1 [source_file: testcode]\n                IF 1 [source_file: testcode]\n                    NAME goog$userAgent$IE 1 [is_constant_name: 1] [source_file: testcode]\n                    BLOCK 1 [source_file: testcode]\n                        EXPR_RESULT 1 [source_file: testcode]\n                            ASSIGN 1 [source_file: testcode]\n                                NAME styleSheet$$inline_9 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n                    BLOCK 1 [source_file: testcode]\n                        VAR 1 [source_file: testcode]\n                            NAME head$$inline_10 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n                BLOCK 2 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME element$$inline_11 1 [source_file: testcode]\n                            NAME styleSheet$$inline_9 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME stylesString$$inline_12 1 [source_file: testcode]\n                            NAME a 2 [source_file: testcode]\n                    IF 2 [source_file: testcode]\n                        NAME goog$userAgent$IE 2 [is_constant_name: 1] [source_file: testcode]\n                        BLOCK 2 [source_file: testcode]\n                            EXPR_RESULT 2 [source_file: testcode]\n                                ASSIGN 2 [source_file: testcode]\n                                    GETPROP 2 [source_file: testcode]\n                                        NAME element$$inline_11 2 [source_file: testcode]\n                                        STRING cssText 2 [source_file: testcode]\n                                    NAME stylesString$$inline_12 2 [source_file: testcode]\n                        BLOCK 2 [source_file: testcode]\n                            VAR 2 [source_file: testcode]\n                                NAME propToSet$$inline_13 2 [source_file: testcode]\n                                    STRING innerText 2 [source_file: testcode]\n                            EXPR_RESULT 2 [source_file: testcode]\n                                ASSIGN 2 [source_file: testcode]\n                                    GETELEM 2 [source_file: testcode]\n                                        NAME element$$inline_11 2 [source_file: testcode]\n                                        NAME propToSet$$inline_13 2 [source_file: testcode]\n                                    NAME stylesString$$inline_12 2 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    NAME styleSheet$$inline_9 1 [source_file: testcode]\n\n\nSubtree1: NAME styleSheet$$inline_2 1 [source_file: expected0]\n    NULL 1 [source_file: expected0]\n\n\nSubtree2: NAME styleSheet$$inline_9 1 [source_file: testcode]\n    NULL 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexSample(InlineFunctionsTest.java:1418)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified1\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=undefined;x$$inline_0=1\nResult: var x$$inline_1=undefined;x$$inline_1=1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NAME undefined 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NAME undefined 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NAME undefined 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NAME undefined 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified1(InlineFunctionsTest.java:549)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified2\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=2;x$$inline_0=1\nResult: var x$$inline_1=2;x$$inline_1=1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [parenthesized: true] [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified2(InlineFunctionsTest.java:555)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified3\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=2;x$$inline_0*=2\nResult: var x$$inline_1=2;x$$inline_1*=2\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN_MUL 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN_MUL 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified3(InlineFunctionsTest.java:562)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified4\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=2;x$$inline_0?x$$inline_0=2:0\nResult: var x$$inline_1=2;x$$inline_1?x$$inline_1=2:0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                HOOK 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    ASSIGN 1 [parenthesized: true] [source_file: expected0]\n                        NAME x$$inline_0 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                HOOK 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    ASSIGN 1 [parenthesized: true] [source_file: testcode]\n                        NAME x$$inline_1 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                    NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified4(InlineFunctionsTest.java:569)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified5\njunit.framework.AssertionFailedError:\nExpected: var y$$inline_1=undefined;2?y$$inline_1=2:0\nResult: var y$$inline_3=undefined;2?y$$inline_3=2:0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME y$$inline_1 1 [source_file: expected0]\n                    NAME undefined 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                HOOK 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n                    ASSIGN 1 [parenthesized: true] [source_file: expected0]\n                        NAME y$$inline_1 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME y$$inline_3 1 [source_file: testcode]\n                    NAME undefined 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                HOOK 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n                    ASSIGN 1 [parenthesized: true] [source_file: testcode]\n                        NAME y$$inline_3 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                    NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: NAME y$$inline_1 1 [source_file: expected0]\n    NAME undefined 1 [source_file: expected0]\n\n\nSubtree2: NAME y$$inline_3 1 [source_file: testcode]\n    NAME undefined 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified5(InlineFunctionsTest.java:577)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified6\njunit.framework.AssertionFailedError:\nExpected: var y$$inline_1=void 0;2?y$$inline_1=2:0\nResult: var y$$inline_3=void 0;2?y$$inline_3=2:0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME y$$inline_1 1 [source_file: expected0]\n                    VOID 1 [source_file: expected0]\n                        NUMBER 0.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                HOOK 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n                    ASSIGN 1 [parenthesized: true] [source_file: expected0]\n                        NAME y$$inline_1 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME y$$inline_3 1 [source_file: testcode]\n                    VOID 1 [source_file: testcode]\n                        NUMBER 0.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                HOOK 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n                    ASSIGN 1 [parenthesized: true] [source_file: testcode]\n                        NAME y$$inline_3 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                    NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: NAME y$$inline_1 1 [source_file: expected0]\n    VOID 1 [source_file: expected0]\n        NUMBER 0.0 1 [source_file: expected0]\n\n\nSubtree2: NAME y$$inline_3 1 [source_file: testcode]\n    VOID 1 [source_file: testcode]\n        NUMBER 0.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified6(InlineFunctionsTest.java:583)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified7\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=1;++a$$inline_0<++a$$inline_0\nResult: var a$$inline_1=1;++a$$inline_1<++a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                LT 1 [source_file: expected0]\n                    INC 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                    INC 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                LT 1 [source_file: testcode]\n                    INC 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                    INC 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified7(InlineFunctionsTest.java:590)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testIssue423\njunit.framework.AssertionFailedError:\nExpected: var $$$inline_0=jQuery;$$$inline_0.fn.multicheck=function(options$$inline_4){options$$inline_4.checkboxes=$$$inline_0(this).siblings(\":checkbox\");$$$inline_0(this).data(\"checkboxes\")}\nResult: var $$$inline_3=jQuery;$$$inline_3.fn.multicheck=function(options$$inline_7){options$$inline_7.checkboxes=$$$inline_3(this).siblings(\":checkbox\");$$$inline_3(this).data(\"checkboxes\")}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME $$$inline_0 1 [source_file: expected0]\n                    NAME jQuery 1 [source_file: expected0]\n            EXPR_RESULT 2 [source_file: expected0]\n                ASSIGN 2 [source_file: expected0]\n                    GETPROP 2 [source_file: expected0]\n                        GETPROP 2 [source_file: expected0]\n                            NAME $$$inline_0 2 [source_file: expected0]\n                            STRING fn 2 [source_file: expected0]\n                        STRING multicheck 2 [source_file: expected0]\n                    FUNCTION  2 [source_file: expected0]\n                        NAME  2 [source_file: expected0]\n                        LP 2 [source_file: expected0]\n                            NAME options$$inline_4 2 [source_file: expected0]\n                        BLOCK 2 [source_file: expected0]\n                            BLOCK 3 [source_file: expected0]\n                                EXPR_RESULT 3 [source_file: expected0]\n                                    ASSIGN 3 [source_file: expected0]\n                                        GETPROP 3 [source_file: expected0]\n                                            NAME options$$inline_4 3 [source_file: expected0]\n                                            STRING checkboxes 3 [source_file: expected0]\n                                        CALL 3 [source_file: expected0]\n                                            GETPROP 3 [source_file: expected0]\n                                                CALL 3 [free_call: 1] [source_file: expected0]\n                                                    NAME $$$inline_0 3 [source_file: expected0]\n                                                    THIS 3 [source_file: expected0]\n                                                STRING siblings 3 [source_file: expected0]\n                                            STRING :checkbox 3 [source_file: expected0]\n                                BLOCK 4 [source_file: expected0]\n                                    EXPR_RESULT 4 [source_file: expected0]\n                                        CALL 4 [source_file: expected0]\n                                            GETPROP 4 [source_file: expected0]\n                                                CALL 4 [free_call: 1] [source_file: expected0]\n                                                    NAME $$$inline_0 4 [source_file: expected0]\n                                                    THIS 4 [source_file: expected0]\n                                                STRING data 4 [source_file: expected0]\n                                            STRING checkboxes 4 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 14 [source_file: testcode]\n                NAME $$$inline_3 14 [source_file: testcode]\n                    NAME jQuery 14 [source_file: testcode]\n            EXPR_RESULT 2 [source_file: testcode]\n                ASSIGN 2 [source_file: testcode]\n                    GETPROP 2 [source_file: testcode]\n                        GETPROP 2 [source_file: testcode]\n                            NAME $$$inline_3 2 [source_file: testcode]\n                            STRING fn 2 [source_file: testcode]\n                        STRING multicheck 2 [source_file: testcode]\n                    FUNCTION  2 [source_file: testcode]\n                        NAME  2 [source_file: testcode]\n                        LP 2 [source_file: testcode]\n                            NAME options$$inline_7 2 [source_file: testcode]\n                        BLOCK 2 [source_file: testcode]\n                            BLOCK 6 [source_file: testcode]\n                                EXPR_RESULT 7 [source_file: testcode]\n                                    ASSIGN 7 [source_file: testcode]\n                                        GETPROP 7 [source_file: testcode]\n                                            NAME options$$inline_7 3 [source_file: testcode]\n                                            STRING checkboxes 7 [source_file: testcode]\n                                        CALL 7 [source_file: testcode]\n                                            GETPROP 7 [source_file: testcode]\n                                                CALL 7 [free_call: 1] [source_file: testcode]\n                                                    NAME $$$inline_3 7 [source_file: testcode]\n                                                    THIS 7 [source_file: testcode]\n                                                STRING siblings 7 [source_file: testcode]\n                                            STRING :checkbox 7 [source_file: testcode]\n                                BLOCK 11 [source_file: testcode]\n                                    EXPR_RESULT 12 [source_file: testcode]\n                                        CALL 12 [source_file: testcode]\n                                            GETPROP 12 [source_file: testcode]\n                                                CALL 12 [free_call: 1] [source_file: testcode]\n                                                    NAME $$$inline_3 12 [source_file: testcode]\n                                                    THIS 12 [source_file: testcode]\n                                                STRING data 12 [source_file: testcode]\n                                            STRING checkboxes 12 [source_file: testcode]\n\n\nSubtree1: NAME $$$inline_0 1 [source_file: expected0]\n    NAME jQuery 1 [source_file: expected0]\n\n\nSubtree2: NAME $$$inline_3 14 [source_file: testcode]\n    NAME jQuery 14 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testIssue423(InlineFunctionsTest.java:2142)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexFunctionWithFunctionDefinition2\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=void 0;call(function(){return a$$inline_0})\nResult: var a$$inline_1=void 0;call(function(){return a$$inline_1})\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME a$$inline_0 1 [source_file: expected0]\n                        VOID 1 [source_file: expected0]\n                            NUMBER 0.0 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME call 1 [source_file: expected0]\n                        FUNCTION  1 [source_file: expected0]\n                            NAME  1 [source_file: expected0]\n                            LP 1 [source_file: expected0]\n                            BLOCK 1 [source_file: expected0]\n                                RETURN 1 [source_file: expected0]\n                                    NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME a$$inline_1 1 [source_file: testcode]\n                        VOID 1 [source_file: testcode]\n                            NUMBER 0.0 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME call 1 [source_file: testcode]\n                        FUNCTION  1 [source_file: testcode]\n                            NAME  1 [source_file: testcode]\n                            LP 1 [source_file: testcode]\n                            BLOCK 1 [source_file: testcode]\n                                RETURN 1 [source_file: testcode]\n                                    NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    VOID 1 [source_file: expected0]\n        NUMBER 0.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    VOID 1 [source_file: testcode]\n        NUMBER 0.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexFunctionWithFunctionDefinition2(InlineFunctionsTest.java:1511)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexFunctionWithFunctionDefinition3\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0;call(function(){return a$$inline_0})\nResult: var a$$inline_1;call(function(){return a$$inline_1})\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    NAME call 1 [source_file: expected0]\n                    FUNCTION  1 [source_file: expected0]\n                        NAME  1 [source_file: expected0]\n                        LP 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            RETURN 1 [source_file: expected0]\n                                NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    NAME call 1 [source_file: testcode]\n                    FUNCTION  1 [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            RETURN 1 [source_file: testcode]\n                                NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexFunctionWithFunctionDefinition3(InlineFunctionsTest.java:1538)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testDecomposeFunctionExpressionInCall\njunit.framework.AssertionFailedError:\nExpected: var JSCompiler_inline_result$$0;var ret$$inline_1={};ret$$inline_1[ONE]=\"a\";ret$$inline_1[TWO]=\"b\";JSCompiler_inline_result$$0=ret$$inline_1;descriptions_=JSCompiler_inline_result$$0\nResult: var JSCompiler_inline_result$$0;var ret$$inline_2={};ret$$inline_2[ONE]=\"a\";ret$$inline_2[TWO]=\"b\";JSCompiler_inline_result$$0=ret$$inline_2;descriptions_=JSCompiler_inline_result$$0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME ret$$inline_1 1 [source_file: expected0]\n                    OBJECTLIT 1 [source_file: expected0]\n            EXPR_RESULT 2 [source_file: expected0]\n                ASSIGN 2 [source_file: expected0]\n                    GETELEM 2 [source_file: expected0]\n                        NAME ret$$inline_1 2 [source_file: expected0]\n                        NAME ONE 2 [is_constant_name: 1] [source_file: expected0]\n                    STRING a 2 [source_file: expected0]\n            EXPR_RESULT 3 [source_file: expected0]\n                ASSIGN 3 [source_file: expected0]\n                    GETELEM 3 [source_file: expected0]\n                        NAME ret$$inline_1 3 [source_file: expected0]\n                        NAME TWO 3 [is_constant_name: 1] [source_file: expected0]\n                    STRING b 3 [source_file: expected0]\n            EXPR_RESULT 4 [source_file: expected0]\n                ASSIGN 4 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$0 4 [source_file: expected0]\n                    NAME ret$$inline_1 4 [source_file: expected0]\n        BLOCK 5 [source_file: expected0]\n            EXPR_RESULT 5 [source_file: expected0]\n                ASSIGN 5 [source_file: expected0]\n                    NAME descriptions_ 5 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$0 5 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 2 [source_file: testcode]\n            VAR 7 [source_file: testcode]\n                NAME JSCompiler_inline_result$$0 7 [source_file: testcode]\n            VAR 3 [source_file: testcode]\n                NAME ret$$inline_2 3 [source_file: testcode]\n                    OBJECTLIT 3 [source_file: testcode]\n            EXPR_RESULT 4 [source_file: testcode]\n                ASSIGN 4 [source_file: testcode]\n                    GETELEM 4 [source_file: testcode]\n                        NAME ret$$inline_2 4 [source_file: testcode]\n                        NAME ONE 4 [is_constant_name: 1] [source_file: testcode]\n                    STRING a 4 [source_file: testcode]\n            EXPR_RESULT 5 [source_file: testcode]\n                ASSIGN 5 [source_file: testcode]\n                    GETELEM 5 [source_file: testcode]\n                        NAME ret$$inline_2 5 [source_file: testcode]\n                        NAME TWO 5 [is_constant_name: 1] [source_file: testcode]\n                    STRING b 5 [source_file: testcode]\n            EXPR_RESULT 6 [source_file: testcode]\n                ASSIGN 6 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$0 6 [source_file: testcode]\n                    NAME ret$$inline_2 6 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME descriptions_ 1 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$0 7 [source_file: testcode]\n\n\nSubtree1: NAME ret$$inline_1 1 [source_file: expected0]\n    OBJECTLIT 1 [source_file: expected0]\n\n\nSubtree2: NAME ret$$inline_2 3 [source_file: testcode]\n    OBJECTLIT 3 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testDecomposeFunctionExpressionInCall(InlineFunctionsTest.java:1553)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineNeverOverrideNewValues\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=1;++a$$inline_0<++a$$inline_0\nResult: var a$$inline_1=1;++a$$inline_1<++a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                LT 1 [source_file: expected0]\n                    INC 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                    INC 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                LT 1 [source_file: testcode]\n                    INC 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                    INC 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineNeverOverrideNewValues(InlineFunctionsTest.java:623)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineBlockMutableArgs1\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=[];x$$inline_0+x$$inline_0\nResult: var x$$inline_1=[];x$$inline_1+x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    ARRAYLIT 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    ARRAYLIT 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    ARRAYLIT 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    ARRAYLIT 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs1(InlineFunctionsTest.java:653)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineBlockMutableArgs2\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=new Date;x$$inline_0+x$$inline_0\nResult: var x$$inline_1=new Date;x$$inline_1+x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NEW 1 [source_file: expected0]\n                        NAME Date 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NEW 1 [source_file: testcode]\n                        NAME Date 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NEW 1 [source_file: expected0]\n        NAME Date 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NEW 1 [source_file: testcode]\n        NAME Date 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs2(InlineFunctionsTest.java:659)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineBlockMutableArgs3\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=true&&new Date;x$$inline_0+x$$inline_0\nResult: var x$$inline_1=true&&new Date;x$$inline_1+x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    AND 1 [source_file: expected0]\n                        TRUE 1 [source_file: expected0]\n                        NEW 1 [source_file: expected0]\n                            NAME Date 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    AND 1 [source_file: testcode]\n                        TRUE 1 [source_file: testcode]\n                        NEW 1 [source_file: testcode]\n                            NAME Date 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    AND 1 [source_file: expected0]\n        TRUE 1 [source_file: expected0]\n        NEW 1 [source_file: expected0]\n            NAME Date 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    AND 1 [source_file: testcode]\n        TRUE 1 [source_file: testcode]\n        NEW 1 [source_file: testcode]\n            NAME Date 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs3(InlineFunctionsTest.java:665)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineBlockMutableArgs4\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0={};x$$inline_0+x$$inline_0\nResult: var x$$inline_1={};x$$inline_1+x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    OBJECTLIT 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    OBJECTLIT 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    OBJECTLIT 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    OBJECTLIT 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs4(InlineFunctionsTest.java:671)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions10\njunit.framework.AssertionFailedError:\nExpected: var y;var x$$inline_0=i;y=x$$inline_0++;var x$$inline_2=i;y=x$$inline_2++\nResult: var y;var x$$inline_1=i;y=x$$inline_1++;var x$$inline_4=i;y=x$$inline_4++\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME y 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NAME i 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME y 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME x$$inline_0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_2 1 [source_file: expected0]\n                    NAME i 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME y 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME x$$inline_2 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME y 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NAME i 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME y 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME x$$inline_1 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_4 1 [source_file: testcode]\n                    NAME i 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME y 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME x$$inline_4 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NAME i 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NAME i 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions10(InlineFunctionsTest.java:183)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions13\njunit.framework.AssertionFailedError:\nExpected: var y;var x$$inline_0=i++;y=x$$inline_0\nResult: var y;var x$$inline_1=i++;y=x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME y 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME i 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME y 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME y 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME i 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME y 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    INC 1 [incrdecr: 1] [source_file: expected0]\n        NAME i 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    INC 1 [incrdecr: 1] [source_file: testcode]\n        NAME i 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions13(InlineFunctionsTest.java:210)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions22\njunit.framework.AssertionFailedError:\nExpected: var d;JSCompiler_inline_label_plex_1:{if(1+2){d=0;break JSCompiler_inline_label_plex_1}else{d=1;break JSCompiler_inline_label_plex_1}d=void 0}\nResult: var d;JSCompiler_inline_label_plex_2:{if(1+2){d=0;break JSCompiler_inline_label_plex_2}else{d=1;break JSCompiler_inline_label_plex_2}d=void 0}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME d 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            LABEL 1 [source_file: expected0]\n                LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME d 1 [source_file: expected0]\n                                    NUMBER 0.0 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME d 1 [source_file: expected0]\n                                    NUMBER 1.0 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME d 1 [source_file: expected0]\n                            VOID 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME d 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            LABEL 1 [source_file: testcode]\n                LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    IF 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME d 1 [source_file: testcode]\n                                    NUMBER 0.0 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME d 1 [source_file: testcode]\n                                    NUMBER 1.0 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME d 1 [source_file: testcode]\n                            VOID 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions22(InlineFunctionsTest.java:375)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions23\njunit.framework.AssertionFailedError:\nExpected: var d;JSCompiler_inline_label_complex_1:{if(1+2){d=0;break JSCompiler_inline_label_complex_1}else{d=1;break JSCompiler_inline_label_complex_1}d=void 0}\nResult: var d;JSCompiler_inline_label_complex_2:{if(1+2){d=0;break JSCompiler_inline_label_complex_2}else{d=1;break JSCompiler_inline_label_complex_2}d=void 0}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME d 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            LABEL 1 [source_file: expected0]\n                LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME d 1 [source_file: expected0]\n                                    NUMBER 0.0 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME d 1 [source_file: expected0]\n                                    NUMBER 1.0 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME d 1 [source_file: expected0]\n                            VOID 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME d 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            LABEL 1 [source_file: testcode]\n                LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    IF 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME d 1 [source_file: testcode]\n                                    NUMBER 0.0 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME d 1 [source_file: testcode]\n                                    NUMBER 1.0 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME d 1 [source_file: testcode]\n                            VOID 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions23(InlineFunctionsTest.java:389)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions9\njunit.framework.AssertionFailedError:\nExpected: var y;var x$$inline_0=i;y=x$$inline_0++\nResult: var y;var x$$inline_1=i;y=x$$inline_1++\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME y 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NAME i 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME y 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME y 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NAME i 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME y 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NAME i 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NAME i 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions9(InlineFunctionsTest.java:176)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.MakeDeclaredNamesUniqueTest::testMakeLocalNamesUniqueWithContext5\njunit.framework.AssertionFailedError:\nExpected: var fn=function f(){var f$$1;f$$1=1}\nResult: var fn=function f$$1(){var f$$1;f$$1=1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME fn 1 [source_file: expected0]\n                FUNCTION f 1 [source_file: expected0]\n                    NAME f 1 [source_file: expected0]\n                    LP 1 [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME f$$1 1 [source_file: expected0]\n                        EXPR_RESULT 1 [source_file: expected0]\n                            ASSIGN 1 [source_file: expected0]\n                                NAME f$$1 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME fn 1 [source_file: testcode]\n                FUNCTION f$$1 1 [source_file: testcode]\n                    NAME f$$1 1 [source_file: testcode]\n                    LP 1 [source_file: testcode]\n                    BLOCK 1 [source_file: testcode]\n                        VAR 1 [source_file: testcode]\n                            NAME f$$1 1 [source_file: testcode]\n                        EXPR_RESULT 1 [source_file: testcode]\n                            ASSIGN 1 [source_file: testcode]\n                                NAME f$$1 1 [source_file: testcode]\n                                NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME f 1 [source_file: expected0]\n\n\nSubtree2: NAME f$$1 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest.testMakeLocalNamesUniqueWithContext5(MakeDeclaredNamesUniqueTest.java:222)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n\n\nfailure assertion code:\nhelperInlineReferenceToFunction(\n\n\nThere is a bug in the above code, please help me locate it by considering the stack trace information and failure assertion code.\n\nPlease output **only one integer**: the line number of the buggy code (The code starts from line 1). Do not provide any explanations or additional content.\n",
        "prompt_fl_4": "\nsource code:\n@Override\n  public void enterScope(NodeTraversal t) {\n    Node declarationRoot = t.getScopeRoot();\n    Renamer renamer;\n    if (nameStack.isEmpty()) {\n      // If the contextual renamer is being used the starting context can not\n      // be a function.\n      Preconditions.checkState(\n          declarationRoot.getType() != Token.FUNCTION ||\n          !(rootRenamer instanceof ContextualRenamer));\n      Preconditions.checkState(t.inGlobalScope());\n      renamer = rootRenamer;\n    } else {\n      renamer = nameStack.peek().forChildScope();\n    }\n\n    if (declarationRoot.getType() == Token.FUNCTION) {\n      for (Node c = declarationRoot.getFirstChild().getNext().getFirstChild(); c != null; c = c.getNext()) {\n        String name = c.getString();\n        renamer.addDeclaredName(name);\n      }\n      Node functionBody = declarationRoot.getLastChild();\n      findDeclaredNames(functionBody, null, renamer);\n    }  else \n    if (declarationRoot.getType() != Token.FUNCTION) {\n      // Add the block declarations\n      findDeclaredNames(declarationRoot, null, renamer);\n    }\n    nameStack.push(renamer);\n  }\n\nThere is a bug in the above code, please help me locate it.\n\nOutput **only** the exact buggy statement, with no line numbers, explanations, or additional content. Your response should contain just the buggy code line. Do not include ```java or ``` markers in the response.\n",
        "prompt_fl_5": "\nsource code:\n@Override\n  public void enterScope(NodeTraversal t) {\n    Node declarationRoot = t.getScopeRoot();\n    Renamer renamer;\n    if (nameStack.isEmpty()) {\n      // If the contextual renamer is being used the starting context can not\n      // be a function.\n      Preconditions.checkState(\n          declarationRoot.getType() != Token.FUNCTION ||\n          !(rootRenamer instanceof ContextualRenamer));\n      Preconditions.checkState(t.inGlobalScope());\n      renamer = rootRenamer;\n    } else {\n      renamer = nameStack.peek().forChildScope();\n    }\n\n    if (declarationRoot.getType() == Token.FUNCTION) {\n      for (Node c = declarationRoot.getFirstChild().getNext().getFirstChild(); c != null; c = c.getNext()) {\n        String name = c.getString();\n        renamer.addDeclaredName(name);\n      }\n      Node functionBody = declarationRoot.getLastChild();\n      findDeclaredNames(functionBody, null, renamer);\n    }  else \n    if (declarationRoot.getType() != Token.FUNCTION) {\n      // Add the block declarations\n      findDeclaredNames(declarationRoot, null, renamer);\n    }\n    nameStack.push(renamer);\n  }\n\nstack trace:\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline19b\njunit.framework.AssertionFailedError:\nExpected: var x=1;var y=2;function foo(a,b){y=a;x=b}function bar(){var b$$inline_1=y;y=x;x=b$$inline_1}\nResult: var x=1;var y=2;function foo(a,b){y=a;x=b}function bar(){var b$$inline_3=y;y=x;x=b$$inline_3}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n            NUMBER 1.0 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME y 1 [source_file:  [testcode] ]\n            NUMBER 2.0 1 [source_file:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n            NAME b 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            EXPR_RESULT 1 [source_file:  [testcode] ]\n                ASSIGN 1 [source_file:  [testcode] ]\n                    NAME y 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n            EXPR_RESULT 1 [source_file:  [testcode] ]\n                ASSIGN 1 [source_file:  [testcode] ]\n                    NAME x 1 [source_file:  [testcode] ]\n                    NAME b 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FUNCTION bar 1 [source_file:  [testcode] ]\n        NAME bar 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_1 1 [source_file:  [testcode] ]\n                        NAME y 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    ASSIGN 1 [source_file:  [testcode] ]\n                        NAME y 1 [source_file:  [testcode] ]\n                        NAME x 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    ASSIGN 1 [source_file:  [testcode] ]\n                        NAME x 1 [source_file:  [testcode] ]\n                        NAME b$$inline_1 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    VAR 1 [source_file: code]\n        NAME x 1 [source_file: code]\n            NUMBER 1.0 1 [source_file: code]\n    VAR 1 [source_file: code]\n        NAME y 1 [source_file: code]\n            NUMBER 2.0 1 [source_file: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n            NAME b 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            EXPR_RESULT 1 [source_file: code]\n                ASSIGN 1 [source_file: code]\n                    NAME y 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n            EXPR_RESULT 1 [source_file: code]\n                ASSIGN 1 [source_file: code]\n                    NAME x 1 [source_file: code]\n                    NAME b 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FUNCTION bar 1 [source_file: code]\n        NAME bar 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME b$$inline_3 1 [source_file: code]\n                        NAME y 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    ASSIGN 1 [source_file: code]\n                        NAME y 1 [source_file: code]\n                        NAME x 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    ASSIGN 1 [source_file: code]\n                        NAME x 1 [source_file: code]\n                        NAME b$$inline_3 1 [source_file: code]\n\n\nSubtree1: NAME b$$inline_1 1 [source_file:  [testcode] ]\n    NAME y 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME b$$inline_3 1 [source_file: code]\n    NAME y 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline19b(FunctionInjectorTest.java:945)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInlineIntoLoop\njunit.framework.AssertionFailedError:\nExpected: function foo(a){var b;return a}for(;1;){var b$$inline_1=void 0;1}\nResult: function foo(a){var b;return a}for(;1;){var b$$inline_3=void 0;1}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            VAR 1 [source_file:  [testcode] ]\n                NAME b 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FOR 1 [source_file:  [testcode] ]\n        EMPTY 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n        EMPTY 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_1 1 [source_file:  [testcode] ]\n                        VOID 1 [source_file:  [testcode] ]\n                            NUMBER 0.0 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            VAR 1 [source_file: code]\n                NAME b 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FOR 1 [source_file: code]\n        EMPTY 1 [source_file: code]\n        NUMBER 1.0 1 [source_file: code]\n        EMPTY 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME b$$inline_3 1 [source_file: code]\n                        VOID 1 [source_file: code]\n                            NUMBER 0.0 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    NUMBER 1.0 1 [source_file: code]\n\n\nSubtree1: NAME b$$inline_1 1 [source_file:  [testcode] ]\n    VOID 1 [source_file:  [testcode] ]\n        NUMBER 0.0 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME b$$inline_3 1 [source_file: code]\n    VOID 1 [source_file: code]\n        NUMBER 0.0 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInlineIntoLoop(FunctionInjectorTest.java:960)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline13\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return a}function x(){var a$$inline_0=x++;a$$inline_0}\nResult: function foo(a){return a}function x(){var a$$inline_1=x++;a$$inline_1}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FUNCTION x 1 [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n                        INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                            NAME x 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FUNCTION x 1 [source_file: code]\n        NAME x 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME a$$inline_1 1 [source_file: code]\n                        INC 1 [incrdecr: 1] [source_file: code]\n                            NAME x 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    NAME a$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    INC 1 [incrdecr: 1] [source_file: code]\n        NAME x 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline13(FunctionInjectorTest.java:866)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline14\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return a+a}var a$$inline_0=x++;a$$inline_0+a$$inline_0\nResult: function foo(a){return a+a}var a$$inline_1=x++;a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                ADD 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                    NAME x 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            ADD 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                ADD 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                INC 1 [incrdecr: 1] [source_file: code]\n                    NAME x 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            ADD 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    INC 1 [incrdecr: 1] [source_file: code]\n        NAME x 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline14(FunctionInjectorTest.java:877)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline15\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return a+a}var a$$inline_0=new Date;a$$inline_0+a$$inline_0\nResult: function foo(a){return a+a}var a$$inline_1=new Date;a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                ADD 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                NEW 1 [source_file:  [testcode] ]\n                    NAME Date 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            ADD 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                ADD 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                NEW 1 [source_file: code]\n                    NAME Date 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            ADD 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    NEW 1 [source_file:  [testcode] ]\n        NAME Date 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    NEW 1 [source_file: code]\n        NAME Date 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline15(FunctionInjectorTest.java:888)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline16\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return a+a}var a$$inline_0=function(){};a$$inline_0+a$$inline_0\nResult: function foo(a){return a+a}var a$$inline_1=function(){};a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                ADD 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                FUNCTION  1 [source_file:  [testcode] ]\n                    NAME  1 [source_file:  [testcode] ]\n                    LP 1 [source_file:  [testcode] ]\n                    BLOCK 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            ADD 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                ADD 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                FUNCTION  1 [source_file: code]\n                    NAME  1 [source_file: code]\n                    LP 1 [source_file: code]\n                    BLOCK 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            ADD 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    FUNCTION  1 [source_file:  [testcode] ]\n        NAME  1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    FUNCTION  1 [source_file: code]\n        NAME  1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline16(FunctionInjectorTest.java:899)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline17\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return true}var a$$inline_0=goo();true\nResult: function foo(a){return true}var a$$inline_1=goo();true\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                TRUE 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                    NAME goo 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            TRUE 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                TRUE 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                CALL 1 [free_call: 1] [source_file: code]\n                    NAME goo 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            TRUE 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME goo 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    CALL 1 [free_call: 1] [source_file: code]\n        NAME goo 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline17(FunctionInjectorTest.java:910)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline18\njunit.framework.AssertionFailedError:\nExpected: function foo(a){var b;return a}function x(){var a$$inline_0=goo();var b$$inline_1;a$$inline_0}\nResult: function foo(a){var b;return a}function x(){var a$$inline_2=goo();var b$$inline_3;a$$inline_2}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            VAR 1 [source_file:  [testcode] ]\n                NAME b 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FUNCTION x 1 [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n                        CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                            NAME goo 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_1 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            VAR 1 [source_file: code]\n                NAME b 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FUNCTION x 1 [source_file: code]\n        NAME x 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME a$$inline_2 1 [source_file: code]\n                        CALL 1 [free_call: 1] [source_file: code]\n                            NAME goo 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME b$$inline_3 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    NAME a$$inline_2 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME goo 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_2 1 [source_file: code]\n    CALL 1 [free_call: 1] [source_file: code]\n        NAME goo 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline18(FunctionInjectorTest.java:919)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline19\njunit.framework.AssertionFailedError:\nExpected: var x=1;var y=2;function foo(a,b){x=b;y=a}function bar(){var a$$inline_0=x;x=y;y=a$$inline_0}\nResult: var x=1;var y=2;function foo(a,b){x=b;y=a}function bar(){var a$$inline_2=x;x=y;y=a$$inline_2}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n            NUMBER 1.0 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME y 1 [source_file:  [testcode] ]\n            NUMBER 2.0 1 [source_file:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n            NAME b 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            EXPR_RESULT 1 [source_file:  [testcode] ]\n                ASSIGN 1 [source_file:  [testcode] ]\n                    NAME x 1 [source_file:  [testcode] ]\n                    NAME b 1 [source_file:  [testcode] ]\n            EXPR_RESULT 1 [source_file:  [testcode] ]\n                ASSIGN 1 [source_file:  [testcode] ]\n                    NAME y 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FUNCTION bar 1 [source_file:  [testcode] ]\n        NAME bar 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n                        NAME x 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    ASSIGN 1 [source_file:  [testcode] ]\n                        NAME x 1 [source_file:  [testcode] ]\n                        NAME y 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    ASSIGN 1 [source_file:  [testcode] ]\n                        NAME y 1 [source_file:  [testcode] ]\n                        NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    VAR 1 [source_file: code]\n        NAME x 1 [source_file: code]\n            NUMBER 1.0 1 [source_file: code]\n    VAR 1 [source_file: code]\n        NAME y 1 [source_file: code]\n            NUMBER 2.0 1 [source_file: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n            NAME b 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            EXPR_RESULT 1 [source_file: code]\n                ASSIGN 1 [source_file: code]\n                    NAME x 1 [source_file: code]\n                    NAME b 1 [source_file: code]\n            EXPR_RESULT 1 [source_file: code]\n                ASSIGN 1 [source_file: code]\n                    NAME y 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FUNCTION bar 1 [source_file: code]\n        NAME bar 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME a$$inline_2 1 [source_file: code]\n                        NAME x 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    ASSIGN 1 [source_file: code]\n                        NAME x 1 [source_file: code]\n                        NAME y 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    ASSIGN 1 [source_file: code]\n                        NAME y 1 [source_file: code]\n                        NAME a$$inline_2 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_2 1 [source_file: code]\n    NAME x 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline19(FunctionInjectorTest.java:930)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testBug1897706\njunit.framework.AssertionFailedError:\nExpected: function foo(a){}var a$$inline_0=x()\nResult: function foo(a){}var a$$inline_1=x()\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                    NAME x 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                CALL 1 [free_call: 1] [source_file: code]\n                    NAME x 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    CALL 1 [free_call: 1] [source_file: code]\n        NAME x 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testBug1897706(FunctionInjectorTest.java:1315)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInlineFunctionWithInnerFunction5\njunit.framework.AssertionFailedError:\nExpected: function foo(){function x(){var a;return true}return x}var x$$inline_0=function(){var a$$inline_1;return true};x$$inline_0\nResult: function foo(){function x(){var a;return true}return x}var x$$inline_1=function(){var a$$inline_2;return true};x$$inline_1\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            FUNCTION x 1 [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n                LP 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n                    VAR 1 [source_file:  [testcode] ]\n                        NAME a 1 [source_file:  [testcode] ]\n                    RETURN 1 [source_file:  [testcode] ]\n                        TRUE 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME x$$inline_0 1 [source_file:  [testcode] ]\n                FUNCTION  1 [source_file:  [testcode] ]\n                    NAME  1 [source_file:  [testcode] ]\n                    LP 1 [source_file:  [testcode] ]\n                    BLOCK 1 [source_file:  [testcode] ]\n                        VAR 1 [source_file:  [testcode] ]\n                            NAME a$$inline_1 1 [source_file:  [testcode] ]\n                        RETURN 1 [source_file:  [testcode] ]\n                            TRUE 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            NAME x$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            FUNCTION x 1 [source_file: code]\n                NAME x 1 [source_file: code]\n                LP 1 [source_file: code]\n                BLOCK 1 [source_file: code]\n                    VAR 1 [source_file: code]\n                        NAME a 1 [source_file: code]\n                    RETURN 1 [source_file: code]\n                        TRUE 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                NAME x 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME x$$inline_1 1 [source_file: code]\n                FUNCTION  1 [source_file: code]\n                    NAME  1 [source_file: code]\n                    LP 1 [source_file: code]\n                    BLOCK 1 [source_file: code]\n                        VAR 1 [source_file: code]\n                            NAME a$$inline_2 1 [source_file: code]\n                        RETURN 1 [source_file: code]\n                            TRUE 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            NAME x$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file:  [testcode] ]\n    FUNCTION  1 [source_file:  [testcode] ]\n        NAME  1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            VAR 1 [source_file:  [testcode] ]\n                NAME a$$inline_1 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                TRUE 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: code]\n    FUNCTION  1 [source_file: code]\n        NAME  1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            VAR 1 [source_file: code]\n                NAME a$$inline_2 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                TRUE 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInlineFunctionWithInnerFunction5(FunctionInjectorTest.java:1025)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateWithParameters3\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=x++;a$$inline_0\nResult: var a$$inline_1=x++;a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME a$$inline_0 1 [source_file:  [testcode] ]\n            INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME a$$inline_1 1 [source_file:  [testcode] ]\n            INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NAME a$$inline_1 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateWithParameters3(FunctionToBlockMutatorTest.java:112)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateCallInLoopVars1\njunit.framework.AssertionFailedError:\nExpected: var B$$inline_1=bar();1\nResult: var B$$inline_3=bar();1\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME B$$inline_1 1 [source_file:  [testcode] ]\n            CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                NAME bar 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME B$$inline_3 1 [source_file:  [testcode] ]\n            CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                NAME bar 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME B$$inline_1 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME bar 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME B$$inline_3 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME bar 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateCallInLoopVars1(FunctionToBlockMutatorTest.java:151)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateInitializeUninitializedVars1\njunit.framework.AssertionFailedError:\nExpected: var b$$inline_1=void 0;1\nResult: var b$$inline_3=void 0;1\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME b$$inline_1 1 [source_file:  [testcode] ]\n            VOID 1 [source_file:  [testcode] ]\n                NUMBER 0.0 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME b$$inline_3 1 [source_file:  [testcode] ]\n            VOID 1 [source_file:  [testcode] ]\n                NUMBER 0.0 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME b$$inline_1 1 [source_file:  [testcode] ]\n    VOID 1 [source_file:  [testcode] ]\n        NUMBER 0.0 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME b$$inline_3 1 [source_file:  [testcode] ]\n    VOID 1 [source_file:  [testcode] ]\n        NUMBER 0.0 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateInitializeUninitializedVars1(FunctionToBlockMutatorTest.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateInitializeUninitializedVars2\njunit.framework.AssertionFailedError:\nExpected: JSCompiler_inline_label_foo_2:for(var b$$inline_1 in c){1;break JSCompiler_inline_label_foo_2}\nResult: JSCompiler_inline_label_foo_4:for(var b$$inline_3 in c){1;break JSCompiler_inline_label_foo_4}\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    LABEL 1 [source_file:  [testcode] ]\n        LABEL_NAME JSCompiler_inline_label_foo_2 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            FOR 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_1 1 [source_file:  [testcode] ]\n                NAME c 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n                    EXPR_RESULT 1 [source_file:  [testcode] ]\n                        NUMBER 1.0 1 [source_file:  [testcode] ]\n                    BREAK 1 [source_file:  [testcode] ]\n                        LABEL_NAME JSCompiler_inline_label_foo_2 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    LABEL 1 [source_file:  [testcode] ]\n        LABEL_NAME JSCompiler_inline_label_foo_4 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            FOR 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_3 1 [source_file:  [testcode] ]\n                NAME c 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n                    EXPR_RESULT 1 [source_file:  [testcode] ]\n                        NUMBER 1.0 1 [source_file:  [testcode] ]\n                    BREAK 1 [source_file:  [testcode] ]\n                        LABEL_NAME JSCompiler_inline_label_foo_4 1 [source_file:  [testcode] ]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_foo_2 1 [source_file:  [testcode] ]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_foo_4 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateInitializeUninitializedVars2(FunctionToBlockMutatorTest.java:136)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateFunctionDefinition\njunit.framework.AssertionFailedError:\nExpected: var g$$inline_1=function(){}\nResult: var g$$inline_3=function(){}\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME g$$inline_1 1 [source_file:  [testcode] ]\n            FUNCTION  1 [source_file:  [testcode] ]\n                NAME  1 [source_file:  [testcode] ]\n                LP 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME g$$inline_3 1 [source_file:  [testcode] ]\n            FUNCTION  1 [source_file:  [testcode] ]\n                NAME  1 [source_file:  [testcode] ]\n                LP 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME g$$inline_1 1 [source_file:  [testcode] ]\n    FUNCTION  1 [source_file:  [testcode] ]\n        NAME  1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME g$$inline_3 1 [source_file:  [testcode] ]\n    FUNCTION  1 [source_file:  [testcode] ]\n        NAME  1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateFunctionDefinition(FunctionToBlockMutatorTest.java:167)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutate8\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=x++;a$$inline_0+a$$inline_0\nResult: var a$$inline_1=x++;a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME a$$inline_0 1 [source_file:  [testcode] ]\n            INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        ADD 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME a$$inline_1 1 [source_file:  [testcode] ]\n            INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        ADD 1 [source_file:  [testcode] ]\n            NAME a$$inline_1 1 [source_file:  [testcode] ]\n            NAME a$$inline_1 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutate8(FunctionToBlockMutatorTest.java:121)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testLoopWithFunctionWithFunction\njunit.framework.AssertionFailedError:\nExpected: function _testLocalVariableInLoop_(){var result=0;var arr$$inline_0=[1,2,3,4,5];var i$$inline_1=0;var l$$inline_2=arr$$inline_0.length;for(;i$$inline_1<l$$inline_2;i$$inline_1++){var j$$inline_3=arr$$inline_0[i$$inline_1];(function(){var k$$inline_4=j$$inline_3;setTimeout(function(){result+=k$$inline_4},5*i$$inline_1)})()}}\nResult: function _testLocalVariableInLoop_(){var result=0;var arr$$inline_4=[1,2,3,4,5];var i$$inline_5=0;var l$$inline_6=arr$$inline_4.length;for(;i$$inline_5<l$$inline_6;i$$inline_5++){var j$$inline_7=arr$$inline_4[i$$inline_5];(function(){var k$$inline_8=j$$inline_7;setTimeout(function(){result+=k$$inline_8},5*i$$inline_5)})()}}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        FUNCTION _testLocalVariableInLoop_ 1 [source_file: expected0]\n            NAME _testLocalVariableInLoop_ 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 2 [source_file: expected0]\n                    NAME result 2 [source_file: expected0]\n                        NUMBER 0.0 2 [source_file: expected0]\n                BLOCK 3 [source_file: expected0]\n                    VAR 3 [source_file: expected0]\n                        NAME arr$$inline_0 3 [source_file: expected0]\n                            ARRAYLIT 3 [source_file: expected0]\n                                NUMBER 1.0 3 [source_file: expected0]\n                                NUMBER 2.0 3 [source_file: expected0]\n                                NUMBER 3.0 3 [source_file: expected0]\n                                NUMBER 4.0 3 [source_file: expected0]\n                                NUMBER 5.0 3 [source_file: expected0]\n                    VAR 4 [source_file: expected0]\n                        NAME i$$inline_1 4 [source_file: expected0]\n                            NUMBER 0.0 4 [source_file: expected0]\n                    VAR 5 [source_file: expected0]\n                        NAME l$$inline_2 5 [source_file: expected0]\n                            GETPROP 5 [source_file: expected0]\n                                NAME arr$$inline_0 5 [source_file: expected0]\n                                STRING length 5 [source_file: expected0]\n                    FOR 6 [source_file: expected0]\n                        EMPTY 6 [source_file: expected0]\n                        LT 6 [source_file: expected0]\n                            NAME i$$inline_1 6 [source_file: expected0]\n                            NAME l$$inline_2 6 [source_file: expected0]\n                        INC 6 [incrdecr: 1] [source_file: expected0]\n                            NAME i$$inline_1 6 [source_file: expected0]\n                        BLOCK 6 [source_file: expected0]\n                            VAR 7 [source_file: expected0]\n                                NAME j$$inline_3 7 [source_file: expected0]\n                                    GETELEM 7 [source_file: expected0]\n                                        NAME arr$$inline_0 7 [source_file: expected0]\n                                        NAME i$$inline_1 7 [source_file: expected0]\n                            EXPR_RESULT 8 [source_file: expected0]\n                                CALL 11 [free_call: 1] [source_file: expected0]\n                                    FUNCTION  8 [parenthesized: true] [source_file: expected0]\n                                        NAME  8 [source_file: expected0]\n                                        LP 8 [source_file: expected0]\n                                        BLOCK 8 [source_file: expected0]\n                                            VAR 9 [source_file: expected0]\n                                                NAME k$$inline_4 9 [source_file: expected0]\n                                                    NAME j$$inline_3 9 [source_file: expected0]\n                                            EXPR_RESULT 10 [source_file: expected0]\n                                                CALL 10 [free_call: 1] [source_file: expected0]\n                                                    NAME setTimeout 10 [source_file: expected0]\n                                                    FUNCTION  10 [source_file: expected0]\n                                                        NAME  10 [source_file: expected0]\n                                                        LP 10 [source_file: expected0]\n                                                        BLOCK 10 [source_file: expected0]\n                                                            EXPR_RESULT 10 [source_file: expected0]\n                                                                ASSIGN_ADD 10 [source_file: expected0]\n                                                                    NAME result 10 [source_file: expected0]\n                                                                    NAME k$$inline_4 10 [source_file: expected0]\n                                                    MUL 10 [source_file: expected0]\n                                                        NUMBER 5.0 10 [source_file: expected0]\n                                                        NAME i$$inline_1 10 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        FUNCTION _testLocalVariableInLoop_ 1 [source_file: testcode]\n            NAME _testLocalVariableInLoop_ 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 2 [source_file: testcode]\n                    NAME result 2 [source_file: testcode]\n                        NUMBER 0.0 2 [source_file: testcode]\n                BLOCK 3 [source_file: testcode]\n                    VAR 4 [source_file: testcode]\n                        NAME arr$$inline_4 4 [source_file: testcode]\n                            ARRAYLIT 4 [source_file: testcode]\n                                NUMBER 1.0 4 [source_file: testcode]\n                                NUMBER 2.0 4 [source_file: testcode]\n                                NUMBER 3.0 4 [source_file: testcode]\n                                NUMBER 4.0 4 [source_file: testcode]\n                                NUMBER 5.0 4 [source_file: testcode]\n                    VAR 3\n                        NAME i$$inline_5 5 [source_file: testcode]\n                            NUMBER 0.0 5 [source_file: testcode]\n                    VAR 5 [source_file: testcode]\n                        NAME l$$inline_6 5 [source_file: testcode]\n                            GETPROP 5 [source_file: testcode]\n                                NAME arr$$inline_4 5 [source_file: testcode]\n                                STRING length 5 [source_file: testcode]\n                    FOR 5 [source_file: testcode]\n                        EMPTY 5 [source_file: testcode]\n                        LT 5 [source_file: testcode]\n                            NAME i$$inline_5 5 [source_file: testcode]\n                            NAME l$$inline_6 5 [source_file: testcode]\n                        INC 5 [incrdecr: 1] [source_file: testcode]\n                            NAME i$$inline_5 5 [source_file: testcode]\n                        BLOCK 5 [source_file: testcode]\n                            VAR 6 [source_file: testcode]\n                                NAME j$$inline_7 6 [source_file: testcode]\n                                    GETELEM 6 [source_file: testcode]\n                                        NAME arr$$inline_4 6 [source_file: testcode]\n                                        NAME i$$inline_5 6 [source_file: testcode]\n                            EXPR_RESULT 7 [source_file: testcode]\n                                CALL 10 [free_call: 1] [source_file: testcode]\n                                    FUNCTION  7 [parenthesized: true] [source_file: testcode]\n                                        NAME  7 [source_file: testcode]\n                                        LP 7 [source_file: testcode]\n                                        BLOCK 7 [source_file: testcode]\n                                            VAR 8 [source_file: testcode]\n                                                NAME k$$inline_8 8 [source_file: testcode]\n                                                    NAME j$$inline_7 8 [source_file: testcode]\n                                            EXPR_RESULT 9 [source_file: testcode]\n                                                CALL 9 [free_call: 1] [source_file: testcode]\n                                                    NAME setTimeout 9 [source_file: testcode]\n                                                    FUNCTION  9 [source_file: testcode]\n                                                        NAME  9 [source_file: testcode]\n                                                        LP 9 [source_file: testcode]\n                                                        BLOCK 9 [source_file: testcode]\n                                                            EXPR_RESULT 9 [source_file: testcode]\n                                                                ASSIGN_ADD 9 [source_file: testcode]\n                                                                    NAME result 9 [source_file: testcode]\n                                                                    NAME k$$inline_8 9 [source_file: testcode]\n                                                    MUL 9 [source_file: testcode]\n                                                        NUMBER 5.0 9 [source_file: testcode]\n                                                        NAME i$$inline_5 9 [source_file: testcode]\n\n\nSubtree1: NAME arr$$inline_0 3 [source_file: expected0]\n    ARRAYLIT 3 [source_file: expected0]\n        NUMBER 1.0 3 [source_file: expected0]\n        NUMBER 2.0 3 [source_file: expected0]\n        NUMBER 3.0 3 [source_file: expected0]\n        NUMBER 4.0 3 [source_file: expected0]\n        NUMBER 5.0 3 [source_file: expected0]\n\n\nSubtree2: NAME arr$$inline_4 4 [source_file: testcode]\n    ARRAYLIT 4 [source_file: testcode]\n        NUMBER 1.0 4 [source_file: testcode]\n        NUMBER 2.0 4 [source_file: testcode]\n        NUMBER 3.0 4 [source_file: testcode]\n        NUMBER 4.0 4 [source_file: testcode]\n        NUMBER 5.0 4 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testLoopWithFunctionWithFunction(InlineFunctionsTest.java:2201)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables16\njunit.framework.AssertionFailedError:\nExpected: var a=3;var a$$inline_0=5;a\nResult: var a=3;var a$$inline_1=5;a\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 3.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 5.0 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    NAME a 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 3.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 5.0 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    NAME a 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 5.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 5.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables16(InlineFunctionsTest.java:845)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables18\njunit.framework.AssertionFailedError:\nExpected: var a=0;function _goo(){var a$$2=2;var x;var a$$inline_0=3;x=a+a}\nResult: var a=0;function _goo(){var a$$2=2;var x;var a$$inline_1=3;x=a+a}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 0.0 1 [source_file: expected0]\n        FUNCTION _goo 1 [source_file: expected0]\n            NAME _goo 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME a$$2 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME x 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                            NUMBER 3.0 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME x 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NAME a 1 [source_file: expected0]\n                                NAME a 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 0.0 1 [source_file: testcode]\n        FUNCTION _goo 1 [source_file: testcode]\n            NAME _goo 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME a$$2 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME x 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                            NUMBER 3.0 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME x 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                NAME a 1 [source_file: testcode]\n                                NAME a 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 3.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 3.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables18(InlineFunctionsTest.java:874)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testCostBasedInlining11\njunit.framework.AssertionFailedError:\nExpected: var a;var a$$inline_0=1+1;a=a$$inline_0+a$$inline_0\nResult: var a;var a$$inline_1=1+1;a=a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME a 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME a 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    ADD 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    ADD 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testCostBasedInlining11(InlineFunctionsTest.java:996)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testMixedModeInliningCosting3\njunit.framework.AssertionFailedError:\nExpected: 1+2+1+2+4+5+6+7+8+9+1+2+3+10;var JSCompiler_inline_anon_param_2=x();2+3+2+3+4+5+6+7+8+9+1+2+3+10\nResult: 1+2+1+2+4+5+6+7+8+9+1+2+3+10;var JSCompiler_inline_anon_param_4=x();2+3+2+3+4+5+6+7+8+9+1+2+3+10\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ADD 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                ADD 1 [source_file: expected0]\n                                    ADD 1 [source_file: expected0]\n                                        ADD 1 [source_file: expected0]\n                                            ADD 1 [source_file: expected0]\n                                                ADD 1 [source_file: expected0]\n                                                    ADD 1 [source_file: expected0]\n                                                        ADD 1 [source_file: expected0]\n                                                            ADD 1 [source_file: expected0]\n                                                                NUMBER 1.0 1 [source_file: expected0]\n                                                                NUMBER 2.0 1 [source_file: expected0]\n                                                            NUMBER 1.0 1 [source_file: expected0]\n                                                        NUMBER 2.0 1 [source_file: expected0]\n                                                    NUMBER 4.0 1 [source_file: expected0]\n                                                NUMBER 5.0 1 [source_file: expected0]\n                                            NUMBER 6.0 1 [source_file: expected0]\n                                        NUMBER 7.0 1 [source_file: expected0]\n                                    NUMBER 8.0 1 [source_file: expected0]\n                                NUMBER 9.0 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 3.0 1 [source_file: expected0]\n                NUMBER 10.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME JSCompiler_inline_anon_param_2 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME x 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                ADD 1 [source_file: expected0]\n                                    ADD 1 [source_file: expected0]\n                                        ADD 1 [source_file: expected0]\n                                            ADD 1 [source_file: expected0]\n                                                ADD 1 [source_file: expected0]\n                                                    ADD 1 [source_file: expected0]\n                                                        ADD 1 [source_file: expected0]\n                                                            ADD 1 [source_file: expected0]\n                                                                ADD 1 [source_file: expected0]\n                                                                    NUMBER 2.0 1 [source_file: expected0]\n                                                                    NUMBER 3.0 1 [source_file: expected0]\n                                                                NUMBER 2.0 1 [source_file: expected0]\n                                                            NUMBER 3.0 1 [source_file: expected0]\n                                                        NUMBER 4.0 1 [source_file: expected0]\n                                                    NUMBER 5.0 1 [source_file: expected0]\n                                                NUMBER 6.0 1 [source_file: expected0]\n                                            NUMBER 7.0 1 [source_file: expected0]\n                                        NUMBER 8.0 1 [source_file: expected0]\n                                    NUMBER 9.0 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n                        NUMBER 3.0 1 [source_file: expected0]\n                    NUMBER 10.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            ADD 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                ADD 1 [source_file: testcode]\n                                    ADD 1 [source_file: testcode]\n                                        ADD 1 [source_file: testcode]\n                                            ADD 1 [source_file: testcode]\n                                                ADD 1 [source_file: testcode]\n                                                    ADD 1 [source_file: testcode]\n                                                        ADD 1 [source_file: testcode]\n                                                            ADD 1 [source_file: testcode]\n                                                                NUMBER 1.0 1 [source_file: testcode]\n                                                                NUMBER 2.0 1 [source_file: testcode]\n                                                            NUMBER 1.0 1 [source_file: testcode]\n                                                        NUMBER 2.0 1 [source_file: testcode]\n                                                    NUMBER 4.0 1 [source_file: testcode]\n                                                NUMBER 5.0 1 [source_file: testcode]\n                                            NUMBER 6.0 1 [source_file: testcode]\n                                        NUMBER 7.0 1 [source_file: testcode]\n                                    NUMBER 8.0 1 [source_file: testcode]\n                                NUMBER 9.0 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                    NUMBER 3.0 1 [source_file: testcode]\n                NUMBER 10.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME JSCompiler_inline_anon_param_4 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME x 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                ADD 1 [source_file: testcode]\n                                    ADD 1 [source_file: testcode]\n                                        ADD 1 [source_file: testcode]\n                                            ADD 1 [source_file: testcode]\n                                                ADD 1 [source_file: testcode]\n                                                    ADD 1 [source_file: testcode]\n                                                        ADD 1 [source_file: testcode]\n                                                            ADD 1 [source_file: testcode]\n                                                                ADD 1 [source_file: testcode]\n                                                                    NUMBER 2.0 1 [source_file: testcode]\n                                                                    NUMBER 3.0 1 [source_file: testcode]\n                                                                NUMBER 2.0 1 [source_file: testcode]\n                                                            NUMBER 3.0 1 [source_file: testcode]\n                                                        NUMBER 4.0 1 [source_file: testcode]\n                                                    NUMBER 5.0 1 [source_file: testcode]\n                                                NUMBER 6.0 1 [source_file: testcode]\n                                            NUMBER 7.0 1 [source_file: testcode]\n                                        NUMBER 8.0 1 [source_file: testcode]\n                                    NUMBER 9.0 1 [source_file: testcode]\n                                NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n                        NUMBER 3.0 1 [source_file: testcode]\n                    NUMBER 10.0 1 [source_file: testcode]\n\n\nSubtree1: NAME JSCompiler_inline_anon_param_2 1 [source_file: expected0]\n    CALL 1 [free_call: 1] [source_file: expected0]\n        NAME x 1 [source_file: expected0]\n\n\nSubtree2: NAME JSCompiler_inline_anon_param_4 1 [source_file: testcode]\n    CALL 1 [free_call: 1] [source_file: testcode]\n        NAME x 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testMixedModeInliningCosting3(InlineFunctionsTest.java:529)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineNeverMutateConstants\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=undefined;x$$inline_0=1\nResult: var x$$inline_1=undefined;x$$inline_1=1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NAME undefined 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NAME undefined 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NAME undefined 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NAME undefined 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineNeverMutateConstants(InlineFunctionsTest.java:617)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineWithThis7\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=void 0;a$$inline_0=1;void 0\nResult: var a$$inline_1=void 0;a$$inline_1=1;void 0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    VOID 1 [source_file: expected0]\n                        NUMBER 0.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                VOID 1 [source_file: expected0]\n                    NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    VOID 1 [source_file: testcode]\n                        NUMBER 0.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                VOID 1 [source_file: testcode]\n                    NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    VOID 1 [source_file: expected0]\n        NUMBER 0.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    VOID 1 [source_file: testcode]\n        NUMBER 0.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineWithThis7(InlineFunctionsTest.java:1895)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testAnonymous1\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=10;var b$$inline_1=a$$inline_0;a$$inline_0++;alert(b$$inline_1)\nResult: var a$$inline_2=10;var b$$inline_3=a$$inline_2;a$$inline_2++;alert(b$$inline_3)\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 10.0 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME b$$inline_1 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME alert 1 [source_file: expected0]\n                        NAME b$$inline_1 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_2 1 [source_file: testcode]\n                    NUMBER 10.0 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME b$$inline_3 1 [source_file: testcode]\n                        NAME a$$inline_2 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME a$$inline_2 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME alert 1 [source_file: testcode]\n                        NAME b$$inline_3 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 10.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_2 1 [source_file: testcode]\n    NUMBER 10.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testAnonymous1(InlineFunctionsTest.java:2169)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testAnonymous3\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=10;(function(){arguments})()\nResult: var a$$inline_1=10;(function(){arguments})()\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 10.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    FUNCTION  1 [parenthesized: true] [source_file: expected0]\n                        NAME  1 [source_file: expected0]\n                        LP 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                NAME arguments 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 10.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    FUNCTION  1 [parenthesized: true] [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                NAME arguments 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 10.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 10.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testAnonymous3(InlineFunctionsTest.java:2191)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables1\njunit.framework.AssertionFailedError:\nExpected: var a=0;var a$$inline_0=3+4\nResult: var a=0;var a$$inline_1=3+4\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 0.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        NUMBER 3.0 1 [source_file: expected0]\n                        NUMBER 4.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 0.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        NUMBER 3.0 1 [source_file: testcode]\n                        NUMBER 4.0 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    ADD 1 [source_file: expected0]\n        NUMBER 3.0 1 [source_file: expected0]\n        NUMBER 4.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    ADD 1 [source_file: testcode]\n        NUMBER 3.0 1 [source_file: testcode]\n        NUMBER 4.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables1(InlineFunctionsTest.java:682)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables3\njunit.framework.AssertionFailedError:\nExpected: var a=0;function _bar(){var a$$inline_0=2;a=3+a$$inline_0}\nResult: var a=0;function _bar(){var a$$inline_1=2;a=3+a$$inline_1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 0.0 1 [source_file: expected0]\n        FUNCTION _bar 1 [source_file: expected0]\n            NAME _bar 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME a 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NUMBER 3.0 1 [source_file: expected0]\n                                NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 0.0 1 [source_file: testcode]\n        FUNCTION _bar 1 [source_file: testcode]\n            NAME _bar 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME a 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                NUMBER 3.0 1 [source_file: testcode]\n                                NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables3(InlineFunctionsTest.java:706)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables6\njunit.framework.AssertionFailedError:\nExpected: var a=0;function _bar(a$$2){var a$$inline_0=4;a$$2=3+a$$inline_0}\nResult: var a=0;function _bar(a$$2){var a$$inline_1=4;a$$2=3+a$$inline_1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 0.0 1 [source_file: expected0]\n        FUNCTION _bar 1 [source_file: expected0]\n            NAME _bar 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n                NAME a$$2 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                            NUMBER 4.0 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME a$$2 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NUMBER 3.0 1 [source_file: expected0]\n                                NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 0.0 1 [source_file: testcode]\n        FUNCTION _bar 1 [source_file: testcode]\n            NAME _bar 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n                NAME a$$2 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                            NUMBER 4.0 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME a$$2 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                NUMBER 3.0 1 [source_file: testcode]\n                                NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 4.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 4.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables6(InlineFunctionsTest.java:737)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables7\njunit.framework.AssertionFailedError:\nExpected: var a=3;var a$$inline_0=5;a\nResult: var a=3;var a$$inline_1=5;a\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 3.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 5.0 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    NAME a 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 3.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 5.0 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    NAME a 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 5.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 5.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables7(InlineFunctionsTest.java:748)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testFunctionExpressionCallInlining11b\njunit.framework.AssertionFailedError:\nExpected: var JSCompiler_inline_result$$0;var a$$inline_1;JSCompiler_inline_result$$0=function(){foo()};JSCompiler_inline_result$$0()\nResult: var JSCompiler_inline_result$$0;var a$$inline_2;JSCompiler_inline_result$$0=function(){foo()};JSCompiler_inline_result$$0()\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_1 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n                    FUNCTION  1 [source_file: expected0]\n                        NAME  1 [source_file: expected0]\n                        LP 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                CALL 1 [free_call: 1] [source_file: expected0]\n                                    NAME foo 1 [source_file: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            CALL 1 [free_call: 1] [source_file: expected0]\n                NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME JSCompiler_inline_result$$0 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_2 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$0 1 [source_file: testcode]\n                    FUNCTION  1 [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                CALL 1 [free_call: 1] [source_file: testcode]\n                                    NAME foo 1 [source_file: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            CALL 1 [free_call: 1] [source_file: testcode]\n                NAME JSCompiler_inline_result$$0 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_1 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_2 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testFunctionExpressionCallInlining11b(InlineFunctionsTest.java:1682)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexInlineNoResultNoParamCall3\njunit.framework.AssertionFailedError:\nExpected: function _foo(){a();b();var z$$inline_0=1+1}\nResult: function _foo(){a();b();var z$$inline_1=1+1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        FUNCTION _foo 1 [source_file: expected0]\n            NAME _foo 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME a 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME b 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME z$$inline_0 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        FUNCTION _foo 1 [source_file: testcode]\n            NAME _foo 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        CALL 1 [free_call: 1] [source_file: testcode]\n                            NAME a 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        CALL 1 [free_call: 1] [source_file: testcode]\n                            NAME b 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME z$$inline_1 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                NUMBER 1.0 1 [source_file: testcode]\n                                NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME z$$inline_0 1 [source_file: expected0]\n    ADD 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME z$$inline_1 1 [source_file: testcode]\n    ADD 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexInlineNoResultNoParamCall3(InlineFunctionsTest.java:1212)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testCostBasedInlining9\njunit.framework.AssertionFailedError:\nExpected: var a;var a$$inline_0=1+1+1;a=1+a$$inline_0+a$$inline_0\nResult: var a;var a$$inline_1=1+1+1;a=1+a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME a 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NAME a$$inline_0 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME a 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NAME a$$inline_1 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    ADD 1 [source_file: expected0]\n        ADD 1 [source_file: expected0]\n            NUMBER 1.0 1 [source_file: expected0]\n            NUMBER 1.0 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    ADD 1 [source_file: testcode]\n        ADD 1 [source_file: testcode]\n            NUMBER 1.0 1 [source_file: testcode]\n            NUMBER 1.0 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testCostBasedInlining9(InlineFunctionsTest.java:977)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testMethodWithFunctionWithFunction\njunit.framework.AssertionFailedError:\nExpected: function _testLocalVariable_(){var result=0;var j$$inline_2=[i];var j$$inline_0=j$$inline_2;setTimeout(function(){result+=j$$inline_0},5*i);j$$inline_2=null}\nResult: function _testLocalVariable_(){var result=0;var j$$inline_4=[i];var j$$inline_1=j$$inline_4;setTimeout(function(){result+=j$$inline_1},5*i);j$$inline_4=null}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        FUNCTION _testLocalVariable_ 1 [source_file: expected0]\n            NAME _testLocalVariable_ 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 2 [source_file: expected0]\n                    NAME result 2 [source_file: expected0]\n                        NUMBER 0.0 2 [source_file: expected0]\n                BLOCK 3 [source_file: expected0]\n                    VAR 4 [source_file: expected0]\n                        NAME j$$inline_2 4 [source_file: expected0]\n                            ARRAYLIT 4 [source_file: expected0]\n                                NAME i 4 [source_file: expected0]\n                    BLOCK 5 [source_file: expected0]\n                        VAR 6 [source_file: expected0]\n                            NAME j$$inline_0 6 [source_file: expected0]\n                                NAME j$$inline_2 6 [source_file: expected0]\n                        EXPR_RESULT 7 [source_file: expected0]\n                            CALL 7 [free_call: 1] [source_file: expected0]\n                                NAME setTimeout 7 [source_file: expected0]\n                                FUNCTION  7 [source_file: expected0]\n                                    NAME  7 [source_file: expected0]\n                                    LP 7 [source_file: expected0]\n                                    BLOCK 7 [source_file: expected0]\n                                        EXPR_RESULT 7 [source_file: expected0]\n                                            ASSIGN_ADD 7 [source_file: expected0]\n                                                NAME result 7 [source_file: expected0]\n                                                NAME j$$inline_0 7 [source_file: expected0]\n                                MUL 7 [source_file: expected0]\n                                    NUMBER 5.0 7 [source_file: expected0]\n                                    NAME i 7 [source_file: expected0]\n                    EXPR_RESULT 9 [source_file: expected0]\n                        ASSIGN 9 [source_file: expected0]\n                            NAME j$$inline_2 9 [source_file: expected0]\n                            NULL 9 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        FUNCTION _testLocalVariable_ 1 [source_file: testcode]\n            NAME _testLocalVariable_ 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 2 [source_file: testcode]\n                    NAME result 2 [source_file: testcode]\n                        NUMBER 0.0 2 [source_file: testcode]\n                BLOCK 3 [source_file: testcode]\n                    VAR 4 [source_file: testcode]\n                        NAME j$$inline_4 4 [source_file: testcode]\n                            ARRAYLIT 4 [source_file: testcode]\n                                NAME i 4 [source_file: testcode]\n                    BLOCK 5 [source_file: testcode]\n                        VAR 7 [source_file: testcode]\n                            NAME j$$inline_1 7 [source_file: testcode]\n                                NAME j$$inline_4 7 [source_file: testcode]\n                        EXPR_RESULT 6 [source_file: testcode]\n                            CALL 6 [free_call: 1] [source_file: testcode]\n                                NAME setTimeout 6 [source_file: testcode]\n                                FUNCTION  6 [source_file: testcode]\n                                    NAME  6 [source_file: testcode]\n                                    LP 6 [source_file: testcode]\n                                    BLOCK 6 [source_file: testcode]\n                                        EXPR_RESULT 6 [source_file: testcode]\n                                            ASSIGN_ADD 6 [source_file: testcode]\n                                                NAME result 6 [source_file: testcode]\n                                                NAME j$$inline_1 6 [source_file: testcode]\n                                MUL 6 [source_file: testcode]\n                                    NUMBER 5.0 6 [source_file: testcode]\n                                    NAME i 6 [source_file: testcode]\n                    EXPR_RESULT 8 [source_file: testcode]\n                        ASSIGN 8 [source_file: testcode]\n                            NAME j$$inline_4 8 [source_file: testcode]\n                            NULL 8 [source_file: testcode]\n\n\nSubtree1: NAME j$$inline_2 4 [source_file: expected0]\n    ARRAYLIT 4 [source_file: expected0]\n        NAME i 4 [source_file: expected0]\n\n\nSubtree2: NAME j$$inline_4 4 [source_file: testcode]\n    ARRAYLIT 4 [source_file: testcode]\n        NAME i 4 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testMethodWithFunctionWithFunction(InlineFunctionsTest.java:2236)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testFunctionExpressionYCombinator\njunit.framework.AssertionFailedError:\nExpected: var factorial;var M$$inline_4=function(f$$2){return function(n){if(n===0)return 1;else return n*f$$2(n-1)}};var f$$inline_0=function(f$$inline_7){return M$$inline_4(function(arg$$inline_8){return f$$inline_7(f$$inline_7)(arg$$inline_8)})};factorial=M$$inline_4(function(arg$$inline_1){return f$$inline_0(f$$inline_0)(arg$$inline_1)});factorial(5)\nResult: var factorial;var M$$inline_6=function(f$$2){return function(n){if(n===0)return 1;else return n*f$$2(n-1)}};var f$$inline_1=function(f$$inline_9){return M$$inline_6(function(arg$$inline_10){return f$$inline_9(f$$inline_9)(arg$$inline_10)})};factorial=M$$inline_6(function(arg$$inline_2){return f$$inline_1(f$$inline_1)(arg$$inline_2)});factorial(5)\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME factorial 1 [source_file: expected0]\n        BLOCK 2 [source_file: expected0]\n            VAR 3 [source_file: expected0]\n                NAME M$$inline_4 3 [source_file: expected0]\n                    FUNCTION  3 [source_file: expected0]\n                        NAME  3 [source_file: expected0]\n                        LP 3 [source_file: expected0]\n                            NAME f$$2 3 [source_file: expected0]\n                        BLOCK 3 [source_file: expected0]\n                            RETURN 4 [source_file: expected0]\n                                FUNCTION  4 [source_file: expected0]\n                                    NAME  4 [source_file: expected0]\n                                    LP 4 [source_file: expected0]\n                                        NAME n 4 [source_file: expected0]\n                                    BLOCK 4 [source_file: expected0]\n                                        IF 4 [source_file: expected0]\n                                            SHEQ 4 [source_file: expected0]\n                                                NAME n 4 [source_file: expected0]\n                                                NUMBER 0.0 4 [source_file: expected0]\n                                            BLOCK 4 [source_file: expected0]\n                                                RETURN 4 [source_file: expected0]\n                                                    NUMBER 1.0 4 [source_file: expected0]\n                                            BLOCK 4 [source_file: expected0]\n                                                RETURN 4 [source_file: expected0]\n                                                    MUL 4 [source_file: expected0]\n                                                        NAME n 4 [source_file: expected0]\n                                                        CALL 4 [free_call: 1] [source_file: expected0]\n                                                            NAME f$$2 4 [source_file: expected0]\n                                                            SUB 4 [source_file: expected0]\n                                                                NAME n 4 [source_file: expected0]\n                                                                NUMBER 1.0 4 [source_file: expected0]\n            BLOCK 6 [source_file: expected0]\n                VAR 7 [source_file: expected0]\n                    NAME f$$inline_0 7 [source_file: expected0]\n                        FUNCTION  7 [source_file: expected0]\n                            NAME  7 [source_file: expected0]\n                            LP 7 [source_file: expected0]\n                                NAME f$$inline_7 7 [source_file: expected0]\n                            BLOCK 7 [source_file: expected0]\n                                RETURN 8 [source_file: expected0]\n                                    CALL 8 [free_call: 1] [source_file: expected0]\n                                        NAME M$$inline_4 8 [source_file: expected0]\n                                        FUNCTION  9 [source_file: expected0]\n                                            NAME  9 [source_file: expected0]\n                                            LP 9 [source_file: expected0]\n                                                NAME arg$$inline_8 9 [source_file: expected0]\n                                            BLOCK 9 [source_file: expected0]\n                                                RETURN 10 [source_file: expected0]\n                                                    CALL 10 [free_call: 1] [source_file: expected0]\n                                                        CALL 10 [free_call: 1] [source_file: expected0]\n                                                            NAME f$$inline_7 10 [source_file: expected0]\n                                                            NAME f$$inline_7 10 [source_file: expected0]\n                                                        NAME arg$$inline_8 10 [source_file: expected0]\n                EXPR_RESULT 13 [source_file: expected0]\n                    ASSIGN 13 [source_file: expected0]\n                        NAME factorial 13 [source_file: expected0]\n                        CALL 13 [free_call: 1] [source_file: expected0]\n                            NAME M$$inline_4 13 [source_file: expected0]\n                            FUNCTION  14 [source_file: expected0]\n                                NAME  14 [source_file: expected0]\n                                LP 14 [source_file: expected0]\n                                    NAME arg$$inline_1 14 [source_file: expected0]\n                                BLOCK 14 [source_file: expected0]\n                                    RETURN 15 [source_file: expected0]\n                                        CALL 15 [free_call: 1] [source_file: expected0]\n                                            CALL 15 [free_call: 1] [source_file: expected0]\n                                                NAME f$$inline_0 15 [source_file: expected0]\n                                                NAME f$$inline_0 15 [source_file: expected0]\n                                            NAME arg$$inline_1 15 [source_file: expected0]\n        EXPR_RESULT 18 [source_file: expected0]\n            CALL 18 [free_call: 1] [source_file: expected0]\n                NAME factorial 18 [source_file: expected0]\n                NUMBER 5.0 18 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME factorial 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 13 [source_file: testcode]\n                NAME M$$inline_6 13 [source_file: testcode]\n                    FUNCTION  13 [source_file: testcode]\n                        NAME  13 [source_file: testcode]\n                        LP 13 [source_file: testcode]\n                            NAME f$$2 13 [source_file: testcode]\n                        BLOCK 13 [source_file: testcode]\n                            RETURN 14 [source_file: testcode]\n                                FUNCTION  14 [source_file: testcode]\n                                    NAME  14 [source_file: testcode]\n                                    LP 14 [source_file: testcode]\n                                        NAME n 14 [source_file: testcode]\n                                    BLOCK 14 [source_file: testcode]\n                                        IF 15 [source_file: testcode]\n                                            SHEQ 15 [source_file: testcode]\n                                                NAME n 15 [source_file: testcode]\n                                                NUMBER 0.0 15 [source_file: testcode]\n                                            BLOCK 16 [source_file: testcode]\n                                                RETURN 16 [source_file: testcode]\n                                                    NUMBER 1.0 16 [source_file: testcode]\n                                            BLOCK 18 [source_file: testcode]\n                                                RETURN 18 [source_file: testcode]\n                                                    MUL 18 [source_file: testcode]\n                                                        NAME n 18 [source_file: testcode]\n                                                        CALL 18 [free_call: 1] [source_file: testcode]\n                                                            NAME f$$2 18 [source_file: testcode]\n                                                            SUB 18 [source_file: testcode]\n                                                                NAME n 18 [source_file: testcode]\n                                                                NUMBER 1.0 18 [source_file: testcode]\n            BLOCK 2 [source_file: testcode]\n                VAR 7 [source_file: testcode]\n                    NAME f$$inline_1 7 [source_file: testcode]\n                        FUNCTION  7 [source_file: testcode]\n                            NAME  7 [source_file: testcode]\n                            LP 7 [source_file: testcode]\n                                NAME f$$inline_9 7 [source_file: testcode]\n                            BLOCK 7 [source_file: testcode]\n                                RETURN 8 [source_file: testcode]\n                                    CALL 8 [free_call: 1] [source_file: testcode]\n                                        NAME M$$inline_6 8 [source_file: testcode]\n                                        FUNCTION  8 [source_file: testcode]\n                                            NAME  8 [source_file: testcode]\n                                            LP 8 [source_file: testcode]\n                                                NAME arg$$inline_10 8 [source_file: testcode]\n                                            BLOCK 8 [source_file: testcode]\n                                                RETURN 9 [source_file: testcode]\n                                                    CALL 9 [free_call: 1] [source_file: testcode]\n                                                        CALL 9 [parenthesized: true] [free_call: 1] [source_file: testcode]\n                                                            NAME f$$inline_9 9 [source_file: testcode]\n                                                            NAME f$$inline_9 9 [source_file: testcode]\n                                                        NAME arg$$inline_10 9 [source_file: testcode]\n                EXPR_RESULT 3 [source_file: testcode]\n                    ASSIGN 3 [source_file: testcode]\n                        NAME factorial 3 [source_file: testcode]\n                        CALL 3 [free_call: 1] [source_file: testcode]\n                            NAME M$$inline_6 3 [source_file: testcode]\n                            FUNCTION  3 [source_file: testcode]\n                                NAME  3 [source_file: testcode]\n                                LP 3 [source_file: testcode]\n                                    NAME arg$$inline_2 3 [source_file: testcode]\n                                BLOCK 3 [source_file: testcode]\n                                    RETURN 4 [source_file: testcode]\n                                        CALL 4 [free_call: 1] [source_file: testcode]\n                                            CALL 4 [parenthesized: true] [free_call: 1] [source_file: testcode]\n                                                NAME f$$inline_1 4 [source_file: testcode]\n                                                NAME f$$inline_1 4 [source_file: testcode]\n                                            NAME arg$$inline_2 4 [source_file: testcode]\n        EXPR_RESULT 22 [source_file: testcode]\n            CALL 22 [free_call: 1] [source_file: testcode]\n                NAME factorial 22 [source_file: testcode]\n                NUMBER 5.0 22 [source_file: testcode]\n\n\nSubtree1: NAME M$$inline_4 3 [source_file: expected0]\n    FUNCTION  3 [source_file: expected0]\n        NAME  3 [source_file: expected0]\n        LP 3 [source_file: expected0]\n            NAME f$$2 3 [source_file: expected0]\n        BLOCK 3 [source_file: expected0]\n            RETURN 4 [source_file: expected0]\n                FUNCTION  4 [source_file: expected0]\n                    NAME  4 [source_file: expected0]\n                    LP 4 [source_file: expected0]\n                        NAME n 4 [source_file: expected0]\n                    BLOCK 4 [source_file: expected0]\n                        IF 4 [source_file: expected0]\n                            SHEQ 4 [source_file: expected0]\n                                NAME n 4 [source_file: expected0]\n                                NUMBER 0.0 4 [source_file: expected0]\n                            BLOCK 4 [source_file: expected0]\n                                RETURN 4 [source_file: expected0]\n                                    NUMBER 1.0 4 [source_file: expected0]\n                            BLOCK 4 [source_file: expected0]\n                                RETURN 4 [source_file: expected0]\n                                    MUL 4 [source_file: expected0]\n                                        NAME n 4 [source_file: expected0]\n                                        CALL 4 [free_call: 1] [source_file: expected0]\n                                            NAME f$$2 4 [source_file: expected0]\n                                            SUB 4 [source_file: expected0]\n                                                NAME n 4 [source_file: expected0]\n                                                NUMBER 1.0 4 [source_file: expected0]\n\n\nSubtree2: NAME M$$inline_6 13 [source_file: testcode]\n    FUNCTION  13 [source_file: testcode]\n        NAME  13 [source_file: testcode]\n        LP 13 [source_file: testcode]\n            NAME f$$2 13 [source_file: testcode]\n        BLOCK 13 [source_file: testcode]\n            RETURN 14 [source_file: testcode]\n                FUNCTION  14 [source_file: testcode]\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexInlineVars7\njunit.framework.AssertionFailedError:\nExpected: var b=1;var z;JSCompiler_inline_label_f_2:{if(1){z=b();break JSCompiler_inline_label_f_2}else{z=true;break JSCompiler_inline_label_f_2}z=void 0}\nResult: var b=1;var z;JSCompiler_inline_label_f_4:{if(1){z=b();break JSCompiler_inline_label_f_4}else{z=true;break JSCompiler_inline_label_f_4}z=void 0}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME b 1 [source_file: expected0]\n                NUMBER 1.0 1 [source_file: expected0]\n        VAR 1 [source_file: expected0]\n            NAME z 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            LABEL 1 [source_file: expected0]\n                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME z 1 [source_file: expected0]\n                                    CALL 1 [free_call: 1] [source_file: expected0]\n                                        NAME b 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME z 1 [source_file: expected0]\n                                    TRUE 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME z 1 [source_file: expected0]\n                            VOID 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME b 1 [source_file: testcode]\n                NUMBER 1.0 1 [source_file: testcode]\n        VAR 1 [source_file: testcode]\n            NAME z 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            LABEL 1 [source_file: testcode]\n                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    IF 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME z 1 [source_file: testcode]\n                                    CALL 1 [free_call: 1] [source_file: testcode]\n                                        NAME b 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME z 1 [source_file: testcode]\n                                    TRUE 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME z 1 [source_file: testcode]\n                            VOID 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexInlineVars7(InlineFunctionsTest.java:1319)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexFunctionWithFunctionDefinition2a\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=void 0;call(function(){return a$$inline_0})\nResult: var a$$inline_1=void 0;call(function(){return a$$inline_1})\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME a$$inline_0 1 [source_file: expected0]\n                        VOID 1 [source_file: expected0]\n                            NUMBER 0.0 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME call 1 [source_file: expected0]\n                        FUNCTION  1 [source_file: expected0]\n                            NAME  1 [source_file: expected0]\n                            LP 1 [source_file: expected0]\n                            BLOCK 1 [source_file: expected0]\n                                RETURN 1 [source_file: expected0]\n                                    NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME a$$inline_1 1 [source_file: testcode]\n                        VOID 1 [source_file: testcode]\n                            NUMBER 0.0 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME call 1 [source_file: testcode]\n                        FUNCTION  1 [source_file: testcode]\n                            NAME  1 [source_file: testcode]\n                            LP 1 [source_file: testcode]\n                            BLOCK 1 [source_file: testcode]\n                                RETURN 1 [source_file: testcode]\n                                    NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    VOID 1 [source_file: expected0]\n        NUMBER 0.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    VOID 1 [source_file: testcode]\n        NUMBER 0.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexFunctionWithFunctionDefinition2a(InlineFunctionsTest.java:1525)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexInline7\njunit.framework.AssertionFailedError:\nExpected: var b=1;JSCompiler_inline_label_f_2:{if(1){z=b();break JSCompiler_inline_label_f_2}else{z=true;break JSCompiler_inline_label_f_2}z=void 0}\nResult: var b=1;JSCompiler_inline_label_f_4:{if(1){z=b();break JSCompiler_inline_label_f_4}else{z=true;break JSCompiler_inline_label_f_4}z=void 0}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME b 1 [source_file: expected0]\n                NUMBER 1.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            LABEL 1 [source_file: expected0]\n                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME z 1 [source_file: expected0]\n                                    CALL 1 [free_call: 1] [source_file: expected0]\n                                        NAME b 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME z 1 [source_file: expected0]\n                                    TRUE 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME z 1 [source_file: expected0]\n                            VOID 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME b 1 [source_file: testcode]\n                NUMBER 1.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            LABEL 1 [source_file: testcode]\n                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    IF 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME z 1 [source_file: testcode]\n                                    CALL 1 [free_call: 1] [source_file: testcode]\n                                        NAME b 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME z 1 [source_file: testcode]\n                                    TRUE 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME z 1 [source_file: testcode]\n                            VOID 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexInline7(InlineFunctionsTest.java:1269)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testFunctionExpressionOmega\njunit.framework.AssertionFailedError:\nExpected: var f$$inline_0=function(f$$1){f$$1(f$$1)};f$$inline_0(f$$inline_0)\nResult: var f$$inline_1=function(f$$1){f$$1(f$$1)};f$$inline_1(f$$inline_1)\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME f$$inline_0 1 [source_file: expected0]\n                    FUNCTION  1 [source_file: expected0]\n                        NAME  1 [source_file: expected0]\n                        LP 1 [source_file: expected0]\n                            NAME f$$1 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                CALL 1 [free_call: 1] [source_file: expected0]\n                                    NAME f$$1 1 [source_file: expected0]\n                                    NAME f$$1 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME f$$inline_0 1 [source_file: expected0]\n                            NAME f$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME f$$inline_1 1 [source_file: testcode]\n                    FUNCTION  1 [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                            NAME f$$1 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                CALL 1 [free_call: 1] [source_file: testcode]\n                                    NAME f$$1 1 [source_file: testcode]\n                                    NAME f$$1 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        CALL 1 [free_call: 1] [source_file: testcode]\n                            NAME f$$inline_1 1 [source_file: testcode]\n                            NAME f$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME f$$inline_0 1 [source_file: expected0]\n    FUNCTION  1 [source_file: expected0]\n        NAME  1 [source_file: expected0]\n        LP 1 [source_file: expected0]\n            NAME f$$1 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    NAME f$$1 1 [source_file: expected0]\n                    NAME f$$1 1 [source_file: expected0]\n\n\nSubtree2: NAME f$$inline_1 1 [source_file: testcode]\n    FUNCTION  1 [source_file: testcode]\n        NAME  1 [source_file: testcode]\n        LP 1 [source_file: testcode]\n            NAME f$$1 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    NAME f$$1 1 [source_file: testcode]\n                    NAME f$$1 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testFunctionExpressionOmega(InlineFunctionsTest.java:1758)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions15b\njunit.framework.AssertionFailedError:\nExpected: var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_2;JSCompiler_inline_result$$1=function(a$$inline_3){return a$$inline_3+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1\nResult: var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_3;JSCompiler_inline_result$$1=function(a$$inline_4){return a$$inline_4+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                NAME c 1 [source_file: expected0]\n        BLOCK 2 [source_file: expected0]\n            VAR 3 [source_file: expected0]\n                NAME JSCompiler_inline_result$$1 3 [source_file: expected0]\n            VAR 4 [source_file: expected0]\n                NAME x$$inline_2 4 [source_file: expected0]\n            EXPR_RESULT 5 [source_file: expected0]\n                ASSIGN 5 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$1 5 [source_file: expected0]\n                    FUNCTION  5 [source_file: expected0]\n                        NAME  5 [source_file: expected0]\n                        LP 5 [source_file: expected0]\n                            NAME a$$inline_3 5 [source_file: expected0]\n                        BLOCK 5 [source_file: expected0]\n                            RETURN 5 [source_file: expected0]\n                                ADD 5 [source_file: expected0]\n                                    NAME a$$inline_3 5 [source_file: expected0]\n                                    NUMBER 1.0 5 [source_file: expected0]\n        VAR 6 [source_file: expected0]\n            NAME d 6 [source_file: expected0]\n                ADD 6 [source_file: expected0]\n                    NAME JSCompiler_temp_const$$0 6 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$1 6 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME JSCompiler_temp_const$$0 1 [source_file: testcode]\n                NAME c 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_3 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n                    FUNCTION  1 [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                            NAME a$$inline_4 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            RETURN 1 [source_file: testcode]\n                                ADD 1 [source_file: testcode]\n                                    NAME a$$inline_4 1 [source_file: testcode]\n                                    NUMBER 1.0 1 [source_file: testcode]\n        VAR 1 [source_file: testcode]\n            NAME d 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME JSCompiler_temp_const$$0 1 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_2 4 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_3 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions15b(InlineFunctionsTest.java:246)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions15d\njunit.framework.AssertionFailedError:\nExpected: function _x(){var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_2;JSCompiler_inline_result$$1=function(a$$inline_3){return a$$inline_3+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1}\nResult: function _x(){var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_3;JSCompiler_inline_result$$1=function(a$$inline_4){return a$$inline_4+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        FUNCTION _x 1 [source_file: expected0]\n            NAME _x 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 2 [source_file: expected0]\n                    NAME JSCompiler_temp_const$$0 2 [source_file: expected0]\n                        NAME c 2 [source_file: expected0]\n                BLOCK 3 [source_file: expected0]\n                    VAR 4 [source_file: expected0]\n                        NAME JSCompiler_inline_result$$1 4 [source_file: expected0]\n                    VAR 5 [source_file: expected0]\n                        NAME x$$inline_2 5 [source_file: expected0]\n                    EXPR_RESULT 6 [source_file: expected0]\n                        ASSIGN 6 [source_file: expected0]\n                            NAME JSCompiler_inline_result$$1 6 [source_file: expected0]\n                            FUNCTION  6 [source_file: expected0]\n                                NAME  6 [source_file: expected0]\n                                LP 6 [source_file: expected0]\n                                    NAME a$$inline_3 6 [source_file: expected0]\n                                BLOCK 6 [source_file: expected0]\n                                    RETURN 6 [source_file: expected0]\n                                        ADD 6 [source_file: expected0]\n                                            NAME a$$inline_3 6 [source_file: expected0]\n                                            NUMBER 1.0 6 [source_file: expected0]\n                VAR 8 [source_file: expected0]\n                    NAME d 8 [source_file: expected0]\n                        ADD 8 [source_file: expected0]\n                            NAME JSCompiler_temp_const$$0 8 [source_file: expected0]\n                            NAME JSCompiler_inline_result$$1 8 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        FUNCTION _x 1 [source_file: testcode]\n            NAME _x 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME JSCompiler_temp_const$$0 1 [source_file: testcode]\n                        NAME c 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME x$$inline_3 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n                            FUNCTION  1 [source_file: testcode]\n                                NAME  1 [source_file: testcode]\n                                LP 1 [source_file: testcode]\n                                    NAME a$$inline_4 1 [source_file: testcode]\n                                BLOCK 1 [source_file: testcode]\n                                    RETURN 1 [source_file: testcode]\n                                        ADD 1 [source_file: testcode]\n                                            NAME a$$inline_4 1 [source_file: testcode]\n                                            NUMBER 1.0 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME d 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NAME JSCompiler_temp_const$$0 1 [source_file: testcode]\n                            NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_2 5 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_3 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions15d(InlineFunctionsTest.java:296)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions16a\njunit.framework.AssertionFailedError:\nExpected: var d;var b$$inline_0=e;d=window.bar(function(){c(b$$inline_0)})\nResult: var d;var b$$inline_1=e;d=window.bar(function(){c(b$$inline_1)})\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME d 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME b$$inline_0 1 [source_file: expected0]\n                    NAME e 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME d 1 [source_file: expected0]\n                    CALL 1 [source_file: expected0]\n                        GETPROP 1 [source_file: expected0]\n                            NAME window 1 [source_file: expected0]\n                            STRING bar 1 [source_file: expected0]\n                        FUNCTION  1 [source_file: expected0]\n                            NAME  1 [source_file: expected0]\n                            LP 1 [source_file: expected0]\n                            BLOCK 1 [source_file: expected0]\n                                EXPR_RESULT 1 [source_file: expected0]\n                                    CALL 1 [free_call: 1] [source_file: expected0]\n                                        NAME c 1 [source_file: expected0]\n                                        NAME b$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME d 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME b$$inline_1 1 [source_file: testcode]\n                    NAME e 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME d 1 [source_file: testcode]\n                    CALL 1 [source_file: testcode]\n                        GETPROP 1 [source_file: testcode]\n                            NAME window 1 [source_file: testcode]\n                            STRING bar 1 [source_file: testcode]\n                        FUNCTION  1 [source_file: testcode]\n                            NAME  1 [source_file: testcode]\n                            LP 1 [source_file: testcode]\n                            BLOCK 1 [source_file: testcode]\n                                EXPR_RESULT 1 [source_file: testcode]\n                                    CALL 1 [free_call: 1] [source_file: testcode]\n                                        NAME c 1 [source_file: testcode]\n                                        NAME b$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME b$$inline_0 1 [source_file: expected0]\n    NAME e 1 [source_file: expected0]\n\n\nSubtree2: NAME b$$inline_1 1 [source_file: testcode]\n    NAME e 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions16a(InlineFunctionsTest.java:320)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testBug4944818\njunit.framework.AssertionFailedError:\nExpected: HangoutStarter.prototype.launchHangout=function(){var self$$2=a.b;var JSCompiler_temp_const$$0=goog.Uri;var JSCompiler_inline_result$$1;var self$$inline_2=self$$2;if(!self$$inline_2.domServices_)self$$inline_2.domServices_=goog$component$DomServices.get(self$$inline_2.appContext_);JSCompiler_inline_result$$1=self$$inline_2.domServices_;var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.getDomHelper().getWindow().location.href)}\nResult: HangoutStarter.prototype.launchHangout=function(){var self$$2=a.b;var JSCompiler_temp_const$$0=goog.Uri;var JSCompiler_inline_result$$1;var self$$inline_3=self$$2;if(!self$$inline_3.domServices_)self$$inline_3.domServices_=goog$component$DomServices.get(self$$inline_3.appContext_);JSCompiler_inline_result$$1=self$$inline_3.domServices_;var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.getDomHelper().getWindow().location.href)}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ASSIGN 1 [source_file: expected0]\n                GETPROP 1 [source_file: expected0]\n                    GETPROP 1 [source_file: expected0]\n                        NAME HangoutStarter 1 [source_file: expected0]\n                        STRING prototype 1 [source_file: expected0]\n                    STRING launchHangout 1 [source_file: expected0]\n                FUNCTION  1 [source_file: expected0]\n                    NAME  1 [source_file: expected0]\n                    LP 1 [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME self$$2 1 [source_file: expected0]\n                                GETPROP 1 [source_file: expected0]\n                                    NAME a 1 [source_file: expected0]\n                                    STRING b 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                                GETPROP 1 [source_file: expected0]\n                                    NAME goog 1 [source_file: expected0]\n                                    STRING Uri 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            VAR 1 [source_file: expected0]\n                                NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                            VAR 1 [source_file: expected0]\n                                NAME self$$inline_2 1 [source_file: expected0]\n                                    NAME self$$2 1 [source_file: expected0]\n                            IF 1 [source_file: expected0]\n                                NOT 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        NAME self$$inline_2 1 [source_file: expected0]\n                                        STRING domServices_ 1 [source_file: expected0]\n                                BLOCK 1 [source_file: expected0]\n                                    EXPR_RESULT 1 [source_file: expected0]\n                                        ASSIGN 1 [source_file: expected0]\n                                            GETPROP 1 [source_file: expected0]\n                                                NAME self$$inline_2 1 [source_file: expected0]\n                                                STRING domServices_ 1 [source_file: expected0]\n                                            CALL 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    NAME goog$component$DomServices 1 [source_file: expected0]\n                                                    STRING get 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    NAME self$$inline_2 1 [source_file: expected0]\n                                                    STRING appContext_ 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        NAME self$$inline_2 1 [source_file: expected0]\n                                        STRING domServices_ 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME myUrl 1 [source_file: expected0]\n                                NEW 1 [source_file: expected0]\n                                    NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            CALL 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    CALL 1 [source_file: expected0]\n                                                        GETPROP 1 [source_file: expected0]\n                                                            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                                                            STRING getDomHelper 1 [source_file: expected0]\n                                                    STRING getWindow 1 [source_file: expected0]\n                                            STRING location 1 [source_file: expected0]\n                                        STRING href 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 13 [source_file: testcode]\n            ASSIGN 13 [source_file: testcode]\n                GETPROP 13 [source_file: testcode]\n                    GETPROP 13 [source_file: testcode]\n                        NAME HangoutStarter 13 [source_file: testcode]\n                        STRING prototype 13 [source_file: testcode]\n                    STRING launchHangout 13 [source_file: testcode]\n                FUNCTION  13 [source_file: testcode]\n                    NAME  13 [source_file: testcode]\n                    LP 13 [source_file: testcode]\n                    BLOCK 13 [source_file: testcode]\n                        VAR 14 [source_file: testcode]\n                            NAME self$$2 14 [source_file: testcode]\n                                GETPROP 14 [source_file: testcode]\n                                    NAME a 14 [source_file: testcode]\n                                    STRING b 14 [source_file: testcode]\n                        VAR 15 [source_file: testcode]\n                            NAME JSCompiler_temp_const$$0 15 [source_file: testcode]\n                                GETPROP 15 [source_file: testcode]\n                                    NAME goog 15 [source_file: testcode]\n                                    STRING Uri 15 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            VAR 10 [source_file: testcode]\n                                NAME JSCompiler_inline_result$$1 10 [source_file: testcode]\n                            VAR 15 [source_file: testcode]\n                                NAME self$$inline_3 15 [source_file: testcode]\n                                    NAME self$$2 15 [source_file: testcode]\n                            IF 2 [source_file: testcode]\n                                NOT 2 [source_file: testcode]\n                                    GETPROP 2 [source_file: testcode]\n                                        NAME self$$inline_3 2 [source_file: testcode]\n                                        STRING domServices_ 2 [source_file: testcode]\n                                BLOCK 2 [source_file: testcode]\n                                    EXPR_RESULT 3 [source_file: testcode]\n                                        ASSIGN 3 [source_file: testcode]\n                                            GETPROP 3 [source_file: testcode]\n                                                NAME self$$inline_3 3 [source_file: testcode]\n                                                STRING domServices_ 3 [source_file: testcode]\n                                            CALL 3 [source_file: testcode]\n                                                GETPROP 3 [source_file: testcode]\n                                                    NAME goog$component$DomServices 3 [source_file: testcode]\n                                                    STRING get 3 [source_file: testcode]\n                                                GETPROP 3 [source_file: testcode]\n                                                    NAME self$$inline_3 3 [source_file: testcode]\n                                                    STRING appContext_ 3 [source_file: testcode]\n                            EXPR_RESULT 6 [source_file: testcode]\n                                ASSIGN 6 [source_file: testcode]\n                                    NAME JSCompiler_inline_result$$1 6 [source_file: testcode]\n                                    GETPROP 6 [source_file: testcode]\n                                        NAME self$$inline_3 6 [source_file: testcode]\n                                        STRING domServices_ 6 [source_file: testcode]\n                        VAR 15 [source_file: testcode]\n                            NAME myUrl 15 [source_file: testcode]\n                                NEW 15 [source_file: testcode]\n                                    NAME JSCompiler_temp_const$$0 15 [source_file: testcode]\n                                    GETPROP 15 [source_file: testcode]\n                                        GETPROP 15 [source_file: testcode]\n                                            CALL 10 [source_file: testcode]\n                                                GETPROP 10 [source_file: testcode]\n                                                    CALL 10 [source_file: testcode]\n                                                        GETPROP 10 [source_file: testcode]\n                                                            NAME JSCompiler_inline_result$$1 10 [source_file: testcode]\n                                                            STRING getDomHelper 10 [source_file: testcode]\n                                                    STRING getWindow 10 [source_file: testcode]\n                                            STRING location 15 [source_file: testcode]\n                                        STRING href 15 [source_file: testcode]\n\n\nSubtree1: NAME self$$inline_2 1 [source_file: expected0]\n    NAME self$$2 1 [source_file: expected0]\n\n\nSubtree2: NAME self$$inline_3 15 [source_file: testcode]\n    NAME self$$2 15 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testBug4944818(InlineFunctionsTest.java:2077)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexSample\njunit.framework.AssertionFailedError:\nExpected: var styleSheet$$inline_2=null;if(goog$userAgent$IE)styleSheet$$inline_2=0;else var head$$inline_3=0;var element$$inline_4=styleSheet$$inline_2;var stylesString$$inline_5=a;if(goog$userAgent$IE)element$$inline_4.cssText=stylesString$$inline_5;else{var propToSet$$inline_6=\"innerText\";element$$inline_4[propToSet$$inline_6]=stylesString$$inline_5}styleSheet$$inline_2\nResult: var styleSheet$$inline_9=null;if(goog$userAgent$IE)styleSheet$$inline_9=0;else var head$$inline_10=0;var element$$inline_11=styleSheet$$inline_9;var stylesString$$inline_12=a;if(goog$userAgent$IE)element$$inline_11.cssText=stylesString$$inline_12;else{var propToSet$$inline_13=\"innerText\";element$$inline_11[propToSet$$inline_13]=stylesString$$inline_12}styleSheet$$inline_9\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME styleSheet$$inline_2 1 [source_file: expected0]\n                        NULL 1 [source_file: expected0]\n                IF 1 [source_file: expected0]\n                    NAME goog$userAgent$IE 1 [is_constant_name: 1] [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        EXPR_RESULT 1 [source_file: expected0]\n                            ASSIGN 1 [source_file: expected0]\n                                NAME styleSheet$$inline_2 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME head$$inline_3 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME element$$inline_4 1 [source_file: expected0]\n                            NAME styleSheet$$inline_2 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME stylesString$$inline_5 1 [source_file: expected0]\n                            NAME a 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        NAME goog$userAgent$IE 1 [is_constant_name: 1] [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        NAME element$$inline_4 1 [source_file: expected0]\n                                        STRING cssText 1 [source_file: expected0]\n                                    NAME stylesString$$inline_5 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            VAR 1 [source_file: expected0]\n                                NAME propToSet$$inline_6 1 [source_file: expected0]\n                                    STRING innerText 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    GETELEM 1 [source_file: expected0]\n                                        NAME element$$inline_4 1 [source_file: expected0]\n                                        NAME propToSet$$inline_6 1 [source_file: expected0]\n                                    NAME stylesString$$inline_5 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    NAME styleSheet$$inline_2 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 2 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME styleSheet$$inline_9 1 [source_file: testcode]\n                        NULL 1 [source_file: testcode]\n                IF 1 [source_file: testcode]\n                    NAME goog$userAgent$IE 1 [is_constant_name: 1] [source_file: testcode]\n                    BLOCK 1 [source_file: testcode]\n                        EXPR_RESULT 1 [source_file: testcode]\n                            ASSIGN 1 [source_file: testcode]\n                                NAME styleSheet$$inline_9 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n                    BLOCK 1 [source_file: testcode]\n                        VAR 1 [source_file: testcode]\n                            NAME head$$inline_10 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n                BLOCK 2 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME element$$inline_11 1 [source_file: testcode]\n                            NAME styleSheet$$inline_9 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME stylesString$$inline_12 1 [source_file: testcode]\n                            NAME a 2 [source_file: testcode]\n                    IF 2 [source_file: testcode]\n                        NAME goog$userAgent$IE 2 [is_constant_name: 1] [source_file: testcode]\n                        BLOCK 2 [source_file: testcode]\n                            EXPR_RESULT 2 [source_file: testcode]\n                                ASSIGN 2 [source_file: testcode]\n                                    GETPROP 2 [source_file: testcode]\n                                        NAME element$$inline_11 2 [source_file: testcode]\n                                        STRING cssText 2 [source_file: testcode]\n                                    NAME stylesString$$inline_12 2 [source_file: testcode]\n                        BLOCK 2 [source_file: testcode]\n                            VAR 2 [source_file: testcode]\n                                NAME propToSet$$inline_13 2 [source_file: testcode]\n                                    STRING innerText 2 [source_file: testcode]\n                            EXPR_RESULT 2 [source_file: testcode]\n                                ASSIGN 2 [source_file: testcode]\n                                    GETELEM 2 [source_file: testcode]\n                                        NAME element$$inline_11 2 [source_file: testcode]\n                                        NAME propToSet$$inline_13 2 [source_file: testcode]\n                                    NAME stylesString$$inline_12 2 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    NAME styleSheet$$inline_9 1 [source_file: testcode]\n\n\nSubtree1: NAME styleSheet$$inline_2 1 [source_file: expected0]\n    NULL 1 [source_file: expected0]\n\n\nSubtree2: NAME styleSheet$$inline_9 1 [source_file: testcode]\n    NULL 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexSample(InlineFunctionsTest.java:1418)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified1\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=undefined;x$$inline_0=1\nResult: var x$$inline_1=undefined;x$$inline_1=1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NAME undefined 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NAME undefined 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NAME undefined 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NAME undefined 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified1(InlineFunctionsTest.java:549)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified2\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=2;x$$inline_0=1\nResult: var x$$inline_1=2;x$$inline_1=1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [parenthesized: true] [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified2(InlineFunctionsTest.java:555)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified3\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=2;x$$inline_0*=2\nResult: var x$$inline_1=2;x$$inline_1*=2\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN_MUL 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN_MUL 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified3(InlineFunctionsTest.java:562)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified4\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=2;x$$inline_0?x$$inline_0=2:0\nResult: var x$$inline_1=2;x$$inline_1?x$$inline_1=2:0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                HOOK 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    ASSIGN 1 [parenthesized: true] [source_file: expected0]\n                        NAME x$$inline_0 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                HOOK 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    ASSIGN 1 [parenthesized: true] [source_file: testcode]\n                        NAME x$$inline_1 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                    NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified4(InlineFunctionsTest.java:569)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified5\njunit.framework.AssertionFailedError:\nExpected: var y$$inline_1=undefined;2?y$$inline_1=2:0\nResult: var y$$inline_3=undefined;2?y$$inline_3=2:0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME y$$inline_1 1 [source_file: expected0]\n                    NAME undefined 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                HOOK 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n                    ASSIGN 1 [parenthesized: true] [source_file: expected0]\n                        NAME y$$inline_1 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME y$$inline_3 1 [source_file: testcode]\n                    NAME undefined 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                HOOK 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n                    ASSIGN 1 [parenthesized: true] [source_file: testcode]\n                        NAME y$$inline_3 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                    NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: NAME y$$inline_1 1 [source_file: expected0]\n    NAME undefined 1 [source_file: expected0]\n\n\nSubtree2: NAME y$$inline_3 1 [source_file: testcode]\n    NAME undefined 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified5(InlineFunctionsTest.java:577)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified6\njunit.framework.AssertionFailedError:\nExpected: var y$$inline_1=void 0;2?y$$inline_1=2:0\nResult: var y$$inline_3=void 0;2?y$$inline_3=2:0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME y$$inline_1 1 [source_file: expected0]\n                    VOID 1 [source_file: expected0]\n                        NUMBER 0.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                HOOK 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n                    ASSIGN 1 [parenthesized: true] [source_file: expected0]\n                        NAME y$$inline_1 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME y$$inline_3 1 [source_file: testcode]\n                    VOID 1 [source_file: testcode]\n                        NUMBER 0.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                HOOK 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n                    ASSIGN 1 [parenthesized: true] [source_file: testcode]\n                        NAME y$$inline_3 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                    NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: NAME y$$inline_1 1 [source_file: expected0]\n    VOID 1 [source_file: expected0]\n        NUMBER 0.0 1 [source_file: expected0]\n\n\nSubtree2: NAME y$$inline_3 1 [source_file: testcode]\n    VOID 1 [source_file: testcode]\n        NUMBER 0.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified6(InlineFunctionsTest.java:583)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified7\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=1;++a$$inline_0<++a$$inline_0\nResult: var a$$inline_1=1;++a$$inline_1<++a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                LT 1 [source_file: expected0]\n                    INC 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                    INC 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                LT 1 [source_file: testcode]\n                    INC 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                    INC 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified7(InlineFunctionsTest.java:590)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testIssue423\njunit.framework.AssertionFailedError:\nExpected: var $$$inline_0=jQuery;$$$inline_0.fn.multicheck=function(options$$inline_4){options$$inline_4.checkboxes=$$$inline_0(this).siblings(\":checkbox\");$$$inline_0(this).data(\"checkboxes\")}\nResult: var $$$inline_3=jQuery;$$$inline_3.fn.multicheck=function(options$$inline_7){options$$inline_7.checkboxes=$$$inline_3(this).siblings(\":checkbox\");$$$inline_3(this).data(\"checkboxes\")}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME $$$inline_0 1 [source_file: expected0]\n                    NAME jQuery 1 [source_file: expected0]\n            EXPR_RESULT 2 [source_file: expected0]\n                ASSIGN 2 [source_file: expected0]\n                    GETPROP 2 [source_file: expected0]\n                        GETPROP 2 [source_file: expected0]\n                            NAME $$$inline_0 2 [source_file: expected0]\n                            STRING fn 2 [source_file: expected0]\n                        STRING multicheck 2 [source_file: expected0]\n                    FUNCTION  2 [source_file: expected0]\n                        NAME  2 [source_file: expected0]\n                        LP 2 [source_file: expected0]\n                            NAME options$$inline_4 2 [source_file: expected0]\n                        BLOCK 2 [source_file: expected0]\n                            BLOCK 3 [source_file: expected0]\n                                EXPR_RESULT 3 [source_file: expected0]\n                                    ASSIGN 3 [source_file: expected0]\n                                        GETPROP 3 [source_file: expected0]\n                                            NAME options$$inline_4 3 [source_file: expected0]\n                                            STRING checkboxes 3 [source_file: expected0]\n                                        CALL 3 [source_file: expected0]\n                                            GETPROP 3 [source_file: expected0]\n                                                CALL 3 [free_call: 1] [source_file: expected0]\n                                                    NAME $$$inline_0 3 [source_file: expected0]\n                                                    THIS 3 [source_file: expected0]\n                                                STRING siblings 3 [source_file: expected0]\n                                            STRING :checkbox 3 [source_file: expected0]\n                                BLOCK 4 [source_file: expected0]\n                                    EXPR_RESULT 4 [source_file: expected0]\n                                        CALL 4 [source_file: expected0]\n                                            GETPROP 4 [source_file: expected0]\n                                                CALL 4 [free_call: 1] [source_file: expected0]\n                                                    NAME $$$inline_0 4 [source_file: expected0]\n                                                    THIS 4 [source_file: expected0]\n                                                STRING data 4 [source_file: expected0]\n                                            STRING checkboxes 4 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 14 [source_file: testcode]\n                NAME $$$inline_3 14 [source_file: testcode]\n                    NAME jQuery 14 [source_file: testcode]\n            EXPR_RESULT 2 [source_file: testcode]\n                ASSIGN 2 [source_file: testcode]\n                    GETPROP 2 [source_file: testcode]\n                        GETPROP 2 [source_file: testcode]\n                            NAME $$$inline_3 2 [source_file: testcode]\n                            STRING fn 2 [source_file: testcode]\n                        STRING multicheck 2 [source_file: testcode]\n                    FUNCTION  2 [source_file: testcode]\n                        NAME  2 [source_file: testcode]\n                        LP 2 [source_file: testcode]\n                            NAME options$$inline_7 2 [source_file: testcode]\n                        BLOCK 2 [source_file: testcode]\n                            BLOCK 6 [source_file: testcode]\n                                EXPR_RESULT 7 [source_file: testcode]\n                                    ASSIGN 7 [source_file: testcode]\n                                        GETPROP 7 [source_file: testcode]\n                                            NAME options$$inline_7 3 [source_file: testcode]\n                                            STRING checkboxes 7 [source_file: testcode]\n                                        CALL 7 [source_file: testcode]\n                                            GETPROP 7 [source_file: testcode]\n                                                CALL 7 [free_call: 1] [source_file: testcode]\n                                                    NAME $$$inline_3 7 [source_file: testcode]\n                                                    THIS 7 [source_file: testcode]\n                                                STRING siblings 7 [source_file: testcode]\n                                            STRING :checkbox 7 [source_file: testcode]\n                                BLOCK 11 [source_file: testcode]\n                                    EXPR_RESULT 12 [source_file: testcode]\n                                        CALL 12 [source_file: testcode]\n                                            GETPROP 12 [source_file: testcode]\n                                                CALL 12 [free_call: 1] [source_file: testcode]\n                                                    NAME $$$inline_3 12 [source_file: testcode]\n                                                    THIS 12 [source_file: testcode]\n                                                STRING data 12 [source_file: testcode]\n                                            STRING checkboxes 12 [source_file: testcode]\n\n\nSubtree1: NAME $$$inline_0 1 [source_file: expected0]\n    NAME jQuery 1 [source_file: expected0]\n\n\nSubtree2: NAME $$$inline_3 14 [source_file: testcode]\n    NAME jQuery 14 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testIssue423(InlineFunctionsTest.java:2142)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexFunctionWithFunctionDefinition2\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=void 0;call(function(){return a$$inline_0})\nResult: var a$$inline_1=void 0;call(function(){return a$$inline_1})\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME a$$inline_0 1 [source_file: expected0]\n                        VOID 1 [source_file: expected0]\n                            NUMBER 0.0 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME call 1 [source_file: expected0]\n                        FUNCTION  1 [source_file: expected0]\n                            NAME  1 [source_file: expected0]\n                            LP 1 [source_file: expected0]\n                            BLOCK 1 [source_file: expected0]\n                                RETURN 1 [source_file: expected0]\n                                    NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME a$$inline_1 1 [source_file: testcode]\n                        VOID 1 [source_file: testcode]\n                            NUMBER 0.0 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME call 1 [source_file: testcode]\n                        FUNCTION  1 [source_file: testcode]\n                            NAME  1 [source_file: testcode]\n                            LP 1 [source_file: testcode]\n                            BLOCK 1 [source_file: testcode]\n                                RETURN 1 [source_file: testcode]\n                                    NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    VOID 1 [source_file: expected0]\n        NUMBER 0.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    VOID 1 [source_file: testcode]\n        NUMBER 0.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexFunctionWithFunctionDefinition2(InlineFunctionsTest.java:1511)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexFunctionWithFunctionDefinition3\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0;call(function(){return a$$inline_0})\nResult: var a$$inline_1;call(function(){return a$$inline_1})\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    NAME call 1 [source_file: expected0]\n                    FUNCTION  1 [source_file: expected0]\n                        NAME  1 [source_file: expected0]\n                        LP 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            RETURN 1 [source_file: expected0]\n                                NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    NAME call 1 [source_file: testcode]\n                    FUNCTION  1 [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            RETURN 1 [source_file: testcode]\n                                NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexFunctionWithFunctionDefinition3(InlineFunctionsTest.java:1538)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testDecomposeFunctionExpressionInCall\njunit.framework.AssertionFailedError:\nExpected: var JSCompiler_inline_result$$0;var ret$$inline_1={};ret$$inline_1[ONE]=\"a\";ret$$inline_1[TWO]=\"b\";JSCompiler_inline_result$$0=ret$$inline_1;descriptions_=JSCompiler_inline_result$$0\nResult: var JSCompiler_inline_result$$0;var ret$$inline_2={};ret$$inline_2[ONE]=\"a\";ret$$inline_2[TWO]=\"b\";JSCompiler_inline_result$$0=ret$$inline_2;descriptions_=JSCompiler_inline_result$$0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME ret$$inline_1 1 [source_file: expected0]\n                    OBJECTLIT 1 [source_file: expected0]\n            EXPR_RESULT 2 [source_file: expected0]\n                ASSIGN 2 [source_file: expected0]\n                    GETELEM 2 [source_file: expected0]\n                        NAME ret$$inline_1 2 [source_file: expected0]\n                        NAME ONE 2 [is_constant_name: 1] [source_file: expected0]\n                    STRING a 2 [source_file: expected0]\n            EXPR_RESULT 3 [source_file: expected0]\n                ASSIGN 3 [source_file: expected0]\n                    GETELEM 3 [source_file: expected0]\n                        NAME ret$$inline_1 3 [source_file: expected0]\n                        NAME TWO 3 [is_constant_name: 1] [source_file: expected0]\n                    STRING b 3 [source_file: expected0]\n            EXPR_RESULT 4 [source_file: expected0]\n                ASSIGN 4 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$0 4 [source_file: expected0]\n                    NAME ret$$inline_1 4 [source_file: expected0]\n        BLOCK 5 [source_file: expected0]\n            EXPR_RESULT 5 [source_file: expected0]\n                ASSIGN 5 [source_file: expected0]\n                    NAME descriptions_ 5 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$0 5 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 2 [source_file: testcode]\n            VAR 7 [source_file: testcode]\n                NAME JSCompiler_inline_result$$0 7 [source_file: testcode]\n            VAR 3 [source_file: testcode]\n                NAME ret$$inline_2 3 [source_file: testcode]\n                    OBJECTLIT 3 [source_file: testcode]\n            EXPR_RESULT 4 [source_file: testcode]\n                ASSIGN 4 [source_file: testcode]\n                    GETELEM 4 [source_file: testcode]\n                        NAME ret$$inline_2 4 [source_file: testcode]\n                        NAME ONE 4 [is_constant_name: 1] [source_file: testcode]\n                    STRING a 4 [source_file: testcode]\n            EXPR_RESULT 5 [source_file: testcode]\n                ASSIGN 5 [source_file: testcode]\n                    GETELEM 5 [source_file: testcode]\n                        NAME ret$$inline_2 5 [source_file: testcode]\n                        NAME TWO 5 [is_constant_name: 1] [source_file: testcode]\n                    STRING b 5 [source_file: testcode]\n            EXPR_RESULT 6 [source_file: testcode]\n                ASSIGN 6 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$0 6 [source_file: testcode]\n                    NAME ret$$inline_2 6 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME descriptions_ 1 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$0 7 [source_file: testcode]\n\n\nSubtree1: NAME ret$$inline_1 1 [source_file: expected0]\n    OBJECTLIT 1 [source_file: expected0]\n\n\nSubtree2: NAME ret$$inline_2 3 [source_file: testcode]\n    OBJECTLIT 3 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testDecomposeFunctionExpressionInCall(InlineFunctionsTest.java:1553)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineNeverOverrideNewValues\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=1;++a$$inline_0<++a$$inline_0\nResult: var a$$inline_1=1;++a$$inline_1<++a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                LT 1 [source_file: expected0]\n                    INC 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                    INC 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                LT 1 [source_file: testcode]\n                    INC 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                    INC 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineNeverOverrideNewValues(InlineFunctionsTest.java:623)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineBlockMutableArgs1\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=[];x$$inline_0+x$$inline_0\nResult: var x$$inline_1=[];x$$inline_1+x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    ARRAYLIT 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    ARRAYLIT 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    ARRAYLIT 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    ARRAYLIT 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs1(InlineFunctionsTest.java:653)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineBlockMutableArgs2\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=new Date;x$$inline_0+x$$inline_0\nResult: var x$$inline_1=new Date;x$$inline_1+x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NEW 1 [source_file: expected0]\n                        NAME Date 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NEW 1 [source_file: testcode]\n                        NAME Date 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NEW 1 [source_file: expected0]\n        NAME Date 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NEW 1 [source_file: testcode]\n        NAME Date 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs2(InlineFunctionsTest.java:659)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineBlockMutableArgs3\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=true&&new Date;x$$inline_0+x$$inline_0\nResult: var x$$inline_1=true&&new Date;x$$inline_1+x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    AND 1 [source_file: expected0]\n                        TRUE 1 [source_file: expected0]\n                        NEW 1 [source_file: expected0]\n                            NAME Date 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    AND 1 [source_file: testcode]\n                        TRUE 1 [source_file: testcode]\n                        NEW 1 [source_file: testcode]\n                            NAME Date 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    AND 1 [source_file: expected0]\n        TRUE 1 [source_file: expected0]\n        NEW 1 [source_file: expected0]\n            NAME Date 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    AND 1 [source_file: testcode]\n        TRUE 1 [source_file: testcode]\n        NEW 1 [source_file: testcode]\n            NAME Date 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs3(InlineFunctionsTest.java:665)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineBlockMutableArgs4\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0={};x$$inline_0+x$$inline_0\nResult: var x$$inline_1={};x$$inline_1+x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    OBJECTLIT 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    OBJECTLIT 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    OBJECTLIT 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    OBJECTLIT 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs4(InlineFunctionsTest.java:671)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions10\njunit.framework.AssertionFailedError:\nExpected: var y;var x$$inline_0=i;y=x$$inline_0++;var x$$inline_2=i;y=x$$inline_2++\nResult: var y;var x$$inline_1=i;y=x$$inline_1++;var x$$inline_4=i;y=x$$inline_4++\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME y 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NAME i 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME y 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME x$$inline_0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_2 1 [source_file: expected0]\n                    NAME i 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME y 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME x$$inline_2 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME y 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NAME i 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME y 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME x$$inline_1 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_4 1 [source_file: testcode]\n                    NAME i 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME y 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME x$$inline_4 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NAME i 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NAME i 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions10(InlineFunctionsTest.java:183)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions13\njunit.framework.AssertionFailedError:\nExpected: var y;var x$$inline_0=i++;y=x$$inline_0\nResult: var y;var x$$inline_1=i++;y=x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME y 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME i 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME y 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME y 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME i 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME y 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    INC 1 [incrdecr: 1] [source_file: expected0]\n        NAME i 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    INC 1 [incrdecr: 1] [source_file: testcode]\n        NAME i 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions13(InlineFunctionsTest.java:210)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions22\njunit.framework.AssertionFailedError:\nExpected: var d;JSCompiler_inline_label_plex_1:{if(1+2){d=0;break JSCompiler_inline_label_plex_1}else{d=1;break JSCompiler_inline_label_plex_1}d=void 0}\nResult: var d;JSCompiler_inline_label_plex_2:{if(1+2){d=0;break JSCompiler_inline_label_plex_2}else{d=1;break JSCompiler_inline_label_plex_2}d=void 0}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME d 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            LABEL 1 [source_file: expected0]\n                LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME d 1 [source_file: expected0]\n                                    NUMBER 0.0 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME d 1 [source_file: expected0]\n                                    NUMBER 1.0 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME d 1 [source_file: expected0]\n                            VOID 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME d 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            LABEL 1 [source_file: testcode]\n                LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    IF 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME d 1 [source_file: testcode]\n                                    NUMBER 0.0 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME d 1 [source_file: testcode]\n                                    NUMBER 1.0 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME d 1 [source_file: testcode]\n                            VOID 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions22(InlineFunctionsTest.java:375)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions23\njunit.framework.AssertionFailedError:\nExpected: var d;JSCompiler_inline_label_complex_1:{if(1+2){d=0;break JSCompiler_inline_label_complex_1}else{d=1;break JSCompiler_inline_label_complex_1}d=void 0}\nResult: var d;JSCompiler_inline_label_complex_2:{if(1+2){d=0;break JSCompiler_inline_label_complex_2}else{d=1;break JSCompiler_inline_label_complex_2}d=void 0}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME d 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            LABEL 1 [source_file: expected0]\n                LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME d 1 [source_file: expected0]\n                                    NUMBER 0.0 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME d 1 [source_file: expected0]\n                                    NUMBER 1.0 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME d 1 [source_file: expected0]\n                            VOID 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME d 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            LABEL 1 [source_file: testcode]\n                LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    IF 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME d 1 [source_file: testcode]\n                                    NUMBER 0.0 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME d 1 [source_file: testcode]\n                                    NUMBER 1.0 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME d 1 [source_file: testcode]\n                            VOID 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions23(InlineFunctionsTest.java:389)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions9\njunit.framework.AssertionFailedError:\nExpected: var y;var x$$inline_0=i;y=x$$inline_0++\nResult: var y;var x$$inline_1=i;y=x$$inline_1++\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME y 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NAME i 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME y 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME y 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NAME i 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME y 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NAME i 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NAME i 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions9(InlineFunctionsTest.java:176)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.MakeDeclaredNamesUniqueTest::testMakeLocalNamesUniqueWithContext5\njunit.framework.AssertionFailedError:\nExpected: var fn=function f(){var f$$1;f$$1=1}\nResult: var fn=function f$$1(){var f$$1;f$$1=1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME fn 1 [source_file: expected0]\n                FUNCTION f 1 [source_file: expected0]\n                    NAME f 1 [source_file: expected0]\n                    LP 1 [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME f$$1 1 [source_file: expected0]\n                        EXPR_RESULT 1 [source_file: expected0]\n                            ASSIGN 1 [source_file: expected0]\n                                NAME f$$1 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME fn 1 [source_file: testcode]\n                FUNCTION f$$1 1 [source_file: testcode]\n                    NAME f$$1 1 [source_file: testcode]\n                    LP 1 [source_file: testcode]\n                    BLOCK 1 [source_file: testcode]\n                        VAR 1 [source_file: testcode]\n                            NAME f$$1 1 [source_file: testcode]\n                        EXPR_RESULT 1 [source_file: testcode]\n                            ASSIGN 1 [source_file: testcode]\n                                NAME f$$1 1 [source_file: testcode]\n                                NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME f 1 [source_file: expected0]\n\n\nSubtree2: NAME f$$1 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest.testMakeLocalNamesUniqueWithContext5(MakeDeclaredNamesUniqueTest.java:222)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n\n\nThere is a bug in the above code, please help me locate it by considering the stack trace.\n\nOutput **only** the exact buggy statement, with no line numbers, explanations, or additional content. Your response should contain just the buggy code line. Do not include ```java or ``` markers in the response.\n",
        "prompt_fl_6": "\nsource code:\n@Override\n  public void enterScope(NodeTraversal t) {\n    Node declarationRoot = t.getScopeRoot();\n    Renamer renamer;\n    if (nameStack.isEmpty()) {\n      // If the contextual renamer is being used the starting context can not\n      // be a function.\n      Preconditions.checkState(\n          declarationRoot.getType() != Token.FUNCTION ||\n          !(rootRenamer instanceof ContextualRenamer));\n      Preconditions.checkState(t.inGlobalScope());\n      renamer = rootRenamer;\n    } else {\n      renamer = nameStack.peek().forChildScope();\n    }\n\n    if (declarationRoot.getType() == Token.FUNCTION) {\n      for (Node c = declarationRoot.getFirstChild().getNext().getFirstChild(); c != null; c = c.getNext()) {\n        String name = c.getString();\n        renamer.addDeclaredName(name);\n      }\n      Node functionBody = declarationRoot.getLastChild();\n      findDeclaredNames(functionBody, null, renamer);\n    }  else \n    if (declarationRoot.getType() != Token.FUNCTION) {\n      // Add the block declarations\n      findDeclaredNames(declarationRoot, null, renamer);\n    }\n    nameStack.push(renamer);\n  }\n\nstack trace:\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline19b\njunit.framework.AssertionFailedError:\nExpected: var x=1;var y=2;function foo(a,b){y=a;x=b}function bar(){var b$$inline_1=y;y=x;x=b$$inline_1}\nResult: var x=1;var y=2;function foo(a,b){y=a;x=b}function bar(){var b$$inline_3=y;y=x;x=b$$inline_3}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n            NUMBER 1.0 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME y 1 [source_file:  [testcode] ]\n            NUMBER 2.0 1 [source_file:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n            NAME b 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            EXPR_RESULT 1 [source_file:  [testcode] ]\n                ASSIGN 1 [source_file:  [testcode] ]\n                    NAME y 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n            EXPR_RESULT 1 [source_file:  [testcode] ]\n                ASSIGN 1 [source_file:  [testcode] ]\n                    NAME x 1 [source_file:  [testcode] ]\n                    NAME b 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FUNCTION bar 1 [source_file:  [testcode] ]\n        NAME bar 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_1 1 [source_file:  [testcode] ]\n                        NAME y 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    ASSIGN 1 [source_file:  [testcode] ]\n                        NAME y 1 [source_file:  [testcode] ]\n                        NAME x 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    ASSIGN 1 [source_file:  [testcode] ]\n                        NAME x 1 [source_file:  [testcode] ]\n                        NAME b$$inline_1 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    VAR 1 [source_file: code]\n        NAME x 1 [source_file: code]\n            NUMBER 1.0 1 [source_file: code]\n    VAR 1 [source_file: code]\n        NAME y 1 [source_file: code]\n            NUMBER 2.0 1 [source_file: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n            NAME b 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            EXPR_RESULT 1 [source_file: code]\n                ASSIGN 1 [source_file: code]\n                    NAME y 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n            EXPR_RESULT 1 [source_file: code]\n                ASSIGN 1 [source_file: code]\n                    NAME x 1 [source_file: code]\n                    NAME b 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FUNCTION bar 1 [source_file: code]\n        NAME bar 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME b$$inline_3 1 [source_file: code]\n                        NAME y 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    ASSIGN 1 [source_file: code]\n                        NAME y 1 [source_file: code]\n                        NAME x 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    ASSIGN 1 [source_file: code]\n                        NAME x 1 [source_file: code]\n                        NAME b$$inline_3 1 [source_file: code]\n\n\nSubtree1: NAME b$$inline_1 1 [source_file:  [testcode] ]\n    NAME y 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME b$$inline_3 1 [source_file: code]\n    NAME y 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline19b(FunctionInjectorTest.java:945)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInlineIntoLoop\njunit.framework.AssertionFailedError:\nExpected: function foo(a){var b;return a}for(;1;){var b$$inline_1=void 0;1}\nResult: function foo(a){var b;return a}for(;1;){var b$$inline_3=void 0;1}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            VAR 1 [source_file:  [testcode] ]\n                NAME b 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FOR 1 [source_file:  [testcode] ]\n        EMPTY 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n        EMPTY 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_1 1 [source_file:  [testcode] ]\n                        VOID 1 [source_file:  [testcode] ]\n                            NUMBER 0.0 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            VAR 1 [source_file: code]\n                NAME b 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FOR 1 [source_file: code]\n        EMPTY 1 [source_file: code]\n        NUMBER 1.0 1 [source_file: code]\n        EMPTY 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME b$$inline_3 1 [source_file: code]\n                        VOID 1 [source_file: code]\n                            NUMBER 0.0 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    NUMBER 1.0 1 [source_file: code]\n\n\nSubtree1: NAME b$$inline_1 1 [source_file:  [testcode] ]\n    VOID 1 [source_file:  [testcode] ]\n        NUMBER 0.0 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME b$$inline_3 1 [source_file: code]\n    VOID 1 [source_file: code]\n        NUMBER 0.0 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInlineIntoLoop(FunctionInjectorTest.java:960)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline13\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return a}function x(){var a$$inline_0=x++;a$$inline_0}\nResult: function foo(a){return a}function x(){var a$$inline_1=x++;a$$inline_1}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FUNCTION x 1 [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n                        INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                            NAME x 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FUNCTION x 1 [source_file: code]\n        NAME x 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME a$$inline_1 1 [source_file: code]\n                        INC 1 [incrdecr: 1] [source_file: code]\n                            NAME x 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    NAME a$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    INC 1 [incrdecr: 1] [source_file: code]\n        NAME x 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline13(FunctionInjectorTest.java:866)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline14\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return a+a}var a$$inline_0=x++;a$$inline_0+a$$inline_0\nResult: function foo(a){return a+a}var a$$inline_1=x++;a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                ADD 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                    NAME x 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            ADD 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                ADD 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                INC 1 [incrdecr: 1] [source_file: code]\n                    NAME x 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            ADD 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    INC 1 [incrdecr: 1] [source_file: code]\n        NAME x 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline14(FunctionInjectorTest.java:877)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline15\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return a+a}var a$$inline_0=new Date;a$$inline_0+a$$inline_0\nResult: function foo(a){return a+a}var a$$inline_1=new Date;a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                ADD 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                NEW 1 [source_file:  [testcode] ]\n                    NAME Date 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            ADD 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                ADD 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                NEW 1 [source_file: code]\n                    NAME Date 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            ADD 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    NEW 1 [source_file:  [testcode] ]\n        NAME Date 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    NEW 1 [source_file: code]\n        NAME Date 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline15(FunctionInjectorTest.java:888)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline16\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return a+a}var a$$inline_0=function(){};a$$inline_0+a$$inline_0\nResult: function foo(a){return a+a}var a$$inline_1=function(){};a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                ADD 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                FUNCTION  1 [source_file:  [testcode] ]\n                    NAME  1 [source_file:  [testcode] ]\n                    LP 1 [source_file:  [testcode] ]\n                    BLOCK 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            ADD 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n                NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                ADD 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                FUNCTION  1 [source_file: code]\n                    NAME  1 [source_file: code]\n                    LP 1 [source_file: code]\n                    BLOCK 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            ADD 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n                NAME a$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    FUNCTION  1 [source_file:  [testcode] ]\n        NAME  1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    FUNCTION  1 [source_file: code]\n        NAME  1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline16(FunctionInjectorTest.java:899)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline17\njunit.framework.AssertionFailedError:\nExpected: function foo(a){return true}var a$$inline_0=goo();true\nResult: function foo(a){return true}var a$$inline_1=goo();true\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                TRUE 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                    NAME goo 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            TRUE 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                TRUE 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                CALL 1 [free_call: 1] [source_file: code]\n                    NAME goo 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            TRUE 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME goo 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    CALL 1 [free_call: 1] [source_file: code]\n        NAME goo 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline17(FunctionInjectorTest.java:910)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline18\njunit.framework.AssertionFailedError:\nExpected: function foo(a){var b;return a}function x(){var a$$inline_0=goo();var b$$inline_1;a$$inline_0}\nResult: function foo(a){var b;return a}function x(){var a$$inline_2=goo();var b$$inline_3;a$$inline_2}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            VAR 1 [source_file:  [testcode] ]\n                NAME b 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FUNCTION x 1 [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n                        CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                            NAME goo 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_1 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            VAR 1 [source_file: code]\n                NAME b 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FUNCTION x 1 [source_file: code]\n        NAME x 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME a$$inline_2 1 [source_file: code]\n                        CALL 1 [free_call: 1] [source_file: code]\n                            NAME goo 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME b$$inline_3 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    NAME a$$inline_2 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME goo 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_2 1 [source_file: code]\n    CALL 1 [free_call: 1] [source_file: code]\n        NAME goo 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline18(FunctionInjectorTest.java:919)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInline19\njunit.framework.AssertionFailedError:\nExpected: var x=1;var y=2;function foo(a,b){x=b;y=a}function bar(){var a$$inline_0=x;x=y;y=a$$inline_0}\nResult: var x=1;var y=2;function foo(a,b){x=b;y=a}function bar(){var a$$inline_2=x;x=y;y=a$$inline_2}\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n            NUMBER 1.0 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME y 1 [source_file:  [testcode] ]\n            NUMBER 2.0 1 [source_file:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n            NAME b 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            EXPR_RESULT 1 [source_file:  [testcode] ]\n                ASSIGN 1 [source_file:  [testcode] ]\n                    NAME x 1 [source_file:  [testcode] ]\n                    NAME b 1 [source_file:  [testcode] ]\n            EXPR_RESULT 1 [source_file:  [testcode] ]\n                ASSIGN 1 [source_file:  [testcode] ]\n                    NAME y 1 [source_file:  [testcode] ]\n                    NAME a 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    FUNCTION bar 1 [source_file:  [testcode] ]\n        NAME bar 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            BLOCK 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME a$$inline_0 1 [source_file:  [testcode] ]\n                        NAME x 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    ASSIGN 1 [source_file:  [testcode] ]\n                        NAME x 1 [source_file:  [testcode] ]\n                        NAME y 1 [source_file:  [testcode] ]\n                EXPR_RESULT 1 [source_file:  [testcode] ]\n                    ASSIGN 1 [source_file:  [testcode] ]\n                        NAME y 1 [source_file:  [testcode] ]\n                        NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    VAR 1 [source_file: code]\n        NAME x 1 [source_file: code]\n            NUMBER 1.0 1 [source_file: code]\n    VAR 1 [source_file: code]\n        NAME y 1 [source_file: code]\n            NUMBER 2.0 1 [source_file: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n            NAME b 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            EXPR_RESULT 1 [source_file: code]\n                ASSIGN 1 [source_file: code]\n                    NAME x 1 [source_file: code]\n                    NAME b 1 [source_file: code]\n            EXPR_RESULT 1 [source_file: code]\n                ASSIGN 1 [source_file: code]\n                    NAME y 1 [source_file: code]\n                    NAME a 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    FUNCTION bar 1 [source_file: code]\n        NAME bar 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            BLOCK 1 [source_file: code]\n                VAR 1 [source_file: code]\n                    NAME a$$inline_2 1 [source_file: code]\n                        NAME x 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    ASSIGN 1 [source_file: code]\n                        NAME x 1 [source_file: code]\n                        NAME y 1 [source_file: code]\n                EXPR_RESULT 1 [source_file: code]\n                    ASSIGN 1 [source_file: code]\n                        NAME y 1 [source_file: code]\n                        NAME a$$inline_2 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_2 1 [source_file: code]\n    NAME x 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInline19(FunctionInjectorTest.java:930)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testBug1897706\njunit.framework.AssertionFailedError:\nExpected: function foo(a){}var a$$inline_0=x()\nResult: function foo(a){}var a$$inline_1=x()\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n            NAME a 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n                CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                    NAME x 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n            NAME a 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME a$$inline_1 1 [source_file: code]\n                CALL 1 [free_call: 1] [source_file: code]\n                    NAME x 1 [source_file: code]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: code]\n    CALL 1 [free_call: 1] [source_file: code]\n        NAME x 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testBug1897706(FunctionInjectorTest.java:1315)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testInlineFunctionWithInnerFunction5\njunit.framework.AssertionFailedError:\nExpected: function foo(){function x(){var a;return true}return x}var x$$inline_0=function(){var a$$inline_1;return true};x$$inline_0\nResult: function foo(){function x(){var a;return true}return x}var x$$inline_1=function(){var a$$inline_2;return true};x$$inline_1\nNode tree inequality:\nTree1:\nSCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ]\n    FUNCTION foo 1 [source_file:  [testcode] ]\n        NAME foo 1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            FUNCTION x 1 [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n                LP 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n                    VAR 1 [source_file:  [testcode] ]\n                        NAME a 1 [source_file:  [testcode] ]\n                    RETURN 1 [source_file:  [testcode] ]\n                        TRUE 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EMPTY 1 [source_file:  [testcode] ]\n    BLOCK 1 [source_file:  [testcode] ]\n        VAR 1 [source_file:  [testcode] ]\n            NAME x$$inline_0 1 [source_file:  [testcode] ]\n                FUNCTION  1 [source_file:  [testcode] ]\n                    NAME  1 [source_file:  [testcode] ]\n                    LP 1 [source_file:  [testcode] ]\n                    BLOCK 1 [source_file:  [testcode] ]\n                        VAR 1 [source_file:  [testcode] ]\n                            NAME a$$inline_1 1 [source_file:  [testcode] ]\n                        RETURN 1 [source_file:  [testcode] ]\n                            TRUE 1 [source_file:  [testcode] ]\n        EXPR_RESULT 1 [source_file:  [testcode] ]\n            NAME x$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nSCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code]\n    FUNCTION foo 1 [source_file: code]\n        NAME foo 1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            FUNCTION x 1 [source_file: code]\n                NAME x 1 [source_file: code]\n                LP 1 [source_file: code]\n                BLOCK 1 [source_file: code]\n                    VAR 1 [source_file: code]\n                        NAME a 1 [source_file: code]\n                    RETURN 1 [source_file: code]\n                        TRUE 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                NAME x 1 [source_file: code]\n    EMPTY 1 [source_file: code]\n    BLOCK 1 [source_file: code]\n        VAR 1 [source_file: code]\n            NAME x$$inline_1 1 [source_file: code]\n                FUNCTION  1 [source_file: code]\n                    NAME  1 [source_file: code]\n                    LP 1 [source_file: code]\n                    BLOCK 1 [source_file: code]\n                        VAR 1 [source_file: code]\n                            NAME a$$inline_2 1 [source_file: code]\n                        RETURN 1 [source_file: code]\n                            TRUE 1 [source_file: code]\n        EXPR_RESULT 1 [source_file: code]\n            NAME x$$inline_1 1 [source_file: code]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file:  [testcode] ]\n    FUNCTION  1 [source_file:  [testcode] ]\n        NAME  1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            VAR 1 [source_file:  [testcode] ]\n                NAME a$$inline_1 1 [source_file:  [testcode] ]\n            RETURN 1 [source_file:  [testcode] ]\n                TRUE 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: code]\n    FUNCTION  1 [source_file: code]\n        NAME  1 [source_file: code]\n        LP 1 [source_file: code]\n        BLOCK 1 [source_file: code]\n            VAR 1 [source_file: code]\n                NAME a$$inline_2 1 [source_file: code]\n            RETURN 1 [source_file: code]\n                TRUE 1 [source_file: code]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testInlineFunctionWithInnerFunction5(FunctionInjectorTest.java:1025)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateWithParameters3\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=x++;a$$inline_0\nResult: var a$$inline_1=x++;a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME a$$inline_0 1 [source_file:  [testcode] ]\n            INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME a$$inline_1 1 [source_file:  [testcode] ]\n            INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NAME a$$inline_1 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateWithParameters3(FunctionToBlockMutatorTest.java:112)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateCallInLoopVars1\njunit.framework.AssertionFailedError:\nExpected: var B$$inline_1=bar();1\nResult: var B$$inline_3=bar();1\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME B$$inline_1 1 [source_file:  [testcode] ]\n            CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                NAME bar 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME B$$inline_3 1 [source_file:  [testcode] ]\n            CALL 1 [free_call: 1] [source_file:  [testcode] ]\n                NAME bar 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME B$$inline_1 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME bar 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME B$$inline_3 1 [source_file:  [testcode] ]\n    CALL 1 [free_call: 1] [source_file:  [testcode] ]\n        NAME bar 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateCallInLoopVars1(FunctionToBlockMutatorTest.java:151)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateInitializeUninitializedVars1\njunit.framework.AssertionFailedError:\nExpected: var b$$inline_1=void 0;1\nResult: var b$$inline_3=void 0;1\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME b$$inline_1 1 [source_file:  [testcode] ]\n            VOID 1 [source_file:  [testcode] ]\n                NUMBER 0.0 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME b$$inline_3 1 [source_file:  [testcode] ]\n            VOID 1 [source_file:  [testcode] ]\n                NUMBER 0.0 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        NUMBER 1.0 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME b$$inline_1 1 [source_file:  [testcode] ]\n    VOID 1 [source_file:  [testcode] ]\n        NUMBER 0.0 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME b$$inline_3 1 [source_file:  [testcode] ]\n    VOID 1 [source_file:  [testcode] ]\n        NUMBER 0.0 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateInitializeUninitializedVars1(FunctionToBlockMutatorTest.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateInitializeUninitializedVars2\njunit.framework.AssertionFailedError:\nExpected: JSCompiler_inline_label_foo_2:for(var b$$inline_1 in c){1;break JSCompiler_inline_label_foo_2}\nResult: JSCompiler_inline_label_foo_4:for(var b$$inline_3 in c){1;break JSCompiler_inline_label_foo_4}\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    LABEL 1 [source_file:  [testcode] ]\n        LABEL_NAME JSCompiler_inline_label_foo_2 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            FOR 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_1 1 [source_file:  [testcode] ]\n                NAME c 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n                    EXPR_RESULT 1 [source_file:  [testcode] ]\n                        NUMBER 1.0 1 [source_file:  [testcode] ]\n                    BREAK 1 [source_file:  [testcode] ]\n                        LABEL_NAME JSCompiler_inline_label_foo_2 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    LABEL 1 [source_file:  [testcode] ]\n        LABEL_NAME JSCompiler_inline_label_foo_4 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n            FOR 1 [source_file:  [testcode] ]\n                VAR 1 [source_file:  [testcode] ]\n                    NAME b$$inline_3 1 [source_file:  [testcode] ]\n                NAME c 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n                    EXPR_RESULT 1 [source_file:  [testcode] ]\n                        NUMBER 1.0 1 [source_file:  [testcode] ]\n                    BREAK 1 [source_file:  [testcode] ]\n                        LABEL_NAME JSCompiler_inline_label_foo_4 1 [source_file:  [testcode] ]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_foo_2 1 [source_file:  [testcode] ]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_foo_4 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateInitializeUninitializedVars2(FunctionToBlockMutatorTest.java:136)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutateFunctionDefinition\njunit.framework.AssertionFailedError:\nExpected: var g$$inline_1=function(){}\nResult: var g$$inline_3=function(){}\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME g$$inline_1 1 [source_file:  [testcode] ]\n            FUNCTION  1 [source_file:  [testcode] ]\n                NAME  1 [source_file:  [testcode] ]\n                LP 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME g$$inline_3 1 [source_file:  [testcode] ]\n            FUNCTION  1 [source_file:  [testcode] ]\n                NAME  1 [source_file:  [testcode] ]\n                LP 1 [source_file:  [testcode] ]\n                BLOCK 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME g$$inline_1 1 [source_file:  [testcode] ]\n    FUNCTION  1 [source_file:  [testcode] ]\n        NAME  1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME g$$inline_3 1 [source_file:  [testcode] ]\n    FUNCTION  1 [source_file:  [testcode] ]\n        NAME  1 [source_file:  [testcode] ]\n        LP 1 [source_file:  [testcode] ]\n        BLOCK 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateFunctionDefinition(FunctionToBlockMutatorTest.java:167)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionToBlockMutatorTest::testMutate8\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=x++;a$$inline_0+a$$inline_0\nResult: var a$$inline_1=x++;a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME a$$inline_0 1 [source_file:  [testcode] ]\n            INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        ADD 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n            NAME a$$inline_0 1 [source_file:  [testcode] ]\n\n\nTree2:\nBLOCK 1 [source_file:  [testcode] ]\n    VAR 1 [source_file:  [testcode] ]\n        NAME a$$inline_1 1 [source_file:  [testcode] ]\n            INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n                NAME x 1 [source_file:  [testcode] ]\n    EXPR_RESULT 1 [source_file:  [testcode] ]\n        ADD 1 [source_file:  [testcode] ]\n            NAME a$$inline_1 1 [source_file:  [testcode] ]\n            NAME a$$inline_1 1 [source_file:  [testcode] ]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file:  [testcode] ]\n    INC 1 [incrdecr: 1] [source_file:  [testcode] ]\n        NAME x 1 [source_file:  [testcode] ]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)\n\tat com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutate8(FunctionToBlockMutatorTest.java:121)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testLoopWithFunctionWithFunction\njunit.framework.AssertionFailedError:\nExpected: function _testLocalVariableInLoop_(){var result=0;var arr$$inline_0=[1,2,3,4,5];var i$$inline_1=0;var l$$inline_2=arr$$inline_0.length;for(;i$$inline_1<l$$inline_2;i$$inline_1++){var j$$inline_3=arr$$inline_0[i$$inline_1];(function(){var k$$inline_4=j$$inline_3;setTimeout(function(){result+=k$$inline_4},5*i$$inline_1)})()}}\nResult: function _testLocalVariableInLoop_(){var result=0;var arr$$inline_4=[1,2,3,4,5];var i$$inline_5=0;var l$$inline_6=arr$$inline_4.length;for(;i$$inline_5<l$$inline_6;i$$inline_5++){var j$$inline_7=arr$$inline_4[i$$inline_5];(function(){var k$$inline_8=j$$inline_7;setTimeout(function(){result+=k$$inline_8},5*i$$inline_5)})()}}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        FUNCTION _testLocalVariableInLoop_ 1 [source_file: expected0]\n            NAME _testLocalVariableInLoop_ 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 2 [source_file: expected0]\n                    NAME result 2 [source_file: expected0]\n                        NUMBER 0.0 2 [source_file: expected0]\n                BLOCK 3 [source_file: expected0]\n                    VAR 3 [source_file: expected0]\n                        NAME arr$$inline_0 3 [source_file: expected0]\n                            ARRAYLIT 3 [source_file: expected0]\n                                NUMBER 1.0 3 [source_file: expected0]\n                                NUMBER 2.0 3 [source_file: expected0]\n                                NUMBER 3.0 3 [source_file: expected0]\n                                NUMBER 4.0 3 [source_file: expected0]\n                                NUMBER 5.0 3 [source_file: expected0]\n                    VAR 4 [source_file: expected0]\n                        NAME i$$inline_1 4 [source_file: expected0]\n                            NUMBER 0.0 4 [source_file: expected0]\n                    VAR 5 [source_file: expected0]\n                        NAME l$$inline_2 5 [source_file: expected0]\n                            GETPROP 5 [source_file: expected0]\n                                NAME arr$$inline_0 5 [source_file: expected0]\n                                STRING length 5 [source_file: expected0]\n                    FOR 6 [source_file: expected0]\n                        EMPTY 6 [source_file: expected0]\n                        LT 6 [source_file: expected0]\n                            NAME i$$inline_1 6 [source_file: expected0]\n                            NAME l$$inline_2 6 [source_file: expected0]\n                        INC 6 [incrdecr: 1] [source_file: expected0]\n                            NAME i$$inline_1 6 [source_file: expected0]\n                        BLOCK 6 [source_file: expected0]\n                            VAR 7 [source_file: expected0]\n                                NAME j$$inline_3 7 [source_file: expected0]\n                                    GETELEM 7 [source_file: expected0]\n                                        NAME arr$$inline_0 7 [source_file: expected0]\n                                        NAME i$$inline_1 7 [source_file: expected0]\n                            EXPR_RESULT 8 [source_file: expected0]\n                                CALL 11 [free_call: 1] [source_file: expected0]\n                                    FUNCTION  8 [parenthesized: true] [source_file: expected0]\n                                        NAME  8 [source_file: expected0]\n                                        LP 8 [source_file: expected0]\n                                        BLOCK 8 [source_file: expected0]\n                                            VAR 9 [source_file: expected0]\n                                                NAME k$$inline_4 9 [source_file: expected0]\n                                                    NAME j$$inline_3 9 [source_file: expected0]\n                                            EXPR_RESULT 10 [source_file: expected0]\n                                                CALL 10 [free_call: 1] [source_file: expected0]\n                                                    NAME setTimeout 10 [source_file: expected0]\n                                                    FUNCTION  10 [source_file: expected0]\n                                                        NAME  10 [source_file: expected0]\n                                                        LP 10 [source_file: expected0]\n                                                        BLOCK 10 [source_file: expected0]\n                                                            EXPR_RESULT 10 [source_file: expected0]\n                                                                ASSIGN_ADD 10 [source_file: expected0]\n                                                                    NAME result 10 [source_file: expected0]\n                                                                    NAME k$$inline_4 10 [source_file: expected0]\n                                                    MUL 10 [source_file: expected0]\n                                                        NUMBER 5.0 10 [source_file: expected0]\n                                                        NAME i$$inline_1 10 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        FUNCTION _testLocalVariableInLoop_ 1 [source_file: testcode]\n            NAME _testLocalVariableInLoop_ 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 2 [source_file: testcode]\n                    NAME result 2 [source_file: testcode]\n                        NUMBER 0.0 2 [source_file: testcode]\n                BLOCK 3 [source_file: testcode]\n                    VAR 4 [source_file: testcode]\n                        NAME arr$$inline_4 4 [source_file: testcode]\n                            ARRAYLIT 4 [source_file: testcode]\n                                NUMBER 1.0 4 [source_file: testcode]\n                                NUMBER 2.0 4 [source_file: testcode]\n                                NUMBER 3.0 4 [source_file: testcode]\n                                NUMBER 4.0 4 [source_file: testcode]\n                                NUMBER 5.0 4 [source_file: testcode]\n                    VAR 3\n                        NAME i$$inline_5 5 [source_file: testcode]\n                            NUMBER 0.0 5 [source_file: testcode]\n                    VAR 5 [source_file: testcode]\n                        NAME l$$inline_6 5 [source_file: testcode]\n                            GETPROP 5 [source_file: testcode]\n                                NAME arr$$inline_4 5 [source_file: testcode]\n                                STRING length 5 [source_file: testcode]\n                    FOR 5 [source_file: testcode]\n                        EMPTY 5 [source_file: testcode]\n                        LT 5 [source_file: testcode]\n                            NAME i$$inline_5 5 [source_file: testcode]\n                            NAME l$$inline_6 5 [source_file: testcode]\n                        INC 5 [incrdecr: 1] [source_file: testcode]\n                            NAME i$$inline_5 5 [source_file: testcode]\n                        BLOCK 5 [source_file: testcode]\n                            VAR 6 [source_file: testcode]\n                                NAME j$$inline_7 6 [source_file: testcode]\n                                    GETELEM 6 [source_file: testcode]\n                                        NAME arr$$inline_4 6 [source_file: testcode]\n                                        NAME i$$inline_5 6 [source_file: testcode]\n                            EXPR_RESULT 7 [source_file: testcode]\n                                CALL 10 [free_call: 1] [source_file: testcode]\n                                    FUNCTION  7 [parenthesized: true] [source_file: testcode]\n                                        NAME  7 [source_file: testcode]\n                                        LP 7 [source_file: testcode]\n                                        BLOCK 7 [source_file: testcode]\n                                            VAR 8 [source_file: testcode]\n                                                NAME k$$inline_8 8 [source_file: testcode]\n                                                    NAME j$$inline_7 8 [source_file: testcode]\n                                            EXPR_RESULT 9 [source_file: testcode]\n                                                CALL 9 [free_call: 1] [source_file: testcode]\n                                                    NAME setTimeout 9 [source_file: testcode]\n                                                    FUNCTION  9 [source_file: testcode]\n                                                        NAME  9 [source_file: testcode]\n                                                        LP 9 [source_file: testcode]\n                                                        BLOCK 9 [source_file: testcode]\n                                                            EXPR_RESULT 9 [source_file: testcode]\n                                                                ASSIGN_ADD 9 [source_file: testcode]\n                                                                    NAME result 9 [source_file: testcode]\n                                                                    NAME k$$inline_8 9 [source_file: testcode]\n                                                    MUL 9 [source_file: testcode]\n                                                        NUMBER 5.0 9 [source_file: testcode]\n                                                        NAME i$$inline_5 9 [source_file: testcode]\n\n\nSubtree1: NAME arr$$inline_0 3 [source_file: expected0]\n    ARRAYLIT 3 [source_file: expected0]\n        NUMBER 1.0 3 [source_file: expected0]\n        NUMBER 2.0 3 [source_file: expected0]\n        NUMBER 3.0 3 [source_file: expected0]\n        NUMBER 4.0 3 [source_file: expected0]\n        NUMBER 5.0 3 [source_file: expected0]\n\n\nSubtree2: NAME arr$$inline_4 4 [source_file: testcode]\n    ARRAYLIT 4 [source_file: testcode]\n        NUMBER 1.0 4 [source_file: testcode]\n        NUMBER 2.0 4 [source_file: testcode]\n        NUMBER 3.0 4 [source_file: testcode]\n        NUMBER 4.0 4 [source_file: testcode]\n        NUMBER 5.0 4 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testLoopWithFunctionWithFunction(InlineFunctionsTest.java:2201)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables16\njunit.framework.AssertionFailedError:\nExpected: var a=3;var a$$inline_0=5;a\nResult: var a=3;var a$$inline_1=5;a\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 3.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 5.0 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    NAME a 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 3.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 5.0 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    NAME a 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 5.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 5.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables16(InlineFunctionsTest.java:845)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables18\njunit.framework.AssertionFailedError:\nExpected: var a=0;function _goo(){var a$$2=2;var x;var a$$inline_0=3;x=a+a}\nResult: var a=0;function _goo(){var a$$2=2;var x;var a$$inline_1=3;x=a+a}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 0.0 1 [source_file: expected0]\n        FUNCTION _goo 1 [source_file: expected0]\n            NAME _goo 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME a$$2 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME x 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                            NUMBER 3.0 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME x 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NAME a 1 [source_file: expected0]\n                                NAME a 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 0.0 1 [source_file: testcode]\n        FUNCTION _goo 1 [source_file: testcode]\n            NAME _goo 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME a$$2 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME x 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                            NUMBER 3.0 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME x 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                NAME a 1 [source_file: testcode]\n                                NAME a 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 3.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 3.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables18(InlineFunctionsTest.java:874)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testCostBasedInlining11\njunit.framework.AssertionFailedError:\nExpected: var a;var a$$inline_0=1+1;a=a$$inline_0+a$$inline_0\nResult: var a;var a$$inline_1=1+1;a=a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME a 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME a 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    ADD 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    ADD 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testCostBasedInlining11(InlineFunctionsTest.java:996)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testMixedModeInliningCosting3\njunit.framework.AssertionFailedError:\nExpected: 1+2+1+2+4+5+6+7+8+9+1+2+3+10;var JSCompiler_inline_anon_param_2=x();2+3+2+3+4+5+6+7+8+9+1+2+3+10\nResult: 1+2+1+2+4+5+6+7+8+9+1+2+3+10;var JSCompiler_inline_anon_param_4=x();2+3+2+3+4+5+6+7+8+9+1+2+3+10\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ADD 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                ADD 1 [source_file: expected0]\n                                    ADD 1 [source_file: expected0]\n                                        ADD 1 [source_file: expected0]\n                                            ADD 1 [source_file: expected0]\n                                                ADD 1 [source_file: expected0]\n                                                    ADD 1 [source_file: expected0]\n                                                        ADD 1 [source_file: expected0]\n                                                            ADD 1 [source_file: expected0]\n                                                                NUMBER 1.0 1 [source_file: expected0]\n                                                                NUMBER 2.0 1 [source_file: expected0]\n                                                            NUMBER 1.0 1 [source_file: expected0]\n                                                        NUMBER 2.0 1 [source_file: expected0]\n                                                    NUMBER 4.0 1 [source_file: expected0]\n                                                NUMBER 5.0 1 [source_file: expected0]\n                                            NUMBER 6.0 1 [source_file: expected0]\n                                        NUMBER 7.0 1 [source_file: expected0]\n                                    NUMBER 8.0 1 [source_file: expected0]\n                                NUMBER 9.0 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 3.0 1 [source_file: expected0]\n                NUMBER 10.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME JSCompiler_inline_anon_param_2 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME x 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                ADD 1 [source_file: expected0]\n                                    ADD 1 [source_file: expected0]\n                                        ADD 1 [source_file: expected0]\n                                            ADD 1 [source_file: expected0]\n                                                ADD 1 [source_file: expected0]\n                                                    ADD 1 [source_file: expected0]\n                                                        ADD 1 [source_file: expected0]\n                                                            ADD 1 [source_file: expected0]\n                                                                ADD 1 [source_file: expected0]\n                                                                    NUMBER 2.0 1 [source_file: expected0]\n                                                                    NUMBER 3.0 1 [source_file: expected0]\n                                                                NUMBER 2.0 1 [source_file: expected0]\n                                                            NUMBER 3.0 1 [source_file: expected0]\n                                                        NUMBER 4.0 1 [source_file: expected0]\n                                                    NUMBER 5.0 1 [source_file: expected0]\n                                                NUMBER 6.0 1 [source_file: expected0]\n                                            NUMBER 7.0 1 [source_file: expected0]\n                                        NUMBER 8.0 1 [source_file: expected0]\n                                    NUMBER 9.0 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n                        NUMBER 3.0 1 [source_file: expected0]\n                    NUMBER 10.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            ADD 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                ADD 1 [source_file: testcode]\n                                    ADD 1 [source_file: testcode]\n                                        ADD 1 [source_file: testcode]\n                                            ADD 1 [source_file: testcode]\n                                                ADD 1 [source_file: testcode]\n                                                    ADD 1 [source_file: testcode]\n                                                        ADD 1 [source_file: testcode]\n                                                            ADD 1 [source_file: testcode]\n                                                                NUMBER 1.0 1 [source_file: testcode]\n                                                                NUMBER 2.0 1 [source_file: testcode]\n                                                            NUMBER 1.0 1 [source_file: testcode]\n                                                        NUMBER 2.0 1 [source_file: testcode]\n                                                    NUMBER 4.0 1 [source_file: testcode]\n                                                NUMBER 5.0 1 [source_file: testcode]\n                                            NUMBER 6.0 1 [source_file: testcode]\n                                        NUMBER 7.0 1 [source_file: testcode]\n                                    NUMBER 8.0 1 [source_file: testcode]\n                                NUMBER 9.0 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                    NUMBER 3.0 1 [source_file: testcode]\n                NUMBER 10.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME JSCompiler_inline_anon_param_4 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME x 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                ADD 1 [source_file: testcode]\n                                    ADD 1 [source_file: testcode]\n                                        ADD 1 [source_file: testcode]\n                                            ADD 1 [source_file: testcode]\n                                                ADD 1 [source_file: testcode]\n                                                    ADD 1 [source_file: testcode]\n                                                        ADD 1 [source_file: testcode]\n                                                            ADD 1 [source_file: testcode]\n                                                                ADD 1 [source_file: testcode]\n                                                                    NUMBER 2.0 1 [source_file: testcode]\n                                                                    NUMBER 3.0 1 [source_file: testcode]\n                                                                NUMBER 2.0 1 [source_file: testcode]\n                                                            NUMBER 3.0 1 [source_file: testcode]\n                                                        NUMBER 4.0 1 [source_file: testcode]\n                                                    NUMBER 5.0 1 [source_file: testcode]\n                                                NUMBER 6.0 1 [source_file: testcode]\n                                            NUMBER 7.0 1 [source_file: testcode]\n                                        NUMBER 8.0 1 [source_file: testcode]\n                                    NUMBER 9.0 1 [source_file: testcode]\n                                NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n                        NUMBER 3.0 1 [source_file: testcode]\n                    NUMBER 10.0 1 [source_file: testcode]\n\n\nSubtree1: NAME JSCompiler_inline_anon_param_2 1 [source_file: expected0]\n    CALL 1 [free_call: 1] [source_file: expected0]\n        NAME x 1 [source_file: expected0]\n\n\nSubtree2: NAME JSCompiler_inline_anon_param_4 1 [source_file: testcode]\n    CALL 1 [free_call: 1] [source_file: testcode]\n        NAME x 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testMixedModeInliningCosting3(InlineFunctionsTest.java:529)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineNeverMutateConstants\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=undefined;x$$inline_0=1\nResult: var x$$inline_1=undefined;x$$inline_1=1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NAME undefined 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NAME undefined 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NAME undefined 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NAME undefined 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineNeverMutateConstants(InlineFunctionsTest.java:617)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineWithThis7\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=void 0;a$$inline_0=1;void 0\nResult: var a$$inline_1=void 0;a$$inline_1=1;void 0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    VOID 1 [source_file: expected0]\n                        NUMBER 0.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                VOID 1 [source_file: expected0]\n                    NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    VOID 1 [source_file: testcode]\n                        NUMBER 0.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                VOID 1 [source_file: testcode]\n                    NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    VOID 1 [source_file: expected0]\n        NUMBER 0.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    VOID 1 [source_file: testcode]\n        NUMBER 0.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineWithThis7(InlineFunctionsTest.java:1895)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testAnonymous1\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=10;var b$$inline_1=a$$inline_0;a$$inline_0++;alert(b$$inline_1)\nResult: var a$$inline_2=10;var b$$inline_3=a$$inline_2;a$$inline_2++;alert(b$$inline_3)\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 10.0 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME b$$inline_1 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME alert 1 [source_file: expected0]\n                        NAME b$$inline_1 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_2 1 [source_file: testcode]\n                    NUMBER 10.0 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME b$$inline_3 1 [source_file: testcode]\n                        NAME a$$inline_2 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME a$$inline_2 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME alert 1 [source_file: testcode]\n                        NAME b$$inline_3 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 10.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_2 1 [source_file: testcode]\n    NUMBER 10.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testAnonymous1(InlineFunctionsTest.java:2169)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testAnonymous3\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=10;(function(){arguments})()\nResult: var a$$inline_1=10;(function(){arguments})()\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 10.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    FUNCTION  1 [parenthesized: true] [source_file: expected0]\n                        NAME  1 [source_file: expected0]\n                        LP 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                NAME arguments 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 10.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    FUNCTION  1 [parenthesized: true] [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                NAME arguments 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 10.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 10.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testAnonymous3(InlineFunctionsTest.java:2191)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables1\njunit.framework.AssertionFailedError:\nExpected: var a=0;var a$$inline_0=3+4\nResult: var a=0;var a$$inline_1=3+4\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 0.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        NUMBER 3.0 1 [source_file: expected0]\n                        NUMBER 4.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 0.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        NUMBER 3.0 1 [source_file: testcode]\n                        NUMBER 4.0 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    ADD 1 [source_file: expected0]\n        NUMBER 3.0 1 [source_file: expected0]\n        NUMBER 4.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    ADD 1 [source_file: testcode]\n        NUMBER 3.0 1 [source_file: testcode]\n        NUMBER 4.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables1(InlineFunctionsTest.java:682)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables3\njunit.framework.AssertionFailedError:\nExpected: var a=0;function _bar(){var a$$inline_0=2;a=3+a$$inline_0}\nResult: var a=0;function _bar(){var a$$inline_1=2;a=3+a$$inline_1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 0.0 1 [source_file: expected0]\n        FUNCTION _bar 1 [source_file: expected0]\n            NAME _bar 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME a 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NUMBER 3.0 1 [source_file: expected0]\n                                NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 0.0 1 [source_file: testcode]\n        FUNCTION _bar 1 [source_file: testcode]\n            NAME _bar 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME a 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                NUMBER 3.0 1 [source_file: testcode]\n                                NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables3(InlineFunctionsTest.java:706)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables6\njunit.framework.AssertionFailedError:\nExpected: var a=0;function _bar(a$$2){var a$$inline_0=4;a$$2=3+a$$inline_0}\nResult: var a=0;function _bar(a$$2){var a$$inline_1=4;a$$2=3+a$$inline_1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 0.0 1 [source_file: expected0]\n        FUNCTION _bar 1 [source_file: expected0]\n            NAME _bar 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n                NAME a$$2 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                            NUMBER 4.0 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME a$$2 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NUMBER 3.0 1 [source_file: expected0]\n                                NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 0.0 1 [source_file: testcode]\n        FUNCTION _bar 1 [source_file: testcode]\n            NAME _bar 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n                NAME a$$2 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                            NUMBER 4.0 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME a$$2 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                NUMBER 3.0 1 [source_file: testcode]\n                                NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 4.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 4.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables6(InlineFunctionsTest.java:737)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testShadowVariables7\njunit.framework.AssertionFailedError:\nExpected: var a=3;var a$$inline_0=5;a\nResult: var a=3;var a$$inline_1=5;a\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n                NUMBER 3.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 5.0 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    NAME a 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n                NUMBER 3.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 5.0 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    NAME a 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 5.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 5.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables7(InlineFunctionsTest.java:748)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testFunctionExpressionCallInlining11b\njunit.framework.AssertionFailedError:\nExpected: var JSCompiler_inline_result$$0;var a$$inline_1;JSCompiler_inline_result$$0=function(){foo()};JSCompiler_inline_result$$0()\nResult: var JSCompiler_inline_result$$0;var a$$inline_2;JSCompiler_inline_result$$0=function(){foo()};JSCompiler_inline_result$$0()\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_1 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n                    FUNCTION  1 [source_file: expected0]\n                        NAME  1 [source_file: expected0]\n                        LP 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                CALL 1 [free_call: 1] [source_file: expected0]\n                                    NAME foo 1 [source_file: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            CALL 1 [free_call: 1] [source_file: expected0]\n                NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME JSCompiler_inline_result$$0 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_2 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$0 1 [source_file: testcode]\n                    FUNCTION  1 [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                CALL 1 [free_call: 1] [source_file: testcode]\n                                    NAME foo 1 [source_file: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            CALL 1 [free_call: 1] [source_file: testcode]\n                NAME JSCompiler_inline_result$$0 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_1 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_2 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testFunctionExpressionCallInlining11b(InlineFunctionsTest.java:1682)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexInlineNoResultNoParamCall3\njunit.framework.AssertionFailedError:\nExpected: function _foo(){a();b();var z$$inline_0=1+1}\nResult: function _foo(){a();b();var z$$inline_1=1+1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        FUNCTION _foo 1 [source_file: expected0]\n            NAME _foo 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME a 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME b 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME z$$inline_0 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        FUNCTION _foo 1 [source_file: testcode]\n            NAME _foo 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        CALL 1 [free_call: 1] [source_file: testcode]\n                            NAME a 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        CALL 1 [free_call: 1] [source_file: testcode]\n                            NAME b 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME z$$inline_1 1 [source_file: testcode]\n                            ADD 1 [source_file: testcode]\n                                NUMBER 1.0 1 [source_file: testcode]\n                                NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME z$$inline_0 1 [source_file: expected0]\n    ADD 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME z$$inline_1 1 [source_file: testcode]\n    ADD 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexInlineNoResultNoParamCall3(InlineFunctionsTest.java:1212)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testCostBasedInlining9\njunit.framework.AssertionFailedError:\nExpected: var a;var a$$inline_0=1+1+1;a=1+a$$inline_0+a$$inline_0\nResult: var a;var a$$inline_1=1+1+1;a=1+a$$inline_1+a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME a 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME a 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NAME a$$inline_0 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME a 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME a 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NAME a$$inline_1 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    ADD 1 [source_file: expected0]\n        ADD 1 [source_file: expected0]\n            NUMBER 1.0 1 [source_file: expected0]\n            NUMBER 1.0 1 [source_file: expected0]\n        NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    ADD 1 [source_file: testcode]\n        ADD 1 [source_file: testcode]\n            NUMBER 1.0 1 [source_file: testcode]\n            NUMBER 1.0 1 [source_file: testcode]\n        NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testCostBasedInlining9(InlineFunctionsTest.java:977)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testMethodWithFunctionWithFunction\njunit.framework.AssertionFailedError:\nExpected: function _testLocalVariable_(){var result=0;var j$$inline_2=[i];var j$$inline_0=j$$inline_2;setTimeout(function(){result+=j$$inline_0},5*i);j$$inline_2=null}\nResult: function _testLocalVariable_(){var result=0;var j$$inline_4=[i];var j$$inline_1=j$$inline_4;setTimeout(function(){result+=j$$inline_1},5*i);j$$inline_4=null}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        FUNCTION _testLocalVariable_ 1 [source_file: expected0]\n            NAME _testLocalVariable_ 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 2 [source_file: expected0]\n                    NAME result 2 [source_file: expected0]\n                        NUMBER 0.0 2 [source_file: expected0]\n                BLOCK 3 [source_file: expected0]\n                    VAR 4 [source_file: expected0]\n                        NAME j$$inline_2 4 [source_file: expected0]\n                            ARRAYLIT 4 [source_file: expected0]\n                                NAME i 4 [source_file: expected0]\n                    BLOCK 5 [source_file: expected0]\n                        VAR 6 [source_file: expected0]\n                            NAME j$$inline_0 6 [source_file: expected0]\n                                NAME j$$inline_2 6 [source_file: expected0]\n                        EXPR_RESULT 7 [source_file: expected0]\n                            CALL 7 [free_call: 1] [source_file: expected0]\n                                NAME setTimeout 7 [source_file: expected0]\n                                FUNCTION  7 [source_file: expected0]\n                                    NAME  7 [source_file: expected0]\n                                    LP 7 [source_file: expected0]\n                                    BLOCK 7 [source_file: expected0]\n                                        EXPR_RESULT 7 [source_file: expected0]\n                                            ASSIGN_ADD 7 [source_file: expected0]\n                                                NAME result 7 [source_file: expected0]\n                                                NAME j$$inline_0 7 [source_file: expected0]\n                                MUL 7 [source_file: expected0]\n                                    NUMBER 5.0 7 [source_file: expected0]\n                                    NAME i 7 [source_file: expected0]\n                    EXPR_RESULT 9 [source_file: expected0]\n                        ASSIGN 9 [source_file: expected0]\n                            NAME j$$inline_2 9 [source_file: expected0]\n                            NULL 9 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        FUNCTION _testLocalVariable_ 1 [source_file: testcode]\n            NAME _testLocalVariable_ 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 2 [source_file: testcode]\n                    NAME result 2 [source_file: testcode]\n                        NUMBER 0.0 2 [source_file: testcode]\n                BLOCK 3 [source_file: testcode]\n                    VAR 4 [source_file: testcode]\n                        NAME j$$inline_4 4 [source_file: testcode]\n                            ARRAYLIT 4 [source_file: testcode]\n                                NAME i 4 [source_file: testcode]\n                    BLOCK 5 [source_file: testcode]\n                        VAR 7 [source_file: testcode]\n                            NAME j$$inline_1 7 [source_file: testcode]\n                                NAME j$$inline_4 7 [source_file: testcode]\n                        EXPR_RESULT 6 [source_file: testcode]\n                            CALL 6 [free_call: 1] [source_file: testcode]\n                                NAME setTimeout 6 [source_file: testcode]\n                                FUNCTION  6 [source_file: testcode]\n                                    NAME  6 [source_file: testcode]\n                                    LP 6 [source_file: testcode]\n                                    BLOCK 6 [source_file: testcode]\n                                        EXPR_RESULT 6 [source_file: testcode]\n                                            ASSIGN_ADD 6 [source_file: testcode]\n                                                NAME result 6 [source_file: testcode]\n                                                NAME j$$inline_1 6 [source_file: testcode]\n                                MUL 6 [source_file: testcode]\n                                    NUMBER 5.0 6 [source_file: testcode]\n                                    NAME i 6 [source_file: testcode]\n                    EXPR_RESULT 8 [source_file: testcode]\n                        ASSIGN 8 [source_file: testcode]\n                            NAME j$$inline_4 8 [source_file: testcode]\n                            NULL 8 [source_file: testcode]\n\n\nSubtree1: NAME j$$inline_2 4 [source_file: expected0]\n    ARRAYLIT 4 [source_file: expected0]\n        NAME i 4 [source_file: expected0]\n\n\nSubtree2: NAME j$$inline_4 4 [source_file: testcode]\n    ARRAYLIT 4 [source_file: testcode]\n        NAME i 4 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testMethodWithFunctionWithFunction(InlineFunctionsTest.java:2236)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testFunctionExpressionYCombinator\njunit.framework.AssertionFailedError:\nExpected: var factorial;var M$$inline_4=function(f$$2){return function(n){if(n===0)return 1;else return n*f$$2(n-1)}};var f$$inline_0=function(f$$inline_7){return M$$inline_4(function(arg$$inline_8){return f$$inline_7(f$$inline_7)(arg$$inline_8)})};factorial=M$$inline_4(function(arg$$inline_1){return f$$inline_0(f$$inline_0)(arg$$inline_1)});factorial(5)\nResult: var factorial;var M$$inline_6=function(f$$2){return function(n){if(n===0)return 1;else return n*f$$2(n-1)}};var f$$inline_1=function(f$$inline_9){return M$$inline_6(function(arg$$inline_10){return f$$inline_9(f$$inline_9)(arg$$inline_10)})};factorial=M$$inline_6(function(arg$$inline_2){return f$$inline_1(f$$inline_1)(arg$$inline_2)});factorial(5)\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME factorial 1 [source_file: expected0]\n        BLOCK 2 [source_file: expected0]\n            VAR 3 [source_file: expected0]\n                NAME M$$inline_4 3 [source_file: expected0]\n                    FUNCTION  3 [source_file: expected0]\n                        NAME  3 [source_file: expected0]\n                        LP 3 [source_file: expected0]\n                            NAME f$$2 3 [source_file: expected0]\n                        BLOCK 3 [source_file: expected0]\n                            RETURN 4 [source_file: expected0]\n                                FUNCTION  4 [source_file: expected0]\n                                    NAME  4 [source_file: expected0]\n                                    LP 4 [source_file: expected0]\n                                        NAME n 4 [source_file: expected0]\n                                    BLOCK 4 [source_file: expected0]\n                                        IF 4 [source_file: expected0]\n                                            SHEQ 4 [source_file: expected0]\n                                                NAME n 4 [source_file: expected0]\n                                                NUMBER 0.0 4 [source_file: expected0]\n                                            BLOCK 4 [source_file: expected0]\n                                                RETURN 4 [source_file: expected0]\n                                                    NUMBER 1.0 4 [source_file: expected0]\n                                            BLOCK 4 [source_file: expected0]\n                                                RETURN 4 [source_file: expected0]\n                                                    MUL 4 [source_file: expected0]\n                                                        NAME n 4 [source_file: expected0]\n                                                        CALL 4 [free_call: 1] [source_file: expected0]\n                                                            NAME f$$2 4 [source_file: expected0]\n                                                            SUB 4 [source_file: expected0]\n                                                                NAME n 4 [source_file: expected0]\n                                                                NUMBER 1.0 4 [source_file: expected0]\n            BLOCK 6 [source_file: expected0]\n                VAR 7 [source_file: expected0]\n                    NAME f$$inline_0 7 [source_file: expected0]\n                        FUNCTION  7 [source_file: expected0]\n                            NAME  7 [source_file: expected0]\n                            LP 7 [source_file: expected0]\n                                NAME f$$inline_7 7 [source_file: expected0]\n                            BLOCK 7 [source_file: expected0]\n                                RETURN 8 [source_file: expected0]\n                                    CALL 8 [free_call: 1] [source_file: expected0]\n                                        NAME M$$inline_4 8 [source_file: expected0]\n                                        FUNCTION  9 [source_file: expected0]\n                                            NAME  9 [source_file: expected0]\n                                            LP 9 [source_file: expected0]\n                                                NAME arg$$inline_8 9 [source_file: expected0]\n                                            BLOCK 9 [source_file: expected0]\n                                                RETURN 10 [source_file: expected0]\n                                                    CALL 10 [free_call: 1] [source_file: expected0]\n                                                        CALL 10 [free_call: 1] [source_file: expected0]\n                                                            NAME f$$inline_7 10 [source_file: expected0]\n                                                            NAME f$$inline_7 10 [source_file: expected0]\n                                                        NAME arg$$inline_8 10 [source_file: expected0]\n                EXPR_RESULT 13 [source_file: expected0]\n                    ASSIGN 13 [source_file: expected0]\n                        NAME factorial 13 [source_file: expected0]\n                        CALL 13 [free_call: 1] [source_file: expected0]\n                            NAME M$$inline_4 13 [source_file: expected0]\n                            FUNCTION  14 [source_file: expected0]\n                                NAME  14 [source_file: expected0]\n                                LP 14 [source_file: expected0]\n                                    NAME arg$$inline_1 14 [source_file: expected0]\n                                BLOCK 14 [source_file: expected0]\n                                    RETURN 15 [source_file: expected0]\n                                        CALL 15 [free_call: 1] [source_file: expected0]\n                                            CALL 15 [free_call: 1] [source_file: expected0]\n                                                NAME f$$inline_0 15 [source_file: expected0]\n                                                NAME f$$inline_0 15 [source_file: expected0]\n                                            NAME arg$$inline_1 15 [source_file: expected0]\n        EXPR_RESULT 18 [source_file: expected0]\n            CALL 18 [free_call: 1] [source_file: expected0]\n                NAME factorial 18 [source_file: expected0]\n                NUMBER 5.0 18 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME factorial 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 13 [source_file: testcode]\n                NAME M$$inline_6 13 [source_file: testcode]\n                    FUNCTION  13 [source_file: testcode]\n                        NAME  13 [source_file: testcode]\n                        LP 13 [source_file: testcode]\n                            NAME f$$2 13 [source_file: testcode]\n                        BLOCK 13 [source_file: testcode]\n                            RETURN 14 [source_file: testcode]\n                                FUNCTION  14 [source_file: testcode]\n                                    NAME  14 [source_file: testcode]\n                                    LP 14 [source_file: testcode]\n                                        NAME n 14 [source_file: testcode]\n                                    BLOCK 14 [source_file: testcode]\n                                        IF 15 [source_file: testcode]\n                                            SHEQ 15 [source_file: testcode]\n                                                NAME n 15 [source_file: testcode]\n                                                NUMBER 0.0 15 [source_file: testcode]\n                                            BLOCK 16 [source_file: testcode]\n                                                RETURN 16 [source_file: testcode]\n                                                    NUMBER 1.0 16 [source_file: testcode]\n                                            BLOCK 18 [source_file: testcode]\n                                                RETURN 18 [source_file: testcode]\n                                                    MUL 18 [source_file: testcode]\n                                                        NAME n 18 [source_file: testcode]\n                                                        CALL 18 [free_call: 1] [source_file: testcode]\n                                                            NAME f$$2 18 [source_file: testcode]\n                                                            SUB 18 [source_file: testcode]\n                                                                NAME n 18 [source_file: testcode]\n                                                                NUMBER 1.0 18 [source_file: testcode]\n            BLOCK 2 [source_file: testcode]\n                VAR 7 [source_file: testcode]\n                    NAME f$$inline_1 7 [source_file: testcode]\n                        FUNCTION  7 [source_file: testcode]\n                            NAME  7 [source_file: testcode]\n                            LP 7 [source_file: testcode]\n                                NAME f$$inline_9 7 [source_file: testcode]\n                            BLOCK 7 [source_file: testcode]\n                                RETURN 8 [source_file: testcode]\n                                    CALL 8 [free_call: 1] [source_file: testcode]\n                                        NAME M$$inline_6 8 [source_file: testcode]\n                                        FUNCTION  8 [source_file: testcode]\n                                            NAME  8 [source_file: testcode]\n                                            LP 8 [source_file: testcode]\n                                                NAME arg$$inline_10 8 [source_file: testcode]\n                                            BLOCK 8 [source_file: testcode]\n                                                RETURN 9 [source_file: testcode]\n                                                    CALL 9 [free_call: 1] [source_file: testcode]\n                                                        CALL 9 [parenthesized: true] [free_call: 1] [source_file: testcode]\n                                                            NAME f$$inline_9 9 [source_file: testcode]\n                                                            NAME f$$inline_9 9 [source_file: testcode]\n                                                        NAME arg$$inline_10 9 [source_file: testcode]\n                EXPR_RESULT 3 [source_file: testcode]\n                    ASSIGN 3 [source_file: testcode]\n                        NAME factorial 3 [source_file: testcode]\n                        CALL 3 [free_call: 1] [source_file: testcode]\n                            NAME M$$inline_6 3 [source_file: testcode]\n                            FUNCTION  3 [source_file: testcode]\n                                NAME  3 [source_file: testcode]\n                                LP 3 [source_file: testcode]\n                                    NAME arg$$inline_2 3 [source_file: testcode]\n                                BLOCK 3 [source_file: testcode]\n                                    RETURN 4 [source_file: testcode]\n                                        CALL 4 [free_call: 1] [source_file: testcode]\n                                            CALL 4 [parenthesized: true] [free_call: 1] [source_file: testcode]\n                                                NAME f$$inline_1 4 [source_file: testcode]\n                                                NAME f$$inline_1 4 [source_file: testcode]\n                                            NAME arg$$inline_2 4 [source_file: testcode]\n        EXPR_RESULT 22 [source_file: testcode]\n            CALL 22 [free_call: 1] [source_file: testcode]\n                NAME factorial 22 [source_file: testcode]\n                NUMBER 5.0 22 [source_file: testcode]\n\n\nSubtree1: NAME M$$inline_4 3 [source_file: expected0]\n    FUNCTION  3 [source_file: expected0]\n        NAME  3 [source_file: expected0]\n        LP 3 [source_file: expected0]\n            NAME f$$2 3 [source_file: expected0]\n        BLOCK 3 [source_file: expected0]\n            RETURN 4 [source_file: expected0]\n                FUNCTION  4 [source_file: expected0]\n                    NAME  4 [source_file: expected0]\n                    LP 4 [source_file: expected0]\n                        NAME n 4 [source_file: expected0]\n                    BLOCK 4 [source_file: expected0]\n                        IF 4 [source_file: expected0]\n                            SHEQ 4 [source_file: expected0]\n                                NAME n 4 [source_file: expected0]\n                                NUMBER 0.0 4 [source_file: expected0]\n                            BLOCK 4 [source_file: expected0]\n                                RETURN 4 [source_file: expected0]\n                                    NUMBER 1.0 4 [source_file: expected0]\n                            BLOCK 4 [source_file: expected0]\n                                RETURN 4 [source_file: expected0]\n                                    MUL 4 [source_file: expected0]\n                                        NAME n 4 [source_file: expected0]\n                                        CALL 4 [free_call: 1] [source_file: expected0]\n                                            NAME f$$2 4 [source_file: expected0]\n                                            SUB 4 [source_file: expected0]\n                                                NAME n 4 [source_file: expected0]\n                                                NUMBER 1.0 4 [source_file: expected0]\n\n\nSubtree2: NAME M$$inline_6 13 [source_file: testcode]\n    FUNCTION  13 [source_file: testcode]\n        NAME  13 [source_file: testcode]\n        LP 13 [source_file: testcode]\n            NAME f$$2 13 [source_file: testcode]\n        BLOCK 13 [source_file: testcode]\n            RETURN 14 [source_file: testcode]\n                FUNCTION  14 [source_file: testcode]\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexInlineVars7\njunit.framework.AssertionFailedError:\nExpected: var b=1;var z;JSCompiler_inline_label_f_2:{if(1){z=b();break JSCompiler_inline_label_f_2}else{z=true;break JSCompiler_inline_label_f_2}z=void 0}\nResult: var b=1;var z;JSCompiler_inline_label_f_4:{if(1){z=b();break JSCompiler_inline_label_f_4}else{z=true;break JSCompiler_inline_label_f_4}z=void 0}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME b 1 [source_file: expected0]\n                NUMBER 1.0 1 [source_file: expected0]\n        VAR 1 [source_file: expected0]\n            NAME z 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            LABEL 1 [source_file: expected0]\n                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME z 1 [source_file: expected0]\n                                    CALL 1 [free_call: 1] [source_file: expected0]\n                                        NAME b 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME z 1 [source_file: expected0]\n                                    TRUE 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME z 1 [source_file: expected0]\n                            VOID 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME b 1 [source_file: testcode]\n                NUMBER 1.0 1 [source_file: testcode]\n        VAR 1 [source_file: testcode]\n            NAME z 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            LABEL 1 [source_file: testcode]\n                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    IF 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME z 1 [source_file: testcode]\n                                    CALL 1 [free_call: 1] [source_file: testcode]\n                                        NAME b 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME z 1 [source_file: testcode]\n                                    TRUE 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME z 1 [source_file: testcode]\n                            VOID 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexInlineVars7(InlineFunctionsTest.java:1319)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexFunctionWithFunctionDefinition2a\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=void 0;call(function(){return a$$inline_0})\nResult: var a$$inline_1=void 0;call(function(){return a$$inline_1})\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME a$$inline_0 1 [source_file: expected0]\n                        VOID 1 [source_file: expected0]\n                            NUMBER 0.0 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME call 1 [source_file: expected0]\n                        FUNCTION  1 [source_file: expected0]\n                            NAME  1 [source_file: expected0]\n                            LP 1 [source_file: expected0]\n                            BLOCK 1 [source_file: expected0]\n                                RETURN 1 [source_file: expected0]\n                                    NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME a$$inline_1 1 [source_file: testcode]\n                        VOID 1 [source_file: testcode]\n                            NUMBER 0.0 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME call 1 [source_file: testcode]\n                        FUNCTION  1 [source_file: testcode]\n                            NAME  1 [source_file: testcode]\n                            LP 1 [source_file: testcode]\n                            BLOCK 1 [source_file: testcode]\n                                RETURN 1 [source_file: testcode]\n                                    NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    VOID 1 [source_file: expected0]\n        NUMBER 0.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    VOID 1 [source_file: testcode]\n        NUMBER 0.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexFunctionWithFunctionDefinition2a(InlineFunctionsTest.java:1525)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexInline7\njunit.framework.AssertionFailedError:\nExpected: var b=1;JSCompiler_inline_label_f_2:{if(1){z=b();break JSCompiler_inline_label_f_2}else{z=true;break JSCompiler_inline_label_f_2}z=void 0}\nResult: var b=1;JSCompiler_inline_label_f_4:{if(1){z=b();break JSCompiler_inline_label_f_4}else{z=true;break JSCompiler_inline_label_f_4}z=void 0}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME b 1 [source_file: expected0]\n                NUMBER 1.0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            LABEL 1 [source_file: expected0]\n                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        NUMBER 1.0 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME z 1 [source_file: expected0]\n                                    CALL 1 [free_call: 1] [source_file: expected0]\n                                        NAME b 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME z 1 [source_file: expected0]\n                                    TRUE 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME z 1 [source_file: expected0]\n                            VOID 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME b 1 [source_file: testcode]\n                NUMBER 1.0 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            LABEL 1 [source_file: testcode]\n                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    IF 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME z 1 [source_file: testcode]\n                                    CALL 1 [free_call: 1] [source_file: testcode]\n                                        NAME b 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME z 1 [source_file: testcode]\n                                    TRUE 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME z 1 [source_file: testcode]\n                            VOID 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexInline7(InlineFunctionsTest.java:1269)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testFunctionExpressionOmega\njunit.framework.AssertionFailedError:\nExpected: var f$$inline_0=function(f$$1){f$$1(f$$1)};f$$inline_0(f$$inline_0)\nResult: var f$$inline_1=function(f$$1){f$$1(f$$1)};f$$inline_1(f$$inline_1)\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME f$$inline_0 1 [source_file: expected0]\n                    FUNCTION  1 [source_file: expected0]\n                        NAME  1 [source_file: expected0]\n                        LP 1 [source_file: expected0]\n                            NAME f$$1 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                CALL 1 [free_call: 1] [source_file: expected0]\n                                    NAME f$$1 1 [source_file: expected0]\n                                    NAME f$$1 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME f$$inline_0 1 [source_file: expected0]\n                            NAME f$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME f$$inline_1 1 [source_file: testcode]\n                    FUNCTION  1 [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                            NAME f$$1 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                CALL 1 [free_call: 1] [source_file: testcode]\n                                    NAME f$$1 1 [source_file: testcode]\n                                    NAME f$$1 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        CALL 1 [free_call: 1] [source_file: testcode]\n                            NAME f$$inline_1 1 [source_file: testcode]\n                            NAME f$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME f$$inline_0 1 [source_file: expected0]\n    FUNCTION  1 [source_file: expected0]\n        NAME  1 [source_file: expected0]\n        LP 1 [source_file: expected0]\n            NAME f$$1 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    NAME f$$1 1 [source_file: expected0]\n                    NAME f$$1 1 [source_file: expected0]\n\n\nSubtree2: NAME f$$inline_1 1 [source_file: testcode]\n    FUNCTION  1 [source_file: testcode]\n        NAME  1 [source_file: testcode]\n        LP 1 [source_file: testcode]\n            NAME f$$1 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    NAME f$$1 1 [source_file: testcode]\n                    NAME f$$1 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testFunctionExpressionOmega(InlineFunctionsTest.java:1758)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions15b\njunit.framework.AssertionFailedError:\nExpected: var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_2;JSCompiler_inline_result$$1=function(a$$inline_3){return a$$inline_3+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1\nResult: var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_3;JSCompiler_inline_result$$1=function(a$$inline_4){return a$$inline_4+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                NAME c 1 [source_file: expected0]\n        BLOCK 2 [source_file: expected0]\n            VAR 3 [source_file: expected0]\n                NAME JSCompiler_inline_result$$1 3 [source_file: expected0]\n            VAR 4 [source_file: expected0]\n                NAME x$$inline_2 4 [source_file: expected0]\n            EXPR_RESULT 5 [source_file: expected0]\n                ASSIGN 5 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$1 5 [source_file: expected0]\n                    FUNCTION  5 [source_file: expected0]\n                        NAME  5 [source_file: expected0]\n                        LP 5 [source_file: expected0]\n                            NAME a$$inline_3 5 [source_file: expected0]\n                        BLOCK 5 [source_file: expected0]\n                            RETURN 5 [source_file: expected0]\n                                ADD 5 [source_file: expected0]\n                                    NAME a$$inline_3 5 [source_file: expected0]\n                                    NUMBER 1.0 5 [source_file: expected0]\n        VAR 6 [source_file: expected0]\n            NAME d 6 [source_file: expected0]\n                ADD 6 [source_file: expected0]\n                    NAME JSCompiler_temp_const$$0 6 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$1 6 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME JSCompiler_temp_const$$0 1 [source_file: testcode]\n                NAME c 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_3 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n                    FUNCTION  1 [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                            NAME a$$inline_4 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            RETURN 1 [source_file: testcode]\n                                ADD 1 [source_file: testcode]\n                                    NAME a$$inline_4 1 [source_file: testcode]\n                                    NUMBER 1.0 1 [source_file: testcode]\n        VAR 1 [source_file: testcode]\n            NAME d 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME JSCompiler_temp_const$$0 1 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_2 4 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_3 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions15b(InlineFunctionsTest.java:246)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions15d\njunit.framework.AssertionFailedError:\nExpected: function _x(){var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_2;JSCompiler_inline_result$$1=function(a$$inline_3){return a$$inline_3+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1}\nResult: function _x(){var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_3;JSCompiler_inline_result$$1=function(a$$inline_4){return a$$inline_4+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        FUNCTION _x 1 [source_file: expected0]\n            NAME _x 1 [source_file: expected0]\n            LP 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 2 [source_file: expected0]\n                    NAME JSCompiler_temp_const$$0 2 [source_file: expected0]\n                        NAME c 2 [source_file: expected0]\n                BLOCK 3 [source_file: expected0]\n                    VAR 4 [source_file: expected0]\n                        NAME JSCompiler_inline_result$$1 4 [source_file: expected0]\n                    VAR 5 [source_file: expected0]\n                        NAME x$$inline_2 5 [source_file: expected0]\n                    EXPR_RESULT 6 [source_file: expected0]\n                        ASSIGN 6 [source_file: expected0]\n                            NAME JSCompiler_inline_result$$1 6 [source_file: expected0]\n                            FUNCTION  6 [source_file: expected0]\n                                NAME  6 [source_file: expected0]\n                                LP 6 [source_file: expected0]\n                                    NAME a$$inline_3 6 [source_file: expected0]\n                                BLOCK 6 [source_file: expected0]\n                                    RETURN 6 [source_file: expected0]\n                                        ADD 6 [source_file: expected0]\n                                            NAME a$$inline_3 6 [source_file: expected0]\n                                            NUMBER 1.0 6 [source_file: expected0]\n                VAR 8 [source_file: expected0]\n                    NAME d 8 [source_file: expected0]\n                        ADD 8 [source_file: expected0]\n                            NAME JSCompiler_temp_const$$0 8 [source_file: expected0]\n                            NAME JSCompiler_inline_result$$1 8 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        FUNCTION _x 1 [source_file: testcode]\n            NAME _x 1 [source_file: testcode]\n            LP 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME JSCompiler_temp_const$$0 1 [source_file: testcode]\n                        NAME c 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME x$$inline_3 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n                            FUNCTION  1 [source_file: testcode]\n                                NAME  1 [source_file: testcode]\n                                LP 1 [source_file: testcode]\n                                    NAME a$$inline_4 1 [source_file: testcode]\n                                BLOCK 1 [source_file: testcode]\n                                    RETURN 1 [source_file: testcode]\n                                        ADD 1 [source_file: testcode]\n                                            NAME a$$inline_4 1 [source_file: testcode]\n                                            NUMBER 1.0 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME d 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NAME JSCompiler_temp_const$$0 1 [source_file: testcode]\n                            NAME JSCompiler_inline_result$$1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_2 5 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_3 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions15d(InlineFunctionsTest.java:296)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions16a\njunit.framework.AssertionFailedError:\nExpected: var d;var b$$inline_0=e;d=window.bar(function(){c(b$$inline_0)})\nResult: var d;var b$$inline_1=e;d=window.bar(function(){c(b$$inline_1)})\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME d 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME b$$inline_0 1 [source_file: expected0]\n                    NAME e 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME d 1 [source_file: expected0]\n                    CALL 1 [source_file: expected0]\n                        GETPROP 1 [source_file: expected0]\n                            NAME window 1 [source_file: expected0]\n                            STRING bar 1 [source_file: expected0]\n                        FUNCTION  1 [source_file: expected0]\n                            NAME  1 [source_file: expected0]\n                            LP 1 [source_file: expected0]\n                            BLOCK 1 [source_file: expected0]\n                                EXPR_RESULT 1 [source_file: expected0]\n                                    CALL 1 [free_call: 1] [source_file: expected0]\n                                        NAME c 1 [source_file: expected0]\n                                        NAME b$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME d 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME b$$inline_1 1 [source_file: testcode]\n                    NAME e 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME d 1 [source_file: testcode]\n                    CALL 1 [source_file: testcode]\n                        GETPROP 1 [source_file: testcode]\n                            NAME window 1 [source_file: testcode]\n                            STRING bar 1 [source_file: testcode]\n                        FUNCTION  1 [source_file: testcode]\n                            NAME  1 [source_file: testcode]\n                            LP 1 [source_file: testcode]\n                            BLOCK 1 [source_file: testcode]\n                                EXPR_RESULT 1 [source_file: testcode]\n                                    CALL 1 [free_call: 1] [source_file: testcode]\n                                        NAME c 1 [source_file: testcode]\n                                        NAME b$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME b$$inline_0 1 [source_file: expected0]\n    NAME e 1 [source_file: expected0]\n\n\nSubtree2: NAME b$$inline_1 1 [source_file: testcode]\n    NAME e 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions16a(InlineFunctionsTest.java:320)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testBug4944818\njunit.framework.AssertionFailedError:\nExpected: HangoutStarter.prototype.launchHangout=function(){var self$$2=a.b;var JSCompiler_temp_const$$0=goog.Uri;var JSCompiler_inline_result$$1;var self$$inline_2=self$$2;if(!self$$inline_2.domServices_)self$$inline_2.domServices_=goog$component$DomServices.get(self$$inline_2.appContext_);JSCompiler_inline_result$$1=self$$inline_2.domServices_;var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.getDomHelper().getWindow().location.href)}\nResult: HangoutStarter.prototype.launchHangout=function(){var self$$2=a.b;var JSCompiler_temp_const$$0=goog.Uri;var JSCompiler_inline_result$$1;var self$$inline_3=self$$2;if(!self$$inline_3.domServices_)self$$inline_3.domServices_=goog$component$DomServices.get(self$$inline_3.appContext_);JSCompiler_inline_result$$1=self$$inline_3.domServices_;var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.getDomHelper().getWindow().location.href)}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ASSIGN 1 [source_file: expected0]\n                GETPROP 1 [source_file: expected0]\n                    GETPROP 1 [source_file: expected0]\n                        NAME HangoutStarter 1 [source_file: expected0]\n                        STRING prototype 1 [source_file: expected0]\n                    STRING launchHangout 1 [source_file: expected0]\n                FUNCTION  1 [source_file: expected0]\n                    NAME  1 [source_file: expected0]\n                    LP 1 [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME self$$2 1 [source_file: expected0]\n                                GETPROP 1 [source_file: expected0]\n                                    NAME a 1 [source_file: expected0]\n                                    STRING b 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                                GETPROP 1 [source_file: expected0]\n                                    NAME goog 1 [source_file: expected0]\n                                    STRING Uri 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            VAR 1 [source_file: expected0]\n                                NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                            VAR 1 [source_file: expected0]\n                                NAME self$$inline_2 1 [source_file: expected0]\n                                    NAME self$$2 1 [source_file: expected0]\n                            IF 1 [source_file: expected0]\n                                NOT 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        NAME self$$inline_2 1 [source_file: expected0]\n                                        STRING domServices_ 1 [source_file: expected0]\n                                BLOCK 1 [source_file: expected0]\n                                    EXPR_RESULT 1 [source_file: expected0]\n                                        ASSIGN 1 [source_file: expected0]\n                                            GETPROP 1 [source_file: expected0]\n                                                NAME self$$inline_2 1 [source_file: expected0]\n                                                STRING domServices_ 1 [source_file: expected0]\n                                            CALL 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    NAME goog$component$DomServices 1 [source_file: expected0]\n                                                    STRING get 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    NAME self$$inline_2 1 [source_file: expected0]\n                                                    STRING appContext_ 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        NAME self$$inline_2 1 [source_file: expected0]\n                                        STRING domServices_ 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME myUrl 1 [source_file: expected0]\n                                NEW 1 [source_file: expected0]\n                                    NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            CALL 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    CALL 1 [source_file: expected0]\n                                                        GETPROP 1 [source_file: expected0]\n                                                            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                                                            STRING getDomHelper 1 [source_file: expected0]\n                                                    STRING getWindow 1 [source_file: expected0]\n                                            STRING location 1 [source_file: expected0]\n                                        STRING href 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 13 [source_file: testcode]\n            ASSIGN 13 [source_file: testcode]\n                GETPROP 13 [source_file: testcode]\n                    GETPROP 13 [source_file: testcode]\n                        NAME HangoutStarter 13 [source_file: testcode]\n                        STRING prototype 13 [source_file: testcode]\n                    STRING launchHangout 13 [source_file: testcode]\n                FUNCTION  13 [source_file: testcode]\n                    NAME  13 [source_file: testcode]\n                    LP 13 [source_file: testcode]\n                    BLOCK 13 [source_file: testcode]\n                        VAR 14 [source_file: testcode]\n                            NAME self$$2 14 [source_file: testcode]\n                                GETPROP 14 [source_file: testcode]\n                                    NAME a 14 [source_file: testcode]\n                                    STRING b 14 [source_file: testcode]\n                        VAR 15 [source_file: testcode]\n                            NAME JSCompiler_temp_const$$0 15 [source_file: testcode]\n                                GETPROP 15 [source_file: testcode]\n                                    NAME goog 15 [source_file: testcode]\n                                    STRING Uri 15 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            VAR 10 [source_file: testcode]\n                                NAME JSCompiler_inline_result$$1 10 [source_file: testcode]\n                            VAR 15 [source_file: testcode]\n                                NAME self$$inline_3 15 [source_file: testcode]\n                                    NAME self$$2 15 [source_file: testcode]\n                            IF 2 [source_file: testcode]\n                                NOT 2 [source_file: testcode]\n                                    GETPROP 2 [source_file: testcode]\n                                        NAME self$$inline_3 2 [source_file: testcode]\n                                        STRING domServices_ 2 [source_file: testcode]\n                                BLOCK 2 [source_file: testcode]\n                                    EXPR_RESULT 3 [source_file: testcode]\n                                        ASSIGN 3 [source_file: testcode]\n                                            GETPROP 3 [source_file: testcode]\n                                                NAME self$$inline_3 3 [source_file: testcode]\n                                                STRING domServices_ 3 [source_file: testcode]\n                                            CALL 3 [source_file: testcode]\n                                                GETPROP 3 [source_file: testcode]\n                                                    NAME goog$component$DomServices 3 [source_file: testcode]\n                                                    STRING get 3 [source_file: testcode]\n                                                GETPROP 3 [source_file: testcode]\n                                                    NAME self$$inline_3 3 [source_file: testcode]\n                                                    STRING appContext_ 3 [source_file: testcode]\n                            EXPR_RESULT 6 [source_file: testcode]\n                                ASSIGN 6 [source_file: testcode]\n                                    NAME JSCompiler_inline_result$$1 6 [source_file: testcode]\n                                    GETPROP 6 [source_file: testcode]\n                                        NAME self$$inline_3 6 [source_file: testcode]\n                                        STRING domServices_ 6 [source_file: testcode]\n                        VAR 15 [source_file: testcode]\n                            NAME myUrl 15 [source_file: testcode]\n                                NEW 15 [source_file: testcode]\n                                    NAME JSCompiler_temp_const$$0 15 [source_file: testcode]\n                                    GETPROP 15 [source_file: testcode]\n                                        GETPROP 15 [source_file: testcode]\n                                            CALL 10 [source_file: testcode]\n                                                GETPROP 10 [source_file: testcode]\n                                                    CALL 10 [source_file: testcode]\n                                                        GETPROP 10 [source_file: testcode]\n                                                            NAME JSCompiler_inline_result$$1 10 [source_file: testcode]\n                                                            STRING getDomHelper 10 [source_file: testcode]\n                                                    STRING getWindow 10 [source_file: testcode]\n                                            STRING location 15 [source_file: testcode]\n                                        STRING href 15 [source_file: testcode]\n\n\nSubtree1: NAME self$$inline_2 1 [source_file: expected0]\n    NAME self$$2 1 [source_file: expected0]\n\n\nSubtree2: NAME self$$inline_3 15 [source_file: testcode]\n    NAME self$$2 15 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testBug4944818(InlineFunctionsTest.java:2077)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexSample\njunit.framework.AssertionFailedError:\nExpected: var styleSheet$$inline_2=null;if(goog$userAgent$IE)styleSheet$$inline_2=0;else var head$$inline_3=0;var element$$inline_4=styleSheet$$inline_2;var stylesString$$inline_5=a;if(goog$userAgent$IE)element$$inline_4.cssText=stylesString$$inline_5;else{var propToSet$$inline_6=\"innerText\";element$$inline_4[propToSet$$inline_6]=stylesString$$inline_5}styleSheet$$inline_2\nResult: var styleSheet$$inline_9=null;if(goog$userAgent$IE)styleSheet$$inline_9=0;else var head$$inline_10=0;var element$$inline_11=styleSheet$$inline_9;var stylesString$$inline_12=a;if(goog$userAgent$IE)element$$inline_11.cssText=stylesString$$inline_12;else{var propToSet$$inline_13=\"innerText\";element$$inline_11[propToSet$$inline_13]=stylesString$$inline_12}styleSheet$$inline_9\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME styleSheet$$inline_2 1 [source_file: expected0]\n                        NULL 1 [source_file: expected0]\n                IF 1 [source_file: expected0]\n                    NAME goog$userAgent$IE 1 [is_constant_name: 1] [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        EXPR_RESULT 1 [source_file: expected0]\n                            ASSIGN 1 [source_file: expected0]\n                                NAME styleSheet$$inline_2 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME head$$inline_3 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME element$$inline_4 1 [source_file: expected0]\n                            NAME styleSheet$$inline_2 1 [source_file: expected0]\n                    VAR 1 [source_file: expected0]\n                        NAME stylesString$$inline_5 1 [source_file: expected0]\n                            NAME a 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        NAME goog$userAgent$IE 1 [is_constant_name: 1] [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        NAME element$$inline_4 1 [source_file: expected0]\n                                        STRING cssText 1 [source_file: expected0]\n                                    NAME stylesString$$inline_5 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            VAR 1 [source_file: expected0]\n                                NAME propToSet$$inline_6 1 [source_file: expected0]\n                                    STRING innerText 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    GETELEM 1 [source_file: expected0]\n                                        NAME element$$inline_4 1 [source_file: expected0]\n                                        NAME propToSet$$inline_6 1 [source_file: expected0]\n                                    NAME stylesString$$inline_5 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    NAME styleSheet$$inline_2 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 2 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME styleSheet$$inline_9 1 [source_file: testcode]\n                        NULL 1 [source_file: testcode]\n                IF 1 [source_file: testcode]\n                    NAME goog$userAgent$IE 1 [is_constant_name: 1] [source_file: testcode]\n                    BLOCK 1 [source_file: testcode]\n                        EXPR_RESULT 1 [source_file: testcode]\n                            ASSIGN 1 [source_file: testcode]\n                                NAME styleSheet$$inline_9 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n                    BLOCK 1 [source_file: testcode]\n                        VAR 1 [source_file: testcode]\n                            NAME head$$inline_10 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n                BLOCK 2 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME element$$inline_11 1 [source_file: testcode]\n                            NAME styleSheet$$inline_9 1 [source_file: testcode]\n                    VAR 1 [source_file: testcode]\n                        NAME stylesString$$inline_12 1 [source_file: testcode]\n                            NAME a 2 [source_file: testcode]\n                    IF 2 [source_file: testcode]\n                        NAME goog$userAgent$IE 2 [is_constant_name: 1] [source_file: testcode]\n                        BLOCK 2 [source_file: testcode]\n                            EXPR_RESULT 2 [source_file: testcode]\n                                ASSIGN 2 [source_file: testcode]\n                                    GETPROP 2 [source_file: testcode]\n                                        NAME element$$inline_11 2 [source_file: testcode]\n                                        STRING cssText 2 [source_file: testcode]\n                                    NAME stylesString$$inline_12 2 [source_file: testcode]\n                        BLOCK 2 [source_file: testcode]\n                            VAR 2 [source_file: testcode]\n                                NAME propToSet$$inline_13 2 [source_file: testcode]\n                                    STRING innerText 2 [source_file: testcode]\n                            EXPR_RESULT 2 [source_file: testcode]\n                                ASSIGN 2 [source_file: testcode]\n                                    GETELEM 2 [source_file: testcode]\n                                        NAME element$$inline_11 2 [source_file: testcode]\n                                        NAME propToSet$$inline_13 2 [source_file: testcode]\n                                    NAME stylesString$$inline_12 2 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    NAME styleSheet$$inline_9 1 [source_file: testcode]\n\n\nSubtree1: NAME styleSheet$$inline_2 1 [source_file: expected0]\n    NULL 1 [source_file: expected0]\n\n\nSubtree2: NAME styleSheet$$inline_9 1 [source_file: testcode]\n    NULL 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexSample(InlineFunctionsTest.java:1418)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified1\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=undefined;x$$inline_0=1\nResult: var x$$inline_1=undefined;x$$inline_1=1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NAME undefined 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NAME undefined 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NAME undefined 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NAME undefined 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified1(InlineFunctionsTest.java:549)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified2\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=2;x$$inline_0=1\nResult: var x$$inline_1=2;x$$inline_1=1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [parenthesized: true] [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified2(InlineFunctionsTest.java:555)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified3\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=2;x$$inline_0*=2\nResult: var x$$inline_1=2;x$$inline_1*=2\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN_MUL 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN_MUL 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified3(InlineFunctionsTest.java:562)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified4\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=2;x$$inline_0?x$$inline_0=2:0\nResult: var x$$inline_1=2;x$$inline_1?x$$inline_1=2:0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                HOOK 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    ASSIGN 1 [parenthesized: true] [source_file: expected0]\n                        NAME x$$inline_0 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                HOOK 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    ASSIGN 1 [parenthesized: true] [source_file: testcode]\n                        NAME x$$inline_1 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                    NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified4(InlineFunctionsTest.java:569)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified5\njunit.framework.AssertionFailedError:\nExpected: var y$$inline_1=undefined;2?y$$inline_1=2:0\nResult: var y$$inline_3=undefined;2?y$$inline_3=2:0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME y$$inline_1 1 [source_file: expected0]\n                    NAME undefined 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                HOOK 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n                    ASSIGN 1 [parenthesized: true] [source_file: expected0]\n                        NAME y$$inline_1 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME y$$inline_3 1 [source_file: testcode]\n                    NAME undefined 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                HOOK 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n                    ASSIGN 1 [parenthesized: true] [source_file: testcode]\n                        NAME y$$inline_3 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                    NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: NAME y$$inline_1 1 [source_file: expected0]\n    NAME undefined 1 [source_file: expected0]\n\n\nSubtree2: NAME y$$inline_3 1 [source_file: testcode]\n    NAME undefined 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified5(InlineFunctionsTest.java:577)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified6\njunit.framework.AssertionFailedError:\nExpected: var y$$inline_1=void 0;2?y$$inline_1=2:0\nResult: var y$$inline_3=void 0;2?y$$inline_3=2:0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME y$$inline_1 1 [source_file: expected0]\n                    VOID 1 [source_file: expected0]\n                        NUMBER 0.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                HOOK 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n                    ASSIGN 1 [parenthesized: true] [source_file: expected0]\n                        NAME y$$inline_1 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME y$$inline_3 1 [source_file: testcode]\n                    VOID 1 [source_file: testcode]\n                        NUMBER 0.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                HOOK 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n                    ASSIGN 1 [parenthesized: true] [source_file: testcode]\n                        NAME y$$inline_3 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n                    NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: NAME y$$inline_1 1 [source_file: expected0]\n    VOID 1 [source_file: expected0]\n        NUMBER 0.0 1 [source_file: expected0]\n\n\nSubtree2: NAME y$$inline_3 1 [source_file: testcode]\n    VOID 1 [source_file: testcode]\n        NUMBER 0.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified6(InlineFunctionsTest.java:583)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testNoInlineIfParametersModified7\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=1;++a$$inline_0<++a$$inline_0\nResult: var a$$inline_1=1;++a$$inline_1<++a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                LT 1 [source_file: expected0]\n                    INC 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                    INC 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                LT 1 [source_file: testcode]\n                    INC 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                    INC 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified7(InlineFunctionsTest.java:590)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testIssue423\njunit.framework.AssertionFailedError:\nExpected: var $$$inline_0=jQuery;$$$inline_0.fn.multicheck=function(options$$inline_4){options$$inline_4.checkboxes=$$$inline_0(this).siblings(\":checkbox\");$$$inline_0(this).data(\"checkboxes\")}\nResult: var $$$inline_3=jQuery;$$$inline_3.fn.multicheck=function(options$$inline_7){options$$inline_7.checkboxes=$$$inline_3(this).siblings(\":checkbox\");$$$inline_3(this).data(\"checkboxes\")}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME $$$inline_0 1 [source_file: expected0]\n                    NAME jQuery 1 [source_file: expected0]\n            EXPR_RESULT 2 [source_file: expected0]\n                ASSIGN 2 [source_file: expected0]\n                    GETPROP 2 [source_file: expected0]\n                        GETPROP 2 [source_file: expected0]\n                            NAME $$$inline_0 2 [source_file: expected0]\n                            STRING fn 2 [source_file: expected0]\n                        STRING multicheck 2 [source_file: expected0]\n                    FUNCTION  2 [source_file: expected0]\n                        NAME  2 [source_file: expected0]\n                        LP 2 [source_file: expected0]\n                            NAME options$$inline_4 2 [source_file: expected0]\n                        BLOCK 2 [source_file: expected0]\n                            BLOCK 3 [source_file: expected0]\n                                EXPR_RESULT 3 [source_file: expected0]\n                                    ASSIGN 3 [source_file: expected0]\n                                        GETPROP 3 [source_file: expected0]\n                                            NAME options$$inline_4 3 [source_file: expected0]\n                                            STRING checkboxes 3 [source_file: expected0]\n                                        CALL 3 [source_file: expected0]\n                                            GETPROP 3 [source_file: expected0]\n                                                CALL 3 [free_call: 1] [source_file: expected0]\n                                                    NAME $$$inline_0 3 [source_file: expected0]\n                                                    THIS 3 [source_file: expected0]\n                                                STRING siblings 3 [source_file: expected0]\n                                            STRING :checkbox 3 [source_file: expected0]\n                                BLOCK 4 [source_file: expected0]\n                                    EXPR_RESULT 4 [source_file: expected0]\n                                        CALL 4 [source_file: expected0]\n                                            GETPROP 4 [source_file: expected0]\n                                                CALL 4 [free_call: 1] [source_file: expected0]\n                                                    NAME $$$inline_0 4 [source_file: expected0]\n                                                    THIS 4 [source_file: expected0]\n                                                STRING data 4 [source_file: expected0]\n                                            STRING checkboxes 4 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 14 [source_file: testcode]\n                NAME $$$inline_3 14 [source_file: testcode]\n                    NAME jQuery 14 [source_file: testcode]\n            EXPR_RESULT 2 [source_file: testcode]\n                ASSIGN 2 [source_file: testcode]\n                    GETPROP 2 [source_file: testcode]\n                        GETPROP 2 [source_file: testcode]\n                            NAME $$$inline_3 2 [source_file: testcode]\n                            STRING fn 2 [source_file: testcode]\n                        STRING multicheck 2 [source_file: testcode]\n                    FUNCTION  2 [source_file: testcode]\n                        NAME  2 [source_file: testcode]\n                        LP 2 [source_file: testcode]\n                            NAME options$$inline_7 2 [source_file: testcode]\n                        BLOCK 2 [source_file: testcode]\n                            BLOCK 6 [source_file: testcode]\n                                EXPR_RESULT 7 [source_file: testcode]\n                                    ASSIGN 7 [source_file: testcode]\n                                        GETPROP 7 [source_file: testcode]\n                                            NAME options$$inline_7 3 [source_file: testcode]\n                                            STRING checkboxes 7 [source_file: testcode]\n                                        CALL 7 [source_file: testcode]\n                                            GETPROP 7 [source_file: testcode]\n                                                CALL 7 [free_call: 1] [source_file: testcode]\n                                                    NAME $$$inline_3 7 [source_file: testcode]\n                                                    THIS 7 [source_file: testcode]\n                                                STRING siblings 7 [source_file: testcode]\n                                            STRING :checkbox 7 [source_file: testcode]\n                                BLOCK 11 [source_file: testcode]\n                                    EXPR_RESULT 12 [source_file: testcode]\n                                        CALL 12 [source_file: testcode]\n                                            GETPROP 12 [source_file: testcode]\n                                                CALL 12 [free_call: 1] [source_file: testcode]\n                                                    NAME $$$inline_3 12 [source_file: testcode]\n                                                    THIS 12 [source_file: testcode]\n                                                STRING data 12 [source_file: testcode]\n                                            STRING checkboxes 12 [source_file: testcode]\n\n\nSubtree1: NAME $$$inline_0 1 [source_file: expected0]\n    NAME jQuery 1 [source_file: expected0]\n\n\nSubtree2: NAME $$$inline_3 14 [source_file: testcode]\n    NAME jQuery 14 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testIssue423(InlineFunctionsTest.java:2142)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexFunctionWithFunctionDefinition2\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=void 0;call(function(){return a$$inline_0})\nResult: var a$$inline_1=void 0;call(function(){return a$$inline_1})\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            BLOCK 1 [source_file: expected0]\n                VAR 1 [source_file: expected0]\n                    NAME a$$inline_0 1 [source_file: expected0]\n                        VOID 1 [source_file: expected0]\n                            NUMBER 0.0 1 [source_file: expected0]\n                EXPR_RESULT 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME call 1 [source_file: expected0]\n                        FUNCTION  1 [source_file: expected0]\n                            NAME  1 [source_file: expected0]\n                            LP 1 [source_file: expected0]\n                            BLOCK 1 [source_file: expected0]\n                                RETURN 1 [source_file: expected0]\n                                    NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            BLOCK 1 [source_file: testcode]\n                VAR 1 [source_file: testcode]\n                    NAME a$$inline_1 1 [source_file: testcode]\n                        VOID 1 [source_file: testcode]\n                            NUMBER 0.0 1 [source_file: testcode]\n                EXPR_RESULT 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME call 1 [source_file: testcode]\n                        FUNCTION  1 [source_file: testcode]\n                            NAME  1 [source_file: testcode]\n                            LP 1 [source_file: testcode]\n                            BLOCK 1 [source_file: testcode]\n                                RETURN 1 [source_file: testcode]\n                                    NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    VOID 1 [source_file: expected0]\n        NUMBER 0.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    VOID 1 [source_file: testcode]\n        NUMBER 0.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexFunctionWithFunctionDefinition2(InlineFunctionsTest.java:1511)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testComplexFunctionWithFunctionDefinition3\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0;call(function(){return a$$inline_0})\nResult: var a$$inline_1;call(function(){return a$$inline_1})\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    NAME call 1 [source_file: expected0]\n                    FUNCTION  1 [source_file: expected0]\n                        NAME  1 [source_file: expected0]\n                        LP 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            RETURN 1 [source_file: expected0]\n                                NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    NAME call 1 [source_file: testcode]\n                    FUNCTION  1 [source_file: testcode]\n                        NAME  1 [source_file: testcode]\n                        LP 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            RETURN 1 [source_file: testcode]\n                                NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testComplexFunctionWithFunctionDefinition3(InlineFunctionsTest.java:1538)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testDecomposeFunctionExpressionInCall\njunit.framework.AssertionFailedError:\nExpected: var JSCompiler_inline_result$$0;var ret$$inline_1={};ret$$inline_1[ONE]=\"a\";ret$$inline_1[TWO]=\"b\";JSCompiler_inline_result$$0=ret$$inline_1;descriptions_=JSCompiler_inline_result$$0\nResult: var JSCompiler_inline_result$$0;var ret$$inline_2={};ret$$inline_2[ONE]=\"a\";ret$$inline_2[TWO]=\"b\";JSCompiler_inline_result$$0=ret$$inline_2;descriptions_=JSCompiler_inline_result$$0\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME ret$$inline_1 1 [source_file: expected0]\n                    OBJECTLIT 1 [source_file: expected0]\n            EXPR_RESULT 2 [source_file: expected0]\n                ASSIGN 2 [source_file: expected0]\n                    GETELEM 2 [source_file: expected0]\n                        NAME ret$$inline_1 2 [source_file: expected0]\n                        NAME ONE 2 [is_constant_name: 1] [source_file: expected0]\n                    STRING a 2 [source_file: expected0]\n            EXPR_RESULT 3 [source_file: expected0]\n                ASSIGN 3 [source_file: expected0]\n                    GETELEM 3 [source_file: expected0]\n                        NAME ret$$inline_1 3 [source_file: expected0]\n                        NAME TWO 3 [is_constant_name: 1] [source_file: expected0]\n                    STRING b 3 [source_file: expected0]\n            EXPR_RESULT 4 [source_file: expected0]\n                ASSIGN 4 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$0 4 [source_file: expected0]\n                    NAME ret$$inline_1 4 [source_file: expected0]\n        BLOCK 5 [source_file: expected0]\n            EXPR_RESULT 5 [source_file: expected0]\n                ASSIGN 5 [source_file: expected0]\n                    NAME descriptions_ 5 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$0 5 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 2 [source_file: testcode]\n            VAR 7 [source_file: testcode]\n                NAME JSCompiler_inline_result$$0 7 [source_file: testcode]\n            VAR 3 [source_file: testcode]\n                NAME ret$$inline_2 3 [source_file: testcode]\n                    OBJECTLIT 3 [source_file: testcode]\n            EXPR_RESULT 4 [source_file: testcode]\n                ASSIGN 4 [source_file: testcode]\n                    GETELEM 4 [source_file: testcode]\n                        NAME ret$$inline_2 4 [source_file: testcode]\n                        NAME ONE 4 [is_constant_name: 1] [source_file: testcode]\n                    STRING a 4 [source_file: testcode]\n            EXPR_RESULT 5 [source_file: testcode]\n                ASSIGN 5 [source_file: testcode]\n                    GETELEM 5 [source_file: testcode]\n                        NAME ret$$inline_2 5 [source_file: testcode]\n                        NAME TWO 5 [is_constant_name: 1] [source_file: testcode]\n                    STRING b 5 [source_file: testcode]\n            EXPR_RESULT 6 [source_file: testcode]\n                ASSIGN 6 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$0 6 [source_file: testcode]\n                    NAME ret$$inline_2 6 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME descriptions_ 1 [source_file: testcode]\n                    NAME JSCompiler_inline_result$$0 7 [source_file: testcode]\n\n\nSubtree1: NAME ret$$inline_1 1 [source_file: expected0]\n    OBJECTLIT 1 [source_file: expected0]\n\n\nSubtree2: NAME ret$$inline_2 3 [source_file: testcode]\n    OBJECTLIT 3 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testDecomposeFunctionExpressionInCall(InlineFunctionsTest.java:1553)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineNeverOverrideNewValues\njunit.framework.AssertionFailedError:\nExpected: var a$$inline_0=1;++a$$inline_0<++a$$inline_0\nResult: var a$$inline_1=1;++a$$inline_1<++a$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME a$$inline_0 1 [source_file: expected0]\n                    NUMBER 1.0 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                LT 1 [source_file: expected0]\n                    INC 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n                    INC 1 [source_file: expected0]\n                        NAME a$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME a$$inline_1 1 [source_file: testcode]\n                    NUMBER 1.0 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                LT 1 [source_file: testcode]\n                    INC 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n                    INC 1 [source_file: testcode]\n                        NAME a$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME a$$inline_0 1 [source_file: expected0]\n    NUMBER 1.0 1 [source_file: expected0]\n\n\nSubtree2: NAME a$$inline_1 1 [source_file: testcode]\n    NUMBER 1.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineNeverOverrideNewValues(InlineFunctionsTest.java:623)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineBlockMutableArgs1\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=[];x$$inline_0+x$$inline_0\nResult: var x$$inline_1=[];x$$inline_1+x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    ARRAYLIT 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    ARRAYLIT 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    ARRAYLIT 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    ARRAYLIT 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs1(InlineFunctionsTest.java:653)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineBlockMutableArgs2\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=new Date;x$$inline_0+x$$inline_0\nResult: var x$$inline_1=new Date;x$$inline_1+x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NEW 1 [source_file: expected0]\n                        NAME Date 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NEW 1 [source_file: testcode]\n                        NAME Date 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NEW 1 [source_file: expected0]\n        NAME Date 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NEW 1 [source_file: testcode]\n        NAME Date 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs2(InlineFunctionsTest.java:659)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineBlockMutableArgs3\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0=true&&new Date;x$$inline_0+x$$inline_0\nResult: var x$$inline_1=true&&new Date;x$$inline_1+x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    AND 1 [source_file: expected0]\n                        TRUE 1 [source_file: expected0]\n                        NEW 1 [source_file: expected0]\n                            NAME Date 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    AND 1 [source_file: testcode]\n                        TRUE 1 [source_file: testcode]\n                        NEW 1 [source_file: testcode]\n                            NAME Date 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    AND 1 [source_file: expected0]\n        TRUE 1 [source_file: expected0]\n        NEW 1 [source_file: expected0]\n            NAME Date 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    AND 1 [source_file: testcode]\n        TRUE 1 [source_file: testcode]\n        NEW 1 [source_file: testcode]\n            NAME Date 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs3(InlineFunctionsTest.java:665)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineBlockMutableArgs4\njunit.framework.AssertionFailedError:\nExpected: var x$$inline_0={};x$$inline_0+x$$inline_0\nResult: var x$$inline_1={};x$$inline_1+x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    OBJECTLIT 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    OBJECTLIT 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    OBJECTLIT 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    OBJECTLIT 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs4(InlineFunctionsTest.java:671)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions10\njunit.framework.AssertionFailedError:\nExpected: var y;var x$$inline_0=i;y=x$$inline_0++;var x$$inline_2=i;y=x$$inline_2++\nResult: var y;var x$$inline_1=i;y=x$$inline_1++;var x$$inline_4=i;y=x$$inline_4++\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME y 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NAME i 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME y 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME x$$inline_0 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_2 1 [source_file: expected0]\n                    NAME i 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME y 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME x$$inline_2 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME y 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NAME i 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME y 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME x$$inline_1 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_4 1 [source_file: testcode]\n                    NAME i 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME y 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME x$$inline_4 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NAME i 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NAME i 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions10(InlineFunctionsTest.java:183)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions13\njunit.framework.AssertionFailedError:\nExpected: var y;var x$$inline_0=i++;y=x$$inline_0\nResult: var y;var x$$inline_1=i++;y=x$$inline_1\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME y 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME i 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME y 1 [source_file: expected0]\n                    NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME y 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME i 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME y 1 [source_file: testcode]\n                    NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    INC 1 [incrdecr: 1] [source_file: expected0]\n        NAME i 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    INC 1 [incrdecr: 1] [source_file: testcode]\n        NAME i 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions13(InlineFunctionsTest.java:210)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions22\njunit.framework.AssertionFailedError:\nExpected: var d;JSCompiler_inline_label_plex_1:{if(1+2){d=0;break JSCompiler_inline_label_plex_1}else{d=1;break JSCompiler_inline_label_plex_1}d=void 0}\nResult: var d;JSCompiler_inline_label_plex_2:{if(1+2){d=0;break JSCompiler_inline_label_plex_2}else{d=1;break JSCompiler_inline_label_plex_2}d=void 0}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME d 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            LABEL 1 [source_file: expected0]\n                LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME d 1 [source_file: expected0]\n                                    NUMBER 0.0 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME d 1 [source_file: expected0]\n                                    NUMBER 1.0 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME d 1 [source_file: expected0]\n                            VOID 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME d 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            LABEL 1 [source_file: testcode]\n                LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    IF 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME d 1 [source_file: testcode]\n                                    NUMBER 0.0 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME d 1 [source_file: testcode]\n                                    NUMBER 1.0 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME d 1 [source_file: testcode]\n                            VOID 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions22(InlineFunctionsTest.java:375)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions23\njunit.framework.AssertionFailedError:\nExpected: var d;JSCompiler_inline_label_complex_1:{if(1+2){d=0;break JSCompiler_inline_label_complex_1}else{d=1;break JSCompiler_inline_label_complex_1}d=void 0}\nResult: var d;JSCompiler_inline_label_complex_2:{if(1+2){d=0;break JSCompiler_inline_label_complex_2}else{d=1;break JSCompiler_inline_label_complex_2}d=void 0}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME d 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            LABEL 1 [source_file: expected0]\n                LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0]\n                BLOCK 1 [source_file: expected0]\n                    IF 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME d 1 [source_file: expected0]\n                                    NUMBER 0.0 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME d 1 [source_file: expected0]\n                                    NUMBER 1.0 1 [source_file: expected0]\n                            BREAK 1 [source_file: expected0]\n                                LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0]\n                    EXPR_RESULT 1 [source_file: expected0]\n                        ASSIGN 1 [source_file: expected0]\n                            NAME d 1 [source_file: expected0]\n                            VOID 1 [source_file: expected0]\n                                NUMBER 0.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME d 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            LABEL 1 [source_file: testcode]\n                LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode]\n                BLOCK 1 [source_file: testcode]\n                    IF 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME d 1 [source_file: testcode]\n                                    NUMBER 0.0 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            EXPR_RESULT 1 [source_file: testcode]\n                                ASSIGN 1 [source_file: testcode]\n                                    NAME d 1 [source_file: testcode]\n                                    NUMBER 1.0 1 [source_file: testcode]\n                            BREAK 1 [source_file: testcode]\n                                LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode]\n                    EXPR_RESULT 1 [source_file: testcode]\n                        ASSIGN 1 [source_file: testcode]\n                            NAME d 1 [source_file: testcode]\n                            VOID 1 [source_file: testcode]\n                                NUMBER 0.0 1 [source_file: testcode]\n\n\nSubtree1: LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0]\n\n\nSubtree2: LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions23(InlineFunctionsTest.java:389)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions9\njunit.framework.AssertionFailedError:\nExpected: var y;var x$$inline_0=i;y=x$$inline_0++\nResult: var y;var x$$inline_1=i;y=x$$inline_1++\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME y 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME x$$inline_0 1 [source_file: expected0]\n                    NAME i 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME y 1 [source_file: expected0]\n                    INC 1 [incrdecr: 1] [source_file: expected0]\n                        NAME x$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME y 1 [source_file: testcode]\n        BLOCK 1 [source_file: testcode]\n            VAR 1 [source_file: testcode]\n                NAME x$$inline_1 1 [source_file: testcode]\n                    NAME i 1 [source_file: testcode]\n            EXPR_RESULT 1 [source_file: testcode]\n                ASSIGN 1 [source_file: testcode]\n                    NAME y 1 [source_file: testcode]\n                    INC 1 [incrdecr: 1] [source_file: testcode]\n                        NAME x$$inline_1 1 [source_file: testcode]\n\n\nSubtree1: NAME x$$inline_0 1 [source_file: expected0]\n    NAME i 1 [source_file: expected0]\n\n\nSubtree2: NAME x$$inline_1 1 [source_file: testcode]\n    NAME i 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions9(InlineFunctionsTest.java:176)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.MakeDeclaredNamesUniqueTest::testMakeLocalNamesUniqueWithContext5\njunit.framework.AssertionFailedError:\nExpected: var fn=function f(){var f$$1;f$$1=1}\nResult: var fn=function f$$1(){var f$$1;f$$1=1}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME fn 1 [source_file: expected0]\n                FUNCTION f 1 [source_file: expected0]\n                    NAME f 1 [source_file: expected0]\n                    LP 1 [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME f$$1 1 [source_file: expected0]\n                        EXPR_RESULT 1 [source_file: expected0]\n                            ASSIGN 1 [source_file: expected0]\n                                NAME f$$1 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME fn 1 [source_file: testcode]\n                FUNCTION f$$1 1 [source_file: testcode]\n                    NAME f$$1 1 [source_file: testcode]\n                    LP 1 [source_file: testcode]\n                    BLOCK 1 [source_file: testcode]\n                        VAR 1 [source_file: testcode]\n                            NAME f$$1 1 [source_file: testcode]\n                        EXPR_RESULT 1 [source_file: testcode]\n                            ASSIGN 1 [source_file: testcode]\n                                NAME f$$1 1 [source_file: testcode]\n                                NUMBER 1.0 1 [source_file: testcode]\n\n\nSubtree1: NAME f 1 [source_file: expected0]\n\n\nSubtree2: NAME f$$1 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)\n\tat com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest.testMakeLocalNamesUniqueWithContext5(MakeDeclaredNamesUniqueTest.java:222)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n\n\nfailure assertion code:\nhelperInlineReferenceToFunction(\n\n\nThere is a bug in the above code, please help me locate it by considering the stack trace information and failure assertion code.\n\nOutput **only** the exact buggy statement, with no line numbers, explanations, or additional content. Your response should contain just the buggy code line. Do not include ```java or ``` markers in the response.\n",
        "prompt_apr_1": "\n@Override\n  public void enterScope(NodeTraversal t) {\n    Node declarationRoot = t.getScopeRoot();\n    Renamer renamer;\n    if (nameStack.isEmpty()) {\n      // If the contextual renamer is being used the starting context can not\n      // be a function.\n      Preconditions.checkState(\n          declarationRoot.getType() != Token.FUNCTION ||\n          !(rootRenamer instanceof ContextualRenamer));\n      Preconditions.checkState(t.inGlobalScope());\n      renamer = rootRenamer;\n    } else {\n      renamer = nameStack.peek().forChildScope();\n    }\n\n    if (declarationRoot.getType() == Token.FUNCTION) {\n      for (Node c = declarationRoot.getFirstChild().getNext().getFirstChild(); c != null; c = c.getNext()) {\n        String name = c.getString();\n        renamer.addDeclaredName(name);\n      }\n      Node functionBody = declarationRoot.getLastChild();\n      findDeclaredNames(functionBody, null, renamer);\n    }  else \n    if (declarationRoot.getType() != Token.FUNCTION) {\n      // Add the block declarations\n      findDeclaredNames(declarationRoot, null, renamer);\n    }\n    nameStack.push(renamer);\n  }\n\nThere is a bug in line [17, 18, 19, 20, 21, 22, 23, 24] of the code, please help me fix it.\n\nPlease return the **complete corrected method**. Do not skip or omit any part of the code. Do not include ```java or ``` markers in the response.\n",
        "prompt_apr_2": "\n@Override\n  public void enterScope(NodeTraversal t) {\n    Node declarationRoot = t.getScopeRoot();\n    Renamer renamer;\n    if (nameStack.isEmpty()) {\n      // If the contextual renamer is being used the starting context can not\n      // be a function.\n      Preconditions.checkState(\n          declarationRoot.getType() != Token.FUNCTION ||\n          !(rootRenamer instanceof ContextualRenamer));\n      Preconditions.checkState(t.inGlobalScope());\n      renamer = rootRenamer;\n    } else {\n      renamer = nameStack.peek().forChildScope();\n    }\n\n    if (declarationRoot.getType() == Token.FUNCTION) {\n      for (Node c = declarationRoot.getFirstChild().getNext().getFirstChild(); c != null; c = c.getNext()) {\n        String name = c.getString();\n        renamer.addDeclaredName(name);\n      }\n      Node functionBody = declarationRoot.getLastChild();\n      findDeclaredNames(functionBody, null, renamer);\n    }  else \n    if (declarationRoot.getType() != Token.FUNCTION) {\n      // Add the block declarations\n      findDeclaredNames(declarationRoot, null, renamer);\n    }\n    nameStack.push(renamer);\n  }\n\nThere is a bug in ['    if (declarationRoot.getType() == Token.FUNCTION) {', '      for (Node c = declarationRoot.getFirstChild().getNext().getFirstChild(); c != null; c = c.getNext()) {', '        String name = c.getString();', '        renamer.addDeclaredName(name);', '      }', '      Node functionBody = declarationRoot.getLastChild();', '      findDeclaredNames(functionBody, null, renamer);', '    }  else '] , please help me fix it. \n\nPlease return the **complete corrected method**. Do not skip or omit any part of the code. Do not include ```java or ``` markers in the response.\n",
        "prompt_apr_3": "\n@Override\n  public void enterScope(NodeTraversal t) {\n    Node declarationRoot = t.getScopeRoot();\n    Renamer renamer;\n    if (nameStack.isEmpty()) {\n      // If the contextual renamer is being used the starting context can not\n      // be a function.\n      Preconditions.checkState(\n          declarationRoot.getType() != Token.FUNCTION ||\n          !(rootRenamer instanceof ContextualRenamer));\n      Preconditions.checkState(t.inGlobalScope());\n      renamer = rootRenamer;\n    } else {\n      renamer = nameStack.peek().forChildScope();\n    }\n\n    if (declarationRoot.getType() == Token.FUNCTION) {\n      for (Node c = declarationRoot.getFirstChild().getNext().getFirstChild(); c != null; c = c.getNext()) {\n        String name = c.getString();\n        renamer.addDeclaredName(name);\n      }\n      Node functionBody = declarationRoot.getLastChild();\n      findDeclaredNames(functionBody, null, renamer);\n    }  else \n\nThere is a bug in the last statement, please help me fix it.\n\nReturn the code **only from the method declaration to the fixed statement**, without completing or adding additional code. Do not modify anything beyond fixing the bug, and do not complete the `if` statement or other unfinished parts. Do not include ```java or ``` markers in the response.\n",
        "prompt_apr_4": "\n@Override\n  public void enterScope(NodeTraversal t) {\n    Node declarationRoot = t.getScopeRoot();\n    Renamer renamer;\n    if (nameStack.isEmpty()) {\n      // If the contextual renamer is being used the starting context can not\n      // be a function.\n      Preconditions.checkState(\n          declarationRoot.getType() != Token.FUNCTION ||\n          !(rootRenamer instanceof ContextualRenamer));\n      Preconditions.checkState(t.inGlobalScope());\n      renamer = rootRenamer;\n    } else {\n      renamer = nameStack.peek().forChildScope();\n    }\n\n    if (declarationRoot.getType() == Token.FUNCTION) {\n      for (Node c = declarationRoot.getFirstChild().getNext().getFirstChild(); c != null; c = c.getNext()) {\n        String name = c.getString();\n        renamer.addDeclaredName(name);\n      }\n      Node functionBody = declarationRoot.getLastChild();\n      findDeclaredNames(functionBody, null, renamer);\n    }  else \n    if (declarationRoot.getType() != Token.FUNCTION) {\n      // Add the block declarations\n      findDeclaredNames(declarationRoot, null, renamer);\n    }\n    nameStack.push(renamer);\n  }\n\nThere is a bug in line [17, 18, 19, 20, 21, 22, 23, 24] of the code, please help me fix it.\n\nPlease return the results in a strict JSON format as described below. Please follow these instructions carefully:\n1. Your output must include each repaired line's number (`line_number`) and the corresponding fixed code statement (`fixed_statement`).\n2. The output format must be a valid JSON array, where each element represents one repaired line, with the following structure:\n   - `\"line_number\"`: The line number of the buggy code that was repaired (integer).\n   - `\"fixed_statement\"`: The repaired statement for that specific line (string).\n\n3. The result must strictly follow this format:\n[\n    {\n        \"line_number\": int,\n        \"fixed_statement\": \"string\"\n    },\n    {\n        \"line_number\": int,\n        \"fixed_statement\": \"string\"\n    }\n]\n4. The repaired statement in \"fixed_statement\" must replace the corresponding line in the buggy code.\n5. You must NOT include any additional explanation or description in your response. Only return the JSON array. Do not include ```json or ``` markers in the response.\n",
        "prompt_apr_5": "\n@Override\n  public void enterScope(NodeTraversal t) {\n    Node declarationRoot = t.getScopeRoot();\n    Renamer renamer;\n    if (nameStack.isEmpty()) {\n      // If the contextual renamer is being used the starting context can not\n      // be a function.\n      Preconditions.checkState(\n          declarationRoot.getType() != Token.FUNCTION ||\n          !(rootRenamer instanceof ContextualRenamer));\n      Preconditions.checkState(t.inGlobalScope());\n      renamer = rootRenamer;\n    } else {\n      renamer = nameStack.peek().forChildScope();\n    }\n\n    if (declarationRoot.getType() == Token.FUNCTION) {\n      for (Node c = declarationRoot.getFirstChild().getNext().getFirstChild(); c != null; c = c.getNext()) {\n        String name = c.getString();\n        renamer.addDeclaredName(name);\n      }\n      Node functionBody = declarationRoot.getLastChild();\n      findDeclaredNames(functionBody, null, renamer);\n    }  else \n    if (declarationRoot.getType() != Token.FUNCTION) {\n      // Add the block declarations\n      findDeclaredNames(declarationRoot, null, renamer);\n    }\n    nameStack.push(renamer);\n  }\n\nThere is a bug in ['    if (declarationRoot.getType() == Token.FUNCTION) {', '      for (Node c = declarationRoot.getFirstChild().getNext().getFirstChild(); c != null; c = c.getNext()) {', '        String name = c.getString();', '        renamer.addDeclaredName(name);', '      }', '      Node functionBody = declarationRoot.getLastChild();', '      findDeclaredNames(functionBody, null, renamer);', '    }  else '] , please help me fix it. \n\nPlease return the results in a strict JSON format as described below. Please follow these instructions carefully:\n1. Your output must include each repaired line's number (`line_number`) and the corresponding fixed code statement (`fixed_statement`).\n2. The output format must be a valid JSON array, where each element represents one repaired line, with the following structure:\n   - `\"line_number\"`: The line number of the buggy code that was repaired (integer).\n   - `\"fixed_statement\"`: The repaired statement for that specific line (string).\n\n3. The result must strictly follow this format:\n[\n    {\n        \"line_number\": int,\n        \"fixed_statement\": \"string\"\n    },\n    {\n        \"line_number\": int,\n        \"fixed_statement\": \"string\"\n    }\n]\n4. The repaired statement in \"fixed_statement\" must replace the corresponding line in the buggy code.\n5. You must NOT include any additional explanation or description in your response. Only return the JSON array. Do not include ```json or ``` markers in the response.\n",
        "prompt_apr_6": "\n@Override\n  public void enterScope(NodeTraversal t) {\n    Node declarationRoot = t.getScopeRoot();\n    Renamer renamer;\n    if (nameStack.isEmpty()) {\n      // If the contextual renamer is being used the starting context can not\n      // be a function.\n      Preconditions.checkState(\n          declarationRoot.getType() != Token.FUNCTION ||\n          !(rootRenamer instanceof ContextualRenamer));\n      Preconditions.checkState(t.inGlobalScope());\n      renamer = rootRenamer;\n    } else {\n      renamer = nameStack.peek().forChildScope();\n    }\n\n    if (declarationRoot.getType() == Token.FUNCTION) {\n      for (Node c = declarationRoot.getFirstChild().getNext().getFirstChild(); c != null; c = c.getNext()) {\n        String name = c.getString();\n        renamer.addDeclaredName(name);\n      }\n      Node functionBody = declarationRoot.getLastChild();\n      findDeclaredNames(functionBody, null, renamer);\n    }  else \n\nThere is a bug in the last statement, please help me fix it.\n\nPlease return the results in a strict JSON format as described below. Please follow these instructions carefully:\n1. Your output must include each repaired line's number (`line_number`) and the corresponding fixed code statement (`fixed_statement`).\n2. The output format must be a valid JSON array, where each element represents one repaired line, with the following structure:\n   - `\"line_number\"`: The line number of the buggy code that was repaired (integer).\n   - `\"fixed_statement\"`: The repaired statement for that specific line (string).\n\n3. The result must strictly follow this format:\n[\n    {\n        \"line_number\": int,\n        \"fixed_statement\": \"string\"\n    },\n    {\n        \"line_number\": int,\n        \"fixed_statement\": \"string\"\n    }\n]\n4. The repaired statement in \"fixed_statement\" must replace the corresponding line in the buggy code.\n5. You must NOT include any additional explanation or description in your response. Only return the JSON array. Do not include ```json or ``` markers in the response.\n"
    }
]