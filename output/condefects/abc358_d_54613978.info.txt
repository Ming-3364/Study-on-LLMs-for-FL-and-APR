
================== buggy_file ==================
faultyVersion.java
================== buggy_method ==================
{'method_name': 'main', 'method_body': 'public static void main(String[] args) {\n\t\t\n\t\tFastScanner sc = new FastScanner();\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\t\n\t\tint n = Integer.parseInt(sc.next());\n\t\tint m = Integer.parseInt(sc.next());\n\t\tlong[] a = new long[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\ta[i] = Long.parseLong(sc.next());\n\t\t}\n\t\tArrays.sort(a);\n\t\t\n\t\tlong[] b = new long[m];\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tb[i] = Long.parseLong(sc.next());\n\t\t}\n\t\tArrays.sort(b);\n\t\t\n\t\tint j = 0;\n\t\tlong ans = 0L;\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tfor (; j < n; j++) {\n\t\t\t\tif (a[j] >= b[i]) {\n\t\t\t\t\tans += a[j];\n\t\t\t\t\tj++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (j == n - 1) {\n\t\t\t\t\tout.println(-1);\n\t\t\t\t\tout.flush();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (j == n && i < m) {\n\t\t\t\tout.println(-1);\n\t\t\t\tout.flush();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tout.println(ans);\n\t\t\n\t\tout.flush();\n\n\t}', 'start_line': 7, 'end_line': 51}
================== buggy_method_src ==================
public static void main(String[] args) {
		
		FastScanner sc = new FastScanner();
		PrintWriter out = new PrintWriter(System.out);
		
		int n = Integer.parseInt(sc.next());
		int m = Integer.parseInt(sc.next());
		long[] a = new long[n];
		for (int i = 0; i < n; i++) {
			a[i] = Long.parseLong(sc.next());
		}
		Arrays.sort(a);
		
		long[] b = new long[m];
		for (int i = 0; i < m; i++) {
			b[i] = Long.parseLong(sc.next());
		}
		Arrays.sort(b);
		
		int j = 0;
		long ans = 0L;
		for (int i = 0; i < m; i++) {
			for (; j < n; j++) {
				if (a[j] >= b[i]) {
					ans += a[j];
					j++;
					break;
				}
				if (j == n - 1) {
					out.println(-1);
					out.flush();
					return;
				}
			}
			if (j == n && i < m) {
				out.println(-1);
				out.flush();
				return;
			}
		}
		out.println(ans);
		
		out.flush();

	}
================== test_stack ==================
None
================== test_assert ==================
None
================== buggy_lines_in_method ==================
[35]
================== buggy_statements ==================
['\t\t\tif (j == n && i < m) {']
================== buggy_method_src_endswith_buggy_statement ==================
public static void main(String[] args) {
		
		FastScanner sc = new FastScanner();
		PrintWriter out = new PrintWriter(System.out);
		
		int n = Integer.parseInt(sc.next());
		int m = Integer.parseInt(sc.next());
		long[] a = new long[n];
		for (int i = 0; i < n; i++) {
			a[i] = Long.parseLong(sc.next());
		}
		Arrays.sort(a);
		
		long[] b = new long[m];
		for (int i = 0; i < m; i++) {
			b[i] = Long.parseLong(sc.next());
		}
		Arrays.sort(b);
		
		int j = 0;
		long ans = 0L;
		for (int i = 0; i < m; i++) {
			for (; j < n; j++) {
				if (a[j] >= b[i]) {
					ans += a[j];
					j++;
					break;
				}
				if (j == n - 1) {
					out.println(-1);
					out.flush();
					return;
				}
			}
			if (j == n && i < m) {