
================== buggy_file ==================
faultyVersion.java
================== buggy_method ==================
{'method_name': 'main', 'method_body': 'public static void main(String[] args) throws Exception{\n\t\tScanner sc = new Scanner(System.in);\n\n        int N = sc.nextInt();\n\t\t    String S = sc.next();\n\n\t\tint[] A = new int[N];\n\t\tint[] C = new int[N];\n\n\t\tfor(int i = 0; i < N; i++){\n\t\t  if(i == N-1){\n\t\t    A[i] = Integer.valueOf(S.substring(i));\n\t\t  }\n\t\t  else{\n\t\t    A[i] = Integer.valueOf(S.substring(i,i+1));\n\t\t  }\n\t\t}\n\n\t\tfor(int i = 0; i < N; i++){\n\t\t\tC[i] = sc.nextInt();\n\t\t}\n\n\t\tlong[] F0 = new long[N];\n\t\tlong[] F1 = new long[N];\n\n\t\tif(A[0] == 0){\n\t\t\tF0[0] = 0;\n\t\t\tF1[0] = C[0];\n\t\t}\n\t\telse{\n\t\t\tF0[0] = C[0];\n\t\t\tF1[0] = 0;\n\t\t}\n\n\t\tfor(int i = 1; i < N; i++){\n\t\t\tint ai = A[i];\n\n\t\t\tif(ai == i%2){\n\t\t\t\tF1[i] = F1[i-1] + C[i];\n\t\t\t\tF0[i] = F0[i-1];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tF1[i] = F1[i-1];\n\t\t\t\tF0[i] = F0[i-1] + C[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\tlong min = F0[N-1]+F1[N-1];\n\n\t\tfor(int i = 1; i < N; i++){\n\t\t\tlong iSum0 = F1[N-1] - F1[i] + F0[i];\n\t\t\tlong iSum1 = F0[N-1] - F0[i] + F1[i];\n\n\t\t\tlong iSum = Math.min(iSum0, iSum1);\n\t\t\tif(min > iSum){\n\t\t\t\tmin = iSum;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(min);\n\t}', 'start_line': 5, 'end_line': 65}
================== buggy_method_src ==================
public static void main(String[] args) throws Exception{
		Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
		    String S = sc.next();

		int[] A = new int[N];
		int[] C = new int[N];

		for(int i = 0; i < N; i++){
		  if(i == N-1){
		    A[i] = Integer.valueOf(S.substring(i));
		  }
		  else{
		    A[i] = Integer.valueOf(S.substring(i,i+1));
		  }
		}

		for(int i = 0; i < N; i++){
			C[i] = sc.nextInt();
		}

		long[] F0 = new long[N];
		long[] F1 = new long[N];

		if(A[0] == 0){
			F0[0] = 0;
			F1[0] = C[0];
		}
		else{
			F0[0] = C[0];
			F1[0] = 0;
		}

		for(int i = 1; i < N; i++){
			int ai = A[i];

			if(ai == i%2){
				F1[i] = F1[i-1] + C[i];
				F0[i] = F0[i-1];
			}
			else{
				F1[i] = F1[i-1];
				F0[i] = F0[i-1] + C[i];
			}
		}
		
		long min = F0[N-1]+F1[N-1];

		for(int i = 1; i < N; i++){
			long iSum0 = F1[N-1] - F1[i] + F0[i];
			long iSum1 = F0[N-1] - F0[i] + F1[i];

			long iSum = Math.min(iSum0, iSum1);
			if(min > iSum){
				min = iSum;
			}
		}

		System.out.println(min);
	}
================== test_stack ==================
None
================== test_assert ==================
None
================== buggy_lines_in_method ==================
[50]
================== buggy_statements ==================
['\t\tfor(int i = 1; i < N; i++){']
================== buggy_method_src_endswith_buggy_statement ==================
public static void main(String[] args) throws Exception{
		Scanner sc = new Scanner(System.in);

        int N = sc.nextInt();
		    String S = sc.next();

		int[] A = new int[N];
		int[] C = new int[N];

		for(int i = 0; i < N; i++){
		  if(i == N-1){
		    A[i] = Integer.valueOf(S.substring(i));
		  }
		  else{
		    A[i] = Integer.valueOf(S.substring(i,i+1));
		  }
		}

		for(int i = 0; i < N; i++){
			C[i] = sc.nextInt();
		}

		long[] F0 = new long[N];
		long[] F1 = new long[N];

		if(A[0] == 0){
			F0[0] = 0;
			F1[0] = C[0];
		}
		else{
			F0[0] = C[0];
			F1[0] = 0;
		}

		for(int i = 1; i < N; i++){
			int ai = A[i];

			if(ai == i%2){
				F1[i] = F1[i-1] + C[i];
				F0[i] = F0[i-1];
			}
			else{
				F1[i] = F1[i-1];
				F0[i] = F0[i-1] + C[i];
			}
		}
		
		long min = F0[N-1]+F1[N-1];

		for(int i = 1; i < N; i++){