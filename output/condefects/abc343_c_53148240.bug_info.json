[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "main",
            "method_body": "public static void main(String[] args) {\n\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tlong N = sc.nextLong();\n\t\tboolean judge = true;\n\t\t\n\t\tList<Long> C = new ArrayList<Long>();\n\t\t\n\t\tfor (long i = 1; i < 1000000; i++) {\n\t\t\t\n\t\t\tC.add(i*i*i);\n\t\t}\n\t\t\n\t\tfor (int i = C.size()-1; i >= 0; i--) {\n\t\t\tif (C.get(i) > N) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tString S = Long.toString(C.get(i));\n\t\t\tint L = S.length();\n\n\t\t\tint M = 0;\n\t\t\tif (L % 2 == 0) {\n\t\t\t\tM = L/2;\n\t\t\t} else {\n\t\t\t\tM = (L+1)/2;\n\t\t\t}\n\n\t\t\tfor (int j=0; j < M; j++) {\n\t\t\t\tif (!S.substring(j,j+1).equals(S.substring(L-j-1,L-j))) {\n\t\t\t\t\tjudge = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (judge == false) {\n\t\t\t\tjudge = true;\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tSystem.out.println(C.get(i));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tsc.close();\n\n\t}",
            "start_line": 7,
            "end_line": 54
        },
        "buggy_method_src": "public static void main(String[] args) {\n\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tlong N = sc.nextLong();\n\t\tboolean judge = true;\n\t\t\n\t\tList<Long> C = new ArrayList<Long>();\n\t\t\n\t\tfor (long i = 1; i < 1000000; i++) {\n\t\t\t\n\t\t\tC.add(i*i*i);\n\t\t}\n\t\t\n\t\tfor (int i = C.size()-1; i >= 0; i--) {\n\t\t\tif (C.get(i) > N) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tString S = Long.toString(C.get(i));\n\t\t\tint L = S.length();\n\n\t\t\tint M = 0;\n\t\t\tif (L % 2 == 0) {\n\t\t\t\tM = L/2;\n\t\t\t} else {\n\t\t\t\tM = (L+1)/2;\n\t\t\t}\n\n\t\t\tfor (int j=0; j < M; j++) {\n\t\t\t\tif (!S.substring(j,j+1).equals(S.substring(L-j-1,L-j))) {\n\t\t\t\t\tjudge = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (judge == false) {\n\t\t\t\tjudge = true;\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tSystem.out.println(C.get(i));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tsc.close();\n\n\t}",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            17
        ],
        "buggy_statements": [
            "\t\t\t\tbreak;"
        ],
        "buggy_method_src_endswith_buggy_statement": "public static void main(String[] args) {\n\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tlong N = sc.nextLong();\n\t\tboolean judge = true;\n\t\t\n\t\tList<Long> C = new ArrayList<Long>();\n\t\t\n\t\tfor (long i = 1; i < 1000000; i++) {\n\t\t\t\n\t\t\tC.add(i*i*i);\n\t\t}\n\t\t\n\t\tfor (int i = C.size()-1; i >= 0; i--) {\n\t\t\tif (C.get(i) > N) {\n\t\t\t\tbreak;"
    }
]