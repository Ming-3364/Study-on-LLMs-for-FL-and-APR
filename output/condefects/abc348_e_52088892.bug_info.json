[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "solve",
            "method_body": "public Object solve(){\n    int N = in.it();\n    int[][] E = in.idx(N -1,2);\n    long[] C = in.lg(N);\n    ReRootingDp<Long, long[], Long> dp = new ReRootingDp<>(N){\n      @Override\n      protected long[] e(){ return new long[]{0, 0}; }\n\n      @Override\n      protected long[] agg(long[] a,long[] b){ return new long[]{a[0] +b[0], a[1] +b[1]}; }\n\n      @Override\n      protected long[] adj(long[] v,Edge<Long> e){ return new long[]{v[0] +C[e.v], v[0] +C[e.v] +v[1]}; }\n\n      @Override\n      protected Long ans(int u,long[] sum){\n        long ret = 0;\n        for (var d:sur(u))\n          ret += d[1];\n        return ret;\n      }\n    };\n    for (var e:E)\n      dp.addEdge(e[0],e[1]);\n\n    long ans = infL;\n    Long[] calc = dp.calc();\n    for (int i = 0;i < N;i++)\n      ans = min(ans,calc[i]);\n\n    return ans;\n  }",
            "start_line": 15,
            "end_line": 46
        },
        "buggy_method_src": "public Object solve(){\n    int N = in.it();\n    int[][] E = in.idx(N -1,2);\n    long[] C = in.lg(N);\n    ReRootingDp<Long, long[], Long> dp = new ReRootingDp<>(N){\n      @Override\n      protected long[] e(){ return new long[]{0, 0}; }\n\n      @Override\n      protected long[] agg(long[] a,long[] b){ return new long[]{a[0] +b[0], a[1] +b[1]}; }\n\n      @Override\n      protected long[] adj(long[] v,Edge<Long> e){ return new long[]{v[0] +C[e.v], v[0] +C[e.v] +v[1]}; }\n\n      @Override\n      protected Long ans(int u,long[] sum){\n        long ret = 0;\n        for (var d:sur(u))\n          ret += d[1];\n        return ret;\n      }\n    };\n    for (var e:E)\n      dp.addEdge(e[0],e[1]);\n\n    long ans = infL;\n    Long[] calc = dp.calc();\n    for (int i = 0;i < N;i++)\n      ans = min(ans,calc[i]);\n\n    return ans;\n  }",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            26
        ],
        "buggy_statements": [
            "    long ans = infL;"
        ],
        "buggy_method_src_endswith_buggy_statement": "public Object solve(){\n    int N = in.it();\n    int[][] E = in.idx(N -1,2);\n    long[] C = in.lg(N);\n    ReRootingDp<Long, long[], Long> dp = new ReRootingDp<>(N){\n      @Override\n      protected long[] e(){ return new long[]{0, 0}; }\n\n      @Override\n      protected long[] agg(long[] a,long[] b){ return new long[]{a[0] +b[0], a[1] +b[1]}; }\n\n      @Override\n      protected long[] adj(long[] v,Edge<Long> e){ return new long[]{v[0] +C[e.v], v[0] +C[e.v] +v[1]}; }\n\n      @Override\n      protected Long ans(int u,long[] sum){\n        long ret = 0;\n        for (var d:sur(u))\n          ret += d[1];\n        return ret;\n      }\n    };\n    for (var e:E)\n      dp.addEdge(e[0],e[1]);\n\n    long ans = infL;"
    }
]