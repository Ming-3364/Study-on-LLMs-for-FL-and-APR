
================== buggy_file ==================
faultyVersion.java
================== buggy_method ==================
{'method_name': 'main', 'method_body': 'public static void main(String[] args) {\n    \n        var sc = new Scanner(System.in);\n        \n        long left = Long.parseLong(sc.next());\n        long bottom = Long.parseLong(sc.next());\n        long right = Long.parseLong(sc.next());\n        long top = Long.parseLong(sc.next());\n        \n        long ans = 0;\n        int l = (int) (left % 4 + 4) % 4;\n        int b = (int) (bottom % 2 + 2) % 2;\n        \n        right -= left;\n        left = 0;\n        top -= bottom;\n        bottom = 0;\n        \n        switch(l){\n            case 0 -> {\n                if(b == 0){\n                    ans += (right / 2) * ((top + 1) / 2);\n                    ans += ((right + 1) / 2) * (top / 2);\n                    ans += ((right + 3) / 4) * ((top + 1) / 2) * 2;\n                    ans += ((right + 2) / 4) * (top / 2) * 2;\n                }else{\n                    ans += ((right + 1) / 2) * ((top + 1) / 2);\n                    ans += (right / 2) * (top / 2);\n                    ans += ((right + 2) / 4) * ((top + 1) / 2) * 2;\n                    ans += ((right + 3) / 4) * (top / 2) * 2;\n                }\n            }\n            case 1 -> {\n                if(b == 0){\n                    ans += ((right + 1) / 2) * ((top + 1) / 2);\n                    ans += (right / 2) * (top / 2);\n                    ans += (right / 4) * ((top + 1) / 2) * 2;\n                    ans += ((right + 3) / 4) * (top / 2) * 2;\n                }else{\n                    ans += (right / 2) * ((top + 1) / 2);\n                    ans += ((right + 1) / 2) * (top / 2);\n                    ans += ((right + 3) / 4) * ((top + 1) / 2) * 2;\n                    ans += (right / 4) * (top / 2) * 2;\n                }\n            }\n            case 2 -> {\n                if(b == 0){\n                    ans += (right / 2) * ((top + 1) / 2);\n                    ans += ((right + 1) / 2) * (top / 2);\n                    ans += ((right * 1) / 4) * ((top + 1) / 2) * 2;\n                    ans += (right / 4) * (top / 2) * 2;\n                }else{\n                    ans += ((right + 1) / 2) * ((top + 1) / 2);\n                    ans += (right / 2) * (top / 2);\n                    ans += (right / 4) * ((top + 1) / 2) * 2;\n                    ans += ((right + 1) / 4) * (top / 2) * 2;\n                }\n            }\n            case 3 -> {\n                if(b == 0){\n                    ans += ((right + 1) / 2) * ((top + 1) / 2);\n                    ans += (right / 2) * (top / 2);\n                    ans += ((right + 2) / 4) * ((top + 1) / 2) * 2;\n                    ans += ((right + 1) / 4) * (top / 2) * 2;\n                }else{\n                    ans += (right / 2) * ((top + 1) / 2);\n                    ans += ((right + 1) / 2) * (top / 2);\n                    ans += ((right + 1) / 4) * ((top + 1) / 2) * 2;\n                    ans += ((right + 2) / 4) * (top / 2) * 2;\n                }\n            }\n        }\n        System.out.println(ans);\n    }', 'start_line': 5, 'end_line': 78}
================== buggy_method_src ==================
public static void main(String[] args) {
    
        var sc = new Scanner(System.in);
        
        long left = Long.parseLong(sc.next());
        long bottom = Long.parseLong(sc.next());
        long right = Long.parseLong(sc.next());
        long top = Long.parseLong(sc.next());
        
        long ans = 0;
        int l = (int) (left % 4 + 4) % 4;
        int b = (int) (bottom % 2 + 2) % 2;
        
        right -= left;
        left = 0;
        top -= bottom;
        bottom = 0;
        
        switch(l){
            case 0 -> {
                if(b == 0){
                    ans += (right / 2) * ((top + 1) / 2);
                    ans += ((right + 1) / 2) * (top / 2);
                    ans += ((right + 3) / 4) * ((top + 1) / 2) * 2;
                    ans += ((right + 2) / 4) * (top / 2) * 2;
                }else{
                    ans += ((right + 1) / 2) * ((top + 1) / 2);
                    ans += (right / 2) * (top / 2);
                    ans += ((right + 2) / 4) * ((top + 1) / 2) * 2;
                    ans += ((right + 3) / 4) * (top / 2) * 2;
                }
            }
            case 1 -> {
                if(b == 0){
                    ans += ((right + 1) / 2) * ((top + 1) / 2);
                    ans += (right / 2) * (top / 2);
                    ans += (right / 4) * ((top + 1) / 2) * 2;
                    ans += ((right + 3) / 4) * (top / 2) * 2;
                }else{
                    ans += (right / 2) * ((top + 1) / 2);
                    ans += ((right + 1) / 2) * (top / 2);
                    ans += ((right + 3) / 4) * ((top + 1) / 2) * 2;
                    ans += (right / 4) * (top / 2) * 2;
                }
            }
            case 2 -> {
                if(b == 0){
                    ans += (right / 2) * ((top + 1) / 2);
                    ans += ((right + 1) / 2) * (top / 2);
                    ans += ((right * 1) / 4) * ((top + 1) / 2) * 2;
                    ans += (right / 4) * (top / 2) * 2;
                }else{
                    ans += ((right + 1) / 2) * ((top + 1) / 2);
                    ans += (right / 2) * (top / 2);
                    ans += (right / 4) * ((top + 1) / 2) * 2;
                    ans += ((right + 1) / 4) * (top / 2) * 2;
                }
            }
            case 3 -> {
                if(b == 0){
                    ans += ((right + 1) / 2) * ((top + 1) / 2);
                    ans += (right / 2) * (top / 2);
                    ans += ((right + 2) / 4) * ((top + 1) / 2) * 2;
                    ans += ((right + 1) / 4) * (top / 2) * 2;
                }else{
                    ans += (right / 2) * ((top + 1) / 2);
                    ans += ((right + 1) / 2) * (top / 2);
                    ans += ((right + 1) / 4) * ((top + 1) / 2) * 2;
                    ans += ((right + 2) / 4) * (top / 2) * 2;
                }
            }
        }
        System.out.println(ans);
    }
================== test_stack ==================
None
================== test_assert ==================
None
================== buggy_lines_in_method ==================
[50]
================== buggy_statements ==================
['                    ans += ((right * 1) / 4) * ((top + 1) / 2) * 2;']
================== buggy_method_src_endswith_buggy_statement ==================
public static void main(String[] args) {
    
        var sc = new Scanner(System.in);
        
        long left = Long.parseLong(sc.next());
        long bottom = Long.parseLong(sc.next());
        long right = Long.parseLong(sc.next());
        long top = Long.parseLong(sc.next());
        
        long ans = 0;
        int l = (int) (left % 4 + 4) % 4;
        int b = (int) (bottom % 2 + 2) % 2;
        
        right -= left;
        left = 0;
        top -= bottom;
        bottom = 0;
        
        switch(l){
            case 0 -> {
                if(b == 0){
                    ans += (right / 2) * ((top + 1) / 2);
                    ans += ((right + 1) / 2) * (top / 2);
                    ans += ((right + 3) / 4) * ((top + 1) / 2) * 2;
                    ans += ((right + 2) / 4) * (top / 2) * 2;
                }else{
                    ans += ((right + 1) / 2) * ((top + 1) / 2);
                    ans += (right / 2) * (top / 2);
                    ans += ((right + 2) / 4) * ((top + 1) / 2) * 2;
                    ans += ((right + 3) / 4) * (top / 2) * 2;
                }
            }
            case 1 -> {
                if(b == 0){
                    ans += ((right + 1) / 2) * ((top + 1) / 2);
                    ans += (right / 2) * (top / 2);
                    ans += (right / 4) * ((top + 1) / 2) * 2;
                    ans += ((right + 3) / 4) * (top / 2) * 2;
                }else{
                    ans += (right / 2) * ((top + 1) / 2);
                    ans += ((right + 1) / 2) * (top / 2);
                    ans += ((right + 3) / 4) * ((top + 1) / 2) * 2;
                    ans += (right / 4) * (top / 2) * 2;
                }
            }
            case 2 -> {
                if(b == 0){
                    ans += (right / 2) * ((top + 1) / 2);
                    ans += ((right + 1) / 2) * (top / 2);
                    ans += ((right * 1) / 4) * ((top + 1) / 2) * 2;