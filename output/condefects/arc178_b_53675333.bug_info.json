[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "solve",
            "method_body": "private static void solve(MyScanner in, PrintWriter out) {\n        long A1 = in.nextLong();\n        long A2 = in.nextLong();\n        long A3 = in.nextLong();\n        if (A2 < A1) {\n            long temp = A2;\n            A2 = A1;\n            A1 = temp;\n        }\n        long a1 = exp(10, A1 - 1);\n        long a2 = exp(10, A2 - 1);\n        long a3 = exp(10, A3 - 1);\n        if (A2 == A3) {\n            if (A1 == A2) {\n                long res = (1 + a3 * 8) % MOD * a3 * 8 % MOD * inv(2) % MOD;\n                out.println(res);\n            }\n            else {\n                long res = (a2 * 9 - (a1 * 10 - 1) + a2 * 9 - (a1)) % MOD * a1 * 9 % MOD * inv(2) % MOD;\n                res = (res + MOD) % MOD;\n                out.println(res);\n            }\n        }\n        else if (A2 + 1 == A3) {\n            if (A1 == A2) {\n                long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;\n                res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;\n                res = (res + 1) % MOD;\n                out.println(res);\n            }\n            else {\n                long res = ((a1 * 10 - 1) + a1) % MOD * a1 * 9 % MOD * inv(2) % MOD;\n                out.println(res);\n            }\n        }\n        else out.println(0);\n    }",
            "start_line": 6,
            "end_line": 42
        },
        "buggy_method_src": "private static void solve(MyScanner in, PrintWriter out) {\n        long A1 = in.nextLong();\n        long A2 = in.nextLong();\n        long A3 = in.nextLong();\n        if (A2 < A1) {\n            long temp = A2;\n            A2 = A1;\n            A1 = temp;\n        }\n        long a1 = exp(10, A1 - 1);\n        long a2 = exp(10, A2 - 1);\n        long a3 = exp(10, A3 - 1);\n        if (A2 == A3) {\n            if (A1 == A2) {\n                long res = (1 + a3 * 8) % MOD * a3 * 8 % MOD * inv(2) % MOD;\n                out.println(res);\n            }\n            else {\n                long res = (a2 * 9 - (a1 * 10 - 1) + a2 * 9 - (a1)) % MOD * a1 * 9 % MOD * inv(2) % MOD;\n                res = (res + MOD) % MOD;\n                out.println(res);\n            }\n        }\n        else if (A2 + 1 == A3) {\n            if (A1 == A2) {\n                long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;\n                res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;\n                res = (res + 1) % MOD;\n                out.println(res);\n            }\n            else {\n                long res = ((a1 * 10 - 1) + a1) % MOD * a1 * 9 % MOD * inv(2) % MOD;\n                out.println(res);\n            }\n        }\n        else out.println(0);\n    }",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            28
        ],
        "buggy_statements": [
            "                res = (res + 1) % MOD;"
        ],
        "buggy_method_src_endswith_buggy_statement": "private static void solve(MyScanner in, PrintWriter out) {\n        long A1 = in.nextLong();\n        long A2 = in.nextLong();\n        long A3 = in.nextLong();\n        if (A2 < A1) {\n            long temp = A2;\n            A2 = A1;\n            A1 = temp;\n        }\n        long a1 = exp(10, A1 - 1);\n        long a2 = exp(10, A2 - 1);\n        long a3 = exp(10, A3 - 1);\n        if (A2 == A3) {\n            if (A1 == A2) {\n                long res = (1 + a3 * 8) % MOD * a3 * 8 % MOD * inv(2) % MOD;\n                out.println(res);\n            }\n            else {\n                long res = (a2 * 9 - (a1 * 10 - 1) + a2 * 9 - (a1)) % MOD * a1 * 9 % MOD * inv(2) % MOD;\n                res = (res + MOD) % MOD;\n                out.println(res);\n            }\n        }\n        else if (A2 + 1 == A3) {\n            if (A1 == A2) {\n                long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;\n                res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;\n                res = (res + 1) % MOD;"
    }
]