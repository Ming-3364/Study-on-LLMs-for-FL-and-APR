[
    {
        "prompt_fl_1": "\nsource code:\nprivate CanInlineResult canInlineReferenceDirectly(\n      Node callNode, Node fnNode) {\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n      return CanInlineResult.NO;\n    }\n\n    Node block = fnNode.getLastChild();\n\n\n    // CALL NODE: [ NAME, ARG1, ARG2, ... ]\n    Node cArg = callNode.getFirstChild().getNext();\n\n    // Functions called via 'call' and 'apply' have a this-object as\n    // the first parameter, but this is not part of the called function's\n    // parameter list.\n    if (!callNode.getFirstChild().isName()) {\n      if (NodeUtil.isFunctionObjectCall(callNode)) {\n        // TODO(johnlenz): Support replace this with a value.\n        if (cArg == null || !cArg.isThis()) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      } else {\n        // \".apply\" call should be filtered before this.\n        Preconditions.checkState(!NodeUtil.isFunctionObjectApply(callNode));\n      }\n    }\n\n    // FUNCTION NODE -> LP NODE: [ ARG1, ARG2, ... ]\n    Node fnParam = NodeUtil.getFunctionParameters(fnNode).getFirstChild();\n    while (cArg != null || fnParam != null) {\n      // For each named parameter check if a mutable argument use more than one.\n      if (fnParam != null) {\n        if (cArg != null) {\n\n          // Check for arguments that are evaluated more than once.\n          // Note: Unlike block inlining, there it is not possible that a\n          // parameter reference will be in a loop.\n          if (NodeUtil.mayEffectMutableState(cArg, compiler)\n              && NodeUtil.getNameReferenceCount(\n                  block, fnParam.getString()) > 1) {\n            return CanInlineResult.NO;\n          }\n        }\n\n        // Move to the next name.\n        fnParam = fnParam.getNext();\n      }\n\n      // For every call argument check for side-effects, even if there\n      // isn't a named parameter to match.\n      if (cArg != null) {\n        if (NodeUtil.mayHaveSideEffects(cArg, compiler)) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      }\n    }\n\n    return CanInlineResult.YES;\n  }\n\nThere is a bug in the above code, please help me locate it.\n\nPlease output **only one integer**: the line number of the buggy code (The code starts from line 1). Do not provide any explanations or additional content.\n",
        "prompt_fl_2": "\nsource code:\nprivate CanInlineResult canInlineReferenceDirectly(\n      Node callNode, Node fnNode) {\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n      return CanInlineResult.NO;\n    }\n\n    Node block = fnNode.getLastChild();\n\n\n    // CALL NODE: [ NAME, ARG1, ARG2, ... ]\n    Node cArg = callNode.getFirstChild().getNext();\n\n    // Functions called via 'call' and 'apply' have a this-object as\n    // the first parameter, but this is not part of the called function's\n    // parameter list.\n    if (!callNode.getFirstChild().isName()) {\n      if (NodeUtil.isFunctionObjectCall(callNode)) {\n        // TODO(johnlenz): Support replace this with a value.\n        if (cArg == null || !cArg.isThis()) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      } else {\n        // \".apply\" call should be filtered before this.\n        Preconditions.checkState(!NodeUtil.isFunctionObjectApply(callNode));\n      }\n    }\n\n    // FUNCTION NODE -> LP NODE: [ ARG1, ARG2, ... ]\n    Node fnParam = NodeUtil.getFunctionParameters(fnNode).getFirstChild();\n    while (cArg != null || fnParam != null) {\n      // For each named parameter check if a mutable argument use more than one.\n      if (fnParam != null) {\n        if (cArg != null) {\n\n          // Check for arguments that are evaluated more than once.\n          // Note: Unlike block inlining, there it is not possible that a\n          // parameter reference will be in a loop.\n          if (NodeUtil.mayEffectMutableState(cArg, compiler)\n              && NodeUtil.getNameReferenceCount(\n                  block, fnParam.getString()) > 1) {\n            return CanInlineResult.NO;\n          }\n        }\n\n        // Move to the next name.\n        fnParam = fnParam.getNext();\n      }\n\n      // For every call argument check for side-effects, even if there\n      // isn't a named parameter to match.\n      if (cArg != null) {\n        if (NodeUtil.mayHaveSideEffects(cArg, compiler)) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      }\n    }\n\n    return CanInlineResult.YES;\n  }\n\nstack trace:\ncom.google.javascript.jscomp.FunctionInjectorTest::testIssue1101a\njunit.framework.AssertionFailedError: expected:<NO> but was:<YES>\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.failNotEquals(Assert.java:329)\n\tat junit.framework.Assert.assertEquals(Assert.java:78)\n\tat junit.framework.Assert.assertEquals(Assert.java:86)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$1.call(FunctionInjectorTest.java:1404)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1545)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:540)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:287)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:494)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1411)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1375)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testIssue1101a(FunctionInjectorTest.java:1347)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testIssue1101b\njunit.framework.AssertionFailedError: expected:<NO> but was:<YES>\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.failNotEquals(Assert.java:329)\n\tat junit.framework.Assert.assertEquals(Assert.java:78)\n\tat junit.framework.Assert.assertEquals(Assert.java:86)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$1.call(FunctionInjectorTest.java:1404)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1545)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:540)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:287)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:494)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1411)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1375)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testIssue1101b(FunctionInjectorTest.java:1353)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testBug4944818\njunit.framework.AssertionFailedError:\nExpected: HangoutStarter.prototype.launchHangout=function(){var self$$2=a.b;var JSCompiler_temp_const$$0=goog.Uri;var JSCompiler_inline_result$$1;var JSCompiler_inline_result$$0;var self$$inline_1=self$$2;if(!self$$inline_1.domServices_)self$$inline_1.domServices_=goog$component$DomServices.get(self$$inline_1.appContext_);JSCompiler_inline_result$$0=self$$inline_1.domServices_;JSCompiler_inline_result$$1=JSCompiler_inline_result$$0.getDomHelper().getWindow();var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.location.href)}\nResult: HangoutStarter.prototype.launchHangout=function(){var self$$2=a.b;var JSCompiler_temp_const$$0=goog.Uri;var JSCompiler_inline_result$$1;var self$$inline_2=self$$2;if(!self$$inline_2.domServices_)self$$inline_2.domServices_=goog$component$DomServices.get(self$$inline_2.appContext_);JSCompiler_inline_result$$1=self$$inline_2.domServices_;var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.getDomHelper().getWindow().location.href)}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ASSIGN 1 [source_file: expected0]\n                GETPROP 1 [source_file: expected0]\n                    GETPROP 1 [source_file: expected0]\n                        NAME HangoutStarter 1 [source_file: expected0]\n                        STRING prototype 1 [source_file: expected0]\n                    STRING launchHangout 1 [source_file: expected0]\n                FUNCTION  1 [source_file: expected0]\n                    NAME  1 [source_file: expected0]\n                    PARAM_LIST 1 [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME self$$2 1 [source_file: expected0]\n                                GETPROP 1 [source_file: expected0]\n                                    NAME a 1 [source_file: expected0]\n                                    STRING b 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                                GETPROP 1 [source_file: expected0]\n                                    NAME goog 1 [source_file: expected0]\n                                    STRING Uri 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            VAR 1 [source_file: expected0]\n                                NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n                            BLOCK 1 [source_file: expected0]\n                                VAR 1 [source_file: expected0]\n                                    NAME self$$inline_1 1 [source_file: expected0]\n                                        NAME self$$2 1 [source_file: expected0]\n                                IF 1 [source_file: expected0]\n                                    NOT 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            NAME self$$inline_1 1 [source_file: expected0]\n                                            STRING domServices_ 1 [source_file: expected0]\n                                    BLOCK 1 [source_file: expected0]\n                                        EXPR_RESULT 1 [source_file: expected0]\n                                            ASSIGN 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    NAME self$$inline_1 1 [source_file: expected0]\n                                                    STRING domServices_ 1 [source_file: expected0]\n                                                CALL 1 [source_file: expected0]\n                                                    GETPROP 1 [source_file: expected0]\n                                                        NAME goog$component$DomServices 1 [source_file: expected0]\n                                                        STRING get 1 [source_file: expected0]\n                                                    GETPROP 1 [source_file: expected0]\n                                                        NAME self$$inline_1 1 [source_file: expected0]\n                                                        STRING appContext_ 1 [source_file: expected0]\n                                EXPR_RESULT 1 [source_file: expected0]\n                                    ASSIGN 1 [source_file: expected0]\n                                        NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            NAME self$$inline_1 1 [source_file: expected0]\n                                            STRING domServices_ 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                                    CALL 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            CALL 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n                                                    STRING getDomHelper 1 [source_file: expected0]\n                                            STRING getWindow 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME myUrl 1 [source_file: expected0]\n                                NEW 1 [source_file: expected0]\n                                    NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                                            STRING location 1 [source_file: expected0]\n                                        STRING href 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 13 [source_file: testcode]\n            ASSIGN 13 [source_file: testcode]\n                GETPROP 13 [source_file: testcode]\n                    GETPROP 13 [source_file: testcode]\n                        NAME HangoutStarter 13 [source_file: testcode]\n                        STRING prototype 13 [source_file: testcode]\n                    STRING launchHangout 13 [source_file: testcode]\n                FUNCTION  13 [source_file: testcode]\n                    NAME  13 [source_file: testcode]\n                    PARAM_LIST 13 [source_file: testcode]\n                    BLOCK 13 [source_file: testcode]\n                        VAR 14 [source_file: testcode]\n                            NAME self$$2 14 [source_file: testcode]\n                                GETPROP 14 [source_file: testcode]\n                                    NAME a 14 [source_file: testcode]\n                                    STRING b 14 [source_file: testcode]\n                        VAR 15 [source_file: testcode]\n                            NAME JSCompiler_temp_const$$0 15 [source_file: testcode]\n                                GETPROP 15 [source_file: testcode]\n                                    NAME goog 15 [source_file: testcode]\n                                    STRING Uri 15 [source_file: testcode]\n                        VAR 10 [source_file: testcode]\n                            NAME JSCompiler_inline_result$$1 10 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            VAR 15 [source_file: testcode]\n                                NAME self$$inline_2 15 [source_file: testcode]\n                                    NAME self$$2 15 [source_file: testcode]\n                            IF 2 [source_file: testcode]\n                                NOT 2 [source_file: testcode]\n                                    GETPROP 2 [source_file: testcode]\n                                        NAME self$$inline_2 2 [source_file: testcode]\n                                        STRING domServices_ 2 [source_file: testcode]\n                                BLOCK 2 [source_file: testcode]\n                                    EXPR_RESULT 3 [source_file: testcode]\n                                        ASSIGN 3 [source_file: testcode]\n                                            GETPROP 3 [source_file: testcode]\n                                                NAME self$$inline_2 3 [source_file: testcode]\n                                                STRING domServices_ 3 [source_file: testcode]\n                                            CALL 3 [source_file: testcode]\n                                                GETPROP 3 [source_file: testcode]\n                                                    NAME goog$component$DomServices 3 [source_file: testcode]\n                                                    STRING get 3 [source_file: testcode]\n                                                GETPROP 3 [source_file: testcode]\n                                                    NAME self$$inline_2 3 [source_file: testcode]\n                                                    STRING appContext_ 3 [source_file: testcode]\n                            EXPR_RESULT 6 [source_file: testcode]\n                                ASSIGN 6 [source_file: testcode]\n                                    NAME JSCompiler_inline_result$$1 6 [source_file: testcode]\n                                    GETPROP 6 [source_file: testcode]\n                                        NAME self$$inline_2 6 [source_file: testcode]\n                                        STRING domServices_ 6 [source_file: testcode]\n                        VAR 15 [source_file: testcode]\n                            NAME myUrl 15 [source_file: testcode]\n                                NEW 15 [source_file: testcode]\n                                    NAME JSCompiler_temp_const$$0 15 [source_file: testcode]\n                                    GETPROP 15 [source_file: testcode]\n                                        GETPROP 15 [source_file: testcode]\n                                            CALL 10 [source_file: testcode]\n                                                GETPROP 10 [source_file: testcode]\n                                                    CALL 10 [source_file: testcode]\n                                                        GETPROP 10 [source_file: testcode]\n                                                            NAME JSCompiler_inline_result$$1 10 [source_file: testcode]\n                                                            STRING getDomHelper 10 [source_file: testcode]\n                                                    STRING getWindow 10 [source_file: testcode]\n                                            STRING location 15 [source_file: testcode]\n                                        STRING href 15 [source_file: testcode]\n\n\nSubtree1: NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n\n\nSubtree2: NAME self$$inline_2 15 [source_file: testcode]\n    NAME self$$2 15 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testBug4944818(InlineFunctionsTest.java:2063)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\ncom.google.javascript.jscomp.InlineFunctionsTest::testDoubleInlining2\njunit.framework.AssertionFailedError:\nExpected: getWindow(x)\nResult: getWindow(x)\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    NAME getWindow 1 [source_file: expected0]\n                    NAME x 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            CALL 1 [free_call: 1] [source_file: testcode]\n                NAME getWindow 1 [source_file: testcode]\n                NAME x 1 [source_file: testcode]\n\n\nSubtree1: BLOCK 1 [source_file: expected0]\n    EXPR_RESULT 1 [source_file: expected0]\n        CALL 1 [free_call: 1] [source_file: expected0]\n            NAME getWindow 1 [source_file: expected0]\n            NAME x 1 [source_file: expected0]\n\n\nSubtree2: EXPR_RESULT 1 [source_file: testcode]\n    CALL 1 [free_call: 1] [source_file: testcode]\n        NAME getWindow 1 [source_file: testcode]\n        NAME x 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testDoubleInlining2(InlineFunctionsTest.java:1109)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testIssue1101\njunit.framework.AssertionFailedError:\nExpected: var x;var saved$$inline_0=obj[\"prop\"];x=foo(obj)+saved$$inline_0\nResult: var x=foo(obj)+obj[\"prop\"]\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME x 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME saved$$inline_0 1 [source_file: expected0]\n                    GETELEM 1 [source_file: expected0]\n                        NAME obj 1 [source_file: expected0]\n                        STRING prop 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME x 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME foo 1 [source_file: expected0]\n                            NAME obj 1 [source_file: expected0]\n                        NAME saved$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME x 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME foo 1 [source_file: testcode]\n                        NAME obj 1 [source_file: testcode]\n                    GETELEM 1 [source_file: testcode]\n                        NAME obj 1 [source_file: testcode]\n                        STRING prop 1 [source_file: testcode]\n\n\nSubtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n    VAR 1 [source_file: expected0]\n        NAME x 1 [source_file: expected0]\n    BLOCK 1 [source_file: expected0]\n        VAR 1 [source_file: expected0]\n            NAME saved$$inline_0 1 [source_file: expected0]\n                GETELEM 1 [source_file: expected0]\n                    NAME obj 1 [source_file: expected0]\n                    STRING prop 1 [source_file: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ASSIGN 1 [source_file: expected0]\n                NAME x 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME foo 1 [source_file: expected0]\n                        NAME obj 1 [source_file: expected0]\n                    NAME saved$$inline_0 1 [source_file: expected0]\n\n\nSubtree2: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n    VAR 1 [source_file: testcode]\n        NAME x 1 [source_file: testcode]\n            ADD 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    NAME foo 1 [source_file: testcode]\n                    NAME obj 1 [source_file: testcode]\n                GETELEM 1 [source_file: testcode]\n                    NAME obj 1 [source_file: testcode]\n                    STRING prop 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testIssue1101(InlineFunctionsTest.java:2371)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified8\njunit.framework.AssertionFailedError:\nExpected: o.x=2\nResult: o.x=2\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    GETPROP 1 [source_file: expected0]\n                        NAME o 1 [source_file: expected0]\n                        STRING x 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            ASSIGN 1 [source_file: testcode]\n                GETPROP 1 [source_file: testcode]\n                    NAME o 1 [source_file: testcode]\n                    STRING x 1 [source_file: testcode]\n                NUMBER 2.0 1 [source_file: testcode]\n\n\nSubtree1: BLOCK 1 [source_file: expected0]\n    EXPR_RESULT 1 [source_file: expected0]\n        ASSIGN 1 [source_file: expected0]\n            GETPROP 1 [source_file: expected0]\n                NAME o 1 [source_file: expected0]\n                STRING x 1 [source_file: expected0]\n            NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: EXPR_RESULT 1 [source_file: testcode]\n    ASSIGN 1 [source_file: testcode]\n        GETPROP 1 [source_file: testcode]\n            NAME o 1 [source_file: testcode]\n            STRING x 1 [source_file: testcode]\n        NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineIfParametersModified8(InlineFunctionsTest.java:601)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified9\njunit.framework.AssertionFailedError:\nExpected: o[2]=2\nResult: o[2]=2\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    GETELEM 1 [source_file: expected0]\n                        NAME o 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            ASSIGN 1 [source_file: testcode]\n                GETELEM 1 [source_file: testcode]\n                    NAME o 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n                NUMBER 2.0 1 [source_file: testcode]\n\n\nSubtree1: BLOCK 1 [source_file: expected0]\n    EXPR_RESULT 1 [source_file: expected0]\n        ASSIGN 1 [source_file: expected0]\n            GETELEM 1 [source_file: expected0]\n                NAME o 1 [source_file: expected0]\n                NUMBER 2.0 1 [source_file: expected0]\n            NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: EXPR_RESULT 1 [source_file: testcode]\n    ASSIGN 1 [source_file: testcode]\n        GETELEM 1 [source_file: testcode]\n            NAME o 1 [source_file: testcode]\n            NUMBER 2.0 1 [source_file: testcode]\n        NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineIfParametersModified9(InlineFunctionsTest.java:606)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions6\njunit.framework.AssertionFailedError:\nExpected: var JSCompiler_temp_const$$0=alert;var JSCompiler_inline_result$$1;JSCompiler_inline_result$$1=baz(nochg(1+2));JSCompiler_temp_const$$0(JSCompiler_inline_result$$1)\nResult: alert(baz(nochg(1+2)))\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                NAME alert 1 [source_file: expected0]\n        VAR 1 [source_file: expected0]\n            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME baz 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME nochg 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n                                NUMBER 2.0 1 [source_file: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            CALL 1 [free_call: 1] [source_file: expected0]\n                NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            CALL 1 [free_call: 1] [source_file: testcode]\n                NAME alert 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    NAME baz 1 [source_file: testcode]\n                    CALL 1 [side_effect_flags: 15] [free_call: 1] [source_file: testcode]\n                        NAME nochg 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n\n\nSubtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n    VAR 1 [source_file: expected0]\n        NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n            NAME alert 1 [source_file: expected0]\n    VAR 1 [source_file: expected0]\n        NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n    BLOCK 1 [source_file: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ASSIGN 1 [source_file: expected0]\n                NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    NAME baz 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME nochg 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n    EXPR_RESULT 1 [source_file: expected0]\n        CALL 1 [free_call: 1] [source_file: expected0]\n            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n\n\nSubtree2: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n    EXPR_RESULT 1 [source_file: testcode]\n        CALL 1 [free_call: 1] [source_file: testcode]\n            NAME alert 1 [source_file: testcode]\n            CALL 1 [free_call: 1] [source_file: testcode]\n                NAME baz 1 [source_file: testcode]\n                CALL 1 [side_effect_flags: 15] [free_call: 1] [source_file: testcode]\n                    NAME nochg 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions6(InlineFunctionsTest.java:157)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n\n\nThere is a bug in the above code, please help me locate it by considering the stack trace.\n\nPlease output **only one integer**: the line number of the buggy code (The code starts from line 1). Do not provide any explanations or additional content.\n",
        "prompt_fl_3": "\nsource code:\nprivate CanInlineResult canInlineReferenceDirectly(\n      Node callNode, Node fnNode) {\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n      return CanInlineResult.NO;\n    }\n\n    Node block = fnNode.getLastChild();\n\n\n    // CALL NODE: [ NAME, ARG1, ARG2, ... ]\n    Node cArg = callNode.getFirstChild().getNext();\n\n    // Functions called via 'call' and 'apply' have a this-object as\n    // the first parameter, but this is not part of the called function's\n    // parameter list.\n    if (!callNode.getFirstChild().isName()) {\n      if (NodeUtil.isFunctionObjectCall(callNode)) {\n        // TODO(johnlenz): Support replace this with a value.\n        if (cArg == null || !cArg.isThis()) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      } else {\n        // \".apply\" call should be filtered before this.\n        Preconditions.checkState(!NodeUtil.isFunctionObjectApply(callNode));\n      }\n    }\n\n    // FUNCTION NODE -> LP NODE: [ ARG1, ARG2, ... ]\n    Node fnParam = NodeUtil.getFunctionParameters(fnNode).getFirstChild();\n    while (cArg != null || fnParam != null) {\n      // For each named parameter check if a mutable argument use more than one.\n      if (fnParam != null) {\n        if (cArg != null) {\n\n          // Check for arguments that are evaluated more than once.\n          // Note: Unlike block inlining, there it is not possible that a\n          // parameter reference will be in a loop.\n          if (NodeUtil.mayEffectMutableState(cArg, compiler)\n              && NodeUtil.getNameReferenceCount(\n                  block, fnParam.getString()) > 1) {\n            return CanInlineResult.NO;\n          }\n        }\n\n        // Move to the next name.\n        fnParam = fnParam.getNext();\n      }\n\n      // For every call argument check for side-effects, even if there\n      // isn't a named parameter to match.\n      if (cArg != null) {\n        if (NodeUtil.mayHaveSideEffects(cArg, compiler)) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      }\n    }\n\n    return CanInlineResult.YES;\n  }\n\nstack trace:\ncom.google.javascript.jscomp.FunctionInjectorTest::testIssue1101a\njunit.framework.AssertionFailedError: expected:<NO> but was:<YES>\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.failNotEquals(Assert.java:329)\n\tat junit.framework.Assert.assertEquals(Assert.java:78)\n\tat junit.framework.Assert.assertEquals(Assert.java:86)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$1.call(FunctionInjectorTest.java:1404)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1545)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:540)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:287)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:494)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1411)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1375)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testIssue1101a(FunctionInjectorTest.java:1347)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testIssue1101b\njunit.framework.AssertionFailedError: expected:<NO> but was:<YES>\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.failNotEquals(Assert.java:329)\n\tat junit.framework.Assert.assertEquals(Assert.java:78)\n\tat junit.framework.Assert.assertEquals(Assert.java:86)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$1.call(FunctionInjectorTest.java:1404)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1545)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:540)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:287)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:494)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1411)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1375)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testIssue1101b(FunctionInjectorTest.java:1353)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testBug4944818\njunit.framework.AssertionFailedError:\nExpected: HangoutStarter.prototype.launchHangout=function(){var self$$2=a.b;var JSCompiler_temp_const$$0=goog.Uri;var JSCompiler_inline_result$$1;var JSCompiler_inline_result$$0;var self$$inline_1=self$$2;if(!self$$inline_1.domServices_)self$$inline_1.domServices_=goog$component$DomServices.get(self$$inline_1.appContext_);JSCompiler_inline_result$$0=self$$inline_1.domServices_;JSCompiler_inline_result$$1=JSCompiler_inline_result$$0.getDomHelper().getWindow();var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.location.href)}\nResult: HangoutStarter.prototype.launchHangout=function(){var self$$2=a.b;var JSCompiler_temp_const$$0=goog.Uri;var JSCompiler_inline_result$$1;var self$$inline_2=self$$2;if(!self$$inline_2.domServices_)self$$inline_2.domServices_=goog$component$DomServices.get(self$$inline_2.appContext_);JSCompiler_inline_result$$1=self$$inline_2.domServices_;var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.getDomHelper().getWindow().location.href)}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ASSIGN 1 [source_file: expected0]\n                GETPROP 1 [source_file: expected0]\n                    GETPROP 1 [source_file: expected0]\n                        NAME HangoutStarter 1 [source_file: expected0]\n                        STRING prototype 1 [source_file: expected0]\n                    STRING launchHangout 1 [source_file: expected0]\n                FUNCTION  1 [source_file: expected0]\n                    NAME  1 [source_file: expected0]\n                    PARAM_LIST 1 [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME self$$2 1 [source_file: expected0]\n                                GETPROP 1 [source_file: expected0]\n                                    NAME a 1 [source_file: expected0]\n                                    STRING b 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                                GETPROP 1 [source_file: expected0]\n                                    NAME goog 1 [source_file: expected0]\n                                    STRING Uri 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            VAR 1 [source_file: expected0]\n                                NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n                            BLOCK 1 [source_file: expected0]\n                                VAR 1 [source_file: expected0]\n                                    NAME self$$inline_1 1 [source_file: expected0]\n                                        NAME self$$2 1 [source_file: expected0]\n                                IF 1 [source_file: expected0]\n                                    NOT 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            NAME self$$inline_1 1 [source_file: expected0]\n                                            STRING domServices_ 1 [source_file: expected0]\n                                    BLOCK 1 [source_file: expected0]\n                                        EXPR_RESULT 1 [source_file: expected0]\n                                            ASSIGN 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    NAME self$$inline_1 1 [source_file: expected0]\n                                                    STRING domServices_ 1 [source_file: expected0]\n                                                CALL 1 [source_file: expected0]\n                                                    GETPROP 1 [source_file: expected0]\n                                                        NAME goog$component$DomServices 1 [source_file: expected0]\n                                                        STRING get 1 [source_file: expected0]\n                                                    GETPROP 1 [source_file: expected0]\n                                                        NAME self$$inline_1 1 [source_file: expected0]\n                                                        STRING appContext_ 1 [source_file: expected0]\n                                EXPR_RESULT 1 [source_file: expected0]\n                                    ASSIGN 1 [source_file: expected0]\n                                        NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            NAME self$$inline_1 1 [source_file: expected0]\n                                            STRING domServices_ 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                                    CALL 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            CALL 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n                                                    STRING getDomHelper 1 [source_file: expected0]\n                                            STRING getWindow 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME myUrl 1 [source_file: expected0]\n                                NEW 1 [source_file: expected0]\n                                    NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                                            STRING location 1 [source_file: expected0]\n                                        STRING href 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 13 [source_file: testcode]\n            ASSIGN 13 [source_file: testcode]\n                GETPROP 13 [source_file: testcode]\n                    GETPROP 13 [source_file: testcode]\n                        NAME HangoutStarter 13 [source_file: testcode]\n                        STRING prototype 13 [source_file: testcode]\n                    STRING launchHangout 13 [source_file: testcode]\n                FUNCTION  13 [source_file: testcode]\n                    NAME  13 [source_file: testcode]\n                    PARAM_LIST 13 [source_file: testcode]\n                    BLOCK 13 [source_file: testcode]\n                        VAR 14 [source_file: testcode]\n                            NAME self$$2 14 [source_file: testcode]\n                                GETPROP 14 [source_file: testcode]\n                                    NAME a 14 [source_file: testcode]\n                                    STRING b 14 [source_file: testcode]\n                        VAR 15 [source_file: testcode]\n                            NAME JSCompiler_temp_const$$0 15 [source_file: testcode]\n                                GETPROP 15 [source_file: testcode]\n                                    NAME goog 15 [source_file: testcode]\n                                    STRING Uri 15 [source_file: testcode]\n                        VAR 10 [source_file: testcode]\n                            NAME JSCompiler_inline_result$$1 10 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            VAR 15 [source_file: testcode]\n                                NAME self$$inline_2 15 [source_file: testcode]\n                                    NAME self$$2 15 [source_file: testcode]\n                            IF 2 [source_file: testcode]\n                                NOT 2 [source_file: testcode]\n                                    GETPROP 2 [source_file: testcode]\n                                        NAME self$$inline_2 2 [source_file: testcode]\n                                        STRING domServices_ 2 [source_file: testcode]\n                                BLOCK 2 [source_file: testcode]\n                                    EXPR_RESULT 3 [source_file: testcode]\n                                        ASSIGN 3 [source_file: testcode]\n                                            GETPROP 3 [source_file: testcode]\n                                                NAME self$$inline_2 3 [source_file: testcode]\n                                                STRING domServices_ 3 [source_file: testcode]\n                                            CALL 3 [source_file: testcode]\n                                                GETPROP 3 [source_file: testcode]\n                                                    NAME goog$component$DomServices 3 [source_file: testcode]\n                                                    STRING get 3 [source_file: testcode]\n                                                GETPROP 3 [source_file: testcode]\n                                                    NAME self$$inline_2 3 [source_file: testcode]\n                                                    STRING appContext_ 3 [source_file: testcode]\n                            EXPR_RESULT 6 [source_file: testcode]\n                                ASSIGN 6 [source_file: testcode]\n                                    NAME JSCompiler_inline_result$$1 6 [source_file: testcode]\n                                    GETPROP 6 [source_file: testcode]\n                                        NAME self$$inline_2 6 [source_file: testcode]\n                                        STRING domServices_ 6 [source_file: testcode]\n                        VAR 15 [source_file: testcode]\n                            NAME myUrl 15 [source_file: testcode]\n                                NEW 15 [source_file: testcode]\n                                    NAME JSCompiler_temp_const$$0 15 [source_file: testcode]\n                                    GETPROP 15 [source_file: testcode]\n                                        GETPROP 15 [source_file: testcode]\n                                            CALL 10 [source_file: testcode]\n                                                GETPROP 10 [source_file: testcode]\n                                                    CALL 10 [source_file: testcode]\n                                                        GETPROP 10 [source_file: testcode]\n                                                            NAME JSCompiler_inline_result$$1 10 [source_file: testcode]\n                                                            STRING getDomHelper 10 [source_file: testcode]\n                                                    STRING getWindow 10 [source_file: testcode]\n                                            STRING location 15 [source_file: testcode]\n                                        STRING href 15 [source_file: testcode]\n\n\nSubtree1: NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n\n\nSubtree2: NAME self$$inline_2 15 [source_file: testcode]\n    NAME self$$2 15 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testBug4944818(InlineFunctionsTest.java:2063)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\ncom.google.javascript.jscomp.InlineFunctionsTest::testDoubleInlining2\njunit.framework.AssertionFailedError:\nExpected: getWindow(x)\nResult: getWindow(x)\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    NAME getWindow 1 [source_file: expected0]\n                    NAME x 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            CALL 1 [free_call: 1] [source_file: testcode]\n                NAME getWindow 1 [source_file: testcode]\n                NAME x 1 [source_file: testcode]\n\n\nSubtree1: BLOCK 1 [source_file: expected0]\n    EXPR_RESULT 1 [source_file: expected0]\n        CALL 1 [free_call: 1] [source_file: expected0]\n            NAME getWindow 1 [source_file: expected0]\n            NAME x 1 [source_file: expected0]\n\n\nSubtree2: EXPR_RESULT 1 [source_file: testcode]\n    CALL 1 [free_call: 1] [source_file: testcode]\n        NAME getWindow 1 [source_file: testcode]\n        NAME x 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testDoubleInlining2(InlineFunctionsTest.java:1109)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testIssue1101\njunit.framework.AssertionFailedError:\nExpected: var x;var saved$$inline_0=obj[\"prop\"];x=foo(obj)+saved$$inline_0\nResult: var x=foo(obj)+obj[\"prop\"]\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME x 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME saved$$inline_0 1 [source_file: expected0]\n                    GETELEM 1 [source_file: expected0]\n                        NAME obj 1 [source_file: expected0]\n                        STRING prop 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME x 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME foo 1 [source_file: expected0]\n                            NAME obj 1 [source_file: expected0]\n                        NAME saved$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME x 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME foo 1 [source_file: testcode]\n                        NAME obj 1 [source_file: testcode]\n                    GETELEM 1 [source_file: testcode]\n                        NAME obj 1 [source_file: testcode]\n                        STRING prop 1 [source_file: testcode]\n\n\nSubtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n    VAR 1 [source_file: expected0]\n        NAME x 1 [source_file: expected0]\n    BLOCK 1 [source_file: expected0]\n        VAR 1 [source_file: expected0]\n            NAME saved$$inline_0 1 [source_file: expected0]\n                GETELEM 1 [source_file: expected0]\n                    NAME obj 1 [source_file: expected0]\n                    STRING prop 1 [source_file: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ASSIGN 1 [source_file: expected0]\n                NAME x 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME foo 1 [source_file: expected0]\n                        NAME obj 1 [source_file: expected0]\n                    NAME saved$$inline_0 1 [source_file: expected0]\n\n\nSubtree2: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n    VAR 1 [source_file: testcode]\n        NAME x 1 [source_file: testcode]\n            ADD 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    NAME foo 1 [source_file: testcode]\n                    NAME obj 1 [source_file: testcode]\n                GETELEM 1 [source_file: testcode]\n                    NAME obj 1 [source_file: testcode]\n                    STRING prop 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testIssue1101(InlineFunctionsTest.java:2371)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified8\njunit.framework.AssertionFailedError:\nExpected: o.x=2\nResult: o.x=2\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    GETPROP 1 [source_file: expected0]\n                        NAME o 1 [source_file: expected0]\n                        STRING x 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            ASSIGN 1 [source_file: testcode]\n                GETPROP 1 [source_file: testcode]\n                    NAME o 1 [source_file: testcode]\n                    STRING x 1 [source_file: testcode]\n                NUMBER 2.0 1 [source_file: testcode]\n\n\nSubtree1: BLOCK 1 [source_file: expected0]\n    EXPR_RESULT 1 [source_file: expected0]\n        ASSIGN 1 [source_file: expected0]\n            GETPROP 1 [source_file: expected0]\n                NAME o 1 [source_file: expected0]\n                STRING x 1 [source_file: expected0]\n            NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: EXPR_RESULT 1 [source_file: testcode]\n    ASSIGN 1 [source_file: testcode]\n        GETPROP 1 [source_file: testcode]\n            NAME o 1 [source_file: testcode]\n            STRING x 1 [source_file: testcode]\n        NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineIfParametersModified8(InlineFunctionsTest.java:601)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified9\njunit.framework.AssertionFailedError:\nExpected: o[2]=2\nResult: o[2]=2\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    GETELEM 1 [source_file: expected0]\n                        NAME o 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            ASSIGN 1 [source_file: testcode]\n                GETELEM 1 [source_file: testcode]\n                    NAME o 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n                NUMBER 2.0 1 [source_file: testcode]\n\n\nSubtree1: BLOCK 1 [source_file: expected0]\n    EXPR_RESULT 1 [source_file: expected0]\n        ASSIGN 1 [source_file: expected0]\n            GETELEM 1 [source_file: expected0]\n                NAME o 1 [source_file: expected0]\n                NUMBER 2.0 1 [source_file: expected0]\n            NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: EXPR_RESULT 1 [source_file: testcode]\n    ASSIGN 1 [source_file: testcode]\n        GETELEM 1 [source_file: testcode]\n            NAME o 1 [source_file: testcode]\n            NUMBER 2.0 1 [source_file: testcode]\n        NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineIfParametersModified9(InlineFunctionsTest.java:606)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions6\njunit.framework.AssertionFailedError:\nExpected: var JSCompiler_temp_const$$0=alert;var JSCompiler_inline_result$$1;JSCompiler_inline_result$$1=baz(nochg(1+2));JSCompiler_temp_const$$0(JSCompiler_inline_result$$1)\nResult: alert(baz(nochg(1+2)))\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                NAME alert 1 [source_file: expected0]\n        VAR 1 [source_file: expected0]\n            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME baz 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME nochg 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n                                NUMBER 2.0 1 [source_file: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            CALL 1 [free_call: 1] [source_file: expected0]\n                NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            CALL 1 [free_call: 1] [source_file: testcode]\n                NAME alert 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    NAME baz 1 [source_file: testcode]\n                    CALL 1 [side_effect_flags: 15] [free_call: 1] [source_file: testcode]\n                        NAME nochg 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n\n\nSubtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n    VAR 1 [source_file: expected0]\n        NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n            NAME alert 1 [source_file: expected0]\n    VAR 1 [source_file: expected0]\n        NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n    BLOCK 1 [source_file: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ASSIGN 1 [source_file: expected0]\n                NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    NAME baz 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME nochg 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n    EXPR_RESULT 1 [source_file: expected0]\n        CALL 1 [free_call: 1] [source_file: expected0]\n            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n\n\nSubtree2: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n    EXPR_RESULT 1 [source_file: testcode]\n        CALL 1 [free_call: 1] [source_file: testcode]\n            NAME alert 1 [source_file: testcode]\n            CALL 1 [free_call: 1] [source_file: testcode]\n                NAME baz 1 [source_file: testcode]\n                CALL 1 [side_effect_flags: 15] [free_call: 1] [source_file: testcode]\n                    NAME nochg 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions6(InlineFunctionsTest.java:157)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n\n\nfailure assertion code:\nhelperCanInlineReferenceToFunction(CanInlineResult.NO,\n\n\nThere is a bug in the above code, please help me locate it by considering the stack trace information and failure assertion code.\n\nPlease output **only one integer**: the line number of the buggy code (The code starts from line 1). Do not provide any explanations or additional content.\n",
        "prompt_fl_4": "\nsource code:\nprivate CanInlineResult canInlineReferenceDirectly(\n      Node callNode, Node fnNode) {\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n      return CanInlineResult.NO;\n    }\n\n    Node block = fnNode.getLastChild();\n\n\n    // CALL NODE: [ NAME, ARG1, ARG2, ... ]\n    Node cArg = callNode.getFirstChild().getNext();\n\n    // Functions called via 'call' and 'apply' have a this-object as\n    // the first parameter, but this is not part of the called function's\n    // parameter list.\n    if (!callNode.getFirstChild().isName()) {\n      if (NodeUtil.isFunctionObjectCall(callNode)) {\n        // TODO(johnlenz): Support replace this with a value.\n        if (cArg == null || !cArg.isThis()) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      } else {\n        // \".apply\" call should be filtered before this.\n        Preconditions.checkState(!NodeUtil.isFunctionObjectApply(callNode));\n      }\n    }\n\n    // FUNCTION NODE -> LP NODE: [ ARG1, ARG2, ... ]\n    Node fnParam = NodeUtil.getFunctionParameters(fnNode).getFirstChild();\n    while (cArg != null || fnParam != null) {\n      // For each named parameter check if a mutable argument use more than one.\n      if (fnParam != null) {\n        if (cArg != null) {\n\n          // Check for arguments that are evaluated more than once.\n          // Note: Unlike block inlining, there it is not possible that a\n          // parameter reference will be in a loop.\n          if (NodeUtil.mayEffectMutableState(cArg, compiler)\n              && NodeUtil.getNameReferenceCount(\n                  block, fnParam.getString()) > 1) {\n            return CanInlineResult.NO;\n          }\n        }\n\n        // Move to the next name.\n        fnParam = fnParam.getNext();\n      }\n\n      // For every call argument check for side-effects, even if there\n      // isn't a named parameter to match.\n      if (cArg != null) {\n        if (NodeUtil.mayHaveSideEffects(cArg, compiler)) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      }\n    }\n\n    return CanInlineResult.YES;\n  }\n\nThere is a bug in the above code, please help me locate it.\n\nOutput **only** the exact buggy statement, with no line numbers, explanations, or additional content. Your response should contain just the buggy code line. Do not include ```java or ``` markers in the response.\n",
        "prompt_fl_5": "\nsource code:\nprivate CanInlineResult canInlineReferenceDirectly(\n      Node callNode, Node fnNode) {\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n      return CanInlineResult.NO;\n    }\n\n    Node block = fnNode.getLastChild();\n\n\n    // CALL NODE: [ NAME, ARG1, ARG2, ... ]\n    Node cArg = callNode.getFirstChild().getNext();\n\n    // Functions called via 'call' and 'apply' have a this-object as\n    // the first parameter, but this is not part of the called function's\n    // parameter list.\n    if (!callNode.getFirstChild().isName()) {\n      if (NodeUtil.isFunctionObjectCall(callNode)) {\n        // TODO(johnlenz): Support replace this with a value.\n        if (cArg == null || !cArg.isThis()) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      } else {\n        // \".apply\" call should be filtered before this.\n        Preconditions.checkState(!NodeUtil.isFunctionObjectApply(callNode));\n      }\n    }\n\n    // FUNCTION NODE -> LP NODE: [ ARG1, ARG2, ... ]\n    Node fnParam = NodeUtil.getFunctionParameters(fnNode).getFirstChild();\n    while (cArg != null || fnParam != null) {\n      // For each named parameter check if a mutable argument use more than one.\n      if (fnParam != null) {\n        if (cArg != null) {\n\n          // Check for arguments that are evaluated more than once.\n          // Note: Unlike block inlining, there it is not possible that a\n          // parameter reference will be in a loop.\n          if (NodeUtil.mayEffectMutableState(cArg, compiler)\n              && NodeUtil.getNameReferenceCount(\n                  block, fnParam.getString()) > 1) {\n            return CanInlineResult.NO;\n          }\n        }\n\n        // Move to the next name.\n        fnParam = fnParam.getNext();\n      }\n\n      // For every call argument check for side-effects, even if there\n      // isn't a named parameter to match.\n      if (cArg != null) {\n        if (NodeUtil.mayHaveSideEffects(cArg, compiler)) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      }\n    }\n\n    return CanInlineResult.YES;\n  }\n\nstack trace:\ncom.google.javascript.jscomp.FunctionInjectorTest::testIssue1101a\njunit.framework.AssertionFailedError: expected:<NO> but was:<YES>\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.failNotEquals(Assert.java:329)\n\tat junit.framework.Assert.assertEquals(Assert.java:78)\n\tat junit.framework.Assert.assertEquals(Assert.java:86)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$1.call(FunctionInjectorTest.java:1404)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1545)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:540)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:287)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:494)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1411)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1375)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testIssue1101a(FunctionInjectorTest.java:1347)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testIssue1101b\njunit.framework.AssertionFailedError: expected:<NO> but was:<YES>\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.failNotEquals(Assert.java:329)\n\tat junit.framework.Assert.assertEquals(Assert.java:78)\n\tat junit.framework.Assert.assertEquals(Assert.java:86)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$1.call(FunctionInjectorTest.java:1404)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1545)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:540)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:287)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:494)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1411)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1375)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testIssue1101b(FunctionInjectorTest.java:1353)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testBug4944818\njunit.framework.AssertionFailedError:\nExpected: HangoutStarter.prototype.launchHangout=function(){var self$$2=a.b;var JSCompiler_temp_const$$0=goog.Uri;var JSCompiler_inline_result$$1;var JSCompiler_inline_result$$0;var self$$inline_1=self$$2;if(!self$$inline_1.domServices_)self$$inline_1.domServices_=goog$component$DomServices.get(self$$inline_1.appContext_);JSCompiler_inline_result$$0=self$$inline_1.domServices_;JSCompiler_inline_result$$1=JSCompiler_inline_result$$0.getDomHelper().getWindow();var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.location.href)}\nResult: HangoutStarter.prototype.launchHangout=function(){var self$$2=a.b;var JSCompiler_temp_const$$0=goog.Uri;var JSCompiler_inline_result$$1;var self$$inline_2=self$$2;if(!self$$inline_2.domServices_)self$$inline_2.domServices_=goog$component$DomServices.get(self$$inline_2.appContext_);JSCompiler_inline_result$$1=self$$inline_2.domServices_;var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.getDomHelper().getWindow().location.href)}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ASSIGN 1 [source_file: expected0]\n                GETPROP 1 [source_file: expected0]\n                    GETPROP 1 [source_file: expected0]\n                        NAME HangoutStarter 1 [source_file: expected0]\n                        STRING prototype 1 [source_file: expected0]\n                    STRING launchHangout 1 [source_file: expected0]\n                FUNCTION  1 [source_file: expected0]\n                    NAME  1 [source_file: expected0]\n                    PARAM_LIST 1 [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME self$$2 1 [source_file: expected0]\n                                GETPROP 1 [source_file: expected0]\n                                    NAME a 1 [source_file: expected0]\n                                    STRING b 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                                GETPROP 1 [source_file: expected0]\n                                    NAME goog 1 [source_file: expected0]\n                                    STRING Uri 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            VAR 1 [source_file: expected0]\n                                NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n                            BLOCK 1 [source_file: expected0]\n                                VAR 1 [source_file: expected0]\n                                    NAME self$$inline_1 1 [source_file: expected0]\n                                        NAME self$$2 1 [source_file: expected0]\n                                IF 1 [source_file: expected0]\n                                    NOT 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            NAME self$$inline_1 1 [source_file: expected0]\n                                            STRING domServices_ 1 [source_file: expected0]\n                                    BLOCK 1 [source_file: expected0]\n                                        EXPR_RESULT 1 [source_file: expected0]\n                                            ASSIGN 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    NAME self$$inline_1 1 [source_file: expected0]\n                                                    STRING domServices_ 1 [source_file: expected0]\n                                                CALL 1 [source_file: expected0]\n                                                    GETPROP 1 [source_file: expected0]\n                                                        NAME goog$component$DomServices 1 [source_file: expected0]\n                                                        STRING get 1 [source_file: expected0]\n                                                    GETPROP 1 [source_file: expected0]\n                                                        NAME self$$inline_1 1 [source_file: expected0]\n                                                        STRING appContext_ 1 [source_file: expected0]\n                                EXPR_RESULT 1 [source_file: expected0]\n                                    ASSIGN 1 [source_file: expected0]\n                                        NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            NAME self$$inline_1 1 [source_file: expected0]\n                                            STRING domServices_ 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                                    CALL 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            CALL 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n                                                    STRING getDomHelper 1 [source_file: expected0]\n                                            STRING getWindow 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME myUrl 1 [source_file: expected0]\n                                NEW 1 [source_file: expected0]\n                                    NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                                            STRING location 1 [source_file: expected0]\n                                        STRING href 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 13 [source_file: testcode]\n            ASSIGN 13 [source_file: testcode]\n                GETPROP 13 [source_file: testcode]\n                    GETPROP 13 [source_file: testcode]\n                        NAME HangoutStarter 13 [source_file: testcode]\n                        STRING prototype 13 [source_file: testcode]\n                    STRING launchHangout 13 [source_file: testcode]\n                FUNCTION  13 [source_file: testcode]\n                    NAME  13 [source_file: testcode]\n                    PARAM_LIST 13 [source_file: testcode]\n                    BLOCK 13 [source_file: testcode]\n                        VAR 14 [source_file: testcode]\n                            NAME self$$2 14 [source_file: testcode]\n                                GETPROP 14 [source_file: testcode]\n                                    NAME a 14 [source_file: testcode]\n                                    STRING b 14 [source_file: testcode]\n                        VAR 15 [source_file: testcode]\n                            NAME JSCompiler_temp_const$$0 15 [source_file: testcode]\n                                GETPROP 15 [source_file: testcode]\n                                    NAME goog 15 [source_file: testcode]\n                                    STRING Uri 15 [source_file: testcode]\n                        VAR 10 [source_file: testcode]\n                            NAME JSCompiler_inline_result$$1 10 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            VAR 15 [source_file: testcode]\n                                NAME self$$inline_2 15 [source_file: testcode]\n                                    NAME self$$2 15 [source_file: testcode]\n                            IF 2 [source_file: testcode]\n                                NOT 2 [source_file: testcode]\n                                    GETPROP 2 [source_file: testcode]\n                                        NAME self$$inline_2 2 [source_file: testcode]\n                                        STRING domServices_ 2 [source_file: testcode]\n                                BLOCK 2 [source_file: testcode]\n                                    EXPR_RESULT 3 [source_file: testcode]\n                                        ASSIGN 3 [source_file: testcode]\n                                            GETPROP 3 [source_file: testcode]\n                                                NAME self$$inline_2 3 [source_file: testcode]\n                                                STRING domServices_ 3 [source_file: testcode]\n                                            CALL 3 [source_file: testcode]\n                                                GETPROP 3 [source_file: testcode]\n                                                    NAME goog$component$DomServices 3 [source_file: testcode]\n                                                    STRING get 3 [source_file: testcode]\n                                                GETPROP 3 [source_file: testcode]\n                                                    NAME self$$inline_2 3 [source_file: testcode]\n                                                    STRING appContext_ 3 [source_file: testcode]\n                            EXPR_RESULT 6 [source_file: testcode]\n                                ASSIGN 6 [source_file: testcode]\n                                    NAME JSCompiler_inline_result$$1 6 [source_file: testcode]\n                                    GETPROP 6 [source_file: testcode]\n                                        NAME self$$inline_2 6 [source_file: testcode]\n                                        STRING domServices_ 6 [source_file: testcode]\n                        VAR 15 [source_file: testcode]\n                            NAME myUrl 15 [source_file: testcode]\n                                NEW 15 [source_file: testcode]\n                                    NAME JSCompiler_temp_const$$0 15 [source_file: testcode]\n                                    GETPROP 15 [source_file: testcode]\n                                        GETPROP 15 [source_file: testcode]\n                                            CALL 10 [source_file: testcode]\n                                                GETPROP 10 [source_file: testcode]\n                                                    CALL 10 [source_file: testcode]\n                                                        GETPROP 10 [source_file: testcode]\n                                                            NAME JSCompiler_inline_result$$1 10 [source_file: testcode]\n                                                            STRING getDomHelper 10 [source_file: testcode]\n                                                    STRING getWindow 10 [source_file: testcode]\n                                            STRING location 15 [source_file: testcode]\n                                        STRING href 15 [source_file: testcode]\n\n\nSubtree1: NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n\n\nSubtree2: NAME self$$inline_2 15 [source_file: testcode]\n    NAME self$$2 15 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testBug4944818(InlineFunctionsTest.java:2063)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\ncom.google.javascript.jscomp.InlineFunctionsTest::testDoubleInlining2\njunit.framework.AssertionFailedError:\nExpected: getWindow(x)\nResult: getWindow(x)\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    NAME getWindow 1 [source_file: expected0]\n                    NAME x 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            CALL 1 [free_call: 1] [source_file: testcode]\n                NAME getWindow 1 [source_file: testcode]\n                NAME x 1 [source_file: testcode]\n\n\nSubtree1: BLOCK 1 [source_file: expected0]\n    EXPR_RESULT 1 [source_file: expected0]\n        CALL 1 [free_call: 1] [source_file: expected0]\n            NAME getWindow 1 [source_file: expected0]\n            NAME x 1 [source_file: expected0]\n\n\nSubtree2: EXPR_RESULT 1 [source_file: testcode]\n    CALL 1 [free_call: 1] [source_file: testcode]\n        NAME getWindow 1 [source_file: testcode]\n        NAME x 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testDoubleInlining2(InlineFunctionsTest.java:1109)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testIssue1101\njunit.framework.AssertionFailedError:\nExpected: var x;var saved$$inline_0=obj[\"prop\"];x=foo(obj)+saved$$inline_0\nResult: var x=foo(obj)+obj[\"prop\"]\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME x 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME saved$$inline_0 1 [source_file: expected0]\n                    GETELEM 1 [source_file: expected0]\n                        NAME obj 1 [source_file: expected0]\n                        STRING prop 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME x 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME foo 1 [source_file: expected0]\n                            NAME obj 1 [source_file: expected0]\n                        NAME saved$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME x 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME foo 1 [source_file: testcode]\n                        NAME obj 1 [source_file: testcode]\n                    GETELEM 1 [source_file: testcode]\n                        NAME obj 1 [source_file: testcode]\n                        STRING prop 1 [source_file: testcode]\n\n\nSubtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n    VAR 1 [source_file: expected0]\n        NAME x 1 [source_file: expected0]\n    BLOCK 1 [source_file: expected0]\n        VAR 1 [source_file: expected0]\n            NAME saved$$inline_0 1 [source_file: expected0]\n                GETELEM 1 [source_file: expected0]\n                    NAME obj 1 [source_file: expected0]\n                    STRING prop 1 [source_file: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ASSIGN 1 [source_file: expected0]\n                NAME x 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME foo 1 [source_file: expected0]\n                        NAME obj 1 [source_file: expected0]\n                    NAME saved$$inline_0 1 [source_file: expected0]\n\n\nSubtree2: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n    VAR 1 [source_file: testcode]\n        NAME x 1 [source_file: testcode]\n            ADD 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    NAME foo 1 [source_file: testcode]\n                    NAME obj 1 [source_file: testcode]\n                GETELEM 1 [source_file: testcode]\n                    NAME obj 1 [source_file: testcode]\n                    STRING prop 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testIssue1101(InlineFunctionsTest.java:2371)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified8\njunit.framework.AssertionFailedError:\nExpected: o.x=2\nResult: o.x=2\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    GETPROP 1 [source_file: expected0]\n                        NAME o 1 [source_file: expected0]\n                        STRING x 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            ASSIGN 1 [source_file: testcode]\n                GETPROP 1 [source_file: testcode]\n                    NAME o 1 [source_file: testcode]\n                    STRING x 1 [source_file: testcode]\n                NUMBER 2.0 1 [source_file: testcode]\n\n\nSubtree1: BLOCK 1 [source_file: expected0]\n    EXPR_RESULT 1 [source_file: expected0]\n        ASSIGN 1 [source_file: expected0]\n            GETPROP 1 [source_file: expected0]\n                NAME o 1 [source_file: expected0]\n                STRING x 1 [source_file: expected0]\n            NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: EXPR_RESULT 1 [source_file: testcode]\n    ASSIGN 1 [source_file: testcode]\n        GETPROP 1 [source_file: testcode]\n            NAME o 1 [source_file: testcode]\n            STRING x 1 [source_file: testcode]\n        NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineIfParametersModified8(InlineFunctionsTest.java:601)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified9\njunit.framework.AssertionFailedError:\nExpected: o[2]=2\nResult: o[2]=2\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    GETELEM 1 [source_file: expected0]\n                        NAME o 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            ASSIGN 1 [source_file: testcode]\n                GETELEM 1 [source_file: testcode]\n                    NAME o 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n                NUMBER 2.0 1 [source_file: testcode]\n\n\nSubtree1: BLOCK 1 [source_file: expected0]\n    EXPR_RESULT 1 [source_file: expected0]\n        ASSIGN 1 [source_file: expected0]\n            GETELEM 1 [source_file: expected0]\n                NAME o 1 [source_file: expected0]\n                NUMBER 2.0 1 [source_file: expected0]\n            NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: EXPR_RESULT 1 [source_file: testcode]\n    ASSIGN 1 [source_file: testcode]\n        GETELEM 1 [source_file: testcode]\n            NAME o 1 [source_file: testcode]\n            NUMBER 2.0 1 [source_file: testcode]\n        NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineIfParametersModified9(InlineFunctionsTest.java:606)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions6\njunit.framework.AssertionFailedError:\nExpected: var JSCompiler_temp_const$$0=alert;var JSCompiler_inline_result$$1;JSCompiler_inline_result$$1=baz(nochg(1+2));JSCompiler_temp_const$$0(JSCompiler_inline_result$$1)\nResult: alert(baz(nochg(1+2)))\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                NAME alert 1 [source_file: expected0]\n        VAR 1 [source_file: expected0]\n            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME baz 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME nochg 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n                                NUMBER 2.0 1 [source_file: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            CALL 1 [free_call: 1] [source_file: expected0]\n                NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            CALL 1 [free_call: 1] [source_file: testcode]\n                NAME alert 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    NAME baz 1 [source_file: testcode]\n                    CALL 1 [side_effect_flags: 15] [free_call: 1] [source_file: testcode]\n                        NAME nochg 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n\n\nSubtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n    VAR 1 [source_file: expected0]\n        NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n            NAME alert 1 [source_file: expected0]\n    VAR 1 [source_file: expected0]\n        NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n    BLOCK 1 [source_file: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ASSIGN 1 [source_file: expected0]\n                NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    NAME baz 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME nochg 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n    EXPR_RESULT 1 [source_file: expected0]\n        CALL 1 [free_call: 1] [source_file: expected0]\n            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n\n\nSubtree2: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n    EXPR_RESULT 1 [source_file: testcode]\n        CALL 1 [free_call: 1] [source_file: testcode]\n            NAME alert 1 [source_file: testcode]\n            CALL 1 [free_call: 1] [source_file: testcode]\n                NAME baz 1 [source_file: testcode]\n                CALL 1 [side_effect_flags: 15] [free_call: 1] [source_file: testcode]\n                    NAME nochg 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions6(InlineFunctionsTest.java:157)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n\n\nThere is a bug in the above code, please help me locate it by considering the stack trace.\n\nOutput **only** the exact buggy statement, with no line numbers, explanations, or additional content. Your response should contain just the buggy code line. Do not include ```java or ``` markers in the response.\n",
        "prompt_fl_6": "\nsource code:\nprivate CanInlineResult canInlineReferenceDirectly(\n      Node callNode, Node fnNode) {\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n      return CanInlineResult.NO;\n    }\n\n    Node block = fnNode.getLastChild();\n\n\n    // CALL NODE: [ NAME, ARG1, ARG2, ... ]\n    Node cArg = callNode.getFirstChild().getNext();\n\n    // Functions called via 'call' and 'apply' have a this-object as\n    // the first parameter, but this is not part of the called function's\n    // parameter list.\n    if (!callNode.getFirstChild().isName()) {\n      if (NodeUtil.isFunctionObjectCall(callNode)) {\n        // TODO(johnlenz): Support replace this with a value.\n        if (cArg == null || !cArg.isThis()) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      } else {\n        // \".apply\" call should be filtered before this.\n        Preconditions.checkState(!NodeUtil.isFunctionObjectApply(callNode));\n      }\n    }\n\n    // FUNCTION NODE -> LP NODE: [ ARG1, ARG2, ... ]\n    Node fnParam = NodeUtil.getFunctionParameters(fnNode).getFirstChild();\n    while (cArg != null || fnParam != null) {\n      // For each named parameter check if a mutable argument use more than one.\n      if (fnParam != null) {\n        if (cArg != null) {\n\n          // Check for arguments that are evaluated more than once.\n          // Note: Unlike block inlining, there it is not possible that a\n          // parameter reference will be in a loop.\n          if (NodeUtil.mayEffectMutableState(cArg, compiler)\n              && NodeUtil.getNameReferenceCount(\n                  block, fnParam.getString()) > 1) {\n            return CanInlineResult.NO;\n          }\n        }\n\n        // Move to the next name.\n        fnParam = fnParam.getNext();\n      }\n\n      // For every call argument check for side-effects, even if there\n      // isn't a named parameter to match.\n      if (cArg != null) {\n        if (NodeUtil.mayHaveSideEffects(cArg, compiler)) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      }\n    }\n\n    return CanInlineResult.YES;\n  }\n\nstack trace:\ncom.google.javascript.jscomp.FunctionInjectorTest::testIssue1101a\njunit.framework.AssertionFailedError: expected:<NO> but was:<YES>\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.failNotEquals(Assert.java:329)\n\tat junit.framework.Assert.assertEquals(Assert.java:78)\n\tat junit.framework.Assert.assertEquals(Assert.java:86)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$1.call(FunctionInjectorTest.java:1404)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1545)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:540)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:287)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:494)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1411)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1375)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testIssue1101a(FunctionInjectorTest.java:1347)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.FunctionInjectorTest::testIssue1101b\njunit.framework.AssertionFailedError: expected:<NO> but was:<YES>\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.failNotEquals(Assert.java:329)\n\tat junit.framework.Assert.assertEquals(Assert.java:78)\n\tat junit.framework.Assert.assertEquals(Assert.java:86)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$1.call(FunctionInjectorTest.java:1404)\n\tat com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1545)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:540)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)\n\tat com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:287)\n\tat com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:494)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1411)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1375)\n\tat com.google.javascript.jscomp.FunctionInjectorTest.testIssue1101b(FunctionInjectorTest.java:1353)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testBug4944818\njunit.framework.AssertionFailedError:\nExpected: HangoutStarter.prototype.launchHangout=function(){var self$$2=a.b;var JSCompiler_temp_const$$0=goog.Uri;var JSCompiler_inline_result$$1;var JSCompiler_inline_result$$0;var self$$inline_1=self$$2;if(!self$$inline_1.domServices_)self$$inline_1.domServices_=goog$component$DomServices.get(self$$inline_1.appContext_);JSCompiler_inline_result$$0=self$$inline_1.domServices_;JSCompiler_inline_result$$1=JSCompiler_inline_result$$0.getDomHelper().getWindow();var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.location.href)}\nResult: HangoutStarter.prototype.launchHangout=function(){var self$$2=a.b;var JSCompiler_temp_const$$0=goog.Uri;var JSCompiler_inline_result$$1;var self$$inline_2=self$$2;if(!self$$inline_2.domServices_)self$$inline_2.domServices_=goog$component$DomServices.get(self$$inline_2.appContext_);JSCompiler_inline_result$$1=self$$inline_2.domServices_;var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.getDomHelper().getWindow().location.href)}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ASSIGN 1 [source_file: expected0]\n                GETPROP 1 [source_file: expected0]\n                    GETPROP 1 [source_file: expected0]\n                        NAME HangoutStarter 1 [source_file: expected0]\n                        STRING prototype 1 [source_file: expected0]\n                    STRING launchHangout 1 [source_file: expected0]\n                FUNCTION  1 [source_file: expected0]\n                    NAME  1 [source_file: expected0]\n                    PARAM_LIST 1 [source_file: expected0]\n                    BLOCK 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME self$$2 1 [source_file: expected0]\n                                GETPROP 1 [source_file: expected0]\n                                    NAME a 1 [source_file: expected0]\n                                    STRING b 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                                GETPROP 1 [source_file: expected0]\n                                    NAME goog 1 [source_file: expected0]\n                                    STRING Uri 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                        BLOCK 1 [source_file: expected0]\n                            VAR 1 [source_file: expected0]\n                                NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n                            BLOCK 1 [source_file: expected0]\n                                VAR 1 [source_file: expected0]\n                                    NAME self$$inline_1 1 [source_file: expected0]\n                                        NAME self$$2 1 [source_file: expected0]\n                                IF 1 [source_file: expected0]\n                                    NOT 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            NAME self$$inline_1 1 [source_file: expected0]\n                                            STRING domServices_ 1 [source_file: expected0]\n                                    BLOCK 1 [source_file: expected0]\n                                        EXPR_RESULT 1 [source_file: expected0]\n                                            ASSIGN 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    NAME self$$inline_1 1 [source_file: expected0]\n                                                    STRING domServices_ 1 [source_file: expected0]\n                                                CALL 1 [source_file: expected0]\n                                                    GETPROP 1 [source_file: expected0]\n                                                        NAME goog$component$DomServices 1 [source_file: expected0]\n                                                        STRING get 1 [source_file: expected0]\n                                                    GETPROP 1 [source_file: expected0]\n                                                        NAME self$$inline_1 1 [source_file: expected0]\n                                                        STRING appContext_ 1 [source_file: expected0]\n                                EXPR_RESULT 1 [source_file: expected0]\n                                    ASSIGN 1 [source_file: expected0]\n                                        NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            NAME self$$inline_1 1 [source_file: expected0]\n                                            STRING domServices_ 1 [source_file: expected0]\n                            EXPR_RESULT 1 [source_file: expected0]\n                                ASSIGN 1 [source_file: expected0]\n                                    NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                                    CALL 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            CALL 1 [source_file: expected0]\n                                                GETPROP 1 [source_file: expected0]\n                                                    NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n                                                    STRING getDomHelper 1 [source_file: expected0]\n                                            STRING getWindow 1 [source_file: expected0]\n                        VAR 1 [source_file: expected0]\n                            NAME myUrl 1 [source_file: expected0]\n                                NEW 1 [source_file: expected0]\n                                    NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                                    GETPROP 1 [source_file: expected0]\n                                        GETPROP 1 [source_file: expected0]\n                                            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                                            STRING location 1 [source_file: expected0]\n                                        STRING href 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 13 [source_file: testcode]\n            ASSIGN 13 [source_file: testcode]\n                GETPROP 13 [source_file: testcode]\n                    GETPROP 13 [source_file: testcode]\n                        NAME HangoutStarter 13 [source_file: testcode]\n                        STRING prototype 13 [source_file: testcode]\n                    STRING launchHangout 13 [source_file: testcode]\n                FUNCTION  13 [source_file: testcode]\n                    NAME  13 [source_file: testcode]\n                    PARAM_LIST 13 [source_file: testcode]\n                    BLOCK 13 [source_file: testcode]\n                        VAR 14 [source_file: testcode]\n                            NAME self$$2 14 [source_file: testcode]\n                                GETPROP 14 [source_file: testcode]\n                                    NAME a 14 [source_file: testcode]\n                                    STRING b 14 [source_file: testcode]\n                        VAR 15 [source_file: testcode]\n                            NAME JSCompiler_temp_const$$0 15 [source_file: testcode]\n                                GETPROP 15 [source_file: testcode]\n                                    NAME goog 15 [source_file: testcode]\n                                    STRING Uri 15 [source_file: testcode]\n                        VAR 10 [source_file: testcode]\n                            NAME JSCompiler_inline_result$$1 10 [source_file: testcode]\n                        BLOCK 1 [source_file: testcode]\n                            VAR 15 [source_file: testcode]\n                                NAME self$$inline_2 15 [source_file: testcode]\n                                    NAME self$$2 15 [source_file: testcode]\n                            IF 2 [source_file: testcode]\n                                NOT 2 [source_file: testcode]\n                                    GETPROP 2 [source_file: testcode]\n                                        NAME self$$inline_2 2 [source_file: testcode]\n                                        STRING domServices_ 2 [source_file: testcode]\n                                BLOCK 2 [source_file: testcode]\n                                    EXPR_RESULT 3 [source_file: testcode]\n                                        ASSIGN 3 [source_file: testcode]\n                                            GETPROP 3 [source_file: testcode]\n                                                NAME self$$inline_2 3 [source_file: testcode]\n                                                STRING domServices_ 3 [source_file: testcode]\n                                            CALL 3 [source_file: testcode]\n                                                GETPROP 3 [source_file: testcode]\n                                                    NAME goog$component$DomServices 3 [source_file: testcode]\n                                                    STRING get 3 [source_file: testcode]\n                                                GETPROP 3 [source_file: testcode]\n                                                    NAME self$$inline_2 3 [source_file: testcode]\n                                                    STRING appContext_ 3 [source_file: testcode]\n                            EXPR_RESULT 6 [source_file: testcode]\n                                ASSIGN 6 [source_file: testcode]\n                                    NAME JSCompiler_inline_result$$1 6 [source_file: testcode]\n                                    GETPROP 6 [source_file: testcode]\n                                        NAME self$$inline_2 6 [source_file: testcode]\n                                        STRING domServices_ 6 [source_file: testcode]\n                        VAR 15 [source_file: testcode]\n                            NAME myUrl 15 [source_file: testcode]\n                                NEW 15 [source_file: testcode]\n                                    NAME JSCompiler_temp_const$$0 15 [source_file: testcode]\n                                    GETPROP 15 [source_file: testcode]\n                                        GETPROP 15 [source_file: testcode]\n                                            CALL 10 [source_file: testcode]\n                                                GETPROP 10 [source_file: testcode]\n                                                    CALL 10 [source_file: testcode]\n                                                        GETPROP 10 [source_file: testcode]\n                                                            NAME JSCompiler_inline_result$$1 10 [source_file: testcode]\n                                                            STRING getDomHelper 10 [source_file: testcode]\n                                                    STRING getWindow 10 [source_file: testcode]\n                                            STRING location 15 [source_file: testcode]\n                                        STRING href 15 [source_file: testcode]\n\n\nSubtree1: NAME JSCompiler_inline_result$$0 1 [source_file: expected0]\n\n\nSubtree2: NAME self$$inline_2 15 [source_file: testcode]\n    NAME self$$2 15 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testBug4944818(InlineFunctionsTest.java:2063)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\ncom.google.javascript.jscomp.InlineFunctionsTest::testDoubleInlining2\njunit.framework.AssertionFailedError:\nExpected: getWindow(x)\nResult: getWindow(x)\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    NAME getWindow 1 [source_file: expected0]\n                    NAME x 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            CALL 1 [free_call: 1] [source_file: testcode]\n                NAME getWindow 1 [source_file: testcode]\n                NAME x 1 [source_file: testcode]\n\n\nSubtree1: BLOCK 1 [source_file: expected0]\n    EXPR_RESULT 1 [source_file: expected0]\n        CALL 1 [free_call: 1] [source_file: expected0]\n            NAME getWindow 1 [source_file: expected0]\n            NAME x 1 [source_file: expected0]\n\n\nSubtree2: EXPR_RESULT 1 [source_file: testcode]\n    CALL 1 [free_call: 1] [source_file: testcode]\n        NAME getWindow 1 [source_file: testcode]\n        NAME x 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testDoubleInlining2(InlineFunctionsTest.java:1109)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testIssue1101\njunit.framework.AssertionFailedError:\nExpected: var x;var saved$$inline_0=obj[\"prop\"];x=foo(obj)+saved$$inline_0\nResult: var x=foo(obj)+obj[\"prop\"]\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME x 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            VAR 1 [source_file: expected0]\n                NAME saved$$inline_0 1 [source_file: expected0]\n                    GETELEM 1 [source_file: expected0]\n                        NAME obj 1 [source_file: expected0]\n                        STRING prop 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME x 1 [source_file: expected0]\n                    ADD 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME foo 1 [source_file: expected0]\n                            NAME obj 1 [source_file: expected0]\n                        NAME saved$$inline_0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        VAR 1 [source_file: testcode]\n            NAME x 1 [source_file: testcode]\n                ADD 1 [source_file: testcode]\n                    CALL 1 [free_call: 1] [source_file: testcode]\n                        NAME foo 1 [source_file: testcode]\n                        NAME obj 1 [source_file: testcode]\n                    GETELEM 1 [source_file: testcode]\n                        NAME obj 1 [source_file: testcode]\n                        STRING prop 1 [source_file: testcode]\n\n\nSubtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n    VAR 1 [source_file: expected0]\n        NAME x 1 [source_file: expected0]\n    BLOCK 1 [source_file: expected0]\n        VAR 1 [source_file: expected0]\n            NAME saved$$inline_0 1 [source_file: expected0]\n                GETELEM 1 [source_file: expected0]\n                    NAME obj 1 [source_file: expected0]\n                    STRING prop 1 [source_file: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ASSIGN 1 [source_file: expected0]\n                NAME x 1 [source_file: expected0]\n                ADD 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME foo 1 [source_file: expected0]\n                        NAME obj 1 [source_file: expected0]\n                    NAME saved$$inline_0 1 [source_file: expected0]\n\n\nSubtree2: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n    VAR 1 [source_file: testcode]\n        NAME x 1 [source_file: testcode]\n            ADD 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    NAME foo 1 [source_file: testcode]\n                    NAME obj 1 [source_file: testcode]\n                GETELEM 1 [source_file: testcode]\n                    NAME obj 1 [source_file: testcode]\n                    STRING prop 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testIssue1101(InlineFunctionsTest.java:2371)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified8\njunit.framework.AssertionFailedError:\nExpected: o.x=2\nResult: o.x=2\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    GETPROP 1 [source_file: expected0]\n                        NAME o 1 [source_file: expected0]\n                        STRING x 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            ASSIGN 1 [source_file: testcode]\n                GETPROP 1 [source_file: testcode]\n                    NAME o 1 [source_file: testcode]\n                    STRING x 1 [source_file: testcode]\n                NUMBER 2.0 1 [source_file: testcode]\n\n\nSubtree1: BLOCK 1 [source_file: expected0]\n    EXPR_RESULT 1 [source_file: expected0]\n        ASSIGN 1 [source_file: expected0]\n            GETPROP 1 [source_file: expected0]\n                NAME o 1 [source_file: expected0]\n                STRING x 1 [source_file: expected0]\n            NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: EXPR_RESULT 1 [source_file: testcode]\n    ASSIGN 1 [source_file: testcode]\n        GETPROP 1 [source_file: testcode]\n            NAME o 1 [source_file: testcode]\n            STRING x 1 [source_file: testcode]\n        NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineIfParametersModified8(InlineFunctionsTest.java:601)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineIfParametersModified9\njunit.framework.AssertionFailedError:\nExpected: o[2]=2\nResult: o[2]=2\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    GETELEM 1 [source_file: expected0]\n                        NAME o 1 [source_file: expected0]\n                        NUMBER 2.0 1 [source_file: expected0]\n                    NUMBER 2.0 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            ASSIGN 1 [source_file: testcode]\n                GETELEM 1 [source_file: testcode]\n                    NAME o 1 [source_file: testcode]\n                    NUMBER 2.0 1 [source_file: testcode]\n                NUMBER 2.0 1 [source_file: testcode]\n\n\nSubtree1: BLOCK 1 [source_file: expected0]\n    EXPR_RESULT 1 [source_file: expected0]\n        ASSIGN 1 [source_file: expected0]\n            GETELEM 1 [source_file: expected0]\n                NAME o 1 [source_file: expected0]\n                NUMBER 2.0 1 [source_file: expected0]\n            NUMBER 2.0 1 [source_file: expected0]\n\n\nSubtree2: EXPR_RESULT 1 [source_file: testcode]\n    ASSIGN 1 [source_file: testcode]\n        GETELEM 1 [source_file: testcode]\n            NAME o 1 [source_file: testcode]\n            NUMBER 2.0 1 [source_file: testcode]\n        NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineIfParametersModified9(InlineFunctionsTest.java:606)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.InlineFunctionsTest::testInlineFunctions6\njunit.framework.AssertionFailedError:\nExpected: var JSCompiler_temp_const$$0=alert;var JSCompiler_inline_result$$1;JSCompiler_inline_result$$1=baz(nochg(1+2));JSCompiler_temp_const$$0(JSCompiler_inline_result$$1)\nResult: alert(baz(nochg(1+2)))\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n        VAR 1 [source_file: expected0]\n            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                NAME alert 1 [source_file: expected0]\n        VAR 1 [source_file: expected0]\n            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n        BLOCK 1 [source_file: expected0]\n            EXPR_RESULT 1 [source_file: expected0]\n                ASSIGN 1 [source_file: expected0]\n                    NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME baz 1 [source_file: expected0]\n                        CALL 1 [free_call: 1] [source_file: expected0]\n                            NAME nochg 1 [source_file: expected0]\n                            ADD 1 [source_file: expected0]\n                                NUMBER 1.0 1 [source_file: expected0]\n                                NUMBER 2.0 1 [source_file: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            CALL 1 [free_call: 1] [source_file: expected0]\n                NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n                NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n        EXPR_RESULT 1 [source_file: testcode]\n            CALL 1 [free_call: 1] [source_file: testcode]\n                NAME alert 1 [source_file: testcode]\n                CALL 1 [free_call: 1] [source_file: testcode]\n                    NAME baz 1 [source_file: testcode]\n                    CALL 1 [side_effect_flags: 15] [free_call: 1] [source_file: testcode]\n                        NAME nochg 1 [source_file: testcode]\n                        ADD 1 [source_file: testcode]\n                            NUMBER 1.0 1 [source_file: testcode]\n                            NUMBER 2.0 1 [source_file: testcode]\n\n\nSubtree1: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]\n    VAR 1 [source_file: expected0]\n        NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n            NAME alert 1 [source_file: expected0]\n    VAR 1 [source_file: expected0]\n        NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n    BLOCK 1 [source_file: expected0]\n        EXPR_RESULT 1 [source_file: expected0]\n            ASSIGN 1 [source_file: expected0]\n                NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n                CALL 1 [free_call: 1] [source_file: expected0]\n                    NAME baz 1 [source_file: expected0]\n                    CALL 1 [free_call: 1] [source_file: expected0]\n                        NAME nochg 1 [source_file: expected0]\n                        ADD 1 [source_file: expected0]\n                            NUMBER 1.0 1 [source_file: expected0]\n                            NUMBER 2.0 1 [source_file: expected0]\n    EXPR_RESULT 1 [source_file: expected0]\n        CALL 1 [free_call: 1] [source_file: expected0]\n            NAME JSCompiler_temp_const$$0 1 [source_file: expected0]\n            NAME JSCompiler_inline_result$$1 1 [source_file: expected0]\n\n\nSubtree2: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]\n    EXPR_RESULT 1 [source_file: testcode]\n        CALL 1 [free_call: 1] [source_file: testcode]\n            NAME alert 1 [source_file: testcode]\n            CALL 1 [free_call: 1] [source_file: testcode]\n                NAME baz 1 [source_file: testcode]\n                CALL 1 [side_effect_flags: 15] [free_call: 1] [source_file: testcode]\n                    NAME nochg 1 [source_file: testcode]\n                    ADD 1 [source_file: testcode]\n                        NUMBER 1.0 1 [source_file: testcode]\n                        NUMBER 2.0 1 [source_file: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)\n\tat com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions6(InlineFunctionsTest.java:157)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n\n\nfailure assertion code:\nhelperCanInlineReferenceToFunction(CanInlineResult.NO,\n\n\nThere is a bug in the above code, please help me locate it by considering the stack trace information and failure assertion code.\n\nOutput **only** the exact buggy statement, with no line numbers, explanations, or additional content. Your response should contain just the buggy code line. Do not include ```java or ``` markers in the response.\n",
        "prompt_apr_1": "\nprivate CanInlineResult canInlineReferenceDirectly(\n      Node callNode, Node fnNode) {\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n      return CanInlineResult.NO;\n    }\n\n    Node block = fnNode.getLastChild();\n\n\n    // CALL NODE: [ NAME, ARG1, ARG2, ... ]\n    Node cArg = callNode.getFirstChild().getNext();\n\n    // Functions called via 'call' and 'apply' have a this-object as\n    // the first parameter, but this is not part of the called function's\n    // parameter list.\n    if (!callNode.getFirstChild().isName()) {\n      if (NodeUtil.isFunctionObjectCall(callNode)) {\n        // TODO(johnlenz): Support replace this with a value.\n        if (cArg == null || !cArg.isThis()) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      } else {\n        // \".apply\" call should be filtered before this.\n        Preconditions.checkState(!NodeUtil.isFunctionObjectApply(callNode));\n      }\n    }\n\n    // FUNCTION NODE -> LP NODE: [ ARG1, ARG2, ... ]\n    Node fnParam = NodeUtil.getFunctionParameters(fnNode).getFirstChild();\n    while (cArg != null || fnParam != null) {\n      // For each named parameter check if a mutable argument use more than one.\n      if (fnParam != null) {\n        if (cArg != null) {\n\n          // Check for arguments that are evaluated more than once.\n          // Note: Unlike block inlining, there it is not possible that a\n          // parameter reference will be in a loop.\n          if (NodeUtil.mayEffectMutableState(cArg, compiler)\n              && NodeUtil.getNameReferenceCount(\n                  block, fnParam.getString()) > 1) {\n            return CanInlineResult.NO;\n          }\n        }\n\n        // Move to the next name.\n        fnParam = fnParam.getNext();\n      }\n\n      // For every call argument check for side-effects, even if there\n      // isn't a named parameter to match.\n      if (cArg != null) {\n        if (NodeUtil.mayHaveSideEffects(cArg, compiler)) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      }\n    }\n\n    return CanInlineResult.YES;\n  }\n\nThere is a bug in line [17, 46] of the code, please help me fix it.\n\nPlease return the **complete corrected method**. Do not skip or omit any part of the code. Do not include ```java or ``` markers in the response.\n",
        "prompt_apr_2": "\nprivate CanInlineResult canInlineReferenceDirectly(\n      Node callNode, Node fnNode) {\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n      return CanInlineResult.NO;\n    }\n\n    Node block = fnNode.getLastChild();\n\n\n    // CALL NODE: [ NAME, ARG1, ARG2, ... ]\n    Node cArg = callNode.getFirstChild().getNext();\n\n    // Functions called via 'call' and 'apply' have a this-object as\n    // the first parameter, but this is not part of the called function's\n    // parameter list.\n    if (!callNode.getFirstChild().isName()) {\n      if (NodeUtil.isFunctionObjectCall(callNode)) {\n        // TODO(johnlenz): Support replace this with a value.\n        if (cArg == null || !cArg.isThis()) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      } else {\n        // \".apply\" call should be filtered before this.\n        Preconditions.checkState(!NodeUtil.isFunctionObjectApply(callNode));\n      }\n    }\n\n    // FUNCTION NODE -> LP NODE: [ ARG1, ARG2, ... ]\n    Node fnParam = NodeUtil.getFunctionParameters(fnNode).getFirstChild();\n    while (cArg != null || fnParam != null) {\n      // For each named parameter check if a mutable argument use more than one.\n      if (fnParam != null) {\n        if (cArg != null) {\n\n          // Check for arguments that are evaluated more than once.\n          // Note: Unlike block inlining, there it is not possible that a\n          // parameter reference will be in a loop.\n          if (NodeUtil.mayEffectMutableState(cArg, compiler)\n              && NodeUtil.getNameReferenceCount(\n                  block, fnParam.getString()) > 1) {\n            return CanInlineResult.NO;\n          }\n        }\n\n        // Move to the next name.\n        fnParam = fnParam.getNext();\n      }\n\n      // For every call argument check for side-effects, even if there\n      // isn't a named parameter to match.\n      if (cArg != null) {\n        if (NodeUtil.mayHaveSideEffects(cArg, compiler)) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      }\n    }\n\n    return CanInlineResult.YES;\n  }\n\nThere is a bug in ['      if (NodeUtil.isFunctionObjectCall(callNode)) {', '        // Move to the next name.'] , please help me fix it. \n\nPlease return the **complete corrected method**. Do not skip or omit any part of the code. Do not include ```java or ``` markers in the response.\n",
        "prompt_apr_3": "\nprivate CanInlineResult canInlineReferenceDirectly(\n      Node callNode, Node fnNode) {\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n      return CanInlineResult.NO;\n    }\n\n    Node block = fnNode.getLastChild();\n\n\n    // CALL NODE: [ NAME, ARG1, ARG2, ... ]\n    Node cArg = callNode.getFirstChild().getNext();\n\n    // Functions called via 'call' and 'apply' have a this-object as\n    // the first parameter, but this is not part of the called function's\n    // parameter list.\n    if (!callNode.getFirstChild().isName()) {\n      if (NodeUtil.isFunctionObjectCall(callNode)) {\n        // TODO(johnlenz): Support replace this with a value.\n        if (cArg == null || !cArg.isThis()) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      } else {\n        // \".apply\" call should be filtered before this.\n        Preconditions.checkState(!NodeUtil.isFunctionObjectApply(callNode));\n      }\n    }\n\n    // FUNCTION NODE -> LP NODE: [ ARG1, ARG2, ... ]\n    Node fnParam = NodeUtil.getFunctionParameters(fnNode).getFirstChild();\n    while (cArg != null || fnParam != null) {\n      // For each named parameter check if a mutable argument use more than one.\n      if (fnParam != null) {\n        if (cArg != null) {\n\n          // Check for arguments that are evaluated more than once.\n          // Note: Unlike block inlining, there it is not possible that a\n          // parameter reference will be in a loop.\n          if (NodeUtil.mayEffectMutableState(cArg, compiler)\n              && NodeUtil.getNameReferenceCount(\n                  block, fnParam.getString()) > 1) {\n            return CanInlineResult.NO;\n          }\n        }\n\n        // Move to the next name.\n\nThere is a bug in the last statement, please help me fix it.\n\nReturn the code **only from the method declaration to the fixed statement**, without completing or adding additional code. Do not modify anything beyond fixing the bug, and do not complete the `if` statement or other unfinished parts. Do not include ```java or ``` markers in the response.\n",
        "prompt_apr_4": "\nprivate CanInlineResult canInlineReferenceDirectly(\n      Node callNode, Node fnNode) {\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n      return CanInlineResult.NO;\n    }\n\n    Node block = fnNode.getLastChild();\n\n\n    // CALL NODE: [ NAME, ARG1, ARG2, ... ]\n    Node cArg = callNode.getFirstChild().getNext();\n\n    // Functions called via 'call' and 'apply' have a this-object as\n    // the first parameter, but this is not part of the called function's\n    // parameter list.\n    if (!callNode.getFirstChild().isName()) {\n      if (NodeUtil.isFunctionObjectCall(callNode)) {\n        // TODO(johnlenz): Support replace this with a value.\n        if (cArg == null || !cArg.isThis()) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      } else {\n        // \".apply\" call should be filtered before this.\n        Preconditions.checkState(!NodeUtil.isFunctionObjectApply(callNode));\n      }\n    }\n\n    // FUNCTION NODE -> LP NODE: [ ARG1, ARG2, ... ]\n    Node fnParam = NodeUtil.getFunctionParameters(fnNode).getFirstChild();\n    while (cArg != null || fnParam != null) {\n      // For each named parameter check if a mutable argument use more than one.\n      if (fnParam != null) {\n        if (cArg != null) {\n\n          // Check for arguments that are evaluated more than once.\n          // Note: Unlike block inlining, there it is not possible that a\n          // parameter reference will be in a loop.\n          if (NodeUtil.mayEffectMutableState(cArg, compiler)\n              && NodeUtil.getNameReferenceCount(\n                  block, fnParam.getString()) > 1) {\n            return CanInlineResult.NO;\n          }\n        }\n\n        // Move to the next name.\n        fnParam = fnParam.getNext();\n      }\n\n      // For every call argument check for side-effects, even if there\n      // isn't a named parameter to match.\n      if (cArg != null) {\n        if (NodeUtil.mayHaveSideEffects(cArg, compiler)) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      }\n    }\n\n    return CanInlineResult.YES;\n  }\n\nThere is a bug in line [17, 46] of the code, please help me fix it.\n\nPlease return the results in a strict JSON format as described below. Please follow these instructions carefully:\n1. Your output must include each repaired line's number (`line_number`) and the corresponding fixed code statement (`fixed_statement`).\n2. The output format must be a valid JSON array, where each element represents one repaired line, with the following structure:\n   - `\"line_number\"`: The line number of the buggy code that was repaired (integer).\n   - `\"fixed_statement\"`: The repaired statement for that specific line (string).\n\n3. The result must strictly follow this format:\n[\n    {\n        \"line_number\": int,\n        \"fixed_statement\": \"string\"\n    },\n    {\n        \"line_number\": int,\n        \"fixed_statement\": \"string\"\n    }\n]\n4. The repaired statement in \"fixed_statement\" must replace the corresponding line in the buggy code.\n5. You must NOT include any additional explanation or description in your response. Only return the JSON array. Do not include ```json or ``` markers in the response.\n",
        "prompt_apr_5": "\nprivate CanInlineResult canInlineReferenceDirectly(\n      Node callNode, Node fnNode) {\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n      return CanInlineResult.NO;\n    }\n\n    Node block = fnNode.getLastChild();\n\n\n    // CALL NODE: [ NAME, ARG1, ARG2, ... ]\n    Node cArg = callNode.getFirstChild().getNext();\n\n    // Functions called via 'call' and 'apply' have a this-object as\n    // the first parameter, but this is not part of the called function's\n    // parameter list.\n    if (!callNode.getFirstChild().isName()) {\n      if (NodeUtil.isFunctionObjectCall(callNode)) {\n        // TODO(johnlenz): Support replace this with a value.\n        if (cArg == null || !cArg.isThis()) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      } else {\n        // \".apply\" call should be filtered before this.\n        Preconditions.checkState(!NodeUtil.isFunctionObjectApply(callNode));\n      }\n    }\n\n    // FUNCTION NODE -> LP NODE: [ ARG1, ARG2, ... ]\n    Node fnParam = NodeUtil.getFunctionParameters(fnNode).getFirstChild();\n    while (cArg != null || fnParam != null) {\n      // For each named parameter check if a mutable argument use more than one.\n      if (fnParam != null) {\n        if (cArg != null) {\n\n          // Check for arguments that are evaluated more than once.\n          // Note: Unlike block inlining, there it is not possible that a\n          // parameter reference will be in a loop.\n          if (NodeUtil.mayEffectMutableState(cArg, compiler)\n              && NodeUtil.getNameReferenceCount(\n                  block, fnParam.getString()) > 1) {\n            return CanInlineResult.NO;\n          }\n        }\n\n        // Move to the next name.\n        fnParam = fnParam.getNext();\n      }\n\n      // For every call argument check for side-effects, even if there\n      // isn't a named parameter to match.\n      if (cArg != null) {\n        if (NodeUtil.mayHaveSideEffects(cArg, compiler)) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      }\n    }\n\n    return CanInlineResult.YES;\n  }\n\nThere is a bug in ['      if (NodeUtil.isFunctionObjectCall(callNode)) {', '        // Move to the next name.'] , please help me fix it. \n\nPlease return the results in a strict JSON format as described below. Please follow these instructions carefully:\n1. Your output must include each repaired line's number (`line_number`) and the corresponding fixed code statement (`fixed_statement`).\n2. The output format must be a valid JSON array, where each element represents one repaired line, with the following structure:\n   - `\"line_number\"`: The line number of the buggy code that was repaired (integer).\n   - `\"fixed_statement\"`: The repaired statement for that specific line (string).\n\n3. The result must strictly follow this format:\n[\n    {\n        \"line_number\": int,\n        \"fixed_statement\": \"string\"\n    },\n    {\n        \"line_number\": int,\n        \"fixed_statement\": \"string\"\n    }\n]\n4. The repaired statement in \"fixed_statement\" must replace the corresponding line in the buggy code.\n5. You must NOT include any additional explanation or description in your response. Only return the JSON array. Do not include ```json or ``` markers in the response.\n",
        "prompt_apr_6": "\nprivate CanInlineResult canInlineReferenceDirectly(\n      Node callNode, Node fnNode) {\n    if (!isDirectCallNodeReplacementPossible(fnNode)) {\n      return CanInlineResult.NO;\n    }\n\n    Node block = fnNode.getLastChild();\n\n\n    // CALL NODE: [ NAME, ARG1, ARG2, ... ]\n    Node cArg = callNode.getFirstChild().getNext();\n\n    // Functions called via 'call' and 'apply' have a this-object as\n    // the first parameter, but this is not part of the called function's\n    // parameter list.\n    if (!callNode.getFirstChild().isName()) {\n      if (NodeUtil.isFunctionObjectCall(callNode)) {\n        // TODO(johnlenz): Support replace this with a value.\n        if (cArg == null || !cArg.isThis()) {\n          return CanInlineResult.NO;\n        }\n        cArg = cArg.getNext();\n      } else {\n        // \".apply\" call should be filtered before this.\n        Preconditions.checkState(!NodeUtil.isFunctionObjectApply(callNode));\n      }\n    }\n\n    // FUNCTION NODE -> LP NODE: [ ARG1, ARG2, ... ]\n    Node fnParam = NodeUtil.getFunctionParameters(fnNode).getFirstChild();\n    while (cArg != null || fnParam != null) {\n      // For each named parameter check if a mutable argument use more than one.\n      if (fnParam != null) {\n        if (cArg != null) {\n\n          // Check for arguments that are evaluated more than once.\n          // Note: Unlike block inlining, there it is not possible that a\n          // parameter reference will be in a loop.\n          if (NodeUtil.mayEffectMutableState(cArg, compiler)\n              && NodeUtil.getNameReferenceCount(\n                  block, fnParam.getString()) > 1) {\n            return CanInlineResult.NO;\n          }\n        }\n\n        // Move to the next name.\n\nThere is a bug in the last statement, please help me fix it.\n\nPlease return the results in a strict JSON format as described below. Please follow these instructions carefully:\n1. Your output must include each repaired line's number (`line_number`) and the corresponding fixed code statement (`fixed_statement`).\n2. The output format must be a valid JSON array, where each element represents one repaired line, with the following structure:\n   - `\"line_number\"`: The line number of the buggy code that was repaired (integer).\n   - `\"fixed_statement\"`: The repaired statement for that specific line (string).\n\n3. The result must strictly follow this format:\n[\n    {\n        \"line_number\": int,\n        \"fixed_statement\": \"string\"\n    },\n    {\n        \"line_number\": int,\n        \"fixed_statement\": \"string\"\n    }\n]\n4. The repaired statement in \"fixed_statement\" must replace the corresponding line in the buggy code.\n5. You must NOT include any additional explanation or description in your response. Only return the JSON array. Do not include ```json or ``` markers in the response.\n"
    }
]