[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "main",
            "method_body": "public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        long L = sc.nextLong();\n        long R = sc.nextLong();\n        List<List<Long>> ans = new ArrayList<>();\n\n        while (L < R) {\n            long i = 0;\n            while (L % (1L << (i + 1)) == 0 && L + (1L << (i + 1)) <= R) {\n                i++;\n            }\n            List<Long> range = new ArrayList<>();\n            range.add(L);\n            range.add(L + (1L << i) - 1);\n            ans.add(range);\n            L += (1L << i);\n        }\n\n        System.out.println(ans.size());\n\n        for (List<Long> range : ans) {\n            System.out.println(range.get(0) + \" \" + range.get(1));\n        }\n\n    }",
            "start_line": 6,
            "end_line": 31
        },
        "buggy_method_src": "public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        long L = sc.nextLong();\n        long R = sc.nextLong();\n        List<List<Long>> ans = new ArrayList<>();\n\n        while (L < R) {\n            long i = 0;\n            while (L % (1L << (i + 1)) == 0 && L + (1L << (i + 1)) <= R) {\n                i++;\n            }\n            List<Long> range = new ArrayList<>();\n            range.add(L);\n            range.add(L + (1L << i) - 1);\n            ans.add(range);\n            L += (1L << i);\n        }\n\n        System.out.println(ans.size());\n\n        for (List<Long> range : ans) {\n            System.out.println(range.get(0) + \" \" + range.get(1));\n        }\n\n    }",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            15
        ],
        "buggy_statements": [
            "            range.add(L + (1L << i) - 1);"
        ],
        "buggy_method_src_endswith_buggy_statement": "public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        long L = sc.nextLong();\n        long R = sc.nextLong();\n        List<List<Long>> ans = new ArrayList<>();\n\n        while (L < R) {\n            long i = 0;\n            while (L % (1L << (i + 1)) == 0 && L + (1L << (i + 1)) <= R) {\n                i++;\n            }\n            List<Long> range = new ArrayList<>();\n            range.add(L);\n            range.add(L + (1L << i) - 1);"
    }
]