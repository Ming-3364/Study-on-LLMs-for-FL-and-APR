
================== buggy_file ==================
faultyVersion.java
================== buggy_method ==================
{'method_name': 'main', 'method_body': 'public static void main(String[] args) throws IOException {\n        N = f.nextInt();\n        int M = f.nextInt();\n        K = f.nextInt();\n        g = new Vector[N+1];\n        lamp = new int[N+1];\n        vis = new int[N+1];\n        ans = new LinkedList<>();\n        for (int i = 0; i < N + 1; i++) {\n            g[i] = new Vector<>();\n        }\n        for (int i = 1; i <= M; i++) {\n            int x = f.nextInt();\n            int y = f.nextInt();\n            g[x].add(new Node(y, i));\n            g[y].add(new Node(x, i));\n        }\n        for (int i = 1; i <= N; i++) {\n            if (vis[i] == 0)\n                dfs(i);\n        }\n        if (K % 2 != 0){\n            w.println("No");\n        }else {\n            w.println("Yes");\n            w.println(ans.size());\n            for (Integer o : ans) {\n                w.print (o + " ");\n            }\n\n        }\n        w.flush();\n        w.close();\n        br.close();\n    }', 'start_line': 15, 'end_line': 49}
================== buggy_method_src ==================
public static void main(String[] args) throws IOException {
        N = f.nextInt();
        int M = f.nextInt();
        K = f.nextInt();
        g = new Vector[N+1];
        lamp = new int[N+1];
        vis = new int[N+1];
        ans = new LinkedList<>();
        for (int i = 0; i < N + 1; i++) {
            g[i] = new Vector<>();
        }
        for (int i = 1; i <= M; i++) {
            int x = f.nextInt();
            int y = f.nextInt();
            g[x].add(new Node(y, i));
            g[y].add(new Node(x, i));
        }
        for (int i = 1; i <= N; i++) {
            if (vis[i] == 0)
                dfs(i);
        }
        if (K % 2 != 0){
            w.println("No");
        }else {
            w.println("Yes");
            w.println(ans.size());
            for (Integer o : ans) {
                w.print (o + " ");
            }

        }
        w.flush();
        w.close();
        br.close();
    }
================== test_stack ==================
None
================== test_assert ==================
None
================== buggy_lines_in_method ==================
[22]
================== buggy_statements ==================
['        if (K % 2 != 0){']
================== buggy_method_src_endswith_buggy_statement ==================
public static void main(String[] args) throws IOException {
        N = f.nextInt();
        int M = f.nextInt();
        K = f.nextInt();
        g = new Vector[N+1];
        lamp = new int[N+1];
        vis = new int[N+1];
        ans = new LinkedList<>();
        for (int i = 0; i < N + 1; i++) {
            g[i] = new Vector<>();
        }
        for (int i = 1; i <= M; i++) {
            int x = f.nextInt();
            int y = f.nextInt();
            g[x].add(new Node(y, i));
            g[y].add(new Node(x, i));
        }
        for (int i = 1; i <= N; i++) {
            if (vis[i] == 0)
                dfs(i);
        }
        if (K % 2 != 0){