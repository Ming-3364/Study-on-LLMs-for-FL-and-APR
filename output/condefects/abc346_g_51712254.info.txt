
================== buggy_file ==================
faultyVersion.java
================== buggy_method ==================
{'method_name': 'solve', 'method_body': 'extInt();\n        int[] a=new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i]=nextInt();\n            //--a[i];\n        }\n        long res=0;\n        List<List<Integer>> occ = new ArrayList<>(n);\n        for (int i = 0; i < n; i++) {\n            List<Integer> innerList = new ArrayList<>();\n            innerList.add(-1); // 将-1加入到每个内部列表中\n            occ.add(innerList);\n        }\n        MinValSegTree tree = new MinValSegTree(n);\n        for (int i = 0; i < n; i++) {\n            List<Integer> l1 = occ.get(a[i]);\n            int p1=l1.get(l1.size()-1);\n            if (l1.size()>=2){\n                int p2=l1.get(l1.size()-2);\n                tree.add(p2+1,p1,-1);\n            }\n            l1.add(i);\n            tree.add(p1+1,i,1);\n            MinValSegTree.Node node = tree.queryMin(0, i);\n            res+=i+1-(node.minVal==0?node.minFreq:0);\n        }\n        System.out.println(res);\n    }\n\n    public static void main(String[] args) throws ', 'start_line': 156, 'end_line': 184}
================== buggy_method_src ==================
extInt();
        int[] a=new int[n];
        for (int i = 0; i < n; i++) {
            a[i]=nextInt();
            //--a[i];
        }
        long res=0;
        List<List<Integer>> occ = new ArrayList<>(n);
        for (int i = 0; i < n; i++) {
            List<Integer> innerList = new ArrayList<>();
            innerList.add(-1); // 将-1加入到每个内部列表中
            occ.add(innerList);
        }
        MinValSegTree tree = new MinValSegTree(n);
        for (int i = 0; i < n; i++) {
            List<Integer> l1 = occ.get(a[i]);
            int p1=l1.get(l1.size()-1);
            if (l1.size()>=2){
                int p2=l1.get(l1.size()-2);
                tree.add(p2+1,p1,-1);
            }
            l1.add(i);
            tree.add(p1+1,i,1);
            MinValSegTree.Node node = tree.queryMin(0, i);
            res+=i+1-(node.minVal==0?node.minFreq:0);
        }
        System.out.println(res);
    }

    public static void main(String[] args) throws 
================== test_stack ==================
None
================== test_assert ==================
None
================== buggy_lines_in_method ==================
[6]
================== buggy_statements ==================
['        }']
================== buggy_method_src_endswith_buggy_statement ==================
extInt();
        int[] a=new int[n];
        for (int i = 0; i < n; i++) {
            a[i]=nextInt();
            //--a[i];
        }