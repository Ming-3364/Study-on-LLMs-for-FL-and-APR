[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "main",
            "method_body": "public static void main(String[] args) throws Exception {\n        // Your code here!\n        \n        Scanner sc = new Scanner(System.in);\n        \n        int N = sc.nextInt();\n        int C = sc.nextInt();\n        \n        long[] Array = new long[N];\n        \n        long frag = 1;\n        if (C < 0) frag *= -1;\n        \n        for (int i = 0; i < N; i++) {\n            Array[i] = sc.nextInt() * frag;\n        }\n        \n        // \u7d2f\u7a4d\u548c\u306e\u914d\u5217\n        long[] sumArray = new long[N+1];\n        // index\u307e\u3067\u306e\u7d2f\u7a4d\u548c\u306e\u6700\u5c0f\u5024\u3092\u8a18\u9332\u3059\u308b\u914d\u5217\n        long[] sumMinArray = new long[N+1];\n        // \u7d2f\u7a4d\u548c\u306e\u8a08\u7b97\n        for (int i = 1; i < N+1; i++) {\n            // \u7d2f\u7a4d\u548c\u306e\u8a08\u7b97\n            sumArray[i] = sumArray[i-1] + Array[i-1];\n            // i\u307e\u3067\u306e\u7d2f\u7a4d\u548c\u306e\u6700\u5c0f\u5024\n            sumMinArray[i] = Math.min(sumArray[i], sumMinArray[i-1]);\n        }\n        \n        long partSum = sumArray[N];\n        \n        for (int i = 1; i < N+1; i++) {\n            long sub = sumArray[i] - sumMinArray[i];\n            partSum = Math.max(partSum, sub);\n        }\n        \n        \n        \n        System.out.println((partSum * (C-1) + sumArray[N]) * frag);\n        \n        // // \u5c3a\u53d6\u308a\u6cd5\n        // for (int l = 0; l < N+1; l++) {\n        //     for (int r = 0; r < N+1; r++) {\n                \n        //     }\n        // }\n    }\n}",
            "start_line": 4,
            "end_line": 50
        },
        "buggy_method_src": "public static void main(String[] args) throws Exception {\n        // Your code here!\n        \n        Scanner sc = new Scanner(System.in);\n        \n        int N = sc.nextInt();\n        int C = sc.nextInt();\n        \n        long[] Array = new long[N];\n        \n        long frag = 1;\n        if (C < 0) frag *= -1;\n        \n        for (int i = 0; i < N; i++) {\n            Array[i] = sc.nextInt() * frag;\n        }\n        \n        // \u7d2f\u7a4d\u548c\u306e\u914d\u5217\n        long[] sumArray = new long[N+1];\n        // index\u307e\u3067\u306e\u7d2f\u7a4d\u548c\u306e\u6700\u5c0f\u5024\u3092\u8a18\u9332\u3059\u308b\u914d\u5217\n        long[] sumMinArray = new long[N+1];\n        // \u7d2f\u7a4d\u548c\u306e\u8a08\u7b97\n        for (int i = 1; i < N+1; i++) {\n            // \u7d2f\u7a4d\u548c\u306e\u8a08\u7b97\n            sumArray[i] = sumArray[i-1] + Array[i-1];\n            // i\u307e\u3067\u306e\u7d2f\u7a4d\u548c\u306e\u6700\u5c0f\u5024\n            sumMinArray[i] = Math.min(sumArray[i], sumMinArray[i-1]);\n        }\n        \n        long partSum = sumArray[N];\n        \n        for (int i = 1; i < N+1; i++) {\n            long sub = sumArray[i] - sumMinArray[i];\n            partSum = Math.max(partSum, sub);\n        }\n        \n        \n        \n        System.out.println((partSum * (C-1) + sumArray[N]) * frag);\n        \n        // // \u5c3a\u53d6\u308a\u6cd5\n        // for (int l = 0; l < N+1; l++) {\n        //     for (int r = 0; r < N+1; r++) {\n                \n        //     }\n        // }\n    }\n}",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            12
        ],
        "buggy_statements": [
            "        if (C < 0) frag *= -1;"
        ],
        "buggy_method_src_endswith_buggy_statement": "public static void main(String[] args) throws Exception {\n        // Your code here!\n        \n        Scanner sc = new Scanner(System.in);\n        \n        int N = sc.nextInt();\n        int C = sc.nextInt();\n        \n        long[] Array = new long[N];\n        \n        long frag = 1;\n        if (C < 0) frag *= -1;"
    }
]