[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "main",
            "method_body": "public static void main(String[] args){\n    var sc=new java.util.Scanner(System.in);\n    int H=sc.nextInt();\n    int W=sc.nextInt();\n    int M=sc.nextInt();\n    int[] T=new int[M],A=new int[M],X=new int[M];\n    \n    for(int i=0;i<M;i++){\n      T[i]=sc.nextInt();\n      A[i]=sc.nextInt()-1;\n      X[i]=sc.nextInt();\n    }\n    \n    var map=new java.util.HashMap<Integer,Long>();\n    boolean[] hused=new boolean[H],vused=new boolean[W];\n    \n    for(int i=M-1;i>=0;i--){\n      int t=T[i];\n      int a=A[i];\n      int x=X[i];\n      \n      if(t==1){\n        if(!hused[a]){\n          hused[a]=true;\n          map.put(x,map.getOrDefault(x,0l)+W);\n          H--;\n        }\n      }else{\n        if(!vused[a]){\n          vused[a]=true;\n          map.put(x,map.getOrDefault(x,0l)+H);\n          W--;\n        }\n      }\n    }\n    map.put(0,map.getOrDefault(0,0l)+W*H);\n    \n    var colors=new java.util.ArrayList<Integer>();\n    for(var set:map.entrySet()){\n      if(set.getValue()>0)colors.add(set.getKey());\n    }\n    \n    java.util.Collections.sort(colors);\n    \n    System.out.println(colors.size());\n    for(int color:colors)System.out.println(color+\" \"+map.get(color));\n  }",
            "start_line": 2,
            "end_line": 48
        },
        "buggy_method_src": "public static void main(String[] args){\n    var sc=new java.util.Scanner(System.in);\n    int H=sc.nextInt();\n    int W=sc.nextInt();\n    int M=sc.nextInt();\n    int[] T=new int[M],A=new int[M],X=new int[M];\n    \n    for(int i=0;i<M;i++){\n      T[i]=sc.nextInt();\n      A[i]=sc.nextInt()-1;\n      X[i]=sc.nextInt();\n    }\n    \n    var map=new java.util.HashMap<Integer,Long>();\n    boolean[] hused=new boolean[H],vused=new boolean[W];\n    \n    for(int i=M-1;i>=0;i--){\n      int t=T[i];\n      int a=A[i];\n      int x=X[i];\n      \n      if(t==1){\n        if(!hused[a]){\n          hused[a]=true;\n          map.put(x,map.getOrDefault(x,0l)+W);\n          H--;\n        }\n      }else{\n        if(!vused[a]){\n          vused[a]=true;\n          map.put(x,map.getOrDefault(x,0l)+H);\n          W--;\n        }\n      }\n    }\n    map.put(0,map.getOrDefault(0,0l)+W*H);\n    \n    var colors=new java.util.ArrayList<Integer>();\n    for(var set:map.entrySet()){\n      if(set.getValue()>0)colors.add(set.getKey());\n    }\n    \n    java.util.Collections.sort(colors);\n    \n    System.out.println(colors.size());\n    for(int color:colors)System.out.println(color+\" \"+map.get(color));\n  }",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            36
        ],
        "buggy_statements": [
            "    map.put(0,map.getOrDefault(0,0l)+W*H);"
        ],
        "buggy_method_src_endswith_buggy_statement": "public static void main(String[] args){\n    var sc=new java.util.Scanner(System.in);\n    int H=sc.nextInt();\n    int W=sc.nextInt();\n    int M=sc.nextInt();\n    int[] T=new int[M],A=new int[M],X=new int[M];\n    \n    for(int i=0;i<M;i++){\n      T[i]=sc.nextInt();\n      A[i]=sc.nextInt()-1;\n      X[i]=sc.nextInt();\n    }\n    \n    var map=new java.util.HashMap<Integer,Long>();\n    boolean[] hused=new boolean[H],vused=new boolean[W];\n    \n    for(int i=M-1;i>=0;i--){\n      int t=T[i];\n      int a=A[i];\n      int x=X[i];\n      \n      if(t==1){\n        if(!hused[a]){\n          hused[a]=true;\n          map.put(x,map.getOrDefault(x,0l)+W);\n          H--;\n        }\n      }else{\n        if(!vused[a]){\n          vused[a]=true;\n          map.put(x,map.getOrDefault(x,0l)+H);\n          W--;\n        }\n      }\n    }\n    map.put(0,map.getOrDefault(0,0l)+W*H);"
    }
]