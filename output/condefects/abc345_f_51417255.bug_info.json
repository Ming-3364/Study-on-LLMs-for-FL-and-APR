[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "solve",
            "method_body": "static void solve(PrintWriter o) {\n        try {\n            n = nextInt();\n            m = nextInt();\n            k = nextInt();\n            G = new ArrayList[n];\n            Arrays.setAll(G, key->new ArrayList<>());\n            vis = new boolean[n];\n            lamp = new int[n];\n            for(int i=0;i<m;i++) {\n                int u = nextInt();\n                int v = nextInt();\n                u--;\n                v--;\n                G[u].add(new int[]{v, i});\n                G[v].add(new int[]{u, i});\n            }\n            for(int i=0;i<n;i++) if(!vis[i]) dfs(i);\n            if(now < k) o.println(\"No\");\n            else {\n                o.println(\"Yes\");\n                o.println(res.size());\n                for(int num: res) o.print(num + \" \");\n                o.println();\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }",
            "start_line": 23,
            "end_line": 51
        },
        "buggy_method_src": "static void solve(PrintWriter o) {\n        try {\n            n = nextInt();\n            m = nextInt();\n            k = nextInt();\n            G = new ArrayList[n];\n            Arrays.setAll(G, key->new ArrayList<>());\n            vis = new boolean[n];\n            lamp = new int[n];\n            for(int i=0;i<m;i++) {\n                int u = nextInt();\n                int v = nextInt();\n                u--;\n                v--;\n                G[u].add(new int[]{v, i});\n                G[v].add(new int[]{u, i});\n            }\n            for(int i=0;i<n;i++) if(!vis[i]) dfs(i);\n            if(now < k) o.println(\"No\");\n            else {\n                o.println(\"Yes\");\n                o.println(res.size());\n                for(int num: res) o.print(num + \" \");\n                o.println();\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            19
        ],
        "buggy_statements": [
            "            if(now < k) o.println(\"No\");"
        ],
        "buggy_method_src_endswith_buggy_statement": "static void solve(PrintWriter o) {\n        try {\n            n = nextInt();\n            m = nextInt();\n            k = nextInt();\n            G = new ArrayList[n];\n            Arrays.setAll(G, key->new ArrayList<>());\n            vis = new boolean[n];\n            lamp = new int[n];\n            for(int i=0;i<m;i++) {\n                int u = nextInt();\n                int v = nextInt();\n                u--;\n                v--;\n                G[u].add(new int[]{v, i});\n                G[v].add(new int[]{u, i});\n            }\n            for(int i=0;i<n;i++) if(!vis[i]) dfs(i);\n            if(now < k) o.println(\"No\");"
    }
]