
================== buggy_file ==================
faultyVersion.java
================== buggy_method ==================
{'method_name': 'main', 'method_body': 'public static void main(String[] args)throws IOException{\n      BufferedReader f = new BufferedReader(new InputStreamReader(System.in));\n      PrintWriter out = new PrintWriter(System.out);\n      \n      long n = Long.parseLong(f.readLine());\n      long n2 = n*n;\n      \n      //fines\n      long p1 = 0L;\n      long p2 = 0L;\n      \n      //probability p1 and p2 are the first player respectively\n      long pp1 = 0L;\n      long pp2 = 1L;\n      \n      for(long k = 1; k < n; k++){\n         long k2 = (k*k + MOD)%MOD;\n         \n         long nki = modInverse((n+k+MOD)%MOD,MOD);\n         long n2mk2 = n2 - k2;\n         if(n2mk2 < 0) n2mk2 += MOD;\n         long n2mk2i = modInverse(n2mk2,MOD);\n         \n         long both = (n2 * n2mk2i + MOD)%MOD;\n         both--;\n         if(both < 0) both += MOD;\n         \n         p1 = (p1 + both + MOD)%MOD;\n         p2 = (p2 + both + MOD)%MOD;\n         \n         //k/(n+k) chance that player 1 is fined an extra time\n         long p1last = (k * nki + MOD)%MOD;\n         long p2last = (n * nki + MOD)%MOD;\n         \n         p1 = (p1 + p1last * pp1 + MOD)%MOD;\n         p2 = (p2 + p1last * pp2 + MOD)%MOD;\n         \n         //adjust pp1 and pp2\n         long npp11 = (pp1 * p1last + MOD)%MOD;\n         long pp1i = 1L-pp1;\n         if(pp1i < 0) pp1i += MOD;\n         long npp12 = (pp1i * p2last + MOD)%MOD;\n         pp1 = (npp11 + npp12 + MOD)%MOD;\n         \n         long npp21 = (pp2 * p1last + MOD)%MOD;\n         long pp2i = 1L-pp2;\n         if(pp2i < 0) pp2i += MOD;\n         long npp22 = (pp2i * p2last + MOD)%MOD;\n         pp2 = (npp21 + npp22 + MOD)%MOD;\n         /*\n         out.println(k);\n         out.println("1: " + npp11 + " " + npp12);\n         out.println("2: " + npp21 + " " + npp22);\n         out.println(p1last + " " + p2last);\n         out.println(pp1 + " " + pp2);\n         */\n      }\n      \n      \n      out.println(p1 + " " + p2);\n      \n      \n      \n      \n      \n      \n      out.close();\n   }', 'start_line': 9, 'end_line': 76}
================== buggy_method_src ==================
public static void main(String[] args)throws IOException{
      BufferedReader f = new BufferedReader(new InputStreamReader(System.in));
      PrintWriter out = new PrintWriter(System.out);
      
      long n = Long.parseLong(f.readLine());
      long n2 = n*n;
      
      //fines
      long p1 = 0L;
      long p2 = 0L;
      
      //probability p1 and p2 are the first player respectively
      long pp1 = 0L;
      long pp2 = 1L;
      
      for(long k = 1; k < n; k++){
         long k2 = (k*k + MOD)%MOD;
         
         long nki = modInverse((n+k+MOD)%MOD,MOD);
         long n2mk2 = n2 - k2;
         if(n2mk2 < 0) n2mk2 += MOD;
         long n2mk2i = modInverse(n2mk2,MOD);
         
         long both = (n2 * n2mk2i + MOD)%MOD;
         both--;
         if(both < 0) both += MOD;
         
         p1 = (p1 + both + MOD)%MOD;
         p2 = (p2 + both + MOD)%MOD;
         
         //k/(n+k) chance that player 1 is fined an extra time
         long p1last = (k * nki + MOD)%MOD;
         long p2last = (n * nki + MOD)%MOD;
         
         p1 = (p1 + p1last * pp1 + MOD)%MOD;
         p2 = (p2 + p1last * pp2 + MOD)%MOD;
         
         //adjust pp1 and pp2
         long npp11 = (pp1 * p1last + MOD)%MOD;
         long pp1i = 1L-pp1;
         if(pp1i < 0) pp1i += MOD;
         long npp12 = (pp1i * p2last + MOD)%MOD;
         pp1 = (npp11 + npp12 + MOD)%MOD;
         
         long npp21 = (pp2 * p1last + MOD)%MOD;
         long pp2i = 1L-pp2;
         if(pp2i < 0) pp2i += MOD;
         long npp22 = (pp2i * p2last + MOD)%MOD;
         pp2 = (npp21 + npp22 + MOD)%MOD;
         /*
         out.println(k);
         out.println("1: " + npp11 + " " + npp12);
         out.println("2: " + npp21 + " " + npp22);
         out.println(p1last + " " + p2last);
         out.println(pp1 + " " + pp2);
         */
      }
      
      
      out.println(p1 + " " + p2);
      
      
      
      
      
      
      out.close();
   }
================== test_stack ==================
None
================== test_assert ==================
None
================== buggy_lines_in_method ==================
[6]
================== buggy_statements ==================
['      long n2 = n*n;']
================== buggy_method_src_endswith_buggy_statement ==================
public static void main(String[] args)throws IOException{
      BufferedReader f = new BufferedReader(new InputStreamReader(System.in));
      PrintWriter out = new PrintWriter(System.out);
      
      long n = Long.parseLong(f.readLine());
      long n2 = n*n;