[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "solve",
            "method_body": "public static void solve(FastScanner sc, FastPrintStream pw) throws Exception {\n        int times = sc.nextInt();\n        for (int time = 0; time < times; time++) {\n            long n = sc.nextLong();\n            long now = 10;\n            long re = 1;\n            while (now <= n / now) {\n                re += Math.max(0, Math.min(n, now * now + now) - now * now);\n                now *= 10;\n            }\n            now = 9;\n            while (now <= n / now) {\n                re += Math.max(0, Math.min(n, (now + 1) * (now + 1)-1) - now * (now + 1)+1);\n                now = now * 10 + 9;\n            }\n            now = 8;\n            long low = 10;\n            while (now * low <= n) {\n                re++;\n                now = (now + 1) * 10 + 8;\n                low *= 10;\n            }\n            pw.println(re);\n        }\n    }",
            "start_line": 70,
            "end_line": 94
        },
        "buggy_method_src": "public static void solve(FastScanner sc, FastPrintStream pw) throws Exception {\n        int times = sc.nextInt();\n        for (int time = 0; time < times; time++) {\n            long n = sc.nextLong();\n            long now = 10;\n            long re = 1;\n            while (now <= n / now) {\n                re += Math.max(0, Math.min(n, now * now + now) - now * now);\n                now *= 10;\n            }\n            now = 9;\n            while (now <= n / now) {\n                re += Math.max(0, Math.min(n, (now + 1) * (now + 1)-1) - now * (now + 1)+1);\n                now = now * 10 + 9;\n            }\n            now = 8;\n            long low = 10;\n            while (now * low <= n) {\n                re++;\n                now = (now + 1) * 10 + 8;\n                low *= 10;\n            }\n            pw.println(re);\n        }\n    }",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            8
        ],
        "buggy_statements": [
            "                re += Math.max(0, Math.min(n, now * now + now) - now * now);"
        ],
        "buggy_method_src_endswith_buggy_statement": "public static void solve(FastScanner sc, FastPrintStream pw) throws Exception {\n        int times = sc.nextInt();\n        for (int time = 0; time < times; time++) {\n            long n = sc.nextLong();\n            long now = 10;\n            long re = 1;\n            while (now <= n / now) {\n                re += Math.max(0, Math.min(n, now * now + now) - now * now);"
    }
]