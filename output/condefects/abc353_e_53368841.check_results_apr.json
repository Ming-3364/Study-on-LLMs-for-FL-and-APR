{
    "overall_status": {
        "prompt_apr_1": {
            "ernie-3.5-128k": "Fail some tests",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Fail some tests",
            "gpt-4o-mini": "Fail some tests",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_2": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Fail some tests",
            "gpt-4o-mini": "Pass all tests",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_3": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Fail some tests",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Pass all tests"
        },
        "prompt_apr_4": {
            "ernie-3.5-128k": "Pass all tests",
            "qwen-turbo": "Pass all tests",
            "doubao-pro-4k": "Pass all tests",
            "gpt-4o-mini": "Pass all tests",
            "deepseek-chat": "Pass all tests"
        },
        "prompt_apr_5": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Fail some tests",
            "gpt-4o-mini": "Pass all tests",
            "deepseek-chat": "Pass all tests"
        },
        "prompt_apr_6": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Pass all tests",
            "deepseek-chat": "Pass all tests"
        }
    },
    "check_results_list": {
        "prompt_apr_1": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_test_01",
                            "returncode": null,
                            "stdout": "655058660\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_11",
                            "returncode": null,
                            "stdout": "31063878\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": null,
                            "stdout": "672211043\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": null,
                            "stdout": "39601099\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_35",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": null,
                            "stdout": "-97306608\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": null,
                            "stdout": "1231043141\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": null,
                            "stdout": "-97306608\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_39",
                            "returncode": null,
                            "stdout": "1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_32",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_31",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": null,
                            "stdout": "30179890\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_37",
                            "returncode": null,
                            "stdout": "75000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": null,
                            "stdout": "40584442\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_05",
                            "returncode": null,
                            "stdout": "127163203\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_02",
                            "returncode": null,
                            "stdout": "112477817\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_34",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": null,
                            "stdout": "2863542610\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "4\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_30",
                            "returncode": null,
                            "stdout": "460842246\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": null,
                            "stdout": "449310877\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": null,
                            "stdout": "467082757\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": null,
                            "stdout": "1226400772\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": null,
                            "stdout": "673540872\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": null,
                            "stdout": "1229735909\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_36",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": null,
                            "stdout": "449315780\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": null,
                            "stdout": "40152841\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_40",
                            "returncode": null,
                            "stdout": "1426372059\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_38",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": null,
                            "stdout": "1434349190\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": null,
                            "stdout": "1434225762\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": null,
                            "stdout": "2863544632\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": null,
                            "stdout": "449320098\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_03",
                            "returncode": null,
                            "stdout": "112484897\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": null,
                            "stdout": "1906332158\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": null,
                            "stdout": "1905689823\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": null,
                            "stdout": "31243875\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": null,
                            "stdout": "32609706\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_04",
                            "returncode": null,
                            "stdout": "127162001\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": null,
                            "stdout": "2861932056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_06",
                            "returncode": null,
                            "stdout": "127145084\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": null,
                            "stdout": "89850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_33",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": null,
                            "stdout": "1025013520\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "32\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": null,
                            "stdout": "28921144\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:16: error: illegal character: \\96\n```java\n^\nMain.java:16: error: illegal character: \\96\n```java\n ^\nMain.java:16: error: illegal character: \\96\n```java\n  ^\nMain.java:20: error: illegal character: \\96\n``` \n^\nMain.java:20: error: illegal character: \\96\n``` \n ^\nMain.java:20: error: illegal character: \\96\n``` \n  ^\nMain.java:22: error: illegal start of type\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n   ^\nMain.java:22: error: ';' expected\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n       ^\nMain.java:22: error: <identifier> expected\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                         ^\nMain.java:22: error: ';' expected\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                            ^\nMain.java:22: error: illegal character: \\96\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                                   ^\nMain.java:22: error: illegal character: \\96\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                                     ^\nMain.java:22: error: illegal character: \\96\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                                             ^\nMain.java:22: error: illegal start of type\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                                              ^\nMain.java:22: error: illegal character: \\96\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                                               ^\nMain.java:22: error: ';' expected\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                                                ^\nMain.java:22: error: ';' expected\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                                                               ^\nMain.java:22: error: ';' expected\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                                                                              ^\nMain.java:22: error: ';' expected\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                                                                                             ^\nMain.java:22: error: illegal character: \\96\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                                                                                                         ^\nMain.java:22: error: illegal character: \\96\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                                                                                                              ^\nMain.java:22: error: <identifier> expected\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                                                                                                                     ^\nMain.java:22: error: ';' expected\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                                                                                                                                 ^\nMain.java:22: error: ';' expected\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                                                                                                                                                    ^\nMain.java:22: error: <identifier> expected\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                                                                                                                                                           ^\nMain.java:22: error: illegal character: \\96\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                                                                                                                                                               ^\nMain.java:22: error: illegal character: \\96\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                                                                                                                                                                   ^\nMain.java:22: error: <identifier> expected\nIn this corrected version, I added `L` after `1` to ensure that the arithmetic operations are done using `long` types, preventing potential overflow issues if `cnt` is large.\n                                                                                                                                                                              ^\nMain.java:23: error: ';' expected\n        public TrieNode(char ch) {\n              ^\nMain.java:23: error: illegal start of type\n        public TrieNode(char ch) {\n                       ^\nMain.java:23: error: <identifier> expected\n        public TrieNode(char ch) {\n                        ^\nMain.java:23: error: ';' expected\n        public TrieNode(char ch) {\n                            ^\nMain.java:23: error: illegal start of type\n        public TrieNode(char ch) {\n                               ^\nMain.java:23: error: <identifier> expected\n        public TrieNode(char ch) {\n                                ^\nMain.java:23: error: ';' expected\n        public TrieNode(char ch) {\n                                  ^\nMain.java:24: error: illegal start of type\n            this.ch = ch;\n                ^\nMain.java:25: error: illegal start of type\n            for (int i = 0; i < 26; i++) {\n            ^\nMain.java:25: error: ')' expected\n            for (int i = 0; i < 26; i++) {\n                      ^\nMain.java:25: error: illegal start of type\n            for (int i = 0; i < 26; i++) {\n                         ^\nMain.java:25: error: <identifier> expected\n            for (int i = 0; i < 26; i++) {\n                          ^\nMain.java:25: error: ';' expected\n            for (int i = 0; i < 26; i++) {\n                           ^\nMain.java:25: error: <identifier> expected\n            for (int i = 0; i < 26; i++) {\n                               ^\nMain.java:25: error: illegal start of type\n            for (int i = 0; i < 26; i++) {\n                                  ^\nMain.java:25: error: '(' expected\n            for (int i = 0; i < 26; i++) {\n                                     ^\nMain.java:28: error: illegal start of type\n            this.cnt = 0;\n            ^\nMain.java:28: error: ';' expected\n            this.cnt = 0;\n                ^\nMain.java:28: error: <identifier> expected\n            this.cnt = 0;\n                    ^\nMain.java:29: error: illegal start of type\n            this.depth = 0;\n            ^\nMain.java:29: error: ';' expected\n            this.depth = 0;\n                ^\nMain.java:29: error: <identifier> expected\n            this.depth = 0;\n                      ^\nMain.java:36: error: invalid method declaration; return type required\n        public TrieNode(int parentDepth, char ch) {\n               ^\nMain.java:51: error: class, interface, or enum expected\n    static TrieNode dummy = new TrieNode('a');\n           ^\nMain.java:53: error: class, interface, or enum expected\n    public static void build(String str) {\n                  ^\nMain.java:55: error: class, interface, or enum expected\n        for (int i = 0; i < str.length(); i++) {\n        ^\nMain.java:55: error: class, interface, or enum expected\n        for (int i = 0; i < str.length(); i++) {\n                        ^\nMain.java:55: error: class, interface, or enum expected\n        for (int i = 0; i < str.length(); i++) {\n                                          ^\nMain.java:57: error: class, interface, or enum expected\n            char ch1 = str.charAt(i);\n            ^\nMain.java:59: error: class, interface, or enum expected\n            TrieNode child = curr.getChild(ch1);\n            ^\nMain.java:61: error: class, interface, or enum expected\n            if (child != null) {\n            ^\nMain.java:63: error: class, interface, or enum expected\n            } else {\n            ^\nMain.java:65: error: class, interface, or enum expected\n                curr.addChild(child);\n                ^\nMain.java:66: error: class, interface, or enum expected\n            }\n            ^\nMain.java:68: error: class, interface, or enum expected\n        }\n        ^\nMain.java:71: error: class, interface, or enum expected\n    public static long travel() {\n                  ^\nMain.java:73: error: class, interface, or enum expected\n        arrayDeque.add(dummy);\n        ^\nMain.java:75: error: class, interface, or enum expected\n        long ans = 0;\n        ^\nMain.java:76: error: class, interface, or enum expected\n        while (!arrayDeque.isEmpty()) {\n        ^\nMain.java:78: error: class, interface, or enum expected\n            long val1 = node.getValue();\n            ^\nMain.java:79: error: class, interface, or enum expected\n            long val2 = 0;\n            ^\nMain.java:80: error: class, interface, or enum expected\n            for (int i = 0; i < 26; i++) {\n            ^\nMain.java:80: error: class, interface, or enum expected\n            for (int i = 0; i < 26; i++) {\n                            ^\nMain.java:80: error: class, interface, or enum expected\n            for (int i = 0; i < 26; i++) {\n                                    ^\nMain.java:83: error: class, interface, or enum expected\n                    arrayDeque.add(node.children[i]);\n                    ^\nMain.java:84: error: class, interface, or enum expected\n                }\n                ^\nMain.java:87: error: class, interface, or enum expected\n        }\n        ^\nMain.java:89: error: class, interface, or enum expected\n    }\n    ^\nMain.java:91: error: class, interface, or enum expected\n    public static void main(String[] args) throws IOException {\n                  ^\nMain.java:93: error: class, interface, or enum expected\n        String[] str = rd.nextLine().split(\" \");\n        ^\nMain.java:94: error: class, interface, or enum expected\n        for (int i = 0; i < n; i++) {\n        ^\nMain.java:94: error: class, interface, or enum expected\n        for (int i = 0; i < n; i++) {\n                        ^\nMain.java:94: error: class, interface, or enum expected\n        for (int i = 0; i < n; i++) {\n                               ^\nMain.java:96: error: class, interface, or enum expected\n        }\n        ^\nMain.java:98: error: class, interface, or enum expected\n        System.out.println(ans);\n        ^\nMain.java:99: error: class, interface, or enum expected\n    }\n    ^\nMain.java:137: error: class, interface, or enum expected\n}\n^\n85 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_test_01",
                            "returncode": null,
                            "stdout": "655058660\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_11",
                            "returncode": null,
                            "stdout": "31063878\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": null,
                            "stdout": "672211043\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": null,
                            "stdout": "39601099\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_35",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": null,
                            "stdout": "-97306608\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": null,
                            "stdout": "1231043141\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": null,
                            "stdout": "-97306608\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_39",
                            "returncode": null,
                            "stdout": "1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_32",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_31",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": null,
                            "stdout": "30179890\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_37",
                            "returncode": null,
                            "stdout": "75000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": null,
                            "stdout": "40584442\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_05",
                            "returncode": null,
                            "stdout": "127163203\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_02",
                            "returncode": null,
                            "stdout": "112477817\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_34",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": null,
                            "stdout": "2863542610\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "4\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_30",
                            "returncode": null,
                            "stdout": "460842246\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": null,
                            "stdout": "449310877\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": null,
                            "stdout": "467082757\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": null,
                            "stdout": "1226400772\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": null,
                            "stdout": "673540872\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": null,
                            "stdout": "1229735909\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_36",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": null,
                            "stdout": "449315780\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": null,
                            "stdout": "40152841\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_40",
                            "returncode": null,
                            "stdout": "1426372059\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_38",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": null,
                            "stdout": "1434349190\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": null,
                            "stdout": "1434225762\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": null,
                            "stdout": "2863544632\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": null,
                            "stdout": "449320098\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_03",
                            "returncode": null,
                            "stdout": "112484897\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": null,
                            "stdout": "1906332158\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": null,
                            "stdout": "1905689823\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": null,
                            "stdout": "31243875\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": null,
                            "stdout": "32609706\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_04",
                            "returncode": null,
                            "stdout": "127162001\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": null,
                            "stdout": "2861932056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_06",
                            "returncode": null,
                            "stdout": "127145084\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": null,
                            "stdout": "89850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_33",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": null,
                            "stdout": "1025013520\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "32\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": null,
                            "stdout": "28921144\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_test_01",
                            "returncode": null,
                            "stdout": "655058660\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_11",
                            "returncode": null,
                            "stdout": "31063878\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": null,
                            "stdout": "672211043\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": null,
                            "stdout": "39601099\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_35",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": null,
                            "stdout": "-97306608\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": null,
                            "stdout": "1231043141\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": null,
                            "stdout": "-97306608\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_39",
                            "returncode": null,
                            "stdout": "1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_32",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_31",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": null,
                            "stdout": "30179890\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_37",
                            "returncode": null,
                            "stdout": "75000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": null,
                            "stdout": "40584442\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_05",
                            "returncode": null,
                            "stdout": "127163203\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_02",
                            "returncode": null,
                            "stdout": "112477817\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_34",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": null,
                            "stdout": "2863542610\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "4\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_30",
                            "returncode": null,
                            "stdout": "460842246\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": null,
                            "stdout": "449310877\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": null,
                            "stdout": "467082757\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": null,
                            "stdout": "1226400772\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": null,
                            "stdout": "673540872\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": null,
                            "stdout": "1229735909\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_36",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": null,
                            "stdout": "449315780\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": null,
                            "stdout": "40152841\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_40",
                            "returncode": null,
                            "stdout": "1426372059\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_38",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": null,
                            "stdout": "1434349190\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": null,
                            "stdout": "1434225762\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": null,
                            "stdout": "2863544632\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": null,
                            "stdout": "449320098\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_03",
                            "returncode": null,
                            "stdout": "112484897\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": null,
                            "stdout": "1906332158\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": null,
                            "stdout": "1905689823\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": null,
                            "stdout": "31243875\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": null,
                            "stdout": "32609706\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_04",
                            "returncode": null,
                            "stdout": "127162001\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": null,
                            "stdout": "2861932056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_06",
                            "returncode": null,
                            "stdout": "127145084\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": null,
                            "stdout": "89850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_33",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": null,
                            "stdout": "1025013520\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "32\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": null,
                            "stdout": "28921144\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:16: error: ';' expected\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n       ^\nMain.java:16: error: ';' expected\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n              ^\nMain.java:16: error: ';' expected\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                      ^\nMain.java:16: error: ';' expected\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                               ^\nMain.java:16: error: illegal character: \\96\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                               ^\nMain.java:16: error: <identifier> expected\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                   ^\nMain.java:16: error: illegal start of type\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                      ^\nMain.java:16: error: ';' expected\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                          ^\nMain.java:16: error: illegal character: \\96\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                               ^\nMain.java:16: error: ';' expected\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                                            ^\nMain.java:16: error: ';' expected\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                                                       ^\nMain.java:16: error: <identifier> expected\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                                                                ^\nMain.java:16: error: illegal character: \\96\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                                                                    ^\nMain.java:16: error: illegal character: \\96\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                                                                        ^\nMain.java:16: error: ';' expected\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                                                                                          ^\nMain.java:16: error: ';' expected\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                                                                                                           ^\nMain.java:16: error: illegal character: \\96\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                                                                                                                 ^\nMain.java:16: error: illegal character: \\96\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                                                                                                                     ^\nMain.java:16: error: illegal character: \\96\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                                                                                                                          ^\nMain.java:16: error: illegal character: \\96\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                                                                                                                               ^\nMain.java:16: error: ';' expected\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                                                                                                                                                  ^\nMain.java:16: error: ';' expected\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                                                                                                                                                                     ^\nMain.java:16: error: ';' expected\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                                                                                                                                                                              ^\nMain.java:16: error: ';' expected\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                                                                                                                                                                                            ^\nMain.java:16: error: <identifier> expected\nThe bug in the code is that the multiplication `cnt * (cnt - 1)` could cause an integer overflow if `cnt` is large. To fix this, you should cast `cnt` to `long` before performing the multiplication. Here is the corrected method:\n                                                                                                                                                                                                                                   ^\n25 errors\n"
                }
            }
        },
        "prompt_apr_2": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:16: error: <identifier> expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n         ^\nMain.java:16: error: illegal character: \\96\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                          ^\nMain.java:16: error: <identifier> expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                              ^\nMain.java:16: error: illegal start of type\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                 ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                     ^\nMain.java:16: error: illegal character: \\96\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                              ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                           ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                   ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                 ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                           ^\nMain.java:16: error: illegal character: \\96\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                              ^\nMain.java:16: error: illegal character: \\96\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                  ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                               ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                      ^\nMain.java:16: error: <identifier> expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                    ^\nMain.java:16: error: <identifier> expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                     ^\nMain.java:16: error: unclosed character literal\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                              ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                          ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                   ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                              ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                       ^\nMain.java:16: error: illegal character: \\96\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                           ^\nMain.java:16: error: illegal character: \\96\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                               ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                       ^\nMain.java:16: error: unclosed character literal\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                          ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                       ^\nMain.java:16: error: illegal character: \\96\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                  ^\nMain.java:16: error: illegal character: \\96\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                      ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                             ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                                          ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                                                  ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                                                          ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                                                                     ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                                                                                    ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                                                                                                ^\nMain.java:16: error: unclosed character literal\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                                                                                                      ^\nMain.java:16: error: invalid method declaration; return type required\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                                                                                                         ^\nMain.java:16: error: <identifier> expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                                                                                                                             ^\nMain.java:16: error: illegal character: \\96\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                                                                                                                                 ^\nMain.java:16: error: illegal character: \\96\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                                                                                                                                     ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                                                                                                                                               ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                                                                                                                                                         ^\nMain.java:16: error: illegal character: \\96\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:16: error: illegal character: \\96\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                                                                                                                                                                   ^\nMain.java:16: error: ';' expected\nCertainly! The expression `cnt * (cnt - 1) / 2` is commonly used to calculate the number of combinations from `cnt` items taken 2 at a time. However, if there's a bug, it might be related to the type of `cnt` or how it's being used. Assuming `cnt` is an integer type and you want to ensure the calculation is correct and doesn't overflow (especially if `cnt` is large), you can use `long` arithmetic explicitly.\n                                                                                                                                                                                                                                                                                                                                                                                                                          ^\nMain.java:18: error: unclosed character literal\nHere's the corrected method, assuming `cnt` is of type `int` and you want to ensure the result is of type `long`:\n    ^\nMain.java:18: error: ';' expected\nHere's the corrected method, assuming `cnt` is of type `int` and you want to ensure the result is of type `long`:\n                    ^\nMain.java:18: error: <identifier> expected\nHere's the corrected method, assuming `cnt` is of type `int` and you want to ensure the result is of type `long`:\n                           ^\nMain.java:18: error: illegal character: \\96\nHere's the corrected method, assuming `cnt` is of type `int` and you want to ensure the result is of type `long`:\n                                      ^\nMain.java:18: error: illegal character: \\96\nHere's the corrected method, assuming `cnt` is of type `int` and you want to ensure the result is of type `long`:\n                                          ^\nMain.java:18: error: ';' expected\nHere's the corrected method, assuming `cnt` is of type `int` and you want to ensure the result is of type `long`:\n                                                 ^\nMain.java:18: error: illegal character: \\96\nHere's the corrected method, assuming `cnt` is of type `int` and you want to ensure the result is of type `long`:\n                                                       ^\nMain.java:18: error: illegal character: \\96\nHere's the corrected method, assuming `cnt` is of type `int` and you want to ensure the result is of type `long`:\n                                                           ^\nMain.java:18: error: ';' expected\nHere's the corrected method, assuming `cnt` is of type `int` and you want to ensure the result is of type `long`:\n                                                                    ^\nMain.java:18: error: ';' expected\nHere's the corrected method, assuming `cnt` is of type `int` and you want to ensure the result is of type `long`:\n                                                                            ^\nMain.java:18: error: ';' expected\nHere's the corrected method, assuming `cnt` is of type `int` and you want to ensure the result is of type `long`:\n                                                                                       ^\nMain.java:18: error: ';' expected\nHere's the corrected method, assuming `cnt` is of type `int` and you want to ensure the result is of type `long`:\n                                                                                                 ^\nMain.java:18: error: illegal character: \\96\nHere's the corrected method, assuming `cnt` is of type `int` and you want to ensure the result is of type `long`:\n                                                                                                          ^\nMain.java:18: error: illegal character: \\96\nHere's the corrected method, assuming `cnt` is of type `int` and you want to ensure the result is of type `long`:\n                                                                                                               ^\nMain.java:18: error: illegal start of type\nHere's the corrected method, assuming `cnt` is of type `int` and you want to ensure the result is of type `long`:\n                                                                                                                ^\nMain.java:18: error: <identifier> expected\nHere's the corrected method, assuming `cnt` is of type `int` and you want to ensure the result is of type `long`:\n                                                                                                                 ^\nMain.java:20: error: ';' expected\npublic long getValue() {\n      ^\nMain.java:20: error: invalid method declaration; return type required\npublic long getValue() {\n            ^\nMain.java:21: error: illegal start of expression\n    int cnt = ...; // Ensure cnt is defined and initialized somewhere in your class\n              ^\nMain.java:25: error: ';' expected\nThis explicit casting to `long` ensures that the multiplication is performed using `long` arithmetic before the division, preventing potential overflow issues if `cnt` is large.\n             ^\nMain.java:25: error: illegal character: \\96\nThis explicit casting to `long` ensures that the multiplication is performed using `long` arithmetic before the division, preventing potential overflow issues if `cnt` is large.\n                         ^\nMain.java:25: error: illegal character: \\96\nThis explicit casting to `long` ensures that the multiplication is performed using `long` arithmetic before the division, preventing potential overflow issues if `cnt` is large.\n                              ^\nMain.java:25: error: ';' expected\nThis explicit casting to `long` ensures that the multiplication is performed using `long` arithmetic before the division, preventing potential overflow issues if `cnt` is large.\n                                            ^\nMain.java:25: error: ';' expected\nThis explicit casting to `long` ensures that the multiplication is performed using `long` arithmetic before the division, preventing potential overflow issues if `cnt` is large.\n                                                               ^\nMain.java:25: error: ';' expected\nThis explicit casting to `long` ensures that the multiplication is performed using `long` arithmetic before the division, preventing potential overflow issues if `cnt` is large.\n                                                                            ^\nMain.java:25: error: illegal character: \\96\nThis explicit casting to `long` ensures that the multiplication is performed using `long` arithmetic before the division, preventing potential overflow issues if `cnt` is large.\n                                                                                   ^\nMain.java:25: error: illegal character: \\96\nThis explicit casting to `long` ensures that the multiplication is performed using `long` arithmetic before the division, preventing potential overflow issues if `cnt` is large.\n                                                                                        ^\nMain.java:25: error: ';' expected\nThis explicit casting to `long` ensures that the multiplication is performed using `long` arithmetic before the division, preventing potential overflow issues if `cnt` is large.\n                                                                                                           ^\nMain.java:25: error: ';' expected\nThis explicit casting to `long` ensures that the multiplication is performed using `long` arithmetic before the division, preventing potential overflow issues if `cnt` is large.\n                                                                                                                                    ^\nMain.java:25: error: ';' expected\nThis explicit casting to `long` ensures that the multiplication is performed using `long` arithmetic before the division, preventing potential overflow issues if `cnt` is large.\n                                                                                                                                                       ^\nMain.java:25: error: <identifier> expected\nThis explicit casting to `long` ensures that the multiplication is performed using `long` arithmetic before the division, preventing potential overflow issues if `cnt` is large.\n                                                                                                                                                              ^\nMain.java:25: error: illegal character: \\96\nThis explicit casting to `long` ensures that the multiplication is performed using `long` arithmetic before the division, preventing potential overflow issues if `cnt` is large.\n                                                                                                                                                                  ^\nMain.java:25: error: illegal character: \\96\nThis explicit casting to `long` ensures that the multiplication is performed using `long` arithmetic before the division, preventing potential overflow issues if `cnt` is large.\n                                                                                                                                                                      ^\nMain.java:25: error: <identifier> expected\nThis explicit casting to `long` ensures that the multiplication is performed using `long` arithmetic before the division, preventing potential overflow issues if `cnt` is large.\n                                                                                                                                                                                 ^\nMain.java:26: error: ';' expected\n        public TrieNode(char ch) {\n              ^\nMain.java:26: error: illegal start of type\n        public TrieNode(char ch) {\n                       ^\nMain.java:26: error: <identifier> expected\n        public TrieNode(char ch) {\n                        ^\nMain.java:26: error: ';' expected\n        public TrieNode(char ch) {\n                            ^\nMain.java:26: error: illegal start of type\n        public TrieNode(char ch) {\n                               ^\nMain.java:26: error: <identifier> expected\n        public TrieNode(char ch) {\n                                ^\nMain.java:26: error: ';' expected\n        public TrieNode(char ch) {\n                                  ^\nMain.java:27: error: illegal start of type\n            this.ch = ch;\n                ^\nMain.java:28: error: illegal start of type\n            for (int i = 0; i < 26; i++) {\n            ^\nMain.java:28: error: ')' expected\n            for (int i = 0; i < 26; i++) {\n                      ^\nMain.java:28: error: illegal start of type\n            for (int i = 0; i < 26; i++) {\n                         ^\nMain.java:28: error: <identifier> expected\n            for (int i = 0; i < 26; i++) {\n                          ^\nMain.java:28: error: ';' expected\n            for (int i = 0; i < 26; i++) {\n                           ^\nMain.java:28: error: <identifier> expected\n            for (int i = 0; i < 26; i++) {\n                               ^\nMain.java:28: error: illegal start of type\n            for (int i = 0; i < 26; i++) {\n                                  ^\nMain.java:28: error: '(' expected\n            for (int i = 0; i < 26; i++) {\n                                     ^\nMain.java:31: error: illegal start of type\n            this.cnt = 0;\n            ^\nMain.java:31: error: ';' expected\n            this.cnt = 0;\n                ^\nMain.java:31: error: <identifier> expected\n            this.cnt = 0;\n                    ^\nMain.java:32: error: illegal start of type\n            this.depth = 0;\n            ^\nMain.java:32: error: ';' expected\n            this.depth = 0;\n                ^\n100 errors\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:16: error: illegal character: \\96\n```java\n^\nMain.java:16: error: illegal character: \\96\n```java\n ^\nMain.java:16: error: illegal character: \\96\n```java\n  ^\nMain.java:20: error: illegal character: \\96\n```\n^\nMain.java:20: error: illegal character: \\96\n```\n ^\nMain.java:20: error: illegal character: \\96\n```\n  ^\nMain.java:22: error: ';' expected\nNote that I added `1L` to ensure that the multiplication and subtraction are done using `long` arithmetic, which prevents potential overflow issues when `cnt` is large.\n           ^\nMain.java:22: error: illegal character: \\96\nNote that I added `1L` to ensure that the multiplication and subtraction are done using `long` arithmetic, which prevents potential overflow issues when `cnt` is large.\n                  ^\nMain.java:22: error: illegal start of type\nNote that I added `1L` to ensure that the multiplication and subtraction are done using `long` arithmetic, which prevents potential overflow issues when `cnt` is large.\n                   ^\nMain.java:22: error: illegal character: \\96\nNote that I added `1L` to ensure that the multiplication and subtraction are done using `long` arithmetic, which prevents potential overflow issues when `cnt` is large.\n                     ^\nMain.java:22: error: ';' expected\nNote that I added `1L` to ensure that the multiplication and subtraction are done using `long` arithmetic, which prevents potential overflow issues when `cnt` is large.\n                      ^\nMain.java:22: error: ';' expected\nNote that I added `1L` to ensure that the multiplication and subtraction are done using `long` arithmetic, which prevents potential overflow issues when `cnt` is large.\n                                     ^\nMain.java:22: error: ';' expected\nNote that I added `1L` to ensure that the multiplication and subtraction are done using `long` arithmetic, which prevents potential overflow issues when `cnt` is large.\n                                                        ^\nMain.java:22: error: ';' expected\nNote that I added `1L` to ensure that the multiplication and subtraction are done using `long` arithmetic, which prevents potential overflow issues when `cnt` is large.\n                                                                        ^\nMain.java:22: error: ';' expected\nNote that I added `1L` to ensure that the multiplication and subtraction are done using `long` arithmetic, which prevents potential overflow issues when `cnt` is large.\n                                                                                 ^\nMain.java:22: error: illegal character: \\96\nNote that I added `1L` to ensure that the multiplication and subtraction are done using `long` arithmetic, which prevents potential overflow issues when `cnt` is large.\n                                                                                        ^\nMain.java:22: error: illegal character: \\96\nNote that I added `1L` to ensure that the multiplication and subtraction are done using `long` arithmetic, which prevents potential overflow issues when `cnt` is large.\n                                                                                             ^\nMain.java:22: error: <identifier> expected\nNote that I added `1L` to ensure that the multiplication and subtraction are done using `long` arithmetic, which prevents potential overflow issues when `cnt` is large.\n                                                                                                         ^\nMain.java:22: error: ';' expected\nNote that I added `1L` to ensure that the multiplication and subtraction are done using `long` arithmetic, which prevents potential overflow issues when `cnt` is large.\n                                                                                                                ^\nMain.java:22: error: ';' expected\nNote that I added `1L` to ensure that the multiplication and subtraction are done using `long` arithmetic, which prevents potential overflow issues when `cnt` is large.\n                                                                                                                                   ^\nMain.java:22: error: ';' expected\nNote that I added `1L` to ensure that the multiplication and subtraction are done using `long` arithmetic, which prevents potential overflow issues when `cnt` is large.\n                                                                                                                                                   ^\nMain.java:22: error: illegal character: \\96\nNote that I added `1L` to ensure that the multiplication and subtraction are done using `long` arithmetic, which prevents potential overflow issues when `cnt` is large.\n                                                                                                                                                         ^\nMain.java:22: error: illegal character: \\96\nNote that I added `1L` to ensure that the multiplication and subtraction are done using `long` arithmetic, which prevents potential overflow issues when `cnt` is large.\n                                                                                                                                                             ^\nMain.java:22: error: ';' expected\nNote that I added `1L` to ensure that the multiplication and subtraction are done using `long` arithmetic, which prevents potential overflow issues when `cnt` is large.\n                                                                                                                                                                       ^\n24 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_test_01",
                            "returncode": null,
                            "stdout": "655058660\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_11",
                            "returncode": null,
                            "stdout": "31063878\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": null,
                            "stdout": "672211043\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": null,
                            "stdout": "39601099\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_35",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": null,
                            "stdout": "-97306608\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": null,
                            "stdout": "1231043141\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": null,
                            "stdout": "-97306608\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_39",
                            "returncode": null,
                            "stdout": "1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_32",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_31",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": null,
                            "stdout": "30179890\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_37",
                            "returncode": null,
                            "stdout": "75000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": null,
                            "stdout": "40584442\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_05",
                            "returncode": null,
                            "stdout": "127163203\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_02",
                            "returncode": null,
                            "stdout": "112477817\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_34",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": null,
                            "stdout": "2863542610\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "4\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_30",
                            "returncode": null,
                            "stdout": "460842246\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": null,
                            "stdout": "449310877\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": null,
                            "stdout": "467082757\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": null,
                            "stdout": "1226400772\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": null,
                            "stdout": "673540872\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": null,
                            "stdout": "1229735909\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_36",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": null,
                            "stdout": "449315780\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": null,
                            "stdout": "40152841\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_40",
                            "returncode": null,
                            "stdout": "1426372059\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_38",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": null,
                            "stdout": "1434349190\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": null,
                            "stdout": "1434225762\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": null,
                            "stdout": "2863544632\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": null,
                            "stdout": "449320098\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_03",
                            "returncode": null,
                            "stdout": "112484897\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": null,
                            "stdout": "1906332158\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": null,
                            "stdout": "1905689823\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": null,
                            "stdout": "31243875\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": null,
                            "stdout": "32609706\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_04",
                            "returncode": null,
                            "stdout": "127162001\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": null,
                            "stdout": "2861932056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_06",
                            "returncode": null,
                            "stdout": "127145084\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": null,
                            "stdout": "89850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_33",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": null,
                            "stdout": "1025013520\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "32\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": null,
                            "stdout": "28921144\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_test_01",
                            "returncode": null,
                            "stdout": "655058660\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_11",
                            "returncode": null,
                            "stdout": "31063878\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": null,
                            "stdout": "672211043\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": null,
                            "stdout": "39601099\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_35",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": null,
                            "stdout": "1231043141\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_39",
                            "returncode": null,
                            "stdout": "1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_32",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_31",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": null,
                            "stdout": "30179890\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_37",
                            "returncode": null,
                            "stdout": "75000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": null,
                            "stdout": "40584442\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_05",
                            "returncode": null,
                            "stdout": "127163203\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_02",
                            "returncode": null,
                            "stdout": "112477817\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_34",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": null,
                            "stdout": "2863542610\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "4\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_30",
                            "returncode": null,
                            "stdout": "460842246\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": null,
                            "stdout": "449310877\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": null,
                            "stdout": "467082757\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": null,
                            "stdout": "1226400772\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": null,
                            "stdout": "673540872\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": null,
                            "stdout": "1229735909\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_36",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": null,
                            "stdout": "449315780\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": null,
                            "stdout": "40152841\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_40",
                            "returncode": null,
                            "stdout": "5721339355\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_38",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": null,
                            "stdout": "1434349190\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": null,
                            "stdout": "1434225762\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": null,
                            "stdout": "2863544632\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": null,
                            "stdout": "449320098\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_03",
                            "returncode": null,
                            "stdout": "112484897\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": null,
                            "stdout": "1906332158\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": null,
                            "stdout": "1905689823\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": null,
                            "stdout": "31243875\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": null,
                            "stdout": "32609706\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_04",
                            "returncode": null,
                            "stdout": "127162001\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": null,
                            "stdout": "2861932056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_06",
                            "returncode": null,
                            "stdout": "127145084\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": null,
                            "stdout": "89850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_33",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": null,
                            "stdout": "22499850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "32\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": null,
                            "stdout": "28921144\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n       ^\nMain.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n              ^\nMain.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                      ^\nMain.java:16: error: <identifier> expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                           ^\nMain.java:16: error: illegal character: \\96\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                               ^\nMain.java:16: error: illegal character: \\96\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                   ^\nMain.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                               ^\nMain.java:16: error: <identifier> expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                      ^\nMain.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                           ^\nMain.java:16: error: illegal character: \\96\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                           ^\nMain.java:16: error: <identifier> expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                               ^\nMain.java:16: error: illegal start of type\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                  ^\nMain.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                      ^\nMain.java:16: error: illegal character: \\96\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                           ^\nMain.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                                        ^\nMain.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                                                   ^\nMain.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                                                                   ^\nMain.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                                                                                ^\nMain.java:16: error: <identifier> expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                                                                                   ^\nMain.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                                                                                             ^\nMain.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                                                                                                             ^\nMain.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                                                                                                                         ^\nMain.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                                                                                                                                            ^\nMain.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                                                                                                                                                         ^\nMain.java:16: error: illegal character: \\96\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                                                                                                                                                                ^\nMain.java:16: error: illegal character: \\96\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                                                                                                                                                                     ^\nMain.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                                                                                                                                                                                    ^\nMain.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                                                                                                                                                                                                   ^\nMain.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                                                                                                                                                                                                            ^\nMain.java:16: error: ';' expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                                                                                                                                                                                                                          ^\nMain.java:16: error: <identifier> expected\nThe bug in the code is that if `cnt` is a large number, the multiplication `cnt * (cnt - 1)` could cause an integer overflow before the division by 2. To fix this, we should ensure that the multiplication is performed using `long` arithmetic to avoid overflow. Here is the corrected method:\n                                                                                                                                                                                                                                                                                                 ^\nMain.java:22: error: illegal character: \\96\nBy casting `cnt` to `long` before the multiplication, we ensure that the multiplication is performed using `long` arithmetic, which prevents overflow.\n           ^\nMain.java:22: error: illegal character: \\96\nBy casting `cnt` to `long` before the multiplication, we ensure that the multiplication is performed using `long` arithmetic, which prevents overflow.\n               ^\nMain.java:22: error: illegal character: \\96\nBy casting `cnt` to `long` before the multiplication, we ensure that the multiplication is performed using `long` arithmetic, which prevents overflow.\n                    ^\nMain.java:22: error: illegal character: \\96\nBy casting `cnt` to `long` before the multiplication, we ensure that the multiplication is performed using `long` arithmetic, which prevents overflow.\n                         ^\nMain.java:22: error: ';' expected\nBy casting `cnt` to `long` before the multiplication, we ensure that the multiplication is performed using `long` arithmetic, which prevents overflow.\n                                     ^\nMain.java:22: error: <identifier> expected\nBy casting `cnt` to `long` before the multiplication, we ensure that the multiplication is performed using `long` arithmetic, which prevents overflow.\n                                                    ^\nMain.java:22: error: ';' expected\nBy casting `cnt` to `long` before the multiplication, we ensure that the multiplication is performed using `long` arithmetic, which prevents overflow.\n                                                        ^\nMain.java:22: error: ';' expected\nBy casting `cnt` to `long` before the multiplication, we ensure that the multiplication is performed using `long` arithmetic, which prevents overflow.\n                                                                    ^\nMain.java:22: error: ';' expected\nBy casting `cnt` to `long` before the multiplication, we ensure that the multiplication is performed using `long` arithmetic, which prevents overflow.\n                                                                                       ^\nMain.java:22: error: ';' expected\nBy casting `cnt` to `long` before the multiplication, we ensure that the multiplication is performed using `long` arithmetic, which prevents overflow.\n                                                                                                    ^\nMain.java:22: error: illegal character: \\96\nBy casting `cnt` to `long` before the multiplication, we ensure that the multiplication is performed using `long` arithmetic, which prevents overflow.\n                                                                                                           ^\nMain.java:22: error: illegal character: \\96\nBy casting `cnt` to `long` before the multiplication, we ensure that the multiplication is performed using `long` arithmetic, which prevents overflow.\n                                                                                                                ^\nMain.java:22: error: <identifier> expected\nBy casting `cnt` to `long` before the multiplication, we ensure that the multiplication is performed using `long` arithmetic, which prevents overflow.\n                                                                                                                            ^\nMain.java:22: error: ';' expected\nBy casting `cnt` to `long` before the multiplication, we ensure that the multiplication is performed using `long` arithmetic, which prevents overflow.\n                                                                                                                                   ^\nMain.java:22: error: ';' expected\nBy casting `cnt` to `long` before the multiplication, we ensure that the multiplication is performed using `long` arithmetic, which prevents overflow.\n                                                                                                                                                     ^\n46 errors\n"
                }
            }
        },
        "prompt_apr_3": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:18: error: illegal start of expression\n        public TrieNode(char ch) {\n        ^\nMain.java:18: error: '.class' expected\n        public TrieNode(char ch) {\n                             ^\nMain.java:18: error: ';' expected\n        public TrieNode(char ch) {\n                               ^\nMain.java:27: error: illegal start of expression\n        public TrieNode getChild(char ch) {\n        ^\nMain.java:27: error: ';' expected\n        public TrieNode getChild(char ch) {\n                                ^\nMain.java:27: error: ';' expected\n        public TrieNode getChild(char ch) {\n                                        ^\nMain.java:31: error: illegal start of expression\n        public TrieNode(int parentDepth, char ch) {\n        ^\nMain.java:31: error: '.class' expected\n        public TrieNode(int parentDepth, char ch) {\n                            ^\nMain.java:31: error: ';' expected\n        public TrieNode(int parentDepth, char ch) {\n                                       ^\nMain.java:31: error: ';' expected\n        public TrieNode(int parentDepth, char ch) {\n                                                ^\nMain.java:40: error: illegal start of expression\n        public void addChild(TrieNode child) {\n        ^\nMain.java:40: error: illegal start of expression\n        public void addChild(TrieNode child) {\n               ^\nMain.java:40: error: ';' expected\n        public void addChild(TrieNode child) {\n                            ^\nMain.java:40: error: ';' expected\n        public void addChild(TrieNode child) {\n                                           ^\nMain.java:132: error: reached end of file while parsing\n}\n ^\n15 errors\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:16: error: illegal character: \\96\n```java\n^\nMain.java:16: error: illegal character: \\96\n```java\n ^\nMain.java:16: error: illegal character: \\96\n```java\n  ^\nMain.java:21: error: illegal character: \\96\n```\n^\nMain.java:21: error: illegal character: \\96\n```\n ^\nMain.java:21: error: illegal character: \\96\n```\n  ^\n6 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_test_01",
                            "returncode": null,
                            "stdout": "655058660\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_11",
                            "returncode": null,
                            "stdout": "31063878\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": null,
                            "stdout": "672211043\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": null,
                            "stdout": "39601099\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_35",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": null,
                            "stdout": "-97306608\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": null,
                            "stdout": "1231043141\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": null,
                            "stdout": "-97306608\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_39",
                            "returncode": null,
                            "stdout": "1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_32",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_31",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": null,
                            "stdout": "30179890\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_37",
                            "returncode": null,
                            "stdout": "75000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": null,
                            "stdout": "40584442\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_05",
                            "returncode": null,
                            "stdout": "127163203\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_02",
                            "returncode": null,
                            "stdout": "112477817\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_34",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": null,
                            "stdout": "2863542610\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "4\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_30",
                            "returncode": null,
                            "stdout": "460842246\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": null,
                            "stdout": "449310877\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": null,
                            "stdout": "467082757\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": null,
                            "stdout": "1226400772\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": null,
                            "stdout": "673540872\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": null,
                            "stdout": "1229735909\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_36",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": null,
                            "stdout": "449315780\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": null,
                            "stdout": "40152841\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_40",
                            "returncode": null,
                            "stdout": "1426372059\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_38",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": null,
                            "stdout": "1434349190\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": null,
                            "stdout": "1434225762\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": null,
                            "stdout": "2863544632\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": null,
                            "stdout": "449320098\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_03",
                            "returncode": null,
                            "stdout": "112484897\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": null,
                            "stdout": "1906332158\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": null,
                            "stdout": "1905689823\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": null,
                            "stdout": "31243875\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": null,
                            "stdout": "32609706\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_04",
                            "returncode": null,
                            "stdout": "127162001\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": null,
                            "stdout": "2861932056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_06",
                            "returncode": null,
                            "stdout": "127145084\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": null,
                            "stdout": "89850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_33",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": null,
                            "stdout": "1025013520\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "32\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": null,
                            "stdout": "28921144\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:18: error: illegal start of expression\n        public TrieNode(char ch) {\n        ^\nMain.java:18: error: '.class' expected\n        public TrieNode(char ch) {\n                             ^\nMain.java:18: error: ';' expected\n        public TrieNode(char ch) {\n                               ^\nMain.java:27: error: illegal start of expression\n        public TrieNode getChild(char ch) {\n        ^\nMain.java:27: error: ';' expected\n        public TrieNode getChild(char ch) {\n                                ^\nMain.java:27: error: ';' expected\n        public TrieNode getChild(char ch) {\n                                        ^\nMain.java:31: error: illegal start of expression\n        public TrieNode(int parentDepth, char ch) {\n        ^\nMain.java:31: error: '.class' expected\n        public TrieNode(int parentDepth, char ch) {\n                            ^\nMain.java:31: error: ';' expected\n        public TrieNode(int parentDepth, char ch) {\n                                       ^\nMain.java:31: error: ';' expected\n        public TrieNode(int parentDepth, char ch) {\n                                                ^\nMain.java:40: error: illegal start of expression\n        public void addChild(TrieNode child) {\n        ^\nMain.java:40: error: illegal start of expression\n        public void addChild(TrieNode child) {\n               ^\nMain.java:40: error: ';' expected\n        public void addChild(TrieNode child) {\n                            ^\nMain.java:40: error: ';' expected\n        public void addChild(TrieNode child) {\n                                           ^\nMain.java:132: error: reached end of file while parsing\n}\n ^\n15 errors\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_test_01",
                            "returncode": null,
                            "stdout": "655058660\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_11",
                            "returncode": null,
                            "stdout": "31063878\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": null,
                            "stdout": "672211043\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": null,
                            "stdout": "39601099\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_35",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": null,
                            "stdout": "1231043141\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_39",
                            "returncode": null,
                            "stdout": "1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_32",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_31",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": null,
                            "stdout": "30179890\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_37",
                            "returncode": null,
                            "stdout": "75000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": null,
                            "stdout": "40584442\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_05",
                            "returncode": null,
                            "stdout": "127163203\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_02",
                            "returncode": null,
                            "stdout": "112477817\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_34",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": null,
                            "stdout": "2863542610\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "4\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_30",
                            "returncode": null,
                            "stdout": "460842246\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": null,
                            "stdout": "449310877\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": null,
                            "stdout": "467082757\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": null,
                            "stdout": "1226400772\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": null,
                            "stdout": "673540872\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": null,
                            "stdout": "1229735909\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_36",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": null,
                            "stdout": "449315780\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": null,
                            "stdout": "40152841\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_40",
                            "returncode": null,
                            "stdout": "5721339355\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_38",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": null,
                            "stdout": "1434349190\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": null,
                            "stdout": "1434225762\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": null,
                            "stdout": "2863544632\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": null,
                            "stdout": "449320098\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_03",
                            "returncode": null,
                            "stdout": "112484897\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": null,
                            "stdout": "1906332158\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": null,
                            "stdout": "1905689823\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": null,
                            "stdout": "31243875\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": null,
                            "stdout": "32609706\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_04",
                            "returncode": null,
                            "stdout": "127162001\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": null,
                            "stdout": "2861932056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_06",
                            "returncode": null,
                            "stdout": "127145084\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": null,
                            "stdout": "89850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_33",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": null,
                            "stdout": "22499850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "32\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": null,
                            "stdout": "28921144\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        }
                    ]
                }
            }
        },
        "prompt_apr_4": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_test_01",
                            "returncode": null,
                            "stdout": "655058660\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_11",
                            "returncode": null,
                            "stdout": "31063878\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": null,
                            "stdout": "672211043\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": null,
                            "stdout": "39601099\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_35",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": null,
                            "stdout": "1231043141\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_39",
                            "returncode": null,
                            "stdout": "1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_32",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_31",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": null,
                            "stdout": "30179890\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_37",
                            "returncode": null,
                            "stdout": "75000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": null,
                            "stdout": "40584442\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_05",
                            "returncode": null,
                            "stdout": "127163203\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_02",
                            "returncode": null,
                            "stdout": "112477817\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_34",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": null,
                            "stdout": "2863542610\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "4\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_30",
                            "returncode": null,
                            "stdout": "460842246\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": null,
                            "stdout": "449310877\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": null,
                            "stdout": "467082757\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": null,
                            "stdout": "1226400772\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": null,
                            "stdout": "673540872\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": null,
                            "stdout": "1229735909\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_36",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": null,
                            "stdout": "449315780\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": null,
                            "stdout": "40152841\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_40",
                            "returncode": null,
                            "stdout": "5721339355\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_38",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": null,
                            "stdout": "1434349190\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": null,
                            "stdout": "1434225762\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": null,
                            "stdout": "2863544632\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": null,
                            "stdout": "449320098\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_03",
                            "returncode": null,
                            "stdout": "112484897\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": null,
                            "stdout": "1906332158\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": null,
                            "stdout": "1905689823\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": null,
                            "stdout": "31243875\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": null,
                            "stdout": "32609706\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_04",
                            "returncode": null,
                            "stdout": "127162001\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": null,
                            "stdout": "2861932056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_06",
                            "returncode": null,
                            "stdout": "127145084\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": null,
                            "stdout": "89850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_33",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": null,
                            "stdout": "22499850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "32\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": null,
                            "stdout": "28921144\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_test_01",
                            "returncode": null,
                            "stdout": "655058660\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_11",
                            "returncode": null,
                            "stdout": "31063878\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": null,
                            "stdout": "672211043\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": null,
                            "stdout": "39601099\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_35",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": null,
                            "stdout": "1231043141\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_39",
                            "returncode": null,
                            "stdout": "1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_32",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_31",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": null,
                            "stdout": "30179890\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_37",
                            "returncode": null,
                            "stdout": "75000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": null,
                            "stdout": "40584442\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_05",
                            "returncode": null,
                            "stdout": "127163203\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_02",
                            "returncode": null,
                            "stdout": "112477817\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_34",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": null,
                            "stdout": "2863542610\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "4\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_30",
                            "returncode": null,
                            "stdout": "460842246\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": null,
                            "stdout": "449310877\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": null,
                            "stdout": "467082757\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": null,
                            "stdout": "1226400772\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": null,
                            "stdout": "673540872\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": null,
                            "stdout": "1229735909\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_36",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": null,
                            "stdout": "449315780\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": null,
                            "stdout": "40152841\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_40",
                            "returncode": null,
                            "stdout": "5721339355\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_38",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": null,
                            "stdout": "1434349190\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": null,
                            "stdout": "1434225762\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": null,
                            "stdout": "2863544632\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": null,
                            "stdout": "449320098\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_03",
                            "returncode": null,
                            "stdout": "112484897\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": null,
                            "stdout": "1906332158\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": null,
                            "stdout": "1905689823\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": null,
                            "stdout": "31243875\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": null,
                            "stdout": "32609706\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_04",
                            "returncode": null,
                            "stdout": "127162001\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": null,
                            "stdout": "2861932056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_06",
                            "returncode": null,
                            "stdout": "127145084\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": null,
                            "stdout": "89850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_33",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": null,
                            "stdout": "22499850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "32\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": null,
                            "stdout": "28921144\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_test_01",
                            "returncode": null,
                            "stdout": "655058660\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_11",
                            "returncode": null,
                            "stdout": "31063878\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": null,
                            "stdout": "672211043\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": null,
                            "stdout": "39601099\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_35",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": null,
                            "stdout": "1231043141\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_39",
                            "returncode": null,
                            "stdout": "1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_32",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_31",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": null,
                            "stdout": "30179890\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_37",
                            "returncode": null,
                            "stdout": "75000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": null,
                            "stdout": "40584442\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_05",
                            "returncode": null,
                            "stdout": "127163203\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_02",
                            "returncode": null,
                            "stdout": "112477817\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_34",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": null,
                            "stdout": "2863542610\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "4\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_30",
                            "returncode": null,
                            "stdout": "460842246\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": null,
                            "stdout": "449310877\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": null,
                            "stdout": "467082757\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": null,
                            "stdout": "1226400772\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": null,
                            "stdout": "673540872\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": null,
                            "stdout": "1229735909\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_36",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": null,
                            "stdout": "449315780\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": null,
                            "stdout": "40152841\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_40",
                            "returncode": null,
                            "stdout": "5721339355\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_38",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": null,
                            "stdout": "1434349190\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": null,
                            "stdout": "1434225762\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": null,
                            "stdout": "2863544632\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": null,
                            "stdout": "449320098\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_03",
                            "returncode": null,
                            "stdout": "112484897\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": null,
                            "stdout": "1906332158\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": null,
                            "stdout": "1905689823\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": null,
                            "stdout": "31243875\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": null,
                            "stdout": "32609706\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_04",
                            "returncode": null,
                            "stdout": "127162001\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": null,
                            "stdout": "2861932056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_06",
                            "returncode": null,
                            "stdout": "127145084\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": null,
                            "stdout": "89850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_33",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": null,
                            "stdout": "22499850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "32\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": null,
                            "stdout": "28921144\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_test_01",
                            "returncode": null,
                            "stdout": "655058660\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_11",
                            "returncode": null,
                            "stdout": "31063878\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": null,
                            "stdout": "672211043\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": null,
                            "stdout": "39601099\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_35",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": null,
                            "stdout": "1231043141\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_39",
                            "returncode": null,
                            "stdout": "1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_32",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_31",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": null,
                            "stdout": "30179890\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_37",
                            "returncode": null,
                            "stdout": "75000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": null,
                            "stdout": "40584442\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_05",
                            "returncode": null,
                            "stdout": "127163203\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_02",
                            "returncode": null,
                            "stdout": "112477817\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_34",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": null,
                            "stdout": "2863542610\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "4\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_30",
                            "returncode": null,
                            "stdout": "460842246\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": null,
                            "stdout": "449310877\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": null,
                            "stdout": "467082757\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": null,
                            "stdout": "1226400772\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": null,
                            "stdout": "673540872\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": null,
                            "stdout": "1229735909\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_36",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": null,
                            "stdout": "449315780\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": null,
                            "stdout": "40152841\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_40",
                            "returncode": null,
                            "stdout": "5721339355\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_38",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": null,
                            "stdout": "1434349190\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": null,
                            "stdout": "1434225762\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": null,
                            "stdout": "2863544632\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": null,
                            "stdout": "449320098\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_03",
                            "returncode": null,
                            "stdout": "112484897\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": null,
                            "stdout": "1906332158\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": null,
                            "stdout": "1905689823\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": null,
                            "stdout": "31243875\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": null,
                            "stdout": "32609706\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_04",
                            "returncode": null,
                            "stdout": "127162001\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": null,
                            "stdout": "2861932056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_06",
                            "returncode": null,
                            "stdout": "127145084\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": null,
                            "stdout": "89850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_33",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": null,
                            "stdout": "22499850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "32\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": null,
                            "stdout": "28921144\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_test_01",
                            "returncode": null,
                            "stdout": "655058660\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_11",
                            "returncode": null,
                            "stdout": "31063878\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": null,
                            "stdout": "672211043\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": null,
                            "stdout": "39601099\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_35",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": null,
                            "stdout": "1231043141\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_39",
                            "returncode": null,
                            "stdout": "1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_32",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_31",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": null,
                            "stdout": "30179890\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_37",
                            "returncode": null,
                            "stdout": "75000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": null,
                            "stdout": "40584442\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_05",
                            "returncode": null,
                            "stdout": "127163203\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_02",
                            "returncode": null,
                            "stdout": "112477817\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_34",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": null,
                            "stdout": "2863542610\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "4\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_30",
                            "returncode": null,
                            "stdout": "460842246\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": null,
                            "stdout": "449310877\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": null,
                            "stdout": "467082757\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": null,
                            "stdout": "1226400772\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": null,
                            "stdout": "673540872\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": null,
                            "stdout": "1229735909\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_36",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": null,
                            "stdout": "449315780\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": null,
                            "stdout": "40152841\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_40",
                            "returncode": null,
                            "stdout": "5721339355\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_38",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": null,
                            "stdout": "1434349190\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": null,
                            "stdout": "1434225762\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": null,
                            "stdout": "2863544632\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": null,
                            "stdout": "449320098\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_03",
                            "returncode": null,
                            "stdout": "112484897\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": null,
                            "stdout": "1906332158\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": null,
                            "stdout": "1905689823\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": null,
                            "stdout": "31243875\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": null,
                            "stdout": "32609706\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_04",
                            "returncode": null,
                            "stdout": "127162001\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": null,
                            "stdout": "2861932056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_06",
                            "returncode": null,
                            "stdout": "127145084\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": null,
                            "stdout": "89850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_33",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": null,
                            "stdout": "22499850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "32\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": null,
                            "stdout": "28921144\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        }
                    ]
                }
            }
        },
        "prompt_apr_5": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:19: error: illegal start of expression\n        public TrieNode(char ch) {\n        ^\nMain.java:19: error: '.class' expected\n        public TrieNode(char ch) {\n                             ^\nMain.java:19: error: ';' expected\n        public TrieNode(char ch) {\n                               ^\nMain.java:28: error: illegal start of expression\n        public TrieNode getChild(char ch) {\n        ^\nMain.java:28: error: ';' expected\n        public TrieNode getChild(char ch) {\n                                ^\nMain.java:28: error: ';' expected\n        public TrieNode getChild(char ch) {\n                                        ^\nMain.java:32: error: illegal start of expression\n        public TrieNode(int parentDepth, char ch) {\n        ^\nMain.java:32: error: '.class' expected\n        public TrieNode(int parentDepth, char ch) {\n                            ^\nMain.java:32: error: ';' expected\n        public TrieNode(int parentDepth, char ch) {\n                                       ^\nMain.java:32: error: ';' expected\n        public TrieNode(int parentDepth, char ch) {\n                                                ^\nMain.java:41: error: illegal start of expression\n        public void addChild(TrieNode child) {\n        ^\nMain.java:41: error: illegal start of expression\n        public void addChild(TrieNode child) {\n               ^\nMain.java:41: error: ';' expected\n        public void addChild(TrieNode child) {\n                            ^\nMain.java:41: error: ';' expected\n        public void addChild(TrieNode child) {\n                                           ^\nMain.java:133: error: reached end of file while parsing\n}\n ^\n15 errors\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:16: error: illegal start of type\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n^\nMain.java:16: error: <identifier> expected\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n           ^\nMain.java:16: error: ';' expected\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n             ^\nMain.java:16: error: <identifier> expected\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n                  ^\nMain.java:16: error: illegal start of type\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n                     ^\nMain.java:16: error: <identifier> expected\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n                      ^\nMain.java:16: error: ';' expected\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n                       ^\nMain.java:16: error: illegal start of type\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n                         ^\nMain.java:16: error: <identifier> expected\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n                          ^\nMain.java:16: error: illegal start of type\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n                                         ^\nMain.java:16: error: ';' expected\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n                                               ^\nMain.java:16: error: illegal start of type\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n                                                    ^\nMain.java:16: error: <identifier> expected\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n                                                     ^\nMain.java:16: error: ';' expected\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n                                                       ^\nMain.java:16: error: illegal start of type\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n                                                           ^\nMain.java:16: error: <identifier> expected\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n                                                            ^\nMain.java:16: error: ';' expected\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n                                                              ^\nMain.java:16: error: illegal start of type\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n                                                                ^\nMain.java:16: error: <identifier> expected\nreturn (cnt * (cnt - 1)) / 2;            return cnt * (cnt - 1) / 2;\n                                                                 ^\nMain.java:19: error: invalid method declaration; return type required\n        public TrieNode(char ch) {\n               ^\nMain.java:32: error: invalid method declaration; return type required\n        public TrieNode(int parentDepth, char ch) {\n               ^\nMain.java:47: error: class, interface, or enum expected\n    static TrieNode dummy = new TrieNode('a');\n           ^\nMain.java:49: error: class, interface, or enum expected\n    public static void build(String str) {\n                  ^\nMain.java:51: error: class, interface, or enum expected\n        for (int i = 0; i < str.length(); i++) {\n        ^\nMain.java:51: error: class, interface, or enum expected\n        for (int i = 0; i < str.length(); i++) {\n                        ^\nMain.java:51: error: class, interface, or enum expected\n        for (int i = 0; i < str.length(); i++) {\n                                          ^\nMain.java:53: error: class, interface, or enum expected\n            char ch1 = str.charAt(i);\n            ^\nMain.java:55: error: class, interface, or enum expected\n            TrieNode child = curr.getChild(ch1);\n            ^\nMain.java:57: error: class, interface, or enum expected\n            if (child != null) {\n            ^\nMain.java:59: error: class, interface, or enum expected\n            } else {\n            ^\nMain.java:61: error: class, interface, or enum expected\n                curr.addChild(child);\n                ^\nMain.java:62: error: class, interface, or enum expected\n            }\n            ^\nMain.java:64: error: class, interface, or enum expected\n        }\n        ^\nMain.java:67: error: class, interface, or enum expected\n    public static long travel() {\n                  ^\nMain.java:69: error: class, interface, or enum expected\n        arrayDeque.add(dummy);\n        ^\nMain.java:71: error: class, interface, or enum expected\n        long ans = 0;\n        ^\nMain.java:72: error: class, interface, or enum expected\n        while (!arrayDeque.isEmpty()) {\n        ^\nMain.java:74: error: class, interface, or enum expected\n            long val1 = node.getValue();\n            ^\nMain.java:75: error: class, interface, or enum expected\n            long val2 = 0;\n            ^\nMain.java:76: error: class, interface, or enum expected\n            for (int i = 0; i < 26; i++) {\n            ^\nMain.java:76: error: class, interface, or enum expected\n            for (int i = 0; i < 26; i++) {\n                            ^\nMain.java:76: error: class, interface, or enum expected\n            for (int i = 0; i < 26; i++) {\n                                    ^\nMain.java:79: error: class, interface, or enum expected\n                    arrayDeque.add(node.children[i]);\n                    ^\nMain.java:80: error: class, interface, or enum expected\n                }\n                ^\nMain.java:83: error: class, interface, or enum expected\n        }\n        ^\nMain.java:85: error: class, interface, or enum expected\n    }\n    ^\nMain.java:87: error: class, interface, or enum expected\n    public static void main(String[] args) throws IOException {\n                  ^\nMain.java:89: error: class, interface, or enum expected\n        String[] str = rd.nextLine().split(\" \");\n        ^\nMain.java:90: error: class, interface, or enum expected\n        for (int i = 0; i < n; i++) {\n        ^\nMain.java:90: error: class, interface, or enum expected\n        for (int i = 0; i < n; i++) {\n                        ^\nMain.java:90: error: class, interface, or enum expected\n        for (int i = 0; i < n; i++) {\n                               ^\nMain.java:92: error: class, interface, or enum expected\n        }\n        ^\nMain.java:94: error: class, interface, or enum expected\n        System.out.println(ans);\n        ^\nMain.java:95: error: class, interface, or enum expected\n    }\n    ^\nMain.java:133: error: class, interface, or enum expected\n}\n^\n55 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_test_01",
                            "returncode": null,
                            "stdout": "655058660\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_11",
                            "returncode": null,
                            "stdout": "31063878\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": null,
                            "stdout": "672211043\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": null,
                            "stdout": "39601099\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_35",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": null,
                            "stdout": "-97306608\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": null,
                            "stdout": "1231043141\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": null,
                            "stdout": "-97306608\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_39",
                            "returncode": null,
                            "stdout": "1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_32",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_31",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": null,
                            "stdout": "30179890\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_37",
                            "returncode": null,
                            "stdout": "75000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": null,
                            "stdout": "40584442\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_05",
                            "returncode": null,
                            "stdout": "127163203\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_02",
                            "returncode": null,
                            "stdout": "112477817\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_34",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": null,
                            "stdout": "2863542610\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "4\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_30",
                            "returncode": null,
                            "stdout": "460842246\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": null,
                            "stdout": "449310877\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": null,
                            "stdout": "467082757\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": null,
                            "stdout": "1226400772\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": null,
                            "stdout": "673540872\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": null,
                            "stdout": "1229735909\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_36",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": null,
                            "stdout": "449315780\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": null,
                            "stdout": "40152841\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_40",
                            "returncode": null,
                            "stdout": "1426372059\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_38",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": null,
                            "stdout": "1434349190\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": null,
                            "stdout": "1434225762\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": null,
                            "stdout": "2863544632\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": null,
                            "stdout": "449320098\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_03",
                            "returncode": null,
                            "stdout": "112484897\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": null,
                            "stdout": "1906332158\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": null,
                            "stdout": "1905689823\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": null,
                            "stdout": "31243875\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": null,
                            "stdout": "32609706\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_04",
                            "returncode": null,
                            "stdout": "127162001\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": null,
                            "stdout": "2861932056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_06",
                            "returncode": null,
                            "stdout": "127145084\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": null,
                            "stdout": "89850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_33",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": null,
                            "stdout": "1025013520\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "32\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": null,
                            "stdout": "28921144\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_test_01",
                            "returncode": null,
                            "stdout": "655058660\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_11",
                            "returncode": null,
                            "stdout": "31063878\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": null,
                            "stdout": "672211043\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": null,
                            "stdout": "39601099\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_35",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": null,
                            "stdout": "1231043141\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_39",
                            "returncode": null,
                            "stdout": "1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_32",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_31",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": null,
                            "stdout": "30179890\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_37",
                            "returncode": null,
                            "stdout": "75000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": null,
                            "stdout": "40584442\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_05",
                            "returncode": null,
                            "stdout": "127163203\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_02",
                            "returncode": null,
                            "stdout": "112477817\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_34",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": null,
                            "stdout": "2863542610\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "4\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_30",
                            "returncode": null,
                            "stdout": "460842246\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": null,
                            "stdout": "449310877\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": null,
                            "stdout": "467082757\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": null,
                            "stdout": "1226400772\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": null,
                            "stdout": "673540872\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": null,
                            "stdout": "1229735909\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_36",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": null,
                            "stdout": "449315780\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": null,
                            "stdout": "40152841\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_40",
                            "returncode": null,
                            "stdout": "5721339355\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_38",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": null,
                            "stdout": "1434349190\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": null,
                            "stdout": "1434225762\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": null,
                            "stdout": "2863544632\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": null,
                            "stdout": "449320098\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_03",
                            "returncode": null,
                            "stdout": "112484897\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": null,
                            "stdout": "1906332158\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": null,
                            "stdout": "1905689823\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": null,
                            "stdout": "31243875\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": null,
                            "stdout": "32609706\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_04",
                            "returncode": null,
                            "stdout": "127162001\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": null,
                            "stdout": "2861932056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_06",
                            "returncode": null,
                            "stdout": "127145084\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": null,
                            "stdout": "89850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_33",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": null,
                            "stdout": "22499850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "32\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": null,
                            "stdout": "28921144\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_test_01",
                            "returncode": null,
                            "stdout": "655058660\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_11",
                            "returncode": null,
                            "stdout": "31063878\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": null,
                            "stdout": "672211043\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": null,
                            "stdout": "39601099\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_35",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": null,
                            "stdout": "1231043141\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_39",
                            "returncode": null,
                            "stdout": "1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_32",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_31",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": null,
                            "stdout": "30179890\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_37",
                            "returncode": null,
                            "stdout": "75000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": null,
                            "stdout": "40584442\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_05",
                            "returncode": null,
                            "stdout": "127163203\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_02",
                            "returncode": null,
                            "stdout": "112477817\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_34",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": null,
                            "stdout": "2863542610\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "4\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_30",
                            "returncode": null,
                            "stdout": "460842246\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": null,
                            "stdout": "449310877\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": null,
                            "stdout": "467082757\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": null,
                            "stdout": "1226400772\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": null,
                            "stdout": "673540872\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": null,
                            "stdout": "1229735909\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_36",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": null,
                            "stdout": "449315780\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": null,
                            "stdout": "40152841\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_40",
                            "returncode": null,
                            "stdout": "5721339355\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_38",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": null,
                            "stdout": "1434349190\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": null,
                            "stdout": "1434225762\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": null,
                            "stdout": "2863544632\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": null,
                            "stdout": "449320098\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_03",
                            "returncode": null,
                            "stdout": "112484897\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": null,
                            "stdout": "1906332158\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": null,
                            "stdout": "1905689823\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": null,
                            "stdout": "31243875\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": null,
                            "stdout": "32609706\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_04",
                            "returncode": null,
                            "stdout": "127162001\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": null,
                            "stdout": "2861932056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_06",
                            "returncode": null,
                            "stdout": "127145084\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": null,
                            "stdout": "89850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_33",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": null,
                            "stdout": "22499850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "32\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": null,
                            "stdout": "28921144\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        }
                    ]
                }
            }
        },
        "prompt_apr_6": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:19: error: illegal start of expression\n        public TrieNode(char ch) {\n        ^\nMain.java:19: error: '.class' expected\n        public TrieNode(char ch) {\n                             ^\nMain.java:19: error: ';' expected\n        public TrieNode(char ch) {\n                               ^\nMain.java:28: error: illegal start of expression\n        public TrieNode getChild(char ch) {\n        ^\nMain.java:28: error: ';' expected\n        public TrieNode getChild(char ch) {\n                                ^\nMain.java:28: error: ';' expected\n        public TrieNode getChild(char ch) {\n                                        ^\nMain.java:32: error: illegal start of expression\n        public TrieNode(int parentDepth, char ch) {\n        ^\nMain.java:32: error: '.class' expected\n        public TrieNode(int parentDepth, char ch) {\n                            ^\nMain.java:32: error: ';' expected\n        public TrieNode(int parentDepth, char ch) {\n                                       ^\nMain.java:32: error: ';' expected\n        public TrieNode(int parentDepth, char ch) {\n                                                ^\nMain.java:41: error: illegal start of expression\n        public void addChild(TrieNode child) {\n        ^\nMain.java:41: error: illegal start of expression\n        public void addChild(TrieNode child) {\n               ^\nMain.java:41: error: ';' expected\n        public void addChild(TrieNode child) {\n                            ^\nMain.java:41: error: ';' expected\n        public void addChild(TrieNode child) {\n                                           ^\nMain.java:133: error: reached end of file while parsing\n}\n ^\n15 errors\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:16: error: illegal start of type\nreturn cnt > 1 ? cnt * (cnt - 1) / 2 : 0;            return cnt * (cnt - 1) / 2;\n^\nMain.java:16: error: ';' expected\nreturn cnt > 1 ? cnt * (cnt - 1) / 2 : 0;            return cnt * (cnt - 1) / 2;\n      ^\nMain.java:16: error: illegal start of type\nreturn cnt > 1 ? cnt * (cnt - 1) / 2 : 0;            return cnt * (cnt - 1) / 2;\n           ^\nMain.java:16: error: <identifier> expected\nreturn cnt > 1 ? cnt * (cnt - 1) / 2 : 0;            return cnt * (cnt - 1) / 2;\n            ^\nMain.java:16: error: ';' expected\nreturn cnt > 1 ? cnt * (cnt - 1) / 2 : 0;            return cnt * (cnt - 1) / 2;\n              ^\nMain.java:16: error: <identifier> expected\nreturn cnt > 1 ? cnt * (cnt - 1) / 2 : 0;            return cnt * (cnt - 1) / 2;\n                    ^\nMain.java:16: error: illegal start of type\nreturn cnt > 1 ? cnt * (cnt - 1) / 2 : 0;            return cnt * (cnt - 1) / 2;\n                       ^\nMain.java:16: error: ';' expected\nreturn cnt > 1 ? cnt * (cnt - 1) / 2 : 0;            return cnt * (cnt - 1) / 2;\n                           ^\nMain.java:16: error: illegal start of type\nreturn cnt > 1 ? cnt * (cnt - 1) / 2 : 0;            return cnt * (cnt - 1) / 2;\n                                                     ^\nMain.java:16: error: ';' expected\nreturn cnt > 1 ? cnt * (cnt - 1) / 2 : 0;            return cnt * (cnt - 1) / 2;\n                                                           ^\nMain.java:16: error: illegal start of type\nreturn cnt > 1 ? cnt * (cnt - 1) / 2 : 0;            return cnt * (cnt - 1) / 2;\n                                                                ^\nMain.java:16: error: <identifier> expected\nreturn cnt > 1 ? cnt * (cnt - 1) / 2 : 0;            return cnt * (cnt - 1) / 2;\n                                                                 ^\nMain.java:16: error: ';' expected\nreturn cnt > 1 ? cnt * (cnt - 1) / 2 : 0;            return cnt * (cnt - 1) / 2;\n                                                                   ^\nMain.java:16: error: illegal start of type\nreturn cnt > 1 ? cnt * (cnt - 1) / 2 : 0;            return cnt * (cnt - 1) / 2;\n                                                                       ^\nMain.java:16: error: <identifier> expected\nreturn cnt > 1 ? cnt * (cnt - 1) / 2 : 0;            return cnt * (cnt - 1) / 2;\n                                                                        ^\nMain.java:16: error: ';' expected\nreturn cnt > 1 ? cnt * (cnt - 1) / 2 : 0;            return cnt * (cnt - 1) / 2;\n                                                                          ^\nMain.java:16: error: illegal start of type\nreturn cnt > 1 ? cnt * (cnt - 1) / 2 : 0;            return cnt * (cnt - 1) / 2;\n                                                                            ^\nMain.java:16: error: <identifier> expected\nreturn cnt > 1 ? cnt * (cnt - 1) / 2 : 0;            return cnt * (cnt - 1) / 2;\n                                                                             ^\nMain.java:19: error: invalid method declaration; return type required\n        public TrieNode(char ch) {\n               ^\nMain.java:32: error: invalid method declaration; return type required\n        public TrieNode(int parentDepth, char ch) {\n               ^\nMain.java:47: error: class, interface, or enum expected\n    static TrieNode dummy = new TrieNode('a');\n           ^\nMain.java:49: error: class, interface, or enum expected\n    public static void build(String str) {\n                  ^\nMain.java:51: error: class, interface, or enum expected\n        for (int i = 0; i < str.length(); i++) {\n        ^\nMain.java:51: error: class, interface, or enum expected\n        for (int i = 0; i < str.length(); i++) {\n                        ^\nMain.java:51: error: class, interface, or enum expected\n        for (int i = 0; i < str.length(); i++) {\n                                          ^\nMain.java:53: error: class, interface, or enum expected\n            char ch1 = str.charAt(i);\n            ^\nMain.java:55: error: class, interface, or enum expected\n            TrieNode child = curr.getChild(ch1);\n            ^\nMain.java:57: error: class, interface, or enum expected\n            if (child != null) {\n            ^\nMain.java:59: error: class, interface, or enum expected\n            } else {\n            ^\nMain.java:61: error: class, interface, or enum expected\n                curr.addChild(child);\n                ^\nMain.java:62: error: class, interface, or enum expected\n            }\n            ^\nMain.java:64: error: class, interface, or enum expected\n        }\n        ^\nMain.java:67: error: class, interface, or enum expected\n    public static long travel() {\n                  ^\nMain.java:69: error: class, interface, or enum expected\n        arrayDeque.add(dummy);\n        ^\nMain.java:71: error: class, interface, or enum expected\n        long ans = 0;\n        ^\nMain.java:72: error: class, interface, or enum expected\n        while (!arrayDeque.isEmpty()) {\n        ^\nMain.java:74: error: class, interface, or enum expected\n            long val1 = node.getValue();\n            ^\nMain.java:75: error: class, interface, or enum expected\n            long val2 = 0;\n            ^\nMain.java:76: error: class, interface, or enum expected\n            for (int i = 0; i < 26; i++) {\n            ^\nMain.java:76: error: class, interface, or enum expected\n            for (int i = 0; i < 26; i++) {\n                            ^\nMain.java:76: error: class, interface, or enum expected\n            for (int i = 0; i < 26; i++) {\n                                    ^\nMain.java:79: error: class, interface, or enum expected\n                    arrayDeque.add(node.children[i]);\n                    ^\nMain.java:80: error: class, interface, or enum expected\n                }\n                ^\nMain.java:83: error: class, interface, or enum expected\n        }\n        ^\nMain.java:85: error: class, interface, or enum expected\n    }\n    ^\nMain.java:87: error: class, interface, or enum expected\n    public static void main(String[] args) throws IOException {\n                  ^\nMain.java:89: error: class, interface, or enum expected\n        String[] str = rd.nextLine().split(\" \");\n        ^\nMain.java:90: error: class, interface, or enum expected\n        for (int i = 0; i < n; i++) {\n        ^\nMain.java:90: error: class, interface, or enum expected\n        for (int i = 0; i < n; i++) {\n                        ^\nMain.java:90: error: class, interface, or enum expected\n        for (int i = 0; i < n; i++) {\n                               ^\nMain.java:92: error: class, interface, or enum expected\n        }\n        ^\nMain.java:94: error: class, interface, or enum expected\n        System.out.println(ans);\n        ^\nMain.java:95: error: class, interface, or enum expected\n    }\n    ^\nMain.java:133: error: class, interface, or enum expected\n}\n^\n54 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:19: error: illegal start of expression\n        public TrieNode(char ch) {\n        ^\nMain.java:19: error: '.class' expected\n        public TrieNode(char ch) {\n                             ^\nMain.java:19: error: ';' expected\n        public TrieNode(char ch) {\n                               ^\nMain.java:28: error: illegal start of expression\n        public TrieNode getChild(char ch) {\n        ^\nMain.java:28: error: ';' expected\n        public TrieNode getChild(char ch) {\n                                ^\nMain.java:28: error: ';' expected\n        public TrieNode getChild(char ch) {\n                                        ^\nMain.java:32: error: illegal start of expression\n        public TrieNode(int parentDepth, char ch) {\n        ^\nMain.java:32: error: '.class' expected\n        public TrieNode(int parentDepth, char ch) {\n                            ^\nMain.java:32: error: ';' expected\n        public TrieNode(int parentDepth, char ch) {\n                                       ^\nMain.java:32: error: ';' expected\n        public TrieNode(int parentDepth, char ch) {\n                                                ^\nMain.java:41: error: illegal start of expression\n        public void addChild(TrieNode child) {\n        ^\nMain.java:41: error: illegal start of expression\n        public void addChild(TrieNode child) {\n               ^\nMain.java:41: error: ';' expected\n        public void addChild(TrieNode child) {\n                            ^\nMain.java:41: error: ';' expected\n        public void addChild(TrieNode child) {\n                                           ^\nMain.java:133: error: reached end of file while parsing\n}\n ^\n15 errors\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_test_01",
                            "returncode": null,
                            "stdout": "655058660\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_11",
                            "returncode": null,
                            "stdout": "31063878\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": null,
                            "stdout": "672211043\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": null,
                            "stdout": "39601099\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_35",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": null,
                            "stdout": "1231043141\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_39",
                            "returncode": null,
                            "stdout": "1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_32",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_31",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": null,
                            "stdout": "30179890\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_37",
                            "returncode": null,
                            "stdout": "75000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": null,
                            "stdout": "40584442\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_05",
                            "returncode": null,
                            "stdout": "127163203\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_02",
                            "returncode": null,
                            "stdout": "112477817\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_34",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": null,
                            "stdout": "2863542610\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "4\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_30",
                            "returncode": null,
                            "stdout": "460842246\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": null,
                            "stdout": "449310877\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": null,
                            "stdout": "467082757\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": null,
                            "stdout": "1226400772\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": null,
                            "stdout": "673540872\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": null,
                            "stdout": "1229735909\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_36",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": null,
                            "stdout": "449315780\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": null,
                            "stdout": "40152841\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_40",
                            "returncode": null,
                            "stdout": "5721339355\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_38",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": null,
                            "stdout": "1434349190\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": null,
                            "stdout": "1434225762\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": null,
                            "stdout": "2863544632\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": null,
                            "stdout": "449320098\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_03",
                            "returncode": null,
                            "stdout": "112484897\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": null,
                            "stdout": "1906332158\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": null,
                            "stdout": "1905689823\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": null,
                            "stdout": "31243875\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": null,
                            "stdout": "32609706\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_04",
                            "returncode": null,
                            "stdout": "127162001\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": null,
                            "stdout": "2861932056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_06",
                            "returncode": null,
                            "stdout": "127145084\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": null,
                            "stdout": "89850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_33",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": null,
                            "stdout": "22499850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "32\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": null,
                            "stdout": "28921144\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_test_01",
                            "returncode": null,
                            "stdout": "655058660\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_11",
                            "returncode": null,
                            "stdout": "31063878\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": null,
                            "stdout": "672211043\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": null,
                            "stdout": "39601099\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_35",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": null,
                            "stdout": "1231043141\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": null,
                            "stdout": "44999850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_39",
                            "returncode": null,
                            "stdout": "1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_32",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_31",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": null,
                            "stdout": "30179890\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_37",
                            "returncode": null,
                            "stdout": "75000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": null,
                            "stdout": "40584442\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_05",
                            "returncode": null,
                            "stdout": "127163203\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_02",
                            "returncode": null,
                            "stdout": "112477817\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_34",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": null,
                            "stdout": "2863542610\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "4\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_30",
                            "returncode": null,
                            "stdout": "460842246\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": null,
                            "stdout": "449310877\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": null,
                            "stdout": "467082757\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": null,
                            "stdout": "1226400772\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": null,
                            "stdout": "673540872\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": null,
                            "stdout": "1229735909\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_36",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": null,
                            "stdout": "449315780\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": null,
                            "stdout": "40152841\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_40",
                            "returncode": null,
                            "stdout": "5721339355\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_38",
                            "returncode": null,
                            "stdout": "0\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": null,
                            "stdout": "1434349190\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": null,
                            "stdout": "1434225762\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": null,
                            "stdout": "2863544632\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": null,
                            "stdout": "449320098\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_03",
                            "returncode": null,
                            "stdout": "112484897\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": null,
                            "stdout": "1906332158\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": null,
                            "stdout": "1905689823\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": null,
                            "stdout": "31243875\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": null,
                            "stdout": "32609706\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_04",
                            "returncode": null,
                            "stdout": "127162001\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": null,
                            "stdout": "2861932056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_test_06",
                            "returncode": null,
                            "stdout": "127145084\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": null,
                            "stdout": "89850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_33",
                            "returncode": null,
                            "stdout": "77280675\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": null,
                            "stdout": "22499850000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "32\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": null,
                            "stdout": "28921144\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": null,
                            "stdout": "150000\n",
                            "stderr": ""
                        }
                    ]
                }
            }
        }
    }
}