[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "Attack",
            "method_body": "public static void Attack() throws IOException {\n        int n = sc.nextInt();\n        ArrayList<Pair> res = new ArrayList<Pair>();\n        for(int i = 0; i < n; i++) {\n            int start = sc.nextInt();\n            int end = sc.nextInt();\n            res.add(new Pair(start, end));\n        }\n        Collections.sort(res, new sorting());\n        int total = 0;\n        for(int i = 0; i < res.size() - 1; i++) {\n            Pair current = res.get(i);\n            int ans = binary_search(current, i + 1, res.size() - 1, res);\n            if(ans == -1) continue;\n            total += (ans - i);\n        }\n        out.println(total);\n    }",
            "start_line": 26,
            "end_line": 43
        },
        "buggy_method_src": "public static void Attack() throws IOException {\n        int n = sc.nextInt();\n        ArrayList<Pair> res = new ArrayList<Pair>();\n        for(int i = 0; i < n; i++) {\n            int start = sc.nextInt();\n            int end = sc.nextInt();\n            res.add(new Pair(start, end));\n        }\n        Collections.sort(res, new sorting());\n        int total = 0;\n        for(int i = 0; i < res.size() - 1; i++) {\n            Pair current = res.get(i);\n            int ans = binary_search(current, i + 1, res.size() - 1, res);\n            if(ans == -1) continue;\n            total += (ans - i);\n        }\n        out.println(total);\n    }",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            10
        ],
        "buggy_statements": [
            "        int total = 0;"
        ],
        "buggy_method_src_endswith_buggy_statement": "public static void Attack() throws IOException {\n        int n = sc.nextInt();\n        ArrayList<Pair> res = new ArrayList<Pair>();\n        for(int i = 0; i < n; i++) {\n            int start = sc.nextInt();\n            int end = sc.nextInt();\n            res.add(new Pair(start, end));\n        }\n        Collections.sort(res, new sorting());\n        int total = 0;"
    }
]