
================== buggy_file ==================
faultyVersion.java
================== buggy_method ==================
{'method_name': 'main', 'method_body': 'public static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tlong n = l(sc);\n\t\tlong m = l(sc);\n\t\tsc.close();\n\t\tlong p = 998244353L;\n\t\tlong count = 0L;\n\t\tlong base = 1;\n\t\twhile (m > 0) {\n\t\t\tif (m % 2 == 1) {\n\t\t\t\tcount += n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base));\n\t\t\t}\n\t\t\tm /= 2;\n\t\t\tcount %= p;\n\t\t\tbase *= 2;\n\t\t}\n\t\tp(count);\n\t}', 'start_line': 6, 'end_line': 23}
================== buggy_method_src ==================
public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		long n = l(sc);
		long m = l(sc);
		sc.close();
		long p = 998244353L;
		long count = 0L;
		long base = 1;
		while (m > 0) {
			if (m % 2 == 1) {
				count += n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base));
			}
			m /= 2;
			count %= p;
			base *= 2;
		}
		p(count);
	}
================== test_stack ==================
None
================== test_assert ==================
None
================== buggy_lines_in_method ==================
[11]
================== buggy_statements ==================
['\t\t\t\tcount += n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base));']
================== buggy_method_src_endswith_buggy_statement ==================
public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		long n = l(sc);
		long m = l(sc);
		sc.close();
		long p = 998244353L;
		long count = 0L;
		long base = 1;
		while (m > 0) {
			if (m % 2 == 1) {
				count += n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base));