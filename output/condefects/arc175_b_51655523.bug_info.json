[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "solve",
            "method_body": "public static void solve() throws IOException{\n        int n = in.nextInt();\n        long a = in.nextInt();\n        long b = in.nextInt();\n        Deque<Character> que = new ArrayDeque<>();\n        String s = in.nextLine();\n        for (int i = 0; i < s.length(); i++) {\n            char ch = s.charAt(i);\n            if (que.isEmpty() || ch == '(') que.addLast(ch);\n            else {\n                if (que.peekLast() == '(') que.pollLast();\n                else que.addLast(ch);\n            }\n        }\n        List<Character> list = new ArrayList<>();\n        while (!que.isEmpty()) list.add(que.pollFirst());\n        if (list.size() == 0) {\n            out.println(0);\n            return;\n        }\n        //))()((((()()((\n        //))((((((\n        //)))(()\n        if (list.get(0) == '(' && list.get(list.size()-1) == '(') {\n            out.println(b * list.size() / 2);\n        }else if (list.get(0) == ')' && list.get(list.size()-1) == ')') {\n            out.println(b * list.size() / 2);\n        }else {\n            long sumR = 0; //)))((\n            for (int i = 0; i < list.size(); i++) {\n                if (list.get(i) == ')') sumR++;\n            }\n            long sumL = list.size() - sumR;\n            if (2L * b <= a) { //\u66ff\u6362\n                long ans = b * (sumR / 2) + b * (sumL / 2);\n                sumR %= 2;\n                out.println(ans + Math.min(a, b) * sumR);\n                \n            }else {\n                long mi = Math.min(sumR, sumL);\n                long mx = Math.max(sumR, sumL);\n                if (mi % 2 == 0) {\n                    long ans = mi / 2 * a;\n                    mx -= mi;\n                    out.println(ans + b * mx / 2);\n                }else {\n                    long ans = mi / 2 * a;\n                    mx -= mi - 1;\n                    if (2 * b >= a) {\n                        mx--;\n                        ans += a;\n                    }\n                    ans += b * mx / 2;\n                    out.println(ans);\n                }\n            }\n        }\n    }\n\n  ",
            "start_line": 7,
            "end_line": 64
        },
        "buggy_method_src": "public static void solve() throws IOException{\n        int n = in.nextInt();\n        long a = in.nextInt();\n        long b = in.nextInt();\n        Deque<Character> que = new ArrayDeque<>();\n        String s = in.nextLine();\n        for (int i = 0; i < s.length(); i++) {\n            char ch = s.charAt(i);\n            if (que.isEmpty() || ch == '(') que.addLast(ch);\n            else {\n                if (que.peekLast() == '(') que.pollLast();\n                else que.addLast(ch);\n            }\n        }\n        List<Character> list = new ArrayList<>();\n        while (!que.isEmpty()) list.add(que.pollFirst());\n        if (list.size() == 0) {\n            out.println(0);\n            return;\n        }\n        //))()((((()()((\n        //))((((((\n        //)))(()\n        if (list.get(0) == '(' && list.get(list.size()-1) == '(') {\n            out.println(b * list.size() / 2);\n        }else if (list.get(0) == ')' && list.get(list.size()-1) == ')') {\n            out.println(b * list.size() / 2);\n        }else {\n            long sumR = 0; //)))((\n            for (int i = 0; i < list.size(); i++) {\n                if (list.get(i) == ')') sumR++;\n            }\n            long sumL = list.size() - sumR;\n            if (2L * b <= a) { //\u66ff\u6362\n                long ans = b * (sumR / 2) + b * (sumL / 2);\n                sumR %= 2;\n                out.println(ans + Math.min(a, b) * sumR);\n                \n            }else {\n                long mi = Math.min(sumR, sumL);\n                long mx = Math.max(sumR, sumL);\n                if (mi % 2 == 0) {\n                    long ans = mi / 2 * a;\n                    mx -= mi;\n                    out.println(ans + b * mx / 2);\n                }else {\n                    long ans = mi / 2 * a;\n                    mx -= mi - 1;\n                    if (2 * b >= a) {\n                        mx--;\n                        ans += a;\n                    }\n                    ans += b * mx / 2;\n                    out.println(ans);\n                }\n            }\n        }\n    }\n\n  ",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            37
        ],
        "buggy_statements": [
            "                out.println(ans + Math.min(a, b) * sumR);"
        ],
        "buggy_method_src_endswith_buggy_statement": "public static void solve() throws IOException{\n        int n = in.nextInt();\n        long a = in.nextInt();\n        long b = in.nextInt();\n        Deque<Character> que = new ArrayDeque<>();\n        String s = in.nextLine();\n        for (int i = 0; i < s.length(); i++) {\n            char ch = s.charAt(i);\n            if (que.isEmpty() || ch == '(') que.addLast(ch);\n            else {\n                if (que.peekLast() == '(') que.pollLast();\n                else que.addLast(ch);\n            }\n        }\n        List<Character> list = new ArrayList<>();\n        while (!que.isEmpty()) list.add(que.pollFirst());\n        if (list.size() == 0) {\n            out.println(0);\n            return;\n        }\n        //))()((((()()((\n        //))((((((\n        //)))(()\n        if (list.get(0) == '(' && list.get(list.size()-1) == '(') {\n            out.println(b * list.size() / 2);\n        }else if (list.get(0) == ')' && list.get(list.size()-1) == ')') {\n            out.println(b * list.size() / 2);\n        }else {\n            long sumR = 0; //)))((\n            for (int i = 0; i < list.size(); i++) {\n                if (list.get(i) == ')') sumR++;\n            }\n            long sumL = list.size() - sumR;\n            if (2L * b <= a) { //\u66ff\u6362\n                long ans = b * (sumR / 2) + b * (sumL / 2);\n                sumR %= 2;\n                out.println(ans + Math.min(a, b) * sumR);"
    }
]