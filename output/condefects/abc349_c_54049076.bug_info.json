[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "main",
            "method_body": "public static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s = sc.next();\n\t\tString t = sc.next();\n\t\tString[] T = t.split(\"\");\n\t\tsc.close();\n\t\t\n\t\tboolean b = false;\n\t\tint n = s.indexOf(T[0].toLowerCase());\n\t\tif (n != -1) {\n\t\t\tString u = s.substring(n + 1);\n\t\t\tint m = u.indexOf(T[1].toLowerCase());\n\t\t\tif (m != -1) {\n\t\t\t\tString v = u.substring(m + 1);\n\t\t\t\tint l = v.indexOf(T[1].toLowerCase());\n\t\t\t\tif (l != -1 || \"X\".equals(T[2])) {\n\t\t\t\t\tb = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(b ? \"Yes\" : \"No\");\n\t}",
            "start_line": 4,
            "end_line": 25
        },
        "buggy_method_src": "public static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s = sc.next();\n\t\tString t = sc.next();\n\t\tString[] T = t.split(\"\");\n\t\tsc.close();\n\t\t\n\t\tboolean b = false;\n\t\tint n = s.indexOf(T[0].toLowerCase());\n\t\tif (n != -1) {\n\t\t\tString u = s.substring(n + 1);\n\t\t\tint m = u.indexOf(T[1].toLowerCase());\n\t\t\tif (m != -1) {\n\t\t\t\tString v = u.substring(m + 1);\n\t\t\t\tint l = v.indexOf(T[1].toLowerCase());\n\t\t\t\tif (l != -1 || \"X\".equals(T[2])) {\n\t\t\t\t\tb = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(b ? \"Yes\" : \"No\");\n\t}",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            15
        ],
        "buggy_statements": [
            "\t\t\t\tint l = v.indexOf(T[1].toLowerCase());"
        ],
        "buggy_method_src_endswith_buggy_statement": "public static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s = sc.next();\n\t\tString t = sc.next();\n\t\tString[] T = t.split(\"\");\n\t\tsc.close();\n\t\t\n\t\tboolean b = false;\n\t\tint n = s.indexOf(T[0].toLowerCase());\n\t\tif (n != -1) {\n\t\t\tString u = s.substring(n + 1);\n\t\t\tint m = u.indexOf(T[1].toLowerCase());\n\t\t\tif (m != -1) {\n\t\t\t\tString v = u.substring(m + 1);\n\t\t\t\tint l = v.indexOf(T[1].toLowerCase());"
    }
]