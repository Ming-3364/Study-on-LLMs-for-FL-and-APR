[
    {
        "buggy_file": "src/com/google/javascript/jscomp/GlobalNamespace.java",
        "buggy_method": {
            "method_name": "canCollapseUnannotatedChildNames",
            "method_body": "boolean canCollapseUnannotatedChildNames() {\n      if (type == Type.OTHER || globalSets != 1 || localSets != 0) {\n        return false;\n      }\n\n      // Don't try to collapse if the one global set is a twin reference.\n      // We could theoretically handle this case in CollapseProperties, but\n      // it's probably not worth the effort.\n      Preconditions.checkNotNull(declaration);\n      if (declaration.getTwin() != null) {\n        return false;\n      }\n\n      if (isClassOrEnum) {\n        return true;\n      }\n\n      // If this is a key of an aliased object literal, then it will be aliased\n      // later. So we won't be able to collapse its properties.\n      if (parent != null && parent.shouldKeepKeys()) {\n        return false;\n      }\n\n      // If this is aliased, then its properties can't be collapsed either.\n      if (type != Type.FUNCTION && aliasingGets > 0) {\n        return false;\n      }\n\n      return (parent == null || parent.canCollapseUnannotatedChildNames());\n    }",
            "start_line": 896,
            "end_line": 925,
            "buggy_lines": [
                920
            ]
        },
        "buggy_method_src": "boolean canCollapseUnannotatedChildNames() {\n      if (type == Type.OTHER || globalSets != 1 || localSets != 0) {\n        return false;\n      }\n\n      // Don't try to collapse if the one global set is a twin reference.\n      // We could theoretically handle this case in CollapseProperties, but\n      // it's probably not worth the effort.\n      Preconditions.checkNotNull(declaration);\n      if (declaration.getTwin() != null) {\n        return false;\n      }\n\n      if (isClassOrEnum) {\n        return true;\n      }\n\n      // If this is a key of an aliased object literal, then it will be aliased\n      // later. So we won't be able to collapse its properties.\n      if (parent != null && parent.shouldKeepKeys()) {\n        return false;\n      }\n\n      // If this is aliased, then its properties can't be collapsed either.\n      if (type != Type.FUNCTION && aliasingGets > 0) {\n        return false;\n      }\n\n      return (parent == null || parent.canCollapseUnannotatedChildNames());\n    }",
        "test_stack": "com.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToChildOfUncollapsibleFunctionInLocalScope\njunit.framework.AssertionFailedError:\nExpected: function a(){}a.b={x:0};var c=a;(function(){a.b.y=0})();a.b.y\nResult: function a(){}var a$b$x=0;var a$b$y;var c=a;(function(){a$b$y=0})();a$b$y\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: expected0] [synthetic: 1]\n        FUNCTION  1 [sourcename: expected0]\n            NAME a 1 [sourcename: expected0]\n            LP 1 [sourcename: expected0]\n            BLOCK 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            ASSIGN 1 [sourcename: expected0]\n                GETPROP 1 [sourcename: expected0]\n                    NAME a 1 [sourcename: expected0]\n                    STRING b 1 [sourcename: expected0]\n                OBJECTLIT 1 [sourcename: expected0]\n                    STRING x 1 [sourcename: expected0]\n                        NUMBER 0.0 1 [sourcename: expected0]\n        VAR 1 [sourcename: expected0]\n            NAME c 1 [sourcename: expected0]\n                NAME a 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            CALL 1 [sourcename: expected0] [free_call: 1]\n                FUNCTION  1 [sourcename: expected0] [parenthesized: true]\n                    NAME  1 [sourcename: expected0]\n                    LP 1 [sourcename: expected0]\n                    BLOCK 1 [sourcename: expected0]\n                        EXPR_RESULT 1 [sourcename: expected0]\n                            ASSIGN 1 [sourcename: expected0]\n                                GETPROP 1 [sourcename: expected0]\n                                    GETPROP 1 [sourcename: expected0]\n                                        NAME a 1 [sourcename: expected0]\n                                        STRING b 1 [sourcename: expected0]\n                                    STRING y 1 [sourcename: expected0]\n                                NUMBER 0.0 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            GETPROP 1 [sourcename: expected0]\n                GETPROP 1 [sourcename: expected0]\n                    NAME a 1 [sourcename: expected0]\n                    STRING b 1 [sourcename: expected0]\n                STRING y 1 [sourcename: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: testcode] [synthetic: 1]\n        FUNCTION  1 [sourcename: testcode]\n            NAME a 1 [sourcename: testcode]\n            LP 1 [sourcename: testcode]\n            BLOCK 1 [sourcename: testcode]\n        VAR 1 [sourcename: testcode]\n            NAME a$b$x 1 [sourcename: testcode]\n                NUMBER 0.0 1 [sourcename: testcode]\n        VAR 1 [sourcename: testcode]\n            NAME a$b$y 1 [sourcename: testcode]\n        VAR 1 [sourcename: testcode]\n            NAME c 1 [sourcename: testcode]\n                NAME a 1 [sourcename: testcode]\n        EXPR_RESULT 1 [sourcename: testcode]\n            CALL 1 [sourcename: testcode] [free_call: 1]\n                FUNCTION  1 [sourcename: testcode] [parenthesized: true]\n                    NAME  1 [sourcename: testcode]\n                    LP 1 [sourcename: testcode]\n                    BLOCK 1 [sourcename: testcode]\n                        EXPR_RESULT 1 [sourcename: testcode]\n                            ASSIGN 1 [sourcename: testcode]\n                                NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]\n                                NUMBER 0.0 1 [sourcename: testcode]\n        EXPR_RESULT 1 [sourcename: testcode]\n            NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]\n\n\nSubtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]\n    FUNCTION  1 [sourcename: expected0]\n        NAME a 1 [sourcename: expected0]\n        LP 1 [sourcename: expected0]\n        BLOCK 1 [sourcename: expected0]\n    EXPR_RESULT 1 [sourcename: expected0]\n        ASSIGN 1 [sourcename: expected0]\n            GETPROP 1 [sourcename: expected0]\n                NAME a 1 [sourcename: expected0]\n                STRING b 1 [sourcename: expected0]\n            OBJECTLIT 1 [sourcename: expected0]\n                STRING x 1 [sourcename: expected0]\n                    NUMBER 0.0 1 [sourcename: expected0]\n    VAR 1 [sourcename: expected0]\n        NAME c 1 [sourcename: expected0]\n            NAME a 1 [sourcename: expected0]\n    EXPR_RESULT 1 [sourcename: expected0]\n        CALL 1 [sourcename: expected0] [free_call: 1]\n            FUNCTION  1 [sourcename: expected0] [parenthesized: true]\n                NAME  1 [sourcename: expected0]\n                LP 1 [sourcename: expected0]\n                BLOCK 1 [sourcename: expected0]\n                    EXPR_RESULT 1 [sourcename: expected0]\n                        ASSIGN 1 [sourcename: expected0]\n                            GETPROP 1 [sourcename: expected0]\n                                GETPROP 1 [sourcename: expected0]\n                                    NAME a 1 [sourcename: expected0]\n                                    STRING b 1 [sourcename: expected0]\n                                STRING y 1 [sourcename: expected0]\n                            NUMBER 0.0 1 [sourcename: expected0]\n    EXPR_RESULT 1 [sourcename: expected0]\n        GETPROP 1 [sourcename: expected0]\n            GETPROP 1 [sourcename: expected0]\n                NAME a 1 [sourcename: expected0]\n                STRING b 1 [sourcename: expected0]\n            STRING y 1 [sourcename: expected0]\n\n\nSubtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]\n    FUNCTION  1 [sourcename: testcode]\n        NAME a 1 [sourcename: testcode]\n        LP 1 [sourcename: testcode]\n        BLOCK 1 [sourcename: testcode]\n    VAR 1 [sourcename: testcode]\n        NAME a$b$x 1 [sourcename: testcode]\n            NUMBER 0.0 1 [sourcename: testcode]\n    VAR 1 [sourcename: testcode]\n        NAME a$b$y 1 [sourcename: testcode]\n    VAR 1 [sourcename: testcode]\n        NAME c 1 [sourcename: testcode]\n            NAME a 1 [sourcename: testcode]\n    EXPR_RESULT 1 [sourcename: testcode]\n        CALL 1 [sourcename: testcode] [free_call: 1]\n            FUNCTION  1 [sourcename: testcode] [parenthesized: true]\n                NAME  1 [sourcename: testcode]\n                LP 1 [sourcename: testcode]\n                BLOCK 1 [sourcename: testcode]\n                    EXPR_RESULT 1 [sourcename: testcode]\n                        ASSIGN 1 [sourcename: testcode]\n                            NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]\n                            NUMBER 0.0 1 [sourcename: testcode]\n    EXPR_RESULT 1 [sourcename: testcode]\n        NAME a$b$y 1 [sourcename: testcode] [originalname: a.b.y]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)\n\tat com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)\n\tat com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToChildOfUncollapsibleFunctionInLocalScope(CollapsePropertiesTest.java:610)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth1_1\njunit.framework.AssertionFailedError:\nExpected: var a=function(){};a.b=1;var c=a;c.b=2;a.b!=c.b\nResult: var a=function(){};var a$b=1;var c=a;c.b=2;a$b!=c.b\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: expected0] [synthetic: 1]\n        VAR 1 [sourcename: expected0]\n            NAME a 1 [sourcename: expected0]\n                FUNCTION  1 [sourcename: expected0]\n                    NAME  1 [sourcename: expected0]\n                    LP 1 [sourcename: expected0]\n                    BLOCK 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            ASSIGN 1 [sourcename: expected0]\n                GETPROP 1 [sourcename: expected0]\n                    NAME a 1 [sourcename: expected0]\n                    STRING b 1 [sourcename: expected0]\n                NUMBER 1.0 1 [sourcename: expected0]\n        VAR 1 [sourcename: expected0]\n            NAME c 1 [sourcename: expected0]\n                NAME a 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            ASSIGN 1 [sourcename: expected0]\n                GETPROP 1 [sourcename: expected0]\n                    NAME c 1 [sourcename: expected0]\n                    STRING b 1 [sourcename: expected0]\n                NUMBER 2.0 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            NE 1 [sourcename: expected0]\n                GETPROP 1 [sourcename: expected0]\n                    NAME a 1 [sourcename: expected0]\n                    STRING b 1 [sourcename: expected0]\n                GETPROP 1 [sourcename: expected0]\n                    NAME c 1 [sourcename: expected0]\n                    STRING b 1 [sourcename: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: testcode] [synthetic: 1]\n        VAR 1 [sourcename: testcode]\n            NAME a 1 [sourcename: testcode]\n                FUNCTION  1 [sourcename: testcode]\n                    NAME  1 [sourcename: testcode]\n                    LP 1 [sourcename: testcode]\n                    BLOCK 1 [sourcename: testcode]\n        VAR 1 [sourcename: testcode]\n            NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n                NUMBER 1.0 1 [sourcename: testcode]\n        VAR 1 [sourcename: testcode]\n            NAME c 1 [sourcename: testcode]\n                NAME a 1 [sourcename: testcode]\n        EXPR_RESULT 1 [sourcename: testcode]\n            ASSIGN 1 [sourcename: testcode]\n                GETPROP 1 [sourcename: testcode]\n                    NAME c 1 [sourcename: testcode]\n                    STRING b 1 [sourcename: testcode]\n                NUMBER 2.0 1 [sourcename: testcode]\n        EXPR_RESULT 1 [sourcename: testcode]\n            NE 1 [sourcename: testcode]\n                NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n                GETPROP 1 [sourcename: testcode]\n                    NAME c 1 [sourcename: testcode]\n                    STRING b 1 [sourcename: testcode]\n\n\nSubtree1: EXPR_RESULT 1 [sourcename: expected0]\n    ASSIGN 1 [sourcename: expected0]\n        GETPROP 1 [sourcename: expected0]\n            NAME a 1 [sourcename: expected0]\n            STRING b 1 [sourcename: expected0]\n        NUMBER 1.0 1 [sourcename: expected0]\n\n\nSubtree2: VAR 1 [sourcename: testcode]\n    NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n        NUMBER 1.0 1 [sourcename: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)\n\tat com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)\n\tat com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_1(CollapsePropertiesTest.java:279)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth1_2\njunit.framework.AssertionFailedError:\nExpected: var a=function(){};a.b=1;f(a);a.b\nResult: var a=function(){};var a$b=1;f(a);a$b\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: expected0] [synthetic: 1]\n        VAR 1 [sourcename: expected0]\n            NAME a 1 [sourcename: expected0]\n                FUNCTION  1 [sourcename: expected0]\n                    NAME  1 [sourcename: expected0]\n                    LP 1 [sourcename: expected0]\n                    BLOCK 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            ASSIGN 1 [sourcename: expected0]\n                GETPROP 1 [sourcename: expected0]\n                    NAME a 1 [sourcename: expected0]\n                    STRING b 1 [sourcename: expected0]\n                NUMBER 1.0 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            CALL 1 [sourcename: expected0] [free_call: 1]\n                NAME f 1 [sourcename: expected0]\n                NAME a 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            GETPROP 1 [sourcename: expected0]\n                NAME a 1 [sourcename: expected0]\n                STRING b 1 [sourcename: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: testcode] [synthetic: 1]\n        VAR 1 [sourcename: testcode]\n            NAME a 1 [sourcename: testcode]\n                FUNCTION  1 [sourcename: testcode]\n                    NAME  1 [sourcename: testcode]\n                    LP 1 [sourcename: testcode]\n                    BLOCK 1 [sourcename: testcode]\n        VAR 1 [sourcename: testcode]\n            NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n                NUMBER 1.0 1 [sourcename: testcode]\n        EXPR_RESULT 1 [sourcename: testcode]\n            CALL 1 [sourcename: testcode] [free_call: 1]\n                NAME f 1 [sourcename: testcode]\n                NAME a 1 [sourcename: testcode]\n        EXPR_RESULT 1 [sourcename: testcode]\n            NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n\n\nSubtree1: EXPR_RESULT 1 [sourcename: expected0]\n    ASSIGN 1 [sourcename: expected0]\n        GETPROP 1 [sourcename: expected0]\n            NAME a 1 [sourcename: expected0]\n            STRING b 1 [sourcename: expected0]\n        NUMBER 1.0 1 [sourcename: expected0]\n\n\nSubtree2: VAR 1 [sourcename: testcode]\n    NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n        NUMBER 1.0 1 [sourcename: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)\n\tat com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)\n\tat com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_2(CollapsePropertiesTest.java:295)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth1_3\njunit.framework.AssertionFailedError:\nExpected: var a=function(){};a.b=1;new f(a);a.b\nResult: var a=function(){};var a$b=1;new f(a);a$b\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: expected0] [synthetic: 1]\n        VAR 1 [sourcename: expected0]\n            NAME a 1 [sourcename: expected0]\n                FUNCTION  1 [sourcename: expected0]\n                    NAME  1 [sourcename: expected0]\n                    LP 1 [sourcename: expected0]\n                    BLOCK 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            ASSIGN 1 [sourcename: expected0]\n                GETPROP 1 [sourcename: expected0]\n                    NAME a 1 [sourcename: expected0]\n                    STRING b 1 [sourcename: expected0]\n                NUMBER 1.0 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            NEW 1 [sourcename: expected0]\n                NAME f 1 [sourcename: expected0]\n                NAME a 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            GETPROP 1 [sourcename: expected0]\n                NAME a 1 [sourcename: expected0]\n                STRING b 1 [sourcename: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: testcode] [synthetic: 1]\n        VAR 1 [sourcename: testcode]\n            NAME a 1 [sourcename: testcode]\n                FUNCTION  1 [sourcename: testcode]\n                    NAME  1 [sourcename: testcode]\n                    LP 1 [sourcename: testcode]\n                    BLOCK 1 [sourcename: testcode]\n        VAR 1 [sourcename: testcode]\n            NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n                NUMBER 1.0 1 [sourcename: testcode]\n        EXPR_RESULT 1 [sourcename: testcode]\n            NEW 1 [sourcename: testcode]\n                NAME f 1 [sourcename: testcode]\n                NAME a 1 [sourcename: testcode]\n        EXPR_RESULT 1 [sourcename: testcode]\n            NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n\n\nSubtree1: EXPR_RESULT 1 [sourcename: expected0]\n    ASSIGN 1 [sourcename: expected0]\n        GETPROP 1 [sourcename: expected0]\n            NAME a 1 [sourcename: expected0]\n            STRING b 1 [sourcename: expected0]\n        NUMBER 1.0 1 [sourcename: expected0]\n\n\nSubtree2: VAR 1 [sourcename: testcode]\n    NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n        NUMBER 1.0 1 [sourcename: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)\n\tat com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)\n\tat com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_3(CollapsePropertiesTest.java:304)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1\njunit.framework.AssertionFailedError:\nExpected: function a(){}var c=a;(function(){a.b=0})();a.b\nResult: function a(){}var a$b;var c=a;(function(){a$b=0})();a$b\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: expected0] [synthetic: 1]\n        FUNCTION  1 [sourcename: expected0] [jsdoc_info: JSDocInfo]\n            NAME a 1 [sourcename: expected0]\n            LP 1 [sourcename: expected0]\n            BLOCK 1 [sourcename: expected0]\n        VAR 1 [sourcename: expected0]\n            NAME c 1 [sourcename: expected0]\n                NAME a 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            CALL 1 [sourcename: expected0] [free_call: 1]\n                FUNCTION  1 [sourcename: expected0] [parenthesized: true]\n                    NAME  1 [sourcename: expected0]\n                    LP 1 [sourcename: expected0]\n                    BLOCK 1 [sourcename: expected0]\n                        EXPR_RESULT 1 [sourcename: expected0]\n                            ASSIGN 1 [sourcename: expected0]\n                                GETPROP 1 [sourcename: expected0]\n                                    NAME a 1 [sourcename: expected0]\n                                    STRING b 1 [sourcename: expected0]\n                                NUMBER 0.0 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            GETPROP 1 [sourcename: expected0]\n                NAME a 1 [sourcename: expected0]\n                STRING b 1 [sourcename: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: testcode] [synthetic: 1]\n        FUNCTION  1 [sourcename: testcode] [jsdoc_info: JSDocInfo]\n            NAME a 1 [sourcename: testcode]\n            LP 1 [sourcename: testcode]\n            BLOCK 1 [sourcename: testcode]\n        VAR 1 [sourcename: testcode]\n            NAME a$b 1 [sourcename: testcode]\n        VAR 1 [sourcename: testcode]\n            NAME c 1 [sourcename: testcode]\n                NAME a 1 [sourcename: testcode]\n        EXPR_RESULT 1 [sourcename: testcode]\n            CALL 1 [sourcename: testcode] [free_call: 1]\n                FUNCTION  1 [sourcename: testcode] [parenthesized: true]\n                    NAME  1 [sourcename: testcode]\n                    LP 1 [sourcename: testcode]\n                    BLOCK 1 [sourcename: testcode]\n                        EXPR_RESULT 1 [sourcename: testcode]\n                            ASSIGN 1 [sourcename: testcode]\n                                NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n                                NUMBER 0.0 1 [sourcename: testcode]\n        EXPR_RESULT 1 [sourcename: testcode]\n            NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n\n\nSubtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]\n    FUNCTION  1 [sourcename: expected0] [jsdoc_info: JSDocInfo]\n        NAME a 1 [sourcename: expected0]\n        LP 1 [sourcename: expected0]\n        BLOCK 1 [sourcename: expected0]\n    VAR 1 [sourcename: expected0]\n        NAME c 1 [sourcename: expected0]\n            NAME a 1 [sourcename: expected0]\n    EXPR_RESULT 1 [sourcename: expected0]\n        CALL 1 [sourcename: expected0] [free_call: 1]\n            FUNCTION  1 [sourcename: expected0] [parenthesized: true]\n                NAME  1 [sourcename: expected0]\n                LP 1 [sourcename: expected0]\n                BLOCK 1 [sourcename: expected0]\n                    EXPR_RESULT 1 [sourcename: expected0]\n                        ASSIGN 1 [sourcename: expected0]\n                            GETPROP 1 [sourcename: expected0]\n                                NAME a 1 [sourcename: expected0]\n                                STRING b 1 [sourcename: expected0]\n                            NUMBER 0.0 1 [sourcename: expected0]\n    EXPR_RESULT 1 [sourcename: expected0]\n        GETPROP 1 [sourcename: expected0]\n            NAME a 1 [sourcename: expected0]\n            STRING b 1 [sourcename: expected0]\n\n\nSubtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]\n    FUNCTION  1 [sourcename: testcode] [jsdoc_info: JSDocInfo]\n        NAME a 1 [sourcename: testcode]\n        LP 1 [sourcename: testcode]\n        BLOCK 1 [sourcename: testcode]\n    VAR 1 [sourcename: testcode]\n        NAME a$b 1 [sourcename: testcode]\n    VAR 1 [sourcename: testcode]\n        NAME c 1 [sourcename: testcode]\n            NAME a 1 [sourcename: testcode]\n    EXPR_RESULT 1 [sourcename: testcode]\n        CALL 1 [sourcename: testcode] [free_call: 1]\n            FUNCTION  1 [sourcename: testcode] [parenthesized: true]\n                NAME  1 [sourcename: testcode]\n                LP 1 [sourcename: testcode]\n                BLOCK 1 [sourcename: testcode]\n                    EXPR_RESULT 1 [sourcename: testcode]\n                        ASSIGN 1 [sourcename: testcode]\n                            NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n                            NUMBER 0.0 1 [sourcename: testcode]\n    EXPR_RESULT 1 [sourcename: testcode]\n        NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)\n\tat com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)\n\tat com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1(CollapsePropertiesTest.java:552)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1\njunit.framework.AssertionFailedError:\nExpected: function a(){}var c=a;(function(){a.b=0})();a.b\nResult: function a(){}var a$b;var c=a;(function(){a$b=0})();a$b\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: expected0] [synthetic: 1]\n        FUNCTION  1 [sourcename: expected0]\n            NAME a 1 [sourcename: expected0]\n            LP 1 [sourcename: expected0]\n            BLOCK 1 [sourcename: expected0]\n        VAR 1 [sourcename: expected0]\n            NAME c 1 [sourcename: expected0]\n                NAME a 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            CALL 1 [sourcename: expected0] [free_call: 1]\n                FUNCTION  1 [sourcename: expected0] [parenthesized: true]\n                    NAME  1 [sourcename: expected0]\n                    LP 1 [sourcename: expected0]\n                    BLOCK 1 [sourcename: expected0]\n                        EXPR_RESULT 1 [sourcename: expected0]\n                            ASSIGN 1 [sourcename: expected0]\n                                GETPROP 1 [sourcename: expected0]\n                                    NAME a 1 [sourcename: expected0]\n                                    STRING b 1 [sourcename: expected0]\n                                NUMBER 0.0 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            GETPROP 1 [sourcename: expected0]\n                NAME a 1 [sourcename: expected0]\n                STRING b 1 [sourcename: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: testcode] [synthetic: 1]\n        FUNCTION  1 [sourcename: testcode]\n            NAME a 1 [sourcename: testcode]\n            LP 1 [sourcename: testcode]\n            BLOCK 1 [sourcename: testcode]\n        VAR 1 [sourcename: testcode]\n            NAME a$b 1 [sourcename: testcode]\n        VAR 1 [sourcename: testcode]\n            NAME c 1 [sourcename: testcode]\n                NAME a 1 [sourcename: testcode]\n        EXPR_RESULT 1 [sourcename: testcode]\n            CALL 1 [sourcename: testcode] [free_call: 1]\n                FUNCTION  1 [sourcename: testcode] [parenthesized: true]\n                    NAME  1 [sourcename: testcode]\n                    LP 1 [sourcename: testcode]\n                    BLOCK 1 [sourcename: testcode]\n                        EXPR_RESULT 1 [sourcename: testcode]\n                            ASSIGN 1 [sourcename: testcode]\n                                NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n                                NUMBER 0.0 1 [sourcename: testcode]\n        EXPR_RESULT 1 [sourcename: testcode]\n            NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n\n\nSubtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]\n    FUNCTION  1 [sourcename: expected0]\n        NAME a 1 [sourcename: expected0]\n        LP 1 [sourcename: expected0]\n        BLOCK 1 [sourcename: expected0]\n    VAR 1 [sourcename: expected0]\n        NAME c 1 [sourcename: expected0]\n            NAME a 1 [sourcename: expected0]\n    EXPR_RESULT 1 [sourcename: expected0]\n        CALL 1 [sourcename: expected0] [free_call: 1]\n            FUNCTION  1 [sourcename: expected0] [parenthesized: true]\n                NAME  1 [sourcename: expected0]\n                LP 1 [sourcename: expected0]\n                BLOCK 1 [sourcename: expected0]\n                    EXPR_RESULT 1 [sourcename: expected0]\n                        ASSIGN 1 [sourcename: expected0]\n                            GETPROP 1 [sourcename: expected0]\n                                NAME a 1 [sourcename: expected0]\n                                STRING b 1 [sourcename: expected0]\n                            NUMBER 0.0 1 [sourcename: expected0]\n    EXPR_RESULT 1 [sourcename: expected0]\n        GETPROP 1 [sourcename: expected0]\n            NAME a 1 [sourcename: expected0]\n            STRING b 1 [sourcename: expected0]\n\n\nSubtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]\n    FUNCTION  1 [sourcename: testcode]\n        NAME a 1 [sourcename: testcode]\n        LP 1 [sourcename: testcode]\n        BLOCK 1 [sourcename: testcode]\n    VAR 1 [sourcename: testcode]\n        NAME a$b 1 [sourcename: testcode]\n    VAR 1 [sourcename: testcode]\n        NAME c 1 [sourcename: testcode]\n            NAME a 1 [sourcename: testcode]\n    EXPR_RESULT 1 [sourcename: testcode]\n        CALL 1 [sourcename: testcode] [free_call: 1]\n            FUNCTION  1 [sourcename: testcode] [parenthesized: true]\n                NAME  1 [sourcename: testcode]\n                LP 1 [sourcename: testcode]\n                BLOCK 1 [sourcename: testcode]\n                    EXPR_RESULT 1 [sourcename: testcode]\n                        ASSIGN 1 [sourcename: testcode]\n                            NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n                            NUMBER 0.0 1 [sourcename: testcode]\n    EXPR_RESULT 1 [sourcename: testcode]\n        NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)\n\tat com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)\n\tat com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1(CollapsePropertiesTest.java:544)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.CollapsePropertiesTest::testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2\njunit.framework.AssertionFailedError:\nExpected: var a$b=function(){};var d=a$b;(function(){a$b.c=0})();a$b.c\nResult: var a$b=function(){};var a$b$c;var d=a$b;(function(){a$b$c=0})();a$b$c\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: expected0] [synthetic: 1]\n        VAR 1 [sourcename: expected0]\n            NAME a$b 1 [sourcename: expected0]\n                FUNCTION  1 [sourcename: expected0]\n                    NAME  1 [sourcename: expected0]\n                    LP 1 [sourcename: expected0]\n                    BLOCK 1 [sourcename: expected0]\n        VAR 1 [sourcename: expected0]\n            NAME d 1 [sourcename: expected0]\n                NAME a$b 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            CALL 1 [sourcename: expected0] [free_call: 1]\n                FUNCTION  1 [sourcename: expected0] [parenthesized: true]\n                    NAME  1 [sourcename: expected0]\n                    LP 1 [sourcename: expected0]\n                    BLOCK 1 [sourcename: expected0]\n                        EXPR_RESULT 1 [sourcename: expected0]\n                            ASSIGN 1 [sourcename: expected0]\n                                GETPROP 1 [sourcename: expected0]\n                                    NAME a$b 1 [sourcename: expected0]\n                                    STRING c 1 [sourcename: expected0]\n                                NUMBER 0.0 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            GETPROP 1 [sourcename: expected0]\n                NAME a$b 1 [sourcename: expected0]\n                STRING c 1 [sourcename: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: testcode] [synthetic: 1]\n        VAR 1 [sourcename: testcode]\n            NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n                FUNCTION  1 [sourcename: testcode]\n                    NAME  1 [sourcename: testcode]\n                    LP 1 [sourcename: testcode]\n                    BLOCK 1 [sourcename: testcode]\n        VAR 1 [sourcename: testcode]\n            NAME a$b$c 1 [sourcename: testcode]\n        VAR 1 [sourcename: testcode]\n            NAME d 1 [sourcename: testcode]\n                NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n        EXPR_RESULT 1 [sourcename: testcode]\n            CALL 1 [sourcename: testcode] [free_call: 1]\n                FUNCTION  1 [sourcename: testcode] [parenthesized: true]\n                    NAME  1 [sourcename: testcode]\n                    LP 1 [sourcename: testcode]\n                    BLOCK 1 [sourcename: testcode]\n                        EXPR_RESULT 1 [sourcename: testcode]\n                            ASSIGN 1 [sourcename: testcode]\n                                NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]\n                                NUMBER 0.0 1 [sourcename: testcode]\n        EXPR_RESULT 1 [sourcename: testcode]\n            NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]\n\n\nSubtree1: SCRIPT 1 [sourcename: expected0] [synthetic: 1]\n    VAR 1 [sourcename: expected0]\n        NAME a$b 1 [sourcename: expected0]\n            FUNCTION  1 [sourcename: expected0]\n                NAME  1 [sourcename: expected0]\n                LP 1 [sourcename: expected0]\n                BLOCK 1 [sourcename: expected0]\n    VAR 1 [sourcename: expected0]\n        NAME d 1 [sourcename: expected0]\n            NAME a$b 1 [sourcename: expected0]\n    EXPR_RESULT 1 [sourcename: expected0]\n        CALL 1 [sourcename: expected0] [free_call: 1]\n            FUNCTION  1 [sourcename: expected0] [parenthesized: true]\n                NAME  1 [sourcename: expected0]\n                LP 1 [sourcename: expected0]\n                BLOCK 1 [sourcename: expected0]\n                    EXPR_RESULT 1 [sourcename: expected0]\n                        ASSIGN 1 [sourcename: expected0]\n                            GETPROP 1 [sourcename: expected0]\n                                NAME a$b 1 [sourcename: expected0]\n                                STRING c 1 [sourcename: expected0]\n                            NUMBER 0.0 1 [sourcename: expected0]\n    EXPR_RESULT 1 [sourcename: expected0]\n        GETPROP 1 [sourcename: expected0]\n            NAME a$b 1 [sourcename: expected0]\n            STRING c 1 [sourcename: expected0]\n\n\nSubtree2: SCRIPT 1 [sourcename: testcode] [synthetic: 1]\n    VAR 1 [sourcename: testcode]\n        NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n            FUNCTION  1 [sourcename: testcode]\n                NAME  1 [sourcename: testcode]\n                LP 1 [sourcename: testcode]\n                BLOCK 1 [sourcename: testcode]\n    VAR 1 [sourcename: testcode]\n        NAME a$b$c 1 [sourcename: testcode]\n    VAR 1 [sourcename: testcode]\n        NAME d 1 [sourcename: testcode]\n            NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n    EXPR_RESULT 1 [sourcename: testcode]\n        CALL 1 [sourcename: testcode] [free_call: 1]\n            FUNCTION  1 [sourcename: testcode] [parenthesized: true]\n                NAME  1 [sourcename: testcode]\n                LP 1 [sourcename: testcode]\n                BLOCK 1 [sourcename: testcode]\n                    EXPR_RESULT 1 [sourcename: testcode]\n                        ASSIGN 1 [sourcename: testcode]\n                            NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]\n                            NUMBER 0.0 1 [sourcename: testcode]\n    EXPR_RESULT 1 [sourcename: testcode]\n        NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)\n\tat com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2(CollapsePropertiesTest.java:572)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.CollapsePropertiesTest::testAliasCreatedForFunctionDepth2\njunit.framework.AssertionFailedError:\nExpected: var a$b=function(){};a$b.c=1;var d=a$b;a$b.c!=d.c\nResult: var a$b=function(){};var a$b$c=1;var d=a$b;a$b$c!=d.c\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: expected0] [synthetic: 1]\n        VAR 1 [sourcename: expected0]\n            NAME a$b 1 [sourcename: expected0]\n                FUNCTION  1 [sourcename: expected0]\n                    NAME  1 [sourcename: expected0]\n                    LP 1 [sourcename: expected0]\n                    BLOCK 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            ASSIGN 1 [sourcename: expected0]\n                GETPROP 1 [sourcename: expected0]\n                    NAME a$b 1 [sourcename: expected0]\n                    STRING c 1 [sourcename: expected0]\n                NUMBER 1.0 1 [sourcename: expected0]\n        VAR 1 [sourcename: expected0]\n            NAME d 1 [sourcename: expected0]\n                NAME a$b 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            NE 1 [sourcename: expected0]\n                GETPROP 1 [sourcename: expected0]\n                    NAME a$b 1 [sourcename: expected0]\n                    STRING c 1 [sourcename: expected0]\n                GETPROP 1 [sourcename: expected0]\n                    NAME d 1 [sourcename: expected0]\n                    STRING c 1 [sourcename: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: testcode] [synthetic: 1]\n        VAR 1 [sourcename: testcode]\n            NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n                FUNCTION  1 [sourcename: testcode]\n                    NAME  1 [sourcename: testcode]\n                    LP 1 [sourcename: testcode]\n                    BLOCK 1 [sourcename: testcode]\n        VAR 1 [sourcename: testcode]\n            NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]\n                NUMBER 1.0 1 [sourcename: testcode]\n        VAR 1 [sourcename: testcode]\n            NAME d 1 [sourcename: testcode]\n                NAME a$b 1 [sourcename: testcode] [originalname: a.b]\n        EXPR_RESULT 1 [sourcename: testcode]\n            NE 1 [sourcename: testcode]\n                NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]\n                GETPROP 1 [sourcename: testcode]\n                    NAME d 1 [sourcename: testcode]\n                    STRING c 1 [sourcename: testcode]\n\n\nSubtree1: EXPR_RESULT 1 [sourcename: expected0]\n    ASSIGN 1 [sourcename: expected0]\n        GETPROP 1 [sourcename: expected0]\n            NAME a$b 1 [sourcename: expected0]\n            STRING c 1 [sourcename: expected0]\n        NUMBER 1.0 1 [sourcename: expected0]\n\n\nSubtree2: VAR 1 [sourcename: testcode]\n    NAME a$b$c 1 [sourcename: testcode] [originalname: a.b.c]\n        NUMBER 1.0 1 [sourcename: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)\n\tat com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth2(CollapsePropertiesTest.java:313)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n",
        "test_assert": "testSame(\n",
        "buggy_lines_in_method": [
            25
        ],
        "buggy_statements": [
            "      if (type != Type.FUNCTION && aliasingGets > 0) {"
        ],
        "buggy_method_src_endswith_buggy_statement": "boolean canCollapseUnannotatedChildNames() {\n      if (type == Type.OTHER || globalSets != 1 || localSets != 0) {\n        return false;\n      }\n\n      // Don't try to collapse if the one global set is a twin reference.\n      // We could theoretically handle this case in CollapseProperties, but\n      // it's probably not worth the effort.\n      Preconditions.checkNotNull(declaration);\n      if (declaration.getTwin() != null) {\n        return false;\n      }\n\n      if (isClassOrEnum) {\n        return true;\n      }\n\n      // If this is a key of an aliased object literal, then it will be aliased\n      // later. So we won't be able to collapse its properties.\n      if (parent != null && parent.shouldKeepKeys()) {\n        return false;\n      }\n\n      // If this is aliased, then its properties can't be collapsed either.\n      if (type != Type.FUNCTION && aliasingGets > 0) {"
    }
]