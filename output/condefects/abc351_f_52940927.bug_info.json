[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "main",
            "method_body": "public static void main(String[] arg) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = scanner.nextInt();\n        }\n\n        AVLTree tree = new AVLTree();\n\n        long s = 0;\n        for (int i = n - 1; i >= 0; i--) {\n            tree.add(a[i]);\n            int  ti = tree.total_right(a[i]); // a[i]\u3088\u308a\u5927\u304d\u3044\u8981\u7d20\u306e\u500b\u6570\n            long si = tree.sum_right(a[i]);   // a[i]\u3088\u308a\u5927\u304d\u3044\u8981\u7d20\u306e\u7dcf\u548c\n            s += si - a[i] * ti;\n        }\n        System.out.println(s);\n    }\n}\n\nclass AVLTree {\n    class Node {\n   ",
            "start_line": 8,
            "end_line": 26
        },
        "buggy_method_src": "public static void main(String[] arg) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = scanner.nextInt();\n        }\n\n        AVLTree tree = new AVLTree();\n\n        long s = 0;\n        for (int i = n - 1; i >= 0; i--) {\n            tree.add(a[i]);\n            int  ti = tree.total_right(a[i]); // a[i]\u3088\u308a\u5927\u304d\u3044\u8981\u7d20\u306e\u500b\u6570\n            long si = tree.sum_right(a[i]);   // a[i]\u3088\u308a\u5927\u304d\u3044\u8981\u7d20\u306e\u7dcf\u548c\n            s += si - a[i] * ti;\n        }\n        System.out.println(s);\n    }\n}\n\nclass AVLTree {\n    class Node {\n   ",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            16
        ],
        "buggy_statements": [
            "            s += si - a[i] * ti;"
        ],
        "buggy_method_src_endswith_buggy_statement": "public static void main(String[] arg) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = scanner.nextInt();\n        }\n\n        AVLTree tree = new AVLTree();\n\n        long s = 0;\n        for (int i = n - 1; i >= 0; i--) {\n            tree.add(a[i]);\n            int  ti = tree.total_right(a[i]); // a[i]\u3088\u308a\u5927\u304d\u3044\u8981\u7d20\u306e\u500b\u6570\n            long si = tree.sum_right(a[i]);   // a[i]\u3088\u308a\u5927\u304d\u3044\u8981\u7d20\u306e\u7dcf\u548c\n            s += si - a[i] * ti;"
    }
]