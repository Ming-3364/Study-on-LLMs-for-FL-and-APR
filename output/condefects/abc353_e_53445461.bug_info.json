[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "solve",
            "method_body": "void solve() {\n    \tint n = inp();\n    \tString[] arr = in.nextStringArray(n);\n    \t\n    \tNode node = new Node();\n    \t\n    \tfor(String ii : arr){\n    \t\tNode nnode = node;\n    \t\tfor(char i : ii.toCharArray()){\n\t    \t\tif(nnode.arr[i-'a'] == null){\n\t    \t\t\tnnode.arr[i-'a'] = new Node();\n\t    \t\t}\t\n\t    \t\tnnode = nnode.arr[i-'a'];\n\t    \t\tnnode.cnt++;\n    \t\t}\n    \t}\n    \t\n    \tint ans = 0;\n    \tfor(int i = 0 ; i < n ; i++){\n    \t\tString x = arr[i];\n    \t\tNode nnode = node;\n    \t\tfor(char ii : x.toCharArray()){\n    \t\t\tnnode = nnode.arr[ii-'a'];\n    \t\t\tnnode.cnt--;\n    \t\t\tans = ans + nnode.cnt;\n    \t\t}\n    \t}\n    \tout.println(ans);\n    }",
            "start_line": 20,
            "end_line": 48
        },
        "buggy_method_src": "void solve() {\n    \tint n = inp();\n    \tString[] arr = in.nextStringArray(n);\n    \t\n    \tNode node = new Node();\n    \t\n    \tfor(String ii : arr){\n    \t\tNode nnode = node;\n    \t\tfor(char i : ii.toCharArray()){\n\t    \t\tif(nnode.arr[i-'a'] == null){\n\t    \t\t\tnnode.arr[i-'a'] = new Node();\n\t    \t\t}\t\n\t    \t\tnnode = nnode.arr[i-'a'];\n\t    \t\tnnode.cnt++;\n    \t\t}\n    \t}\n    \t\n    \tint ans = 0;\n    \tfor(int i = 0 ; i < n ; i++){\n    \t\tString x = arr[i];\n    \t\tNode nnode = node;\n    \t\tfor(char ii : x.toCharArray()){\n    \t\t\tnnode = nnode.arr[ii-'a'];\n    \t\t\tnnode.cnt--;\n    \t\t\tans = ans + nnode.cnt;\n    \t\t}\n    \t}\n    \tout.println(ans);\n    }",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            18
        ],
        "buggy_statements": [
            "    \tint ans = 0;"
        ],
        "buggy_method_src_endswith_buggy_statement": "void solve() {\n    \tint n = inp();\n    \tString[] arr = in.nextStringArray(n);\n    \t\n    \tNode node = new Node();\n    \t\n    \tfor(String ii : arr){\n    \t\tNode nnode = node;\n    \t\tfor(char i : ii.toCharArray()){\n\t    \t\tif(nnode.arr[i-'a'] == null){\n\t    \t\t\tnnode.arr[i-'a'] = new Node();\n\t    \t\t}\t\n\t    \t\tnnode = nnode.arr[i-'a'];\n\t    \t\tnnode.cnt++;\n    \t\t}\n    \t}\n    \t\n    \tint ans = 0;"
    }
]