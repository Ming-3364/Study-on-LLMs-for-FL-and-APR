
================== buggy_file ==================
faultyVersion.java
================== buggy_method ==================
{'method_name': 'update', 'method_body': 'ate(Node a, Node b, Node ab, int start, int end, int left, int right, long x, long y) {\n            if (left <= start && right >= end) {\n                ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;\n                ab.val %= MOD;\n\n                a.val += (end - start + 1) * x;\n                a.val %= MOD;\n                a.add = x;\n\n                b.val += (end - start + 1) * y;\n                b.val %= MOD;\n                b.add = y;\n                return;\n            }\n            int mid = start + (end - start) / 2;\n            pushDown(ab, a, b, mid - start + 1, end - mid);\n\n            if (left <= mid) update(a.left, b.left, ab.left, start, mid, left, right, x, y);\n            if (right > mid) update(a.right, b.right, ab.right, mid + 1, end, left, right, x, y);\n            pushUp(a);\n            pushUp(b);\n            pushUp(ab);\n        }\n\n\n        publi', 'start_line': 68, 'end_line': 90}
================== buggy_method_src ==================
ate(Node a, Node b, Node ab, int start, int end, int left, int right, long x, long y) {
            if (left <= start && right >= end) {
                ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;
                ab.val %= MOD;

                a.val += (end - start + 1) * x;
                a.val %= MOD;
                a.add = x;

                b.val += (end - start + 1) * y;
                b.val %= MOD;
                b.add = y;
                return;
            }
            int mid = start + (end - start) / 2;
            pushDown(ab, a, b, mid - start + 1, end - mid);

            if (left <= mid) update(a.left, b.left, ab.left, start, mid, left, right, x, y);
            if (right > mid) update(a.right, b.right, ab.right, mid + 1, end, left, right, x, y);
            pushUp(a);
            pushUp(b);
            pushUp(ab);
        }


        publi
================== test_stack ==================
None
================== test_assert ==================
None
================== buggy_lines_in_method ==================
[3]
================== buggy_statements ==================
['                ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;']
================== buggy_method_src_endswith_buggy_statement ==================
ate(Node a, Node b, Node ab, int start, int end, int left, int right, long x, long y) {
            if (left <= start && right >= end) {
                ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;