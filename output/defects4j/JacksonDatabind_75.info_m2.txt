
================== buggy_file ==================
src/main/java/com/fasterxml/jackson/databind/ser/std/EnumSerializer.java
================== buggy_method ==================
{'method_name': '_isShapeWrittenUsingIndex', 'method_body': 'protected static Boolean _isShapeWrittenUsingIndex(Class<?> enumClass,\n            JsonFormat.Value format, boolean fromClass)\n    {\n        JsonFormat.Shape shape = (format == null) ? null : format.getShape();\n        if (shape == null) {\n            return null;\n        }\n        // i.e. "default", check dynamically\n        if (shape == Shape.ANY || shape == Shape.SCALAR) {\n            return null;\n        }\n        // 19-May-2016, tatu: also consider "natural" shape\n        if (shape == Shape.STRING || shape == Shape.NATURAL) {\n            return Boolean.FALSE;\n        }\n        // 01-Oct-2014, tatu: For convenience, consider "as-array" to also mean \'yes, use index\')\n        if (shape.isNumeric() || (shape == Shape.ARRAY)) {\n            return Boolean.TRUE;\n        }\n        // 07-Mar-2017, tatu: Also means `OBJECT` not available as property annotation...\n        throw new IllegalArgumentException(String.format(\n                "Unsupported serialization shape (%s) for Enum %s, not supported as %s annotation",\n                    shape, enumClass.getName(), (fromClass? "class" : "property")));\n    }', 'start_line': 216, 'end_line': 239, 'buggy_lines': [217, 221, 225]}
================== buggy_method_src ==================
protected static Boolean _isShapeWrittenUsingIndex(Class<?> enumClass,
            JsonFormat.Value format, boolean fromClass)
    {
        JsonFormat.Shape shape = (format == null) ? null : format.getShape();
        if (shape == null) {
            return null;
        }
        // i.e. "default", check dynamically
        if (shape == Shape.ANY || shape == Shape.SCALAR) {
            return null;
        }
        // 19-May-2016, tatu: also consider "natural" shape
        if (shape == Shape.STRING || shape == Shape.NATURAL) {
            return Boolean.FALSE;
        }
        // 01-Oct-2014, tatu: For convenience, consider "as-array" to also mean 'yes, use index')
        if (shape.isNumeric() || (shape == Shape.ARRAY)) {
            return Boolean.TRUE;
        }
        // 07-Mar-2017, tatu: Also means `OBJECT` not available as property annotation...
        throw new IllegalArgumentException(String.format(
                "Unsupported serialization shape (%s) for Enum %s, not supported as %s annotation",
                    shape, enumClass.getName(), (fromClass? "class" : "property")));
    }
================== test_stack ==================
com.fasterxml.jackson.databind.struct.EnumFormatShapeTest::testEnumPropertyAsNumber
junit.framework.ComparisonFailure: expected:<{"color":[2]}> but was:<{"color":["GREEN"]}>
	at junit.framework.Assert.assertEquals(Assert.java:100)
	at junit.framework.Assert.assertEquals(Assert.java:107)
	at junit.framework.TestCase.assertEquals(TestCase.java:269)
	at com.fasterxml.jackson.databind.struct.EnumFormatShapeTest.testEnumPropertyAsNumber(EnumFormatShapeTest.java:113)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)

================== test_assert ==================
assertEquals(String.format(aposToQuotes("{'color':%s}"), Color.GREEN.ordinal()),

================== buggy_lines_in_method ==================
[2, 6, 10]
================== buggy_statements ==================
['            JsonFormat.Value format, boolean fromClass)', '            return null;', '            return null;']
================== buggy_method_src_endswith_buggy_statement ==================
protected static Boolean _isShapeWrittenUsingIndex(Class<?> enumClass,
            JsonFormat.Value format, boolean fromClass)
    {
        JsonFormat.Shape shape = (format == null) ? null : format.getShape();
        if (shape == null) {
            return null;
        }
        // i.e. "default", check dynamically
        if (shape == Shape.ANY || shape == Shape.SCALAR) {
            return null;