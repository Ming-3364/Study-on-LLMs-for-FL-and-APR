
================== buggy_file ==================
src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java
================== buggy_method ==================
{'method_name': 'toString', 'method_body': '@Override\n    @SuppressWarnings("resource")\n    public String toString()\n    {\n        // Let\'s print up to 100 first tokens...\n        final int MAX_COUNT = 100;\n\n        StringBuilder sb = new StringBuilder();\n        sb.append("[TokenBuffer: ");\n\n        /*\nsb.append("NativeTypeIds=").append(_hasNativeTypeIds).append(",");\nsb.append("NativeObjectIds=").append(_hasNativeObjectIds).append(",");\n*/\n        \n        JsonParser jp = asParser();\n        int count = 0;\n        final boolean hasNativeIds = _hasNativeTypeIds || _hasNativeObjectIds;\n\n        while (true) {\n            JsonToken t;\n            try {\n                t = jp.nextToken();\n                if (t == null) break;\n\n                if (hasNativeIds) {\n                    _appendNativeIds(sb);\n                }\n                        \n                if (count < MAX_COUNT) {\n                    if (count > 0) {\n                        sb.append(", ");\n                    }\n                    sb.append(t.toString());\n                    if (t == JsonToken.FIELD_NAME) {\n                        sb.append(\'(\');\n                        sb.append(jp.getCurrentName());\n                        sb.append(\')\');\n                    }\n                }\n            } catch (IOException ioe) { // should never occur\n                throw new IllegalStateException(ioe);\n            }\n            ++count;\n        }\n\n        if (count >= MAX_COUNT) {\n            sb.append(" ... (truncated ").append(count-MAX_COUNT).append(" entries)");\n        }\n        sb.append(\']\');\n        return sb.toString();\n    }', 'start_line': 413, 'end_line': 464, 'buggy_lines': [421]}
================== buggy_method_src ==================
@Override
    @SuppressWarnings("resource")
    public String toString()
    {
        // Let's print up to 100 first tokens...
        final int MAX_COUNT = 100;

        StringBuilder sb = new StringBuilder();
        sb.append("[TokenBuffer: ");

        /*
sb.append("NativeTypeIds=").append(_hasNativeTypeIds).append(",");
sb.append("NativeObjectIds=").append(_hasNativeObjectIds).append(",");
*/
        
        JsonParser jp = asParser();
        int count = 0;
        final boolean hasNativeIds = _hasNativeTypeIds || _hasNativeObjectIds;

        while (true) {
            JsonToken t;
            try {
                t = jp.nextToken();
                if (t == null) break;

                if (hasNativeIds) {
                    _appendNativeIds(sb);
                }
                        
                if (count < MAX_COUNT) {
                    if (count > 0) {
                        sb.append(", ");
                    }
                    sb.append(t.toString());
                    if (t == JsonToken.FIELD_NAME) {
                        sb.append('(');
                        sb.append(jp.getCurrentName());
                        sb.append(')');
                    }
                }
            } catch (IOException ioe) { // should never occur
                throw new IllegalStateException(ioe);
            }
            ++count;
        }

        if (count >= MAX_COUNT) {
            sb.append(" ... (truncated ").append(count-MAX_COUNT).append(" entries)");
        }
        sb.append(']');
        return sb.toString();
    }
================== test_stack ==================
com.fasterxml.jackson.databind.creators.TestCreatorsDelegating::testDelegateWithTokenBuffer
junit.framework.AssertionFailedError: Expected token START_OBJECT, current token FIELD_NAME
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.TestCase.fail(TestCase.java:227)
	at com.fasterxml.jackson.test.BaseTest.assertToken(BaseTest.java:333)
	at com.fasterxml.jackson.databind.creators.TestCreatorsDelegating.testDelegateWithTokenBuffer(TestCreatorsDelegating.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)

================== test_assert ==================
assertToken(JsonToken.START_OBJECT, jp.nextToken());

================== buggy_lines_in_method ==================
[9]
================== buggy_statements ==================
['        sb.append("[TokenBuffer: ");']
================== buggy_method_src_endswith_buggy_statement ==================
@Override
    @SuppressWarnings("resource")
    public String toString()
    {
        // Let's print up to 100 first tokens...
        final int MAX_COUNT = 100;

        StringBuilder sb = new StringBuilder();
        sb.append("[TokenBuffer: ");