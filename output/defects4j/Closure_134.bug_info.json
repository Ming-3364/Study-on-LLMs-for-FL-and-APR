[
    {
        "buggy_file": "src/com/google/javascript/jscomp/AmbiguateProperties.java",
        "buggy_method": {
            "method_name": "process",
            "method_body": "public void process(Node externs, Node root) {\n    NodeTraversal.traverse(compiler, externs, new ProcessExterns());\n    NodeTraversal.traverse(compiler, root, new ProcessProperties());\n\n    Set<String> reservedNames =\n        new HashSet<String>(externedNames.size() + quotedNames.size());\n    reservedNames.addAll(externedNames);\n    reservedNames.addAll(quotedNames);\n\n    int numRenamedPropertyNames = 0;\n    int numSkippedPropertyNames = 0;\n    Set<Property> propsByFreq = new TreeSet<Property>(FREQUENCY_COMPARATOR);\n    for (Property p : propertyMap.values()) {\n      if (!p.skipAmbiguating) {\n        ++numRenamedPropertyNames;\n        computeRelatedTypes(p.type);\n        propsByFreq.add(p);\n      } else {\n        ++numSkippedPropertyNames;\n        reservedNames.add(p.oldName);\n      }\n    }\n\n    PropertyGraph graph = new PropertyGraph(Lists.newLinkedList(propsByFreq));\n    GraphColoring<Property, Void> coloring =\n        new GreedyGraphColoring<Property, Void>(graph, FREQUENCY_COMPARATOR);\n    int numNewPropertyNames = coloring.color();\n\n    NameGenerator nameGen = new NameGenerator(\n        reservedNames, \"\", reservedCharacters);\n    for (int i = 0; i < numNewPropertyNames; ++i) {\n      colorMap.put(i, nameGen.generateNextName());\n    }\n    for (GraphNode<Property, Void> node : graph.getNodes()) {\n      node.getValue().newName = colorMap.get(node.getAnnotation().hashCode());\n      renamingMap.put(node.getValue().oldName, node.getValue().newName);\n    }\n\n    // Update the string nodes.\n    for (Node n : stringNodesToRename) {\n      String oldName = n.getString();\n      Property p = propertyMap.get(oldName);\n      if (p != null && p.newName != null) {\n        Preconditions.checkState(oldName.equals(p.oldName));\n        if (!p.newName.equals(oldName)) {\n          n.setString(p.newName);\n          compiler.reportCodeChange();\n        }\n      }\n    }\n\n    logger.info(\"Collapsed \" + numRenamedPropertyNames + \" properties into \"\n                + numNewPropertyNames + \" and skipped renaming \"\n                + numSkippedPropertyNames + \" properties.\");\n  }",
            "start_line": 195,
            "end_line": 249,
            "buggy_lines": [
                210
            ]
        },
        "buggy_method_src": "public void process(Node externs, Node root) {\n    NodeTraversal.traverse(compiler, externs, new ProcessExterns());\n    NodeTraversal.traverse(compiler, root, new ProcessProperties());\n\n    Set<String> reservedNames =\n        new HashSet<String>(externedNames.size() + quotedNames.size());\n    reservedNames.addAll(externedNames);\n    reservedNames.addAll(quotedNames);\n\n    int numRenamedPropertyNames = 0;\n    int numSkippedPropertyNames = 0;\n    Set<Property> propsByFreq = new TreeSet<Property>(FREQUENCY_COMPARATOR);\n    for (Property p : propertyMap.values()) {\n      if (!p.skipAmbiguating) {\n        ++numRenamedPropertyNames;\n        computeRelatedTypes(p.type);\n        propsByFreq.add(p);\n      } else {\n        ++numSkippedPropertyNames;\n        reservedNames.add(p.oldName);\n      }\n    }\n\n    PropertyGraph graph = new PropertyGraph(Lists.newLinkedList(propsByFreq));\n    GraphColoring<Property, Void> coloring =\n        new GreedyGraphColoring<Property, Void>(graph, FREQUENCY_COMPARATOR);\n    int numNewPropertyNames = coloring.color();\n\n    NameGenerator nameGen = new NameGenerator(\n        reservedNames, \"\", reservedCharacters);\n    for (int i = 0; i < numNewPropertyNames; ++i) {\n      colorMap.put(i, nameGen.generateNextName());\n    }\n    for (GraphNode<Property, Void> node : graph.getNodes()) {\n      node.getValue().newName = colorMap.get(node.getAnnotation().hashCode());\n      renamingMap.put(node.getValue().oldName, node.getValue().newName);\n    }\n\n    // Update the string nodes.\n    for (Node n : stringNodesToRename) {\n      String oldName = n.getString();\n      Property p = propertyMap.get(oldName);\n      if (p != null && p.newName != null) {\n        Preconditions.checkState(oldName.equals(p.oldName));\n        if (!p.newName.equals(oldName)) {\n          n.setString(p.newName);\n          compiler.reportCodeChange();\n        }\n      }\n    }\n\n    logger.info(\"Collapsed \" + numRenamedPropertyNames + \" properties into \"\n                + numNewPropertyNames + \" and skipped renaming \"\n                + numSkippedPropertyNames + \" properties.\");\n  }",
        "test_stack": "com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends\njunit.framework.AssertionFailedError:\nExpected: function Foo(){}function Bar(){}Bar.prototype.b=function(){return 3};function SubBar(){}function f(x){x.a=3}function g(x){x.a=3}\nResult: function Foo(){}function Bar(){}Bar.prototype.a=function(){return 3};function SubBar(){}function f(x){x.a=3}function g(x){x.a=3}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT [source name: null] [encoded source length: 0] [base line: -1] [end line: -1] 1 [sourcename: expected0] [synthetic: 1]\n        FUNCTION Foo 1 [sourcename: expected0]\n            NAME Foo 1\n            LP 1\n            BLOCK 1\n        FUNCTION Bar 2 [sourcename: expected0]\n            NAME Bar 2\n            LP 2\n            BLOCK 2\n        EXPR_RESULT 3\n            ASSIGN 3\n                GETPROP 3\n                    GETPROP 3\n                        NAME Bar 3\n                        STRING prototype 3\n                    STRING b 3\n                FUNCTION  3 [sourcename: expected0]\n                    NAME  3\n                    LP 3\n                    BLOCK 3\n                        RETURN 3\n                            NUMBER 3.0 3\n        FUNCTION SubBar 4 [sourcename: expected0]\n            NAME SubBar 4\n            LP 4\n            BLOCK 4\n        FUNCTION f 5 [sourcename: expected0]\n            NAME f 5\n            LP 5\n                NAME x 5\n            BLOCK 5\n                EXPR_RESULT 5\n                    ASSIGN 5\n                        GETPROP 5\n                            NAME x 5\n                            STRING a 5\n                        NUMBER 3.0 5\n        FUNCTION g 6 [sourcename: expected0]\n            NAME g 6\n            LP 6\n                NAME x 6\n            BLOCK 6\n                EXPR_RESULT 6\n                    ASSIGN 6\n                        GETPROP 6\n                            NAME x 6\n                            STRING a 6\n                        NUMBER 3.0 6\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT [source name: null] [encoded source length: 0] [base line: -1] [end line: -1] 1 [sourcename: testcode] [synthetic: 1]\n        FUNCTION Foo 1 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function (this:Foo)\n            NAME Foo 1 : function (this:Foo)\n            LP 1\n            BLOCK 1\n        FUNCTION Bar 5 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function (this:Bar): ?\n            NAME Bar 5 : function (this:Bar): ?\n            LP 5\n            BLOCK 5\n        EXPR_RESULT 6\n            ASSIGN 6 : function (this:Bar): ?\n                GETPROP 6 : function (this:Bar): ?\n                    GETPROP 6 : Bar.prototype\n                        NAME Bar 6 : function (this:Bar): ?\n                        STRING prototype 6 : string\n                    STRING a 6 : string\n                FUNCTION  6 [sourcename: testcode] : function (this:Bar): ?\n                    NAME  6\n                    LP 6\n                    BLOCK 6\n                        RETURN 6\n                            NUMBER 3.0 6 : number\n        FUNCTION SubBar 12 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function (this:SubBar): ?\n            NAME SubBar 12 : function (this:SubBar): ?\n            LP 12\n            BLOCK 12\n        FUNCTION f 13 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function ((Foo|null)): ?\n            NAME f 13 : function ((Foo|null)): ?\n            LP 13\n                NAME x 13\n            BLOCK 13\n                EXPR_RESULT 13\n                    ASSIGN 13 : number\n                        GETPROP 13 : number\n                            NAME x 13 : (Foo|null)\n                            STRING a 13 : string\n                        NUMBER 3.0 13 : number\n        FUNCTION g 14 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function ((SubBar|null)): ?\n            NAME g 14 : function ((SubBar|null)): ?\n            LP 14\n                NAME x 14\n            BLOCK 14\n                EXPR_RESULT 14\n                    ASSIGN 14 : number\n                        GETPROP 14 : number\n                            NAME x 14 : (SubBar|null)\n                            STRING a 14 : string\n                        NUMBER 3.0 14 : number\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:745)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:338)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:268)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:237)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:225)\n\tat com.google.javascript.jscomp.AmbiguatePropertiesTest.testImplementsAndExtends(AmbiguatePropertiesTest.java:431)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.TypeCheckTest::testIssue86\njunit.framework.AssertionFailedError: expected a warning\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.TestCase.assertTrue(TestCase.java:192)\n\tat com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6659)\n\tat com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6639)\n\tat com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6592)\n\tat com.google.javascript.jscomp.TypeCheckTest.testIssue86(TypeCheckTest.java:3907)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n",
        "test_assert": "test(js, output);\n",
        "buggy_lines_in_method": [
            16
        ],
        "buggy_statements": [
            "        computeRelatedTypes(p.type);"
        ],
        "buggy_method_src_endswith_buggy_statement": "public void process(Node externs, Node root) {\n    NodeTraversal.traverse(compiler, externs, new ProcessExterns());\n    NodeTraversal.traverse(compiler, root, new ProcessProperties());\n\n    Set<String> reservedNames =\n        new HashSet<String>(externedNames.size() + quotedNames.size());\n    reservedNames.addAll(externedNames);\n    reservedNames.addAll(quotedNames);\n\n    int numRenamedPropertyNames = 0;\n    int numSkippedPropertyNames = 0;\n    Set<Property> propsByFreq = new TreeSet<Property>(FREQUENCY_COMPARATOR);\n    for (Property p : propertyMap.values()) {\n      if (!p.skipAmbiguating) {\n        ++numRenamedPropertyNames;\n        computeRelatedTypes(p.type);"
    },
    {
        "buggy_file": "src/com/google/javascript/jscomp/AmbiguateProperties.java",
        "buggy_method": {
            "method_name": "isIndependentOf",
            "method_body": "public boolean isIndependentOf(Property prop) {\n      if (typesRelatedToSet.intersects(prop.typesSet)) {\n        return false;\n      }\n      return !getRelated(prop.type).intersects(typesInSet);\n    }",
            "start_line": 352,
            "end_line": 357,
            "buggy_lines": [
                356
            ]
        },
        "buggy_method_src": "public boolean isIndependentOf(Property prop) {\n      if (typesRelatedToSet.intersects(prop.typesSet)) {\n        return false;\n      }\n      return !getRelated(prop.type).intersects(typesInSet);\n    }",
        "test_stack": "com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends\njunit.framework.AssertionFailedError:\nExpected: function Foo(){}function Bar(){}Bar.prototype.b=function(){return 3};function SubBar(){}function f(x){x.a=3}function g(x){x.a=3}\nResult: function Foo(){}function Bar(){}Bar.prototype.a=function(){return 3};function SubBar(){}function f(x){x.a=3}function g(x){x.a=3}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT [source name: null] [encoded source length: 0] [base line: -1] [end line: -1] 1 [sourcename: expected0] [synthetic: 1]\n        FUNCTION Foo 1 [sourcename: expected0]\n            NAME Foo 1\n            LP 1\n            BLOCK 1\n        FUNCTION Bar 2 [sourcename: expected0]\n            NAME Bar 2\n            LP 2\n            BLOCK 2\n        EXPR_RESULT 3\n            ASSIGN 3\n                GETPROP 3\n                    GETPROP 3\n                        NAME Bar 3\n                        STRING prototype 3\n                    STRING b 3\n                FUNCTION  3 [sourcename: expected0]\n                    NAME  3\n                    LP 3\n                    BLOCK 3\n                        RETURN 3\n                            NUMBER 3.0 3\n        FUNCTION SubBar 4 [sourcename: expected0]\n            NAME SubBar 4\n            LP 4\n            BLOCK 4\n        FUNCTION f 5 [sourcename: expected0]\n            NAME f 5\n            LP 5\n                NAME x 5\n            BLOCK 5\n                EXPR_RESULT 5\n                    ASSIGN 5\n                        GETPROP 5\n                            NAME x 5\n                            STRING a 5\n                        NUMBER 3.0 5\n        FUNCTION g 6 [sourcename: expected0]\n            NAME g 6\n            LP 6\n                NAME x 6\n            BLOCK 6\n                EXPR_RESULT 6\n                    ASSIGN 6\n                        GETPROP 6\n                            NAME x 6\n                            STRING a 6\n                        NUMBER 3.0 6\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT [source name: null] [encoded source length: 0] [base line: -1] [end line: -1] 1 [sourcename: testcode] [synthetic: 1]\n        FUNCTION Foo 1 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function (this:Foo)\n            NAME Foo 1 : function (this:Foo)\n            LP 1\n            BLOCK 1\n        FUNCTION Bar 5 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function (this:Bar): ?\n            NAME Bar 5 : function (this:Bar): ?\n            LP 5\n            BLOCK 5\n        EXPR_RESULT 6\n            ASSIGN 6 : function (this:Bar): ?\n                GETPROP 6 : function (this:Bar): ?\n                    GETPROP 6 : Bar.prototype\n                        NAME Bar 6 : function (this:Bar): ?\n                        STRING prototype 6 : string\n                    STRING a 6 : string\n                FUNCTION  6 [sourcename: testcode] : function (this:Bar): ?\n                    NAME  6\n                    LP 6\n                    BLOCK 6\n                        RETURN 6\n                            NUMBER 3.0 6 : number\n        FUNCTION SubBar 12 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function (this:SubBar): ?\n            NAME SubBar 12 : function (this:SubBar): ?\n            LP 12\n            BLOCK 12\n        FUNCTION f 13 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function ((Foo|null)): ?\n            NAME f 13 : function ((Foo|null)): ?\n            LP 13\n                NAME x 13\n            BLOCK 13\n                EXPR_RESULT 13\n                    ASSIGN 13 : number\n                        GETPROP 13 : number\n                            NAME x 13 : (Foo|null)\n                            STRING a 13 : string\n                        NUMBER 3.0 13 : number\n        FUNCTION g 14 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function ((SubBar|null)): ?\n            NAME g 14 : function ((SubBar|null)): ?\n            LP 14\n                NAME x 14\n            BLOCK 14\n                EXPR_RESULT 14\n                    ASSIGN 14 : number\n                        GETPROP 14 : number\n                            NAME x 14 : (SubBar|null)\n                            STRING a 14 : string\n                        NUMBER 3.0 14 : number\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:745)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:338)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:268)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:237)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:225)\n\tat com.google.javascript.jscomp.AmbiguatePropertiesTest.testImplementsAndExtends(AmbiguatePropertiesTest.java:431)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.TypeCheckTest::testIssue86\njunit.framework.AssertionFailedError: expected a warning\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.TestCase.assertTrue(TestCase.java:192)\n\tat com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6659)\n\tat com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6639)\n\tat com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6592)\n\tat com.google.javascript.jscomp.TypeCheckTest.testIssue86(TypeCheckTest.java:3907)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n",
        "test_assert": "test(js, output);\n",
        "buggy_lines_in_method": [
            5
        ],
        "buggy_statements": [
            "      return !getRelated(prop.type).intersects(typesInSet);"
        ],
        "buggy_method_src_endswith_buggy_statement": "public boolean isIndependentOf(Property prop) {\n      if (typesRelatedToSet.intersects(prop.typesSet)) {\n        return false;\n      }\n      return !getRelated(prop.type).intersects(typesInSet);"
    },
    {
        "buggy_file": "src/com/google/javascript/jscomp/AmbiguateProperties.java",
        "buggy_method": {
            "method_name": "addNode",
            "method_body": "public void addNode(Property prop) {\n      typesInSet.or(prop.typesSet);\n      typesRelatedToSet.or(getRelated(prop.type));\n    }",
            "start_line": 364,
            "end_line": 367,
            "buggy_lines": [
                366
            ]
        },
        "buggy_method_src": "public void addNode(Property prop) {\n      typesInSet.or(prop.typesSet);\n      typesRelatedToSet.or(getRelated(prop.type));\n    }",
        "test_stack": "com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends\njunit.framework.AssertionFailedError:\nExpected: function Foo(){}function Bar(){}Bar.prototype.b=function(){return 3};function SubBar(){}function f(x){x.a=3}function g(x){x.a=3}\nResult: function Foo(){}function Bar(){}Bar.prototype.a=function(){return 3};function SubBar(){}function f(x){x.a=3}function g(x){x.a=3}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT [source name: null] [encoded source length: 0] [base line: -1] [end line: -1] 1 [sourcename: expected0] [synthetic: 1]\n        FUNCTION Foo 1 [sourcename: expected0]\n            NAME Foo 1\n            LP 1\n            BLOCK 1\n        FUNCTION Bar 2 [sourcename: expected0]\n            NAME Bar 2\n            LP 2\n            BLOCK 2\n        EXPR_RESULT 3\n            ASSIGN 3\n                GETPROP 3\n                    GETPROP 3\n                        NAME Bar 3\n                        STRING prototype 3\n                    STRING b 3\n                FUNCTION  3 [sourcename: expected0]\n                    NAME  3\n                    LP 3\n                    BLOCK 3\n                        RETURN 3\n                            NUMBER 3.0 3\n        FUNCTION SubBar 4 [sourcename: expected0]\n            NAME SubBar 4\n            LP 4\n            BLOCK 4\n        FUNCTION f 5 [sourcename: expected0]\n            NAME f 5\n            LP 5\n                NAME x 5\n            BLOCK 5\n                EXPR_RESULT 5\n                    ASSIGN 5\n                        GETPROP 5\n                            NAME x 5\n                            STRING a 5\n                        NUMBER 3.0 5\n        FUNCTION g 6 [sourcename: expected0]\n            NAME g 6\n            LP 6\n                NAME x 6\n            BLOCK 6\n                EXPR_RESULT 6\n                    ASSIGN 6\n                        GETPROP 6\n                            NAME x 6\n                            STRING a 6\n                        NUMBER 3.0 6\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT [source name: null] [encoded source length: 0] [base line: -1] [end line: -1] 1 [sourcename: testcode] [synthetic: 1]\n        FUNCTION Foo 1 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function (this:Foo)\n            NAME Foo 1 : function (this:Foo)\n            LP 1\n            BLOCK 1\n        FUNCTION Bar 5 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function (this:Bar): ?\n            NAME Bar 5 : function (this:Bar): ?\n            LP 5\n            BLOCK 5\n        EXPR_RESULT 6\n            ASSIGN 6 : function (this:Bar): ?\n                GETPROP 6 : function (this:Bar): ?\n                    GETPROP 6 : Bar.prototype\n                        NAME Bar 6 : function (this:Bar): ?\n                        STRING prototype 6 : string\n                    STRING a 6 : string\n                FUNCTION  6 [sourcename: testcode] : function (this:Bar): ?\n                    NAME  6\n                    LP 6\n                    BLOCK 6\n                        RETURN 6\n                            NUMBER 3.0 6 : number\n        FUNCTION SubBar 12 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function (this:SubBar): ?\n            NAME SubBar 12 : function (this:SubBar): ?\n            LP 12\n            BLOCK 12\n        FUNCTION f 13 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function ((Foo|null)): ?\n            NAME f 13 : function ((Foo|null)): ?\n            LP 13\n                NAME x 13\n            BLOCK 13\n                EXPR_RESULT 13\n                    ASSIGN 13 : number\n                        GETPROP 13 : number\n                            NAME x 13 : (Foo|null)\n                            STRING a 13 : string\n                        NUMBER 3.0 13 : number\n        FUNCTION g 14 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function ((SubBar|null)): ?\n            NAME g 14 : function ((SubBar|null)): ?\n            LP 14\n                NAME x 14\n            BLOCK 14\n                EXPR_RESULT 14\n                    ASSIGN 14 : number\n                        GETPROP 14 : number\n                            NAME x 14 : (SubBar|null)\n                            STRING a 14 : string\n                        NUMBER 3.0 14 : number\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:745)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:338)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:268)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:237)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:225)\n\tat com.google.javascript.jscomp.AmbiguatePropertiesTest.testImplementsAndExtends(AmbiguatePropertiesTest.java:431)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.TypeCheckTest::testIssue86\njunit.framework.AssertionFailedError: expected a warning\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.TestCase.assertTrue(TestCase.java:192)\n\tat com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6659)\n\tat com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6639)\n\tat com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6592)\n\tat com.google.javascript.jscomp.TypeCheckTest.testIssue86(TypeCheckTest.java:3907)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n",
        "test_assert": "test(js, output);\n",
        "buggy_lines_in_method": [
            3
        ],
        "buggy_statements": [
            "      typesRelatedToSet.or(getRelated(prop.type));"
        ],
        "buggy_method_src_endswith_buggy_statement": "public void addNode(Property prop) {\n      typesInSet.or(prop.typesSet);\n      typesRelatedToSet.or(getRelated(prop.type));"
    },
    {
        "buggy_file": "src/com/google/javascript/jscomp/AmbiguateProperties.java",
        "buggy_method": {
            "method_name": "addNonUnionType",
            "method_body": "private void addNonUnionType(JSType newType) {\n      if (skipAmbiguating || isInvalidatingType(newType)) {\n        skipAmbiguating = true;\n        return;\n      }\n\n      if (type == null) {\n        type = newType;\n      } else {\n        type = type.getLeastSupertype(newType);\n      }\n      typesSet.set(getIntForType(newType));\n    }",
            "start_line": 588,
            "end_line": 600,
            "buggy_lines": [
                594,
                595,
                596,
                597,
                599
            ]
        },
        "buggy_method_src": "private void addNonUnionType(JSType newType) {\n      if (skipAmbiguating || isInvalidatingType(newType)) {\n        skipAmbiguating = true;\n        return;\n      }\n\n      if (type == null) {\n        type = newType;\n      } else {\n        type = type.getLeastSupertype(newType);\n      }\n      typesSet.set(getIntForType(newType));\n    }",
        "test_stack": "com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends\njunit.framework.AssertionFailedError:\nExpected: function Foo(){}function Bar(){}Bar.prototype.b=function(){return 3};function SubBar(){}function f(x){x.a=3}function g(x){x.a=3}\nResult: function Foo(){}function Bar(){}Bar.prototype.a=function(){return 3};function SubBar(){}function f(x){x.a=3}function g(x){x.a=3}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT [source name: null] [encoded source length: 0] [base line: -1] [end line: -1] 1 [sourcename: expected0] [synthetic: 1]\n        FUNCTION Foo 1 [sourcename: expected0]\n            NAME Foo 1\n            LP 1\n            BLOCK 1\n        FUNCTION Bar 2 [sourcename: expected0]\n            NAME Bar 2\n            LP 2\n            BLOCK 2\n        EXPR_RESULT 3\n            ASSIGN 3\n                GETPROP 3\n                    GETPROP 3\n                        NAME Bar 3\n                        STRING prototype 3\n                    STRING b 3\n                FUNCTION  3 [sourcename: expected0]\n                    NAME  3\n                    LP 3\n                    BLOCK 3\n                        RETURN 3\n                            NUMBER 3.0 3\n        FUNCTION SubBar 4 [sourcename: expected0]\n            NAME SubBar 4\n            LP 4\n            BLOCK 4\n        FUNCTION f 5 [sourcename: expected0]\n            NAME f 5\n            LP 5\n                NAME x 5\n            BLOCK 5\n                EXPR_RESULT 5\n                    ASSIGN 5\n                        GETPROP 5\n                            NAME x 5\n                            STRING a 5\n                        NUMBER 3.0 5\n        FUNCTION g 6 [sourcename: expected0]\n            NAME g 6\n            LP 6\n                NAME x 6\n            BLOCK 6\n                EXPR_RESULT 6\n                    ASSIGN 6\n                        GETPROP 6\n                            NAME x 6\n                            STRING a 6\n                        NUMBER 3.0 6\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT [source name: null] [encoded source length: 0] [base line: -1] [end line: -1] 1 [sourcename: testcode] [synthetic: 1]\n        FUNCTION Foo 1 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function (this:Foo)\n            NAME Foo 1 : function (this:Foo)\n            LP 1\n            BLOCK 1\n        FUNCTION Bar 5 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function (this:Bar): ?\n            NAME Bar 5 : function (this:Bar): ?\n            LP 5\n            BLOCK 5\n        EXPR_RESULT 6\n            ASSIGN 6 : function (this:Bar): ?\n                GETPROP 6 : function (this:Bar): ?\n                    GETPROP 6 : Bar.prototype\n                        NAME Bar 6 : function (this:Bar): ?\n                        STRING prototype 6 : string\n                    STRING a 6 : string\n                FUNCTION  6 [sourcename: testcode] : function (this:Bar): ?\n                    NAME  6\n                    LP 6\n                    BLOCK 6\n                        RETURN 6\n                            NUMBER 3.0 6 : number\n        FUNCTION SubBar 12 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function (this:SubBar): ?\n            NAME SubBar 12 : function (this:SubBar): ?\n            LP 12\n            BLOCK 12\n        FUNCTION f 13 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function ((Foo|null)): ?\n            NAME f 13 : function ((Foo|null)): ?\n            LP 13\n                NAME x 13\n            BLOCK 13\n                EXPR_RESULT 13\n                    ASSIGN 13 : number\n                        GETPROP 13 : number\n                            NAME x 13 : (Foo|null)\n                            STRING a 13 : string\n                        NUMBER 3.0 13 : number\n        FUNCTION g 14 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function ((SubBar|null)): ?\n            NAME g 14 : function ((SubBar|null)): ?\n            LP 14\n                NAME x 14\n            BLOCK 14\n                EXPR_RESULT 14\n                    ASSIGN 14 : number\n                        GETPROP 14 : number\n                            NAME x 14 : (SubBar|null)\n                            STRING a 14 : string\n                        NUMBER 3.0 14 : number\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:745)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:338)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:268)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:237)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:225)\n\tat com.google.javascript.jscomp.AmbiguatePropertiesTest.testImplementsAndExtends(AmbiguatePropertiesTest.java:431)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.TypeCheckTest::testIssue86\njunit.framework.AssertionFailedError: expected a warning\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.TestCase.assertTrue(TestCase.java:192)\n\tat com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6659)\n\tat com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6639)\n\tat com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6592)\n\tat com.google.javascript.jscomp.TypeCheckTest.testIssue86(TypeCheckTest.java:3907)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n",
        "test_assert": "test(js, output);\n",
        "buggy_lines_in_method": [
            7,
            8,
            9,
            10,
            12
        ],
        "buggy_statements": [
            "      if (type == null) {",
            "        type = newType;",
            "      } else {",
            "        type = type.getLeastSupertype(newType);",
            "      typesSet.set(getIntForType(newType));"
        ],
        "buggy_method_src_endswith_buggy_statement": "private void addNonUnionType(JSType newType) {\n      if (skipAmbiguating || isInvalidatingType(newType)) {\n        skipAmbiguating = true;\n        return;\n      }\n\n      if (type == null) {\n        type = newType;\n      } else {\n        type = type.getLeastSupertype(newType);\n      }\n      typesSet.set(getIntForType(newType));"
    },
    {
        "buggy_file": "src/com/google/javascript/jscomp/TypedScopeCreator.java",
        "buggy_method": {
            "method_name": "findOverriddenFunction",
            "method_body": "private FunctionType findOverriddenFunction(\n        ObjectType ownerType, String propName) {\n      // First, check to see if the property is implemented\n      // on a superclass.\n      JSType propType = ownerType.getPropertyType(propName);\n      if (propType instanceof FunctionType) {\n        return (FunctionType) propType;\n      }\n        // If it's not, then check to see if it's implemented\n        // on an implemented interface.\n\n      return null;\n    }",
            "start_line": 553,
            "end_line": 565,
            "buggy_lines": [
                560
            ]
        },
        "buggy_method_src": "private FunctionType findOverriddenFunction(\n        ObjectType ownerType, String propName) {\n      // First, check to see if the property is implemented\n      // on a superclass.\n      JSType propType = ownerType.getPropertyType(propName);\n      if (propType instanceof FunctionType) {\n        return (FunctionType) propType;\n      }\n        // If it's not, then check to see if it's implemented\n        // on an implemented interface.\n\n      return null;\n    }",
        "test_stack": "com.google.javascript.jscomp.AmbiguatePropertiesTest::testImplementsAndExtends\njunit.framework.AssertionFailedError:\nExpected: function Foo(){}function Bar(){}Bar.prototype.b=function(){return 3};function SubBar(){}function f(x){x.a=3}function g(x){x.a=3}\nResult: function Foo(){}function Bar(){}Bar.prototype.a=function(){return 3};function SubBar(){}function f(x){x.a=3}function g(x){x.a=3}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT [source name: null] [encoded source length: 0] [base line: -1] [end line: -1] 1 [sourcename: expected0] [synthetic: 1]\n        FUNCTION Foo 1 [sourcename: expected0]\n            NAME Foo 1\n            LP 1\n            BLOCK 1\n        FUNCTION Bar 2 [sourcename: expected0]\n            NAME Bar 2\n            LP 2\n            BLOCK 2\n        EXPR_RESULT 3\n            ASSIGN 3\n                GETPROP 3\n                    GETPROP 3\n                        NAME Bar 3\n                        STRING prototype 3\n                    STRING b 3\n                FUNCTION  3 [sourcename: expected0]\n                    NAME  3\n                    LP 3\n                    BLOCK 3\n                        RETURN 3\n                            NUMBER 3.0 3\n        FUNCTION SubBar 4 [sourcename: expected0]\n            NAME SubBar 4\n            LP 4\n            BLOCK 4\n        FUNCTION f 5 [sourcename: expected0]\n            NAME f 5\n            LP 5\n                NAME x 5\n            BLOCK 5\n                EXPR_RESULT 5\n                    ASSIGN 5\n                        GETPROP 5\n                            NAME x 5\n                            STRING a 5\n                        NUMBER 3.0 5\n        FUNCTION g 6 [sourcename: expected0]\n            NAME g 6\n            LP 6\n                NAME x 6\n            BLOCK 6\n                EXPR_RESULT 6\n                    ASSIGN 6\n                        GETPROP 6\n                            NAME x 6\n                            STRING a 6\n                        NUMBER 3.0 6\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT [source name: null] [encoded source length: 0] [base line: -1] [end line: -1] 1 [sourcename: testcode] [synthetic: 1]\n        FUNCTION Foo 1 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function (this:Foo)\n            NAME Foo 1 : function (this:Foo)\n            LP 1\n            BLOCK 1\n        FUNCTION Bar 5 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function (this:Bar): ?\n            NAME Bar 5 : function (this:Bar): ?\n            LP 5\n            BLOCK 5\n        EXPR_RESULT 6\n            ASSIGN 6 : function (this:Bar): ?\n                GETPROP 6 : function (this:Bar): ?\n                    GETPROP 6 : Bar.prototype\n                        NAME Bar 6 : function (this:Bar): ?\n                        STRING prototype 6 : string\n                    STRING a 6 : string\n                FUNCTION  6 [sourcename: testcode] : function (this:Bar): ?\n                    NAME  6\n                    LP 6\n                    BLOCK 6\n                        RETURN 6\n                            NUMBER 3.0 6 : number\n        FUNCTION SubBar 12 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function (this:SubBar): ?\n            NAME SubBar 12 : function (this:SubBar): ?\n            LP 12\n            BLOCK 12\n        FUNCTION f 13 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function ((Foo|null)): ?\n            NAME f 13 : function ((Foo|null)): ?\n            LP 13\n                NAME x 13\n            BLOCK 13\n                EXPR_RESULT 13\n                    ASSIGN 13 : number\n                        GETPROP 13 : number\n                            NAME x 13 : (Foo|null)\n                            STRING a 13 : string\n                        NUMBER 3.0 13 : number\n        FUNCTION g 14 [sourcename: testcode] [jsdoc_info: JSDocInfo] : function ((SubBar|null)): ?\n            NAME g 14 : function ((SubBar|null)): ?\n            LP 14\n                NAME x 14\n            BLOCK 14\n                EXPR_RESULT 14\n                    ASSIGN 14 : number\n                        GETPROP 14 : number\n                            NAME x 14 : (SubBar|null)\n                            STRING a 14 : string\n                        NUMBER 3.0 14 : number\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:745)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:338)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:268)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:237)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:225)\n\tat com.google.javascript.jscomp.AmbiguatePropertiesTest.testImplementsAndExtends(AmbiguatePropertiesTest.java:431)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.TypeCheckTest::testIssue86\njunit.framework.AssertionFailedError: expected a warning\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.TestCase.assertTrue(TestCase.java:192)\n\tat com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6659)\n\tat com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6639)\n\tat com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6592)\n\tat com.google.javascript.jscomp.TypeCheckTest.testIssue86(TypeCheckTest.java:3907)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n",
        "test_assert": "test(js, output);\n",
        "buggy_lines_in_method": [
            8
        ],
        "buggy_statements": [
            "      }"
        ],
        "buggy_method_src_endswith_buggy_statement": "private FunctionType findOverriddenFunction(\n        ObjectType ownerType, String propName) {\n      // First, check to see if the property is implemented\n      // on a superclass.\n      JSType propType = ownerType.getPropertyType(propName);\n      if (propType instanceof FunctionType) {\n        return (FunctionType) propType;\n      }"
    }
]