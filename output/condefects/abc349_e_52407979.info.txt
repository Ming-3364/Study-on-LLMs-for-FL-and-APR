
================== buggy_file ==================
faultyVersion.java
================== buggy_method ==================
{'method_name': 'check', 'method_body': 'public static int check() {\n        for (int i = 0; i < n; i++) {\n            if (vis[i][0] != -1 && vis[i][0] == vis[i][1] && vis[i][1] == vis[i][2]) return vis[i][0];\n            if (vis[0][i] != -1 && vis[0][i] == vis[1][i] && vis[1][i] == vis[2][i]) return vis[0][i];\n        }\n        if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];\n        if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];\n        int sum1 = 0, sum2 = 0;\n        int tot = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                if (vis[i][j] == 0) sum1 += a[i][j];\n                else if (vis[i][j] == 1) sum2 += a[i][j];\n                else tot++;\n            }\n        }\n        if (tot == 0) return sum1 > sum2 ? 0 : 1;\n        return 2;\n    }', 'start_line': 10, 'end_line': 28}
================== buggy_method_src ==================
public static int check() {
        for (int i = 0; i < n; i++) {
            if (vis[i][0] != -1 && vis[i][0] == vis[i][1] && vis[i][1] == vis[i][2]) return vis[i][0];
            if (vis[0][i] != -1 && vis[0][i] == vis[1][i] && vis[1][i] == vis[2][i]) return vis[0][i];
        }
        if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];
        if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];
        int sum1 = 0, sum2 = 0;
        int tot = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (vis[i][j] == 0) sum1 += a[i][j];
                else if (vis[i][j] == 1) sum2 += a[i][j];
                else tot++;
            }
        }
        if (tot == 0) return sum1 > sum2 ? 0 : 1;
        return 2;
    }
================== test_stack ==================
None
================== test_assert ==================
None
================== buggy_lines_in_method ==================
[8]
================== buggy_statements ==================
['        int sum1 = 0, sum2 = 0;']
================== buggy_method_src_endswith_buggy_statement ==================
public static int check() {
        for (int i = 0; i < n; i++) {
            if (vis[i][0] != -1 && vis[i][0] == vis[i][1] && vis[i][1] == vis[i][2]) return vis[i][0];
            if (vis[0][i] != -1 && vis[0][i] == vis[1][i] && vis[1][i] == vis[2][i]) return vis[0][i];
        }
        if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];
        if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];
        int sum1 = 0, sum2 = 0;