[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "main",
            "method_body": "public static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString[] sa = br.readLine().split(\" \");\n\t\tint n = Integer.parseInt(sa[0]);\n\t\tint q = Integer.parseInt(sa[1]);\n\t\tObj[] arr = new Obj[n];\n\t\tsa = br.readLine().split(\" \");\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tObj o = new Obj();\n\t\t\to.a = Integer.parseInt(sa[i]);\n\t\t\to.size = 1;\n\t\t\tarr[i] = o;\n\t\t}\n\t\tsa = br.readLine().split(\" \");\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tObj o = arr[i];\n\t\t\to.b = Integer.parseInt(sa[i]);\n\t\t\to.v = o.a * o.b;\n\t\t}\n\n\t\tint mod = 998244353;\n\t\tLazySegTree<Obj, Obj> st = new LazySegTree<>(\n\t\t\t\tarr,\n\t\t\t\tnew Obj(),\n\t\t\t\t(s1, s2) -> {\n\t\t\t\t\tObj ret = new Obj();\n\t\t\t\t\tret.a = (s1.a + s2.a) % mod;\n\t\t\t\t\tret.b = (s1.b + s2.b) % mod;\n\t\t\t\t\tret.v = (s1.v + s2.v) % mod;\n\t\t\t\t\tret.size = s1.size + s2.size;\n\t\t\t\t\treturn ret;\n\t\t\t\t},\n\t\t\t\t(f, s) -> {\n\t\t\t\t\tObj ret = new Obj();\n\t\t\t\t\tret.a = (s.a + f.a * s.size) % mod;\n\t\t\t\t\tret.b = (s.b + f.b * s.size) % mod;\n\t\t\t\t\tret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod\n\t\t\t\t\t\t\t+ f.a * f.b % mod * s.size % mod * s.size % mod) % mod;\n\t\t\t\t\tret.size = s.size;\n\t\t\t\t\treturn ret;\n\t\t\t\t},\n\t\t\t\t(f1, f2) -> {\n\t\t\t\t\tObj ret = new Obj();\n\t\t\t\t\tret.a = (f1.a + f2.a) % mod;\n\t\t\t\t\tret.b = (f1.b + f2.b) % mod;\n\t\t\t\t\treturn ret;\n\t\t\t\t},\n\t\t\t\tnew Obj());\n\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\tfor (int i = 0; i < q; i++) {\n\t\t\tsa = br.readLine().split(\" \");\n\t\t\tint t = Integer.parseInt(sa[0]);\n\t\t\tint l = Integer.parseInt(sa[1]) - 1;\n\t\t\tint r = Integer.parseInt(sa[2]);\n\t\t\tif (t == 1) {\n\t\t\t\tObj f = new Obj();\n\t\t\t\tf.a = Integer.parseInt(sa[3]);\n\t\t\t\tst.apply(l, r, f);\n\n\t\t\t} else if (t == 2) {\n\t\t\t\tObj f = new Obj();\n\t\t\t\tf.b = Integer.parseInt(sa[3]);\n\t\t\t\tst.apply(l, r, f);\n\n\t\t\t} else {\n\t\t\t\tObj o = st.prod(l, r);\n\t\t\t\tpw.println(o.v);\n\t\t\t}\n\t\t}\n\t\tpw.flush();\n\t\tbr.close();\n\t}",
            "start_line": 10,
            "end_line": 82
        },
        "buggy_method_src": "public static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString[] sa = br.readLine().split(\" \");\n\t\tint n = Integer.parseInt(sa[0]);\n\t\tint q = Integer.parseInt(sa[1]);\n\t\tObj[] arr = new Obj[n];\n\t\tsa = br.readLine().split(\" \");\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tObj o = new Obj();\n\t\t\to.a = Integer.parseInt(sa[i]);\n\t\t\to.size = 1;\n\t\t\tarr[i] = o;\n\t\t}\n\t\tsa = br.readLine().split(\" \");\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tObj o = arr[i];\n\t\t\to.b = Integer.parseInt(sa[i]);\n\t\t\to.v = o.a * o.b;\n\t\t}\n\n\t\tint mod = 998244353;\n\t\tLazySegTree<Obj, Obj> st = new LazySegTree<>(\n\t\t\t\tarr,\n\t\t\t\tnew Obj(),\n\t\t\t\t(s1, s2) -> {\n\t\t\t\t\tObj ret = new Obj();\n\t\t\t\t\tret.a = (s1.a + s2.a) % mod;\n\t\t\t\t\tret.b = (s1.b + s2.b) % mod;\n\t\t\t\t\tret.v = (s1.v + s2.v) % mod;\n\t\t\t\t\tret.size = s1.size + s2.size;\n\t\t\t\t\treturn ret;\n\t\t\t\t},\n\t\t\t\t(f, s) -> {\n\t\t\t\t\tObj ret = new Obj();\n\t\t\t\t\tret.a = (s.a + f.a * s.size) % mod;\n\t\t\t\t\tret.b = (s.b + f.b * s.size) % mod;\n\t\t\t\t\tret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod\n\t\t\t\t\t\t\t+ f.a * f.b % mod * s.size % mod * s.size % mod) % mod;\n\t\t\t\t\tret.size = s.size;\n\t\t\t\t\treturn ret;\n\t\t\t\t},\n\t\t\t\t(f1, f2) -> {\n\t\t\t\t\tObj ret = new Obj();\n\t\t\t\t\tret.a = (f1.a + f2.a) % mod;\n\t\t\t\t\tret.b = (f1.b + f2.b) % mod;\n\t\t\t\t\treturn ret;\n\t\t\t\t},\n\t\t\t\tnew Obj());\n\n\t\tPrintWriter pw = new PrintWriter(System.out);\n\t\tfor (int i = 0; i < q; i++) {\n\t\t\tsa = br.readLine().split(\" \");\n\t\t\tint t = Integer.parseInt(sa[0]);\n\t\t\tint l = Integer.parseInt(sa[1]) - 1;\n\t\t\tint r = Integer.parseInt(sa[2]);\n\t\t\tif (t == 1) {\n\t\t\t\tObj f = new Obj();\n\t\t\t\tf.a = Integer.parseInt(sa[3]);\n\t\t\t\tst.apply(l, r, f);\n\n\t\t\t} else if (t == 2) {\n\t\t\t\tObj f = new Obj();\n\t\t\t\tf.b = Integer.parseInt(sa[3]);\n\t\t\t\tst.apply(l, r, f);\n\n\t\t\t} else {\n\t\t\t\tObj o = st.prod(l, r);\n\t\t\t\tpw.println(o.v);\n\t\t\t}\n\t\t}\n\t\tpw.flush();\n\t\tbr.close();\n\t}",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            38
        ],
        "buggy_statements": [
            "\t\t\t\t\t\t\t+ f.a * f.b % mod * s.size % mod * s.size % mod) % mod;"
        ],
        "buggy_method_src_endswith_buggy_statement": "public static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString[] sa = br.readLine().split(\" \");\n\t\tint n = Integer.parseInt(sa[0]);\n\t\tint q = Integer.parseInt(sa[1]);\n\t\tObj[] arr = new Obj[n];\n\t\tsa = br.readLine().split(\" \");\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tObj o = new Obj();\n\t\t\to.a = Integer.parseInt(sa[i]);\n\t\t\to.size = 1;\n\t\t\tarr[i] = o;\n\t\t}\n\t\tsa = br.readLine().split(\" \");\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tObj o = arr[i];\n\t\t\to.b = Integer.parseInt(sa[i]);\n\t\t\to.v = o.a * o.b;\n\t\t}\n\n\t\tint mod = 998244353;\n\t\tLazySegTree<Obj, Obj> st = new LazySegTree<>(\n\t\t\t\tarr,\n\t\t\t\tnew Obj(),\n\t\t\t\t(s1, s2) -> {\n\t\t\t\t\tObj ret = new Obj();\n\t\t\t\t\tret.a = (s1.a + s2.a) % mod;\n\t\t\t\t\tret.b = (s1.b + s2.b) % mod;\n\t\t\t\t\tret.v = (s1.v + s2.v) % mod;\n\t\t\t\t\tret.size = s1.size + s2.size;\n\t\t\t\t\treturn ret;\n\t\t\t\t},\n\t\t\t\t(f, s) -> {\n\t\t\t\t\tObj ret = new Obj();\n\t\t\t\t\tret.a = (s.a + f.a * s.size) % mod;\n\t\t\t\t\tret.b = (s.b + f.b * s.size) % mod;\n\t\t\t\t\tret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod\n\t\t\t\t\t\t\t+ f.a * f.b % mod * s.size % mod * s.size % mod) % mod;"
    }
]