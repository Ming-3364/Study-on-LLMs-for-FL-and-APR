[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "main",
            "method_body": "public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        int n = scanner.nextInt();\n        \n        String text;\n        String gridA[][] = new String[n][];\n        String gridB[][] = new String[n][];\n        int line = 0;\n        int raw = 0;\n        String strLineA[] = new String[n];\n        String strLineB[] = new String[n];\n\n        int count = n;\n\n        while (count>0){\n           text = scanner.next();\n           strLineA[n-count] = text; \n           gridA[n-count] = text.split(\"\");\n           count = count - 1;\n        }\n\n        count = n;\n\n        while (count>0) {\n            text = scanner.next();\n            strLineB[n-count] = text;\n            gridB[n-count] = text.split(\"\");\n            count = count - 1;\n        }\n\n        scanner.close();\n        count = n;\n\n        while(count>0){\n          /*\n           *         System.out.println(\"line\");\n        System.out.println(strLineA[n-count]);\n        System.out.println(strLineB[n-count]);\n           */\n\n          if (!strLineA[n-count].equals(strLineB[n-count])){\n            /*\n             * System.out.println(\"break\");\n             */\n            \n            line = n - count + 1;\n            break;\n          }\n          count = count - 1;\n        }\n       \n        count = n;\n\n        while(count>0){\n          /*\n           * System.out.println(\"raw\");\n           */\n            \n          if (!gridA[line-1][n-count].equals(gridB[line-1][n-count])){\n            raw = n - count + 1;\n            break;\n          }\n          count = count - 1;\n        }\n\n        System.out.println(raw + \" \" + line);\n\n    }",
            "start_line": 5,
            "end_line": 73
        },
        "buggy_method_src": "public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        int n = scanner.nextInt();\n        \n        String text;\n        String gridA[][] = new String[n][];\n        String gridB[][] = new String[n][];\n        int line = 0;\n        int raw = 0;\n        String strLineA[] = new String[n];\n        String strLineB[] = new String[n];\n\n        int count = n;\n\n        while (count>0){\n           text = scanner.next();\n           strLineA[n-count] = text; \n           gridA[n-count] = text.split(\"\");\n           count = count - 1;\n        }\n\n        count = n;\n\n        while (count>0) {\n            text = scanner.next();\n            strLineB[n-count] = text;\n            gridB[n-count] = text.split(\"\");\n            count = count - 1;\n        }\n\n        scanner.close();\n        count = n;\n\n        while(count>0){\n          /*\n           *         System.out.println(\"line\");\n        System.out.println(strLineA[n-count]);\n        System.out.println(strLineB[n-count]);\n           */\n\n          if (!strLineA[n-count].equals(strLineB[n-count])){\n            /*\n             * System.out.println(\"break\");\n             */\n            \n            line = n - count + 1;\n            break;\n          }\n          count = count - 1;\n        }\n       \n        count = n;\n\n        while(count>0){\n          /*\n           * System.out.println(\"raw\");\n           */\n            \n          if (!gridA[line-1][n-count].equals(gridB[line-1][n-count])){\n            raw = n - count + 1;\n            break;\n          }\n          count = count - 1;\n        }\n\n        System.out.println(raw + \" \" + line);\n\n    }",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            67
        ],
        "buggy_statements": [
            "        System.out.println(raw + \" \" + line);"
        ],
        "buggy_method_src_endswith_buggy_statement": "public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        int n = scanner.nextInt();\n        \n        String text;\n        String gridA[][] = new String[n][];\n        String gridB[][] = new String[n][];\n        int line = 0;\n        int raw = 0;\n        String strLineA[] = new String[n];\n        String strLineB[] = new String[n];\n\n        int count = n;\n\n        while (count>0){\n           text = scanner.next();\n           strLineA[n-count] = text; \n           gridA[n-count] = text.split(\"\");\n           count = count - 1;\n        }\n\n        count = n;\n\n        while (count>0) {\n            text = scanner.next();\n            strLineB[n-count] = text;\n            gridB[n-count] = text.split(\"\");\n            count = count - 1;\n        }\n\n        scanner.close();\n        count = n;\n\n        while(count>0){\n          /*\n           *         System.out.println(\"line\");\n        System.out.println(strLineA[n-count]);\n        System.out.println(strLineB[n-count]);\n           */\n\n          if (!strLineA[n-count].equals(strLineB[n-count])){\n            /*\n             * System.out.println(\"break\");\n             */\n            \n            line = n - count + 1;\n            break;\n          }\n          count = count - 1;\n        }\n       \n        count = n;\n\n        while(count>0){\n          /*\n           * System.out.println(\"raw\");\n           */\n            \n          if (!gridA[line-1][n-count].equals(gridB[line-1][n-count])){\n            raw = n - count + 1;\n            break;\n          }\n          count = count - 1;\n        }\n\n        System.out.println(raw + \" \" + line);"
    }
]