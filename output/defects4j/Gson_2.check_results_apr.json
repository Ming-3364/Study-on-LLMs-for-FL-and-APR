{
    "overall_status": {
        "prompt_apr_1": {
            "ernie-3.5-128k": "Fail some tests",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Fail some tests",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_2": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Fail some tests",
            "deepseek-chat": "Fail some tests"
        },
        "prompt_apr_3": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Fail some tests",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_4": {
            "ernie-3.5-128k": "Fail some tests",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Fail some tests",
            "gpt-4o-mini": "Fail some tests",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_5": {
            "ernie-3.5-128k": "Fail some tests",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_6": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Fail some tests",
            "deepseek-chat": "Compile failed"
        }
    },
    "check_results_list": {
        "prompt_apr_1": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": 0,
                    "so": "",
                    "se": "Running ant (compile)...................................................... OK\nRunning ant (compile.tests)................................................ OK\n"
                },
                "test": {
                    "rc": 0,
                    "so": "Failing tests: 585\n  - com.google.gson.CommentsTest::testParseComments\n  - com.google.gson.DefaultInetAddressTypeAdapterTest::testInetAddressSerializationAndDeserialization\n  - com.google.gson.DefaultMapJsonSerializerTest::testNonEmptyMapSerialization\n  - com.google.gson.DefaultMapJsonSerializerTest::testEmptyMapNoTypeSerialization\n  - com.google.gson.GsonBuilderTest::testTransientFieldExclusion\n  - com.google.gson.GsonBuilderTest::testExcludeFieldsWithModifiers\n  - com.google.gson.GsonTypeAdapterTest::testDefaultTypeAdapterThrowsParseException\n  - com.google.gson.GsonTypeAdapterTest::testDeserializerForAbstractClass\n  - com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException\n  - com.google.gson.GsonTypeAdapterTest::testTypeAdapterProperlyConvertsTypes\n  - com.google.gson.GsonTypeAdapterTest::testTypeAdapterDoesNotAffectNonAdaptedTypes\n  - com.google.gson.JavaSerializationTest::testNumberIsSerializable\n  - com.google.gson.JavaSerializationTest::testMapIsSerializable\n  - com.google.gson.JavaSerializationTest::testListIsSerializable\n  - com.google.gson.JsonParserTest::testReadWriteTwoObjects\n  - com.google.gson.LongSerializationPolicyTest::testStringLongSerializationIntegration\n  - com.google.gson.LongSerializationPolicyTest::testDefaultLongSerializationIntegration\n  - com.google.gson.MixedStreamTest::testWriteDoesNotMutateState\n  - com.google.gson.MixedStreamTest::testReadInvalidState\n  - com.google.gson.MixedStreamTest::testWriteMixedStreamed\n  - com.google.gson.MixedStreamTest::testWriteInvalidState\n  - com.google.gson.MixedStreamTest::testWriteLenient\n  - com.google.gson.MixedStreamTest::testWriteHtmlSafe\n  - com.google.gson.MixedStreamTest::testWriteClosed\n  - com.google.gson.MixedStreamTest::testReadMixedStreamed\n  - com.google.gson.ObjectTypeAdapterTest::testSerializeObject\n  - com.google.gson.ObjectTypeAdapterTest::testSerialize\n  - com.google.gson.ObjectTypeAdapterTest::testDeserializeNullValue\n  - com.google.gson.ObjectTypeAdapterTest::testDeserialize\n  - com.google.gson.ObjectTypeAdapterTest::testSerializeNullValue\n  - com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideStringAdapter\n  - com.google.gson.OverrideCoreTypeAdaptersTest::testOverridePrimitiveBooleanAdapter\n  - com.google.gson.OverrideCoreTypeAdaptersTest::testOverrideWrapperBooleanAdapter\n  - com.google.gson.functional.ArrayTest::testArrayOfStringsSerialization\n  - com.google.gson.functional.ArrayTest::testMixingTypesInObjectArraySerialization\n  - com.google.gson.functional.ArrayTest::testArrayOfNullSerialization\n  - com.google.gson.functional.ArrayTest::testEmptyArraySerialization\n  - com.google.gson.functional.ArrayTest::testMultidimenstionalArraysSerialization\n  - com.google.gson.functional.ArrayTest::testSingleStringArraySerialization\n  - com.google.gson.functional.ArrayTest::testMultiDimenstionalObjectArraysSerialization\n  - com.google.gson.functional.ArrayTest::testSingleStringArrayDeserialization\n  - com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization\n  - com.google.gson.functional.ArrayTest::testArrayElementsAreArrays\n  - com.google.gson.functional.ArrayTest::testNullsInArrayWithSerializeNullPropertySetSerialization\n  - com.google.gson.functional.ArrayTest::testArrayOfCollectionSerialization\n  - com.google.gson.functional.ArrayTest::testArrayOfNullDeserialization\n  - com.google.gson.functional.ArrayTest::testArrayOfCollectionDeserialization\n  - com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsDeserialization\n  - com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsSerialization\n  - com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization\n  - com.google.gson.functional.ArrayTest::testObjectArrayWithNonPrimitivesSerialization\n  - com.google.gson.functional.ArrayTest::testSingleNullInArrayDeserialization\n  - com.google.gson.functional.ArrayTest::testSingleNullInArraySerialization\n  - com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization\n  - com.google.gson.functional.ArrayTest::testNullsInArraySerialization\n  - com.google.gson.functional.ArrayTest::testMultidimenstionalArraysDeserialization\n  - com.google.gson.functional.ArrayTest::testTopLevelArrayOfIntsSerialization\n  - com.google.gson.functional.ArrayTest::testArrayOfStringsDeserialization\n  - com.google.gson.functional.CircularReferenceTest::testCircularSerialization\n  - com.google.gson.functional.CircularReferenceTest::testSelfReferenceCustomHandlerSerialization\n  - com.google.gson.functional.CircularReferenceTest::testSelfReferenceIgnoredInSerialization\n  - com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization\n  - com.google.gson.functional.CircularReferenceTest::testSelfReferenceArrayFieldSerialization\n  - com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphSerialization\n  - com.google.gson.functional.CollectionTest::testWildcardCollectionField\n  - com.google.gson.functional.CollectionTest::testCollectionOfObjectWithNullSerialization\n  - com.google.gson.functional.CollectionTest::testFieldIsArrayList\n  - com.google.gson.functional.CollectionTest::testRawCollectionOfIntegersSerialization\n  - com.google.gson.functional.CollectionTest::testTopLevelCollectionOfIntegersDeserialization\n  - com.google.gson.functional.CollectionTest::testCollectionOfStringsDeserialization\n  - com.google.gson.functional.CollectionTest::testLinkedListDeserialization\n  - com.google.gson.functional.CollectionTest::testQueueSerialization\n  - com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionSerilaization\n  - com.google.gson.functional.CollectionTest::testCollectionOfStringsSerialization\n  - com.google.gson.functional.CollectionTest::testNullsInListSerialization\n  - com.google.gson.functional.CollectionTest::testRawCollectionSerialization\n  - com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionDeserilaization\n  - com.google.gson.functional.CollectionTest::testTopLevelListOfIntegerCollectionsDeserialization\n  - com.google.gson.functional.CollectionTest::testCollectionOfObjectSerialization\n  - com.google.gson.functional.CollectionTest::testRawCollectionDeserializationNotAlllowed\n  - com.google.gson.functional.CollectionTest::testSetDeserialization\n  - com.google.gson.functional.CollectionTest::testCollectionOfBagOfPrimitivesSerialization\n  - com.google.gson.functional.CollectionTest::testLinkedListSerialization\n  - com.google.gson.functional.CollectionTest::testNullsInListDeserialization\n  - com.google.gson.functional.CollectionTest::testSetSerialization\n  - com.google.gson.functional.CollectionTest::testTopLevelCollectionOfIntegersSerialization\n  - com.google.gson.functional.CollectionTest::testRawCollectionOfBagOfPrimitivesNotAllowed\n  - com.google.gson.functional.CollectionTest::testQueueDeserialization\n  - com.google.gson.functional.ConcurrencyTest::testMultiThreadSerialization\n  - com.google.gson.functional.ConcurrencyTest::testSingleThreadDeserialization\n  - com.google.gson.functional.ConcurrencyTest::testMultiThreadDeserialization\n  - com.google.gson.functional.ConcurrencyTest::testSingleThreadSerialization\n  - com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElements\n  - com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForArrayElementsForArrayField\n  - com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnField\n  - com.google.gson.functional.CustomDeserializerTest::testJsonTypeFieldBasedDeserialization\n  - com.google.gson.functional.CustomDeserializerTest::testDefaultConstructorNotCalledOnObject\n  - com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNullForTopLevelObject\n  - com.google.gson.functional.CustomDeserializerTest::testCustomDeserializerReturnsNull\n  - com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances\n  - com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFields\n  - com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull\n  - com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances\n  - com.google.gson.functional.CustomSerializerTest::testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances\n  - com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementSerialization\n  - com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomDeserializerNotInvokedForNullValues\n  - com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementSerializationWithType\n  - com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializers\n  - com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementDeserialization\n  - com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedDeserializers\n  - com.google.gson.functional.CustomTypeAdaptersTest::testEnsureCustomSerializerNotInvokedForNullValues\n  - com.google.gson.functional.CustomTypeAdaptersTest::testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass\n  - com.google.gson.functional.CustomTypeAdaptersTest::testCustomTypeAdapterDoesNotAppliesToSubClasses\n  - com.google.gson.functional.CustomTypeAdaptersTest::testCustomDeserializerInvokedForPrimitives\n  - com.google.gson.functional.CustomTypeAdaptersTest::testCustomNestedSerializers\n  - com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementSerialization\n  - com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArraySerializer\n  - com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForCollectionElementDeserialization\n  - com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializers\n  - com.google.gson.functional.CustomTypeAdaptersTest::testCustomByteArrayDeserializerAndInstanceCreator\n  - com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializerInvokedForPrimitives\n  - com.google.gson.functional.CustomTypeAdaptersTest::testRegisterHierarchyAdapterForDate\n  - com.google.gson.functional.CustomTypeAdaptersTest::testCustomAdapterInvokedForMapElementSerializationWithType\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleSerializationWithLanguageCountryVariant\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testSqlDateSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testUrlSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testBadValueForBigDecimalDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguage\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimeSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testStringBuilderDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationInCollection\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testTimestampSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testStringBuilderSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testUrlDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testNullSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testUuidDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateSerializationUsingBuilder\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testBitSetSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimestampSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testUriSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountryVariant\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testUuidSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleSerializationWithLanguage\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testStringBufferDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultGregorianCalendarSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountry\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testBigDecimalFieldSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigIntegerTypeAdapter\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultCalendarSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testBitSetDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlDateSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testTreeSetDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testUriDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testOverrideBigDecimalTypeAdapter\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testPropertiesSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testClassDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationWithPattern\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testSetSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlTimeDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testUrlNullSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleSerializationWithLanguageCountry\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultDateDeserializationUsingBuilder\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testClassSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testBigIntegerFieldSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultCalendarDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultGregorianCalendarDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testDateSerializationWithPatternNotOverridenByTypeAdapter\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testStringBufferSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testDefaultJavaSqlDateDeserialization\n  - com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvokedOnStrings\n  - com.google.gson.functional.DelegateTypeAdapterTest::testDelegateInvoked\n  - com.google.gson.functional.EnumTest::testEnumSet\n  - com.google.gson.functional.EnumTest::testEnumSubclassAsParameterizedType\n  - com.google.gson.functional.EnumTest::testEnumSubclassWithRegisteredTypeAdapter\n  - com.google.gson.functional.EnumTest::testEnumSubclass\n  - com.google.gson.functional.EnumTest::testCollectionOfEnumsDeserialization\n  - com.google.gson.functional.EnumTest::testTopLevelEnumDeserialization\n  - com.google.gson.functional.EnumTest::testClassWithEnumFieldSerialization\n  - com.google.gson.functional.EnumTest::testClassWithEnumFieldDeserialization\n  - com.google.gson.functional.EnumTest::testCollectionOfEnumsSerialization\n  - com.google.gson.functional.EnumTest::testEnumCaseMapping\n  - com.google.gson.functional.EnumTest::testTopLevelEnumSerialization\n  - com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization\n  - com.google.gson.functional.EscapingTest::testEscapeAllHtmlCharacters\n  - com.google.gson.functional.EscapingTest::testEscapingQuotesInStringArray\n  - com.google.gson.functional.EscapingTest::testEscapingObjectFields\n  - com.google.gson.functional.EscapingTest::testGsonDoubleDeserialization\n  - com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactSerialization\n  - com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerialization\n  - com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyWithMode\n  - com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserializationDoesNotImpactSerialization\n  - com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassDeserialization\n  - com.google.gson.functional.ExclusionStrategyFunctionalTest::testExcludeTopLevelClassSerializationDoesNotImpactDeserialization\n  - com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerialization\n  - com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategySerializationDoesNotImpactDeserialization\n  - com.google.gson.functional.ExclusionStrategyFunctionalTest::testExclusionStrategyDeserialization\n  - com.google.gson.functional.ExposeFieldsTest::testNullExposeFieldSerialization\n  - com.google.gson.functional.ExposeFieldsTest::testNoExposedFieldDeserialization\n  - com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationSerialization\n  - com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldDeserialization\n  - com.google.gson.functional.ExposeFieldsTest::testNoExposedFieldSerialization\n  - com.google.gson.functional.ExposeFieldsTest::testExposeAnnotationDeserialization\n  - com.google.gson.functional.ExposeFieldsTest::testArrayWithOneNullExposeFieldObjectSerialization\n  - com.google.gson.functional.ExposeFieldsTest::testExposedInterfaceFieldSerialization\n  - com.google.gson.functional.FieldExclusionTest::testDefaultInnerClassExclusion\n  - com.google.gson.functional.FieldExclusionTest::testDefaultNestedStaticClassIncluded\n  - com.google.gson.functional.FieldExclusionTest::testInnerClassExclusion\n  - com.google.gson.functional.FieldNamingTest::testUpperCamelCase\n  - com.google.gson.functional.FieldNamingTest::testLowerCaseWithDashes\n  - com.google.gson.functional.FieldNamingTest::testLowerCaseWithUnderscores\n  - com.google.gson.functional.FieldNamingTest::testUpperCamelCaseWithSpaces\n  - com.google.gson.functional.FieldNamingTest::testIdentity\n  - com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType\n  - com.google.gson.functional.InheritanceTest::testClassWithBaseCollectionFieldSerialization\n  - com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitType\n  - com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod\n  - com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionSerialization\n  - com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitTypeForToJsonMethod\n  - com.google.gson.functional.InheritanceTest::testClassWithBaseArrayFieldSerialization\n  - com.google.gson.functional.InheritanceTest::testBaseSerializedAsSub\n  - com.google.gson.functional.InheritanceTest::testSubInterfacesOfCollectionDeserialization\n  - com.google.gson.functional.InheritanceTest::testSubClassDeserialization\n  - com.google.gson.functional.InheritanceTest::testSubClassSerialization\n  - com.google.gson.functional.InheritanceTest::testBaseSerializedAsSubForToJsonMethod\n  - com.google.gson.functional.InheritanceTest::testClassWithBaseFieldSerialization\n  - com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForField\n  - com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsSubTypeForTopLevelObject\n  - com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorReturnsBaseType\n  - com.google.gson.functional.InstanceCreatorTest::testInstanceCreatorForParametrizedType\n  - com.google.gson.functional.InterfaceTest::testSerializingInterfaceObjectField\n  - com.google.gson.functional.InterfaceTest::testSerializingObjectImplementingInterface\n  - com.google.gson.functional.InternationalizationTest::testStringsWithRawChineseCharactersDeserialization\n  - com.google.gson.functional.InternationalizationTest::testStringsWithUnicodeChineseCharactersEscapedDeserialization\n  - com.google.gson.functional.InternationalizationTest::testStringsWithUnicodeChineseCharactersSerialization\n  - com.google.gson.functional.InternationalizationTest::testStringsWithUnicodeChineseCharactersDeserialization\n  - com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterInvoked\n  - com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredDeserializerOverridesJsonAdapter\n  - com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredAdapterOverridesJsonAdapter\n  - com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testRegisteredSerializerOverridesJsonAdapter\n  - com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testSuperclassTypeAdapterNotInvoked\n  - com.google.gson.functional.JsonAdapterAnnotationOnClassesTest::testJsonAdapterFactoryInvoked\n  - com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter\n  - com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverClassAnnotation\n  - com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter\n  - com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterTakesPrecedenceOverDefault\n  - com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testJsonAdapterInvokedOnlyForAnnotatedFields\n  - com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest::testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault\n  - com.google.gson.functional.JsonParserTest::testBadFieldTypeForDeserializingCustomTree\n  - com.google.gson.functional.JsonParserTest::testDeserializingCustomTree\n  - com.google.gson.functional.JsonParserTest::testBadFieldTypeForCustomDeserializerCustomTree\n  - com.google.gson.functional.JsonParserTest::testChangingCustomTreeAndDeserializing\n  - com.google.gson.functional.JsonParserTest::testBadTypeForDeserializingCustomTree\n  - com.google.gson.functional.JsonParserTest::testExtraCommasInMaps\n  - com.google.gson.functional.JsonParserTest::testExtraCommasInArrays\n  - com.google.gson.functional.JsonTreeTest::testToJsonTreeObjectType\n  - com.google.gson.functional.JsonTreeTest::testJsonTreeToString\n  - com.google.gson.functional.JsonTreeTest::testJsonTreeNull\n  - com.google.gson.functional.JsonTreeTest::testToJsonTree\n  - com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableSerialization\n  - com.google.gson.functional.MapAsArrayTypeAdapterTest::testTwoTypesCollapseToOneDeserialize\n  - com.google.gson.functional.MapAsArrayTypeAdapterTest::testMapWithTypeVariableDeserialization\n  - com.google.gson.functional.MapAsArrayTypeAdapterTest::testMultipleEnableComplexKeyRegistrationHasNoEffect\n  - com.google.gson.functional.MapAsArrayTypeAdapterTest::testSerializeComplexMapWithTypeAdapter\n  - com.google.gson.functional.MapTest::testMapSubclassDeserialization\n  - com.google.gson.functional.MapTest::testHashMapDeserialization\n  - com.google.gson.functional.MapTest::testMapDeserializationWithNullKey\n  - com.google.gson.functional.MapTest::testMapSubclassSerialization\n  - com.google.gson.functional.MapTest::testSerializeMaps\n  - com.google.gson.functional.MapTest::testMapDeserializationWithWildcardValues\n  - com.google.gson.functional.MapTest::testReadMapsWithEmptyStringKey\n  - com.google.gson.functional.MapTest::testMapSerializationWithIntegerKeys\n  - com.google.gson.functional.MapTest::testMapDeserializationWithDuplicateKeys\n  - com.google.gson.functional.MapTest::testParameterizedMapSubclassSerialization\n  - com.google.gson.functional.MapTest::testMapDeserialization\n  - com.google.gson.functional.MapTest::testMapSerializationWithNullValuesSerialized\n  - com.google.gson.functional.MapTest::testMapStandardSubclassDeserialization\n  - com.google.gson.functional.MapTest::testBooleanKeyDeserialization\n  - com.google.gson.functional.MapTest::testDeerializeMapOfMaps\n  - com.google.gson.functional.MapTest::testMapDeserializationWithIntegerKeys\n  - com.google.gson.functional.MapTest::testMapWithQuotes\n  - com.google.gson.functional.MapTest::testMapOfMapSerialization\n  - com.google.gson.functional.MapTest::testMapSerialization\n  - com.google.gson.functional.MapTest::testMapOfMapDeserialization\n  - com.google.gson.functional.MapTest::testComplexKeysDeserialization\n  - com.google.gson.functional.MapTest::testWriteMapsWithEmptyStringKey\n  - com.google.gson.functional.MapTest::testSortedMap\n  - com.google.gson.functional.MapTest::testInterfaceTypeMap\n  - com.google.gson.functional.MapTest::testMapSerializationWithNullValues\n  - com.google.gson.functional.MapTest::testGeneralMapField\n  - com.google.gson.functional.MapTest::testRawMapSerialization\n  - com.google.gson.functional.MapTest::testMapDeserializationWithNullValue\n  - com.google.gson.functional.MapTest::testComplexKeysSerialization\n  - com.google.gson.functional.MapTest::testStringKeyDeserialization\n  - com.google.gson.functional.MapTest::testSerializeMapOfMaps\n  - com.google.gson.functional.MapTest::testMapNamePromotionWithJsonElementReader\n  - com.google.gson.functional.MapTest::testNumberKeyDeserialization\n  - com.google.gson.functional.MapTest::testMapSerializationWithNullKey\n  - com.google.gson.functional.MapTest::testInterfaceTypeMapWithSerializer\n  - com.google.gson.functional.MoreSpecificTypeSerializationTest::testListOfParameterizedSubclassFields\n  - com.google.gson.functional.MoreSpecificTypeSerializationTest::testParameterizedSubclassFields\n  - com.google.gson.functional.MoreSpecificTypeSerializationTest::testSubclassFields\n  - com.google.gson.functional.MoreSpecificTypeSerializationTest::testListOfSubclassFields\n  - com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfParameterizedSubclassFields\n  - com.google.gson.functional.MoreSpecificTypeSerializationTest::testMapOfSubclassFields\n  - com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicySerialization\n  - com.google.gson.functional.NamingPolicyTest::testComplexFieldNameStrategy\n  - com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicySerialization\n  - com.google.gson.functional.NamingPolicyTest::testGsonDuplicateNameUsingSerializedNameFieldNamingPolicySerialization\n  - com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicySerialization\n  - com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicySerialiation\n  - com.google.gson.functional.NamingPolicyTest::testDeprecatedNamingStrategy\n  - com.google.gson.functional.NamingPolicyTest::testGsonWithUpperCamelCaseSpacesPolicyDeserialiation\n  - com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseDashPolicyDeserialiation\n  - com.google.gson.functional.NamingPolicyTest::testAtSignInSerializedName\n  - com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicyDeserialization\n  - com.google.gson.functional.NamingPolicyTest::testGsonWithSerializedNameFieldNamingPolicySerialization\n  - com.google.gson.functional.NamingPolicyTest::testGsonWithLowerCaseUnderscorePolicyDeserialiation\n  - com.google.gson.functional.NamingPolicyTest::testGsonWithNonDefaultFieldNamingPolicyDeserialiation\n  - com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNullArrayMembers\n  - com.google.gson.functional.NullObjectAndFieldTest::testExplicitDeserializationOfNulls\n  - com.google.gson.functional.NullObjectAndFieldTest::testAbsentJsonElementsAreSetToNull\n  - com.google.gson.functional.NullObjectAndFieldTest::testPrintPrintingArraysWithNulls\n  - com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullDesrialization\n  - com.google.gson.functional.NullObjectAndFieldTest::testCustomTypeAdapterPassesNullSerialization\n  - com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNullCollectionMembers\n  - com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNullStringMembers\n  - com.google.gson.functional.NullObjectAndFieldTest::testExplicitNullSetsFieldToNullDuringDeserialization\n  - com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberSerialization\n  - com.google.gson.functional.NullObjectAndFieldTest::testCustomSerializationOfNulls\n  - com.google.gson.functional.NullObjectAndFieldTest::testExplicitSerializationOfNulls\n  - com.google.gson.functional.NullObjectAndFieldTest::testTopLevelNullObjectDeserialization\n  - com.google.gson.functional.NullObjectAndFieldTest::testPrintPrintingObjectWithNulls\n  - com.google.gson.functional.NullObjectAndFieldTest::testNullWrappedPrimitiveMemberDeserialization\n  - com.google.gson.functional.ObjectTest::testClassWithTransientFieldsSerialization\n  - com.google.gson.functional.ObjectTest::testSingletonLists\n  - com.google.gson.functional.ObjectTest::testPrimitiveArrayInAnObjectDeserialization\n  - com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueDeserialization\n  - com.google.gson.functional.ObjectTest::testArrayOfArraysSerialization\n  - com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored\n  - com.google.gson.functional.ObjectTest::testArrayOfObjectsDeserialization\n  - com.google.gson.functional.ObjectTest::testClassWithObjectFieldSerialization\n  - com.google.gson.functional.ObjectTest::testNullPrimitiveFieldsDeserialization\n  - com.google.gson.functional.ObjectTest::testPrivateNoArgConstructorDeserialization\n  - com.google.gson.functional.ObjectTest::testStringFieldWithEmptyValueSerialization\n  - com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersDeserialization\n  - com.google.gson.functional.ObjectTest::testInnerClassSerialization\n  - com.google.gson.functional.ObjectTest::testBagOfPrimitivesDeserialization\n  - com.google.gson.functional.ObjectTest::testArrayOfObjectsAsFields\n  - com.google.gson.functional.ObjectTest::testNullArraysDeserialization\n  - com.google.gson.functional.ObjectTest::testAnonymousLocalClassesSerialization\n  - com.google.gson.functional.ObjectTest::testClassWithTransientFieldsDeserialization\n  - com.google.gson.functional.ObjectTest::testAnonymousLocalClassesCustomSerialization\n  - com.google.gson.functional.ObjectTest::testArrayOfObjectsSerialization\n  - com.google.gson.functional.ObjectTest::testJsonInMixedQuotesDeserialization\n  - com.google.gson.functional.ObjectTest::testPrimitiveArrayFieldSerialization\n  - com.google.gson.functional.ObjectTest::testNestedSerialization\n  - com.google.gson.functional.ObjectTest::testClassWithNoFieldsSerialization\n  - com.google.gson.functional.ObjectTest::testObjectFieldNamesWithoutQuotesDeserialization\n  - com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectSerialization\n  - com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization\n  - com.google.gson.functional.ObjectTest::testJsonInSingleQuotesDeserialization\n  - com.google.gson.functional.ObjectTest::testClassWithNoFieldsDeserialization\n  - com.google.gson.functional.ObjectTest::testNullFieldsSerialization\n  - com.google.gson.functional.ObjectTest::testArrayOfArraysDeserialization\n  - com.google.gson.functional.ObjectTest::testBagOfPrimitiveWrappersSerialization\n  - com.google.gson.functional.ObjectTest::testDateAsMapObjectField\n  - com.google.gson.functional.ObjectTest::testNullFieldsDeserialization\n  - com.google.gson.functional.ObjectTest::testBagOfPrimitivesSerialization\n  - com.google.gson.functional.ObjectTest::testEmptyCollectionInAnObjectDeserialization\n  - com.google.gson.functional.ObjectTest::testNullObjectFieldsDeserialization\n  - com.google.gson.functional.ObjectTest::testNestedDeserialization\n  - com.google.gson.functional.ObjectTest::testInnerClassDeserialization\n  - com.google.gson.functional.ParameterizedTypesTest::testVariableTypeArrayDeserialization\n  - com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeDeserialization\n  - com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithCustomSerializer\n  - com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysSerialization\n  - com.google.gson.functional.ParameterizedTypesTest::testVariableTypeDeserialization\n  - com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysSerialization\n  - com.google.gson.functional.ParameterizedTypesTest::testDeepParameterizedTypeSerialization\n  - com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersSerialization\n  - com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithReaderDeserialization\n  - com.google.gson.functional.ParameterizedTypesTest::testVariableTypeFieldsAndGenericArraysDeserialization\n  - com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeGenericArraysDeserialization\n  - com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeWithVariableTypeDeserialization\n  - com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypeDeserialization\n  - com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesSerialization\n  - com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithCustomDeserializer\n  - com.google.gson.functional.ParameterizedTypesTest::testTypesWithMultipleParametersDeserialization\n  - com.google.gson.functional.ParameterizedTypesTest::testParameterizedTypesWithWriterSerialization\n  - com.google.gson.functional.PrettyPrintingTest::testPrettyPrintArrayOfPrimitiveArrays\n  - com.google.gson.functional.PrettyPrintingTest::testMap\n  - com.google.gson.functional.PrettyPrintingTest::testEmptyMapField\n  - com.google.gson.functional.PrettyPrintingTest::testPrettyPrintArrayOfObjects\n  - com.google.gson.functional.PrettyPrintingTest::testMultipleArrays\n  - com.google.gson.functional.PrettyPrintingTest::testPrettyPrintArrayOfPrimitives\n  - com.google.gson.functional.PrettyPrintingTest::testPrettyPrintListOfPrimitiveArrays\n  - com.google.gson.functional.PrettyPrintingTest::testPrettyPrintList\n  - com.google.gson.functional.PrimitiveCharacterTest::testPrimitiveCharacterAutoboxedDeserialization\n  - com.google.gson.functional.PrimitiveCharacterTest::testPrimitiveCharacterAutoboxedSerialization\n  - com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBigDecimal\n  - com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsLong\n  - com.google.gson.functional.PrimitiveTest::testBigDecimalPreservePrecisionSerialization\n  - com.google.gson.functional.PrimitiveTest::testSmallValueForBigDecimalDeserialization\n  - com.google.gson.functional.PrimitiveTest::testFloatNaNSerializationNotSupportedByDefault\n  - com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsLongWrapper\n  - com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsShortWrapper\n  - com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsDoubleWrapper\n  - com.google.gson.functional.PrimitiveTest::testNumberDeserialization\n  - com.google.gson.functional.PrimitiveTest::testMoreSpecificSerialization\n  - com.google.gson.functional.PrimitiveTest::testUnquotedStringDeserializationFails\n  - com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsBigDecimal\n  - com.google.gson.functional.PrimitiveTest::testQuotedStringSerializationAndDeserialization\n  - com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsIntegerFails\n  - com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBigInteger\n  - com.google.gson.functional.PrimitiveTest::testBigDecimalNaNDeserializationNotSupported\n  - com.google.gson.functional.PrimitiveTest::testDeserializingBigDecimalAsBigIntegerFails\n  - com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsFloatWrapper\n  - com.google.gson.functional.PrimitiveTest::testReallyLongValuesDeserialization\n  - com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatSerializationNotSupportedByDefault\n  - com.google.gson.functional.PrimitiveTest::testBigDecimalInASingleElementArraySerialization\n  - com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsInteger\n  - com.google.gson.functional.PrimitiveTest::testDeserializingBigIntegerAsInteger\n  - com.google.gson.functional.PrimitiveTest::testSmallValueForBigIntegerDeserialization\n  - com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatDeserialization\n  - com.google.gson.functional.PrimitiveTest::testBadValueForBigIntegerDeserialization\n  - com.google.gson.functional.PrimitiveTest::testHtmlCharacterSerialization\n  - com.google.gson.functional.PrimitiveTest::testLargeDoubleDeserialization\n  - com.google.gson.functional.PrimitiveTest::testDoubleNaNSerializationNotSupportedByDefault\n  - com.google.gson.functional.PrimitiveTest::testPrimitiveBooleanAutoboxedInASingleElementArraySerialization\n  - com.google.gson.functional.PrimitiveTest::testPrimitiveBooleanAutoboxedSerialization\n  - com.google.gson.functional.PrimitiveTest::testBigDecimalDeserialization\n  - com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedDeserialization\n  - com.google.gson.functional.PrimitiveTest::testDoubleInfinitySerializationNotSupportedByDefault\n  - com.google.gson.functional.PrimitiveTest::testNegativeInfinityDeserialization\n  - com.google.gson.functional.PrimitiveTest::testSmallValueForBigIntegerSerialization\n  - com.google.gson.functional.PrimitiveTest::testNegativeInfinitySerializationNotSupportedByDefault\n  - com.google.gson.functional.PrimitiveTest::testBigDecimalNegativeInfinityDeserializationNotSupported\n  - com.google.gson.functional.PrimitiveTest::testSmallValueForBigDecimalSerialization\n  - com.google.gson.functional.PrimitiveTest::testNumberSerialization\n  - com.google.gson.functional.PrimitiveTest::testBigDecimalAsStringRepresentationDeserialization\n  - com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsByteWrapper\n  - com.google.gson.functional.PrimitiveTest::testBigDecimalInfinityDeserializationNotSupported\n  - com.google.gson.functional.PrimitiveTest::testFloatNaNSerialization\n  - com.google.gson.functional.PrimitiveTest::testByteDeserialization\n  - com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedDeserialization\n  - com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsBooleanWrapper\n  - com.google.gson.functional.PrimitiveTest::testDoubleNoFractAsStringRepresentationDeserialization\n  - com.google.gson.functional.PrimitiveTest::testBigIntegerDeserialization\n  - com.google.gson.functional.PrimitiveTest::testBigDecimalNoFractAsStringRepresentationDeserialization\n  - com.google.gson.functional.PrimitiveTest::testReallyLongValuesSerialization\n  - com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedSerialization\n  - com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBigDecimal\n  - com.google.gson.functional.PrimitiveTest::testNegativeInfinitySerialization\n  - com.google.gson.functional.PrimitiveTest::testFloatInfinitySerialization\n  - com.google.gson.functional.PrimitiveTest::testFloatNaNDeserialization\n  - com.google.gson.functional.PrimitiveTest::testDoubleNaNDeserialization\n  - com.google.gson.functional.PrimitiveTest::testBigIntegerInASingleElementArraySerialization\n  - com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedDeserialization\n  - com.google.gson.functional.PrimitiveTest::testStringsAsBooleans\n  - com.google.gson.functional.PrimitiveTest::testBigIntegerSerialization\n  - com.google.gson.functional.PrimitiveTest::testDeserializingDecimalPointValueZeroSucceeds\n  - com.google.gson.functional.PrimitiveTest::testLongAsStringSerialization\n  - com.google.gson.functional.PrimitiveTest::testDoubleArrayDeserialization\n  - com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsBigInteger\n  - com.google.gson.functional.PrimitiveTest::testDeserializePrimitiveWrapperAsObjectField\n  - com.google.gson.functional.PrimitiveTest::testBigDecimalSerialization\n  - com.google.gson.functional.PrimitiveTest::testByteSerialization\n  - com.google.gson.functional.PrimitiveTest::testNegativeInfinityFloatSerialization\n  - com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedSerialization\n  - com.google.gson.functional.PrimitiveTest::testShortSerialization\n  - com.google.gson.functional.PrimitiveTest::testPrimitiveIntegerAutoboxedInASingleElementArraySerialization\n  - com.google.gson.functional.PrimitiveTest::testFloatInfinitySerializationNotSupportedByDefault\n  - com.google.gson.functional.PrimitiveTest::testDoubleInfinityDeserialization\n  - com.google.gson.functional.PrimitiveTest::testBigDecimalPreservePrecisionDeserialization\n  - com.google.gson.functional.PrimitiveTest::testDeserializeJsonArrayAsNumber\n  - com.google.gson.functional.PrimitiveTest::testDoubleNaNSerialization\n  - com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedInASingleElementArraySerialization\n  - com.google.gson.functional.PrimitiveTest::testDeserializingNonZeroDecimalPointValuesAsIntegerFails\n  - com.google.gson.functional.PrimitiveTest::testFloatInfinityDeserialization\n  - com.google.gson.functional.PrimitiveTest::testDeserializeJsonObjectAsNumber\n  - com.google.gson.functional.PrimitiveTest::testDoubleInfinitySerialization\n  - com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedInASingleElementArraySerialization\n  - com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedSerialization\n  - com.google.gson.functional.PrimitiveTest::testDoubleAsStringRepresentationDeserialization\n  - com.google.gson.functional.PrintFormattingTest::testCompactFormattingLeavesNoWhiteSpace\n  - com.google.gson.functional.RawSerializationTest::testThreeLevelParameterizedObject\n  - com.google.gson.functional.RawSerializationTest::testCollectionOfPrimitives\n  - com.google.gson.functional.RawSerializationTest::testTwoLevelParameterizedObject\n  - com.google.gson.functional.RawSerializationTest::testCollectionOfObjects\n  - com.google.gson.functional.RawSerializationTest::testParameterizedObject\n  - com.google.gson.functional.ReadersWritersTest::testReadWriteTwoStrings\n  - com.google.gson.functional.ReadersWritersTest::testReaderForDeserialization\n  - com.google.gson.functional.ReadersWritersTest::testReadWriteTwoObjects\n  - com.google.gson.functional.ReadersWritersTest::testTopLevelNullObjectDeserializationWithReaderAndSerializeNulls\n  - com.google.gson.functional.ReadersWritersTest::testTopLevelNullObjectDeserializationWithReader\n  - com.google.gson.functional.ReadersWritersTest::testWriterForSerialization\n  - com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest::testSubclassesAutomaticallySerialzed\n  - com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenSerialization\n  - com.google.gson.functional.SecurityTest::testNonExecutableJsonDeserialization\n  - com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithRegularGsonDeserialization\n  - com.google.gson.functional.SecurityTest::testNonExecutableJsonSerialization\n  - com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization\n  - com.google.gson.functional.SerializedNameTest::testMultipleNamesDeserializedCorrectly\n  - com.google.gson.functional.SerializedNameTest::testMultipleNamesInTheSameString\n  - com.google.gson.functional.SerializedNameTest::testFirstNameIsChosenForSerialization\n  - com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize2dArray\n  - com.google.gson.functional.StreamingTypeAdaptersTest::testNullSafe\n  - com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeWithCustomTypeAdapter\n  - com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize1dArray\n  - com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize2dArray\n  - com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeWithCustomTypeAdapter\n  - com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize\n  - com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullField\n  - com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeNullObject\n  - com.google.gson.functional.StreamingTypeAdaptersTest::testFromJsonTree\n  - com.google.gson.functional.StreamingTypeAdaptersTest::testDeserializeMap\n  - com.google.gson.functional.StreamingTypeAdaptersTest::testDeserialize\n  - com.google.gson.functional.StreamingTypeAdaptersTest::testSerialize1dArray\n  - com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullField\n  - com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeNullObject\n  - com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeMap\n  - com.google.gson.functional.StreamingTypeAdaptersTest::testSerializeRecursive\n  - com.google.gson.functional.StringTest::testStringValueDeserialization\n  - com.google.gson.functional.StringTest::testEscapedCtrlNInStringSerialization\n  - com.google.gson.functional.StringTest::testSingleQuoteInStringSerialization\n  - com.google.gson.functional.StringTest::testEscapedCtrlRInStringSerialization\n  - com.google.gson.functional.StringTest::testEscapingQuotesInStringSerialization\n  - com.google.gson.functional.StringTest::testJavascriptKeywordsInStringSerialization\n  - com.google.gson.functional.StringTest::testStringWithEscapedSlashDeserialization\n  - com.google.gson.functional.StringTest::testSingleQuoteInStringDeserialization\n  - com.google.gson.functional.StringTest::testStringValueAsSingleElementArraySerialization\n  - com.google.gson.functional.StringTest::testAssignmentCharDeserialization\n  - com.google.gson.functional.StringTest::testEscapedBackslashInStringSerialization\n  - com.google.gson.functional.StringTest::testEscapingQuotesInStringDeserialization\n  - com.google.gson.functional.StringTest::testEscapedCtrlRInStringDeserialization\n  - com.google.gson.functional.StringTest::testJavascriptKeywordsInStringDeserialization\n  - com.google.gson.functional.StringTest::testAssignmentCharSerialization\n  - com.google.gson.functional.StringTest::testEscapedCtrlNInStringDeserialization\n  - com.google.gson.functional.StringTest::testEscapedBackslashInStringDeserialization\n  - com.google.gson.functional.StringTest::testStringValueSerialization\n  - com.google.gson.functional.ThrowableFunctionalTest::testErrorWithoutCause\n  - com.google.gson.functional.ThrowableFunctionalTest::testSerializedNameOnExceptionFields\n  - com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithCause\n  - com.google.gson.functional.ThrowableFunctionalTest::testExceptionWithoutCause\n  - com.google.gson.functional.ThrowableFunctionalTest::testErrornWithCause\n  - com.google.gson.functional.TreeTypeAdaptersTest::testSerializeId\n  - com.google.gson.functional.TreeTypeAdaptersTest::testDeserializeId\n  - com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreaming\n  - com.google.gson.functional.TypeAdapterPrecedenceTest::testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter\n  - com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingFollowedByNonstreaming\n  - com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreaming\n  - com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByStreaming\n  - com.google.gson.functional.TypeAdapterPrecedenceTest::testNonstreamingHierarchicalFollowedByNonstreaming\n  - com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical\n  - com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingFollowedByNonstreamingHierarchical\n  - com.google.gson.functional.TypeHierarchyAdapterTest::testTypeHierarchy\n  - com.google.gson.functional.TypeHierarchyAdapterTest::testRegisterSuperTypeFirst\n  - com.google.gson.functional.TypeVariableTest::testBasicTypeVariables\n  - com.google.gson.functional.TypeVariableTest::testAdvancedTypeVariables\n  - com.google.gson.functional.TypeVariableTest::testTypeVariablesViaTypeParameter\n  - com.google.gson.functional.UncategorizedTest::testTrailingWhitespace\n  - com.google.gson.functional.UncategorizedTest::testGsonInstanceReusableForSerializationAndDeserialization\n  - com.google.gson.functional.UncategorizedTest::testStaticFieldsAreNotSerialized\n  - com.google.gson.functional.UncategorizedTest::testReturningDerivedClassesDuringDeserialization\n  - com.google.gson.functional.UncategorizedTest::testObjectEqualButNotSameSerialization\n  - com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassSerialization\n  - com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilSerialization\n  - com.google.gson.functional.VersioningTest::testVersionedGsonMixingSinceAndUntilDeserialization\n  - com.google.gson.functional.VersioningTest::testVersionedClassesDeserialization\n  - com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesSerialization\n  - com.google.gson.functional.VersioningTest::testVersionedClassesSerialization\n  - com.google.gson.functional.VersioningTest::testVersionedUntilDeserialization\n  - com.google.gson.functional.VersioningTest::testVersionedGsonWithUnversionedClassesDeserialization\n  - com.google.gson.functional.VersioningTest::testVersionedUntilSerialization\n  - com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassDeserialization\n",
                    "se": "Running ant (compile.tests)................................................ OK\nRunning ant (run.dev.tests)................................................ OK\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: <identifier> expected\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]          ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ']' expected\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                             ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal start of type\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                               ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                              ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                            ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                  ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal start of type\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                               ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal start of type\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                                   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: '(' expected\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                                     ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                                                ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                                                           ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                                                                    ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                                                                                       ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                                                                                                   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                                                                                                           ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                                                                                                                         ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                                                                                                                                   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                                                                                                                                            ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                                                                                                                                                         ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                                                                                                                                                                      ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                                                                                                                                                                                 ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                                                                                                                                                                                           ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                                                                                                                                                                                              ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal start of type\n    [javac] Certainly! The bug in line [10] is related to the unchecked cast `(TypeAdapter<T2>) typeAdapter`. This can cause a `ClassCastException` at runtime. To fix this, we need to ensure that the type adapter is correctly adapted to the type `T2`.\n    [javac]                                                                                                                                                                                                                                               ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: ';' expected\n    [javac] Here is the complete corrected method:\n    [javac]     ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: ';' expected\n    [javac] Here is the complete corrected method:\n    [javac]            ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: ';' expected\n    [javac] Here is the complete corrected method:\n    [javac]                               ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: <identifier> expected\n    [javac] Here is the complete corrected method:\n    [javac]                                      ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:828: error: illegal character: \\96\n    [javac] ```java\n    [javac] ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:828: error: illegal character: \\96\n    [javac] ```java\n    [javac]  ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:828: error: illegal character: \\96\n    [javac] ```java\n    [javac]   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:846: error: illegal character: \\96\n    [javac] ```\n    [javac] ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:846: error: illegal character: \\96\n    [javac] ```\n    [javac]  ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:846: error: illegal character: \\96\n    [javac] ```\n    [javac]   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:848: error: illegal start of type\n    [javac] In this corrected version, `typeAdapter.nullSafe()` is used to ensure that the returned adapter handles null values safely. This approach avoids the unchecked cast and ensures type safety.}\n    [javac]    ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:848: error: ';' expected\n    [javac] In this corrected version, `typeAdapter.nullSafe()` is used to ensure that the returned adapter handles null values safely. This approach avoids the unchecked cast and ensures type safety.}\n    [javac]        ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:848: error: <identifier> expected\n    [javac] In this corrected version, `typeAdapter.nullSafe()` is used to ensure that the returned adapter handles null values safely. This approach avoids the unchecked cast and ensures type safety.}\n    [javac]                          ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:848: error: illegal character: \\96\n    [javac] In this corrected version, `typeAdapter.nullSafe()` is used to ensure that the returned adapter handles null values safely. This approach avoids the unchecked cast and ensures type safety.}\n    [javac]                            ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:848: error: <identifier> expected\n    [javac] In this corrected version, `typeAdapter.nullSafe()` is used to ensure that the returned adapter handles null values safely. This approach avoids the unchecked cast and ensures type safety.}\n    [javac]                                                 ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:848: error: illegal character: \\96\n    [javac] In this corrected version, `typeAdapter.nullSafe()` is used to ensure that the returned adapter handles null values safely. This approach avoids the unchecked cast and ensures type safety.}\n    [javac]                                                   ^\n    [javac] 43 errors\n    [javac] 1 warning\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-qwen-turbo/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 2 seconds\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-doubao-pro-4k && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-doubao-pro-4k -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-doubao-pro-4k/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-doubao-pro-4k/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-doubao-pro-4k/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Type.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Timestamp.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/StringWriter.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigDecimal.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigInteger.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Iterable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Comparator.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/ConcurrentModificationException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/NoSuchElementException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Character.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map$Entry.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractCollection.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Annotation.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Field.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalAccessException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Enum.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/EOFException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Reader.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/StringReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Writer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ThreadLocal.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/GenericArrayType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/ParameterizedType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/TypeVariable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Constructor.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/InvocationTargetException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/EnumSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedList.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Queue.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/SortedMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/SortedSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Modifier.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Appendable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Flushable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AssertionError.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Long.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Array.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/GenericDeclaration.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/WildcardType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Properties.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CharSequence.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamClass.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Method.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Time.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/InetAddress.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URI.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URISyntaxException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/BitSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/StringTokenizer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/UUID.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuilder.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuffer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Type.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found\n    [javac] /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Timestamp.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-doubao-pro-4k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:833: error: incompatible types\n    [javac]         return typeAdapter;\n    [javac]                ^\n    [javac]   required: TypeAdapter<T2>\n    [javac]   found:    TypeAdapter<T1>\n    [javac]   where T1,T2 are type-variables:\n    [javac]     T1 extends Object declared in method <T1>newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)\n    [javac]     T2 extends Object declared in method <T2>create(Gson,TypeToken<T2>)\n    [javac] 1 error\n    [javac] 100 warnings\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-doubao-pro-4k/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 4 seconds\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": 0,
                    "so": "",
                    "se": "Running ant (compile)...................................................... OK\nRunning ant (compile.tests)................................................ OK\n"
                },
                "test": {
                    "rc": 0,
                    "so": "Failing tests: 1\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch\n",
                    "se": "Running ant (compile.tests)................................................ OK\nRunning ant (run.dev.tests)................................................ OK\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]        ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ']' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                  ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: illegal start of type\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                    ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                        ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                 ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                              ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                       ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                     ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: illegal character: \\96\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                         ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: illegal character: \\96\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                         ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                           ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                    ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: illegal character: \\96\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                          ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: illegal character: \\96\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                             ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                            ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: illegal character: \\96\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                  ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: illegal character: \\96\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                     ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: illegal start of type\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                      ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                          ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: <identifier> expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                              ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: illegal start of type\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                                   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                                       ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                                               ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                                                           ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                                                                    ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                                                                               ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                                                                                          ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                                                                                                ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                                                                                                            ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                                                                                                                        ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                                                                                                                                       ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                                                                                                                                                ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: ';' expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                                                                                                                                                              ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:841: error: <identifier> expected\n    [javac] The bug in line [10] is that the type adapter is being cast directly to `TypeAdapter<T2>` without ensuring that the type `T2` is compatible with `T1`. To fix this, we need to ensure that the type adapter is wrapped in a way that safely handles the type hierarchy. Here is the corrected method:\n    [javac]                                                                                                                                                                                                                                                                                                     ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: ';' expected\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]       ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: ';' expected\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                  ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: ';' expected\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                              ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: illegal character: \\96\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                           ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: illegal character: \\96\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                       ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: illegal character: \\96\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                            ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: illegal character: \\96\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                            ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: illegal start of type\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                             ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: ';' expected\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                 ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: ';' expected\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                          ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: illegal character: \\96\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                               ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: illegal character: \\96\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                               ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: ';' expected\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                               ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: illegal character: \\96\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                    ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: illegal character: \\96\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                          ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: illegal character: \\96\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                                ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: illegal character: \\96\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                                     ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: ';' expected\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                                                    ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: illegal character: \\96\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                                                                  ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: illegal character: \\96\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                                                                              ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: illegal start of type\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                                                                               ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: ';' expected\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                                                                                         ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: ';' expected\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                                                                                                     ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: ';' expected\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                                                                                                                ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: ';' expected\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                                                                                                                           ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: ';' expected\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                                                                                                                                                        ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: ';' expected\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                                                                                                                                                                    ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: ';' expected\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                                                                                                                                                                                   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: ';' expected\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                                                                                                                                                                                                 ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: illegal character: \\96\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                                                                                                                                                                                                                   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: illegal character: \\96\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                                                                                                                                                                                                                                      ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: <identifier> expected\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                                                                                                                                                                                                                                               ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:869: error: reached end of file while parsing\n    [javac] In the corrected version, instead of directly casting the `typeAdapter` to `TypeAdapter<T2>`, we create a new `TypeAdapter<T2>` that delegates the `write` and `read` operations to the original `typeAdapter`, ensuring type safety by casting the values appropriately. This approach handles the type hierarchy correctly and avoids potential `ClassCastException` issues.}\n    [javac]                                                                                                                                                                                                                                                                                                                                                                                ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:870: error: reached end of file while parsing\n    [javac] 68 errors\n    [javac] 1 warning\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_1-deepseek-chat/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 2 seconds\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            }
        },
        "prompt_apr_2": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: <identifier> expected\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]     ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]          ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                     ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                               ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: <identifier> expected\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                             ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                       ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                          ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal start of type\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                 ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                      ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                       ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                              ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                              ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                                        ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                                              ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                                                                 ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                                                                             ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                                                                                 ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                                                                                    ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                                                                                          ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                                                                                             ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                                                                                                            ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: <identifier> expected\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                                                                                                                  ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                                                                                                                        ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                                                                                                                            ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                                                                                                                               ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                                                                                                                                     ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                                                                                                                                                 ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                                                                                                                                                    ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                                                                                                                                                            ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Sure, the issue with the cast `(TypeAdapter<T2>) typeAdapter` is that `typeAdapter` is of type `TypeAdapter<T1>`, and directly casting it to `TypeAdapter<T2>` can lead to a `ClassCastException` at runtime if `T1` and `T2` are unrelated types, even if `T2` is a subtype of `T1` due to type erasure.\n    [javac]                                                                                                                                                                                                                                                                                                         ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: ';' expected\n    [javac] To safely handle this, you can create a new `TypeAdapter` that delegates to the original `typeAdapter` but ensures type safety through runtime checks. Here's the corrected method:\n    [javac]          ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: <identifier> expected\n    [javac] To safely handle this, you can create a new `TypeAdapter` that delegates to the original `typeAdapter` but ensures type safety through runtime checks. Here's the corrected method:\n    [javac]                 ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: illegal start of type\n    [javac] To safely handle this, you can create a new `TypeAdapter` that delegates to the original `typeAdapter` but ensures type safety through runtime checks. Here's the corrected method:\n    [javac]                      ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: ';' expected\n    [javac] To safely handle this, you can create a new `TypeAdapter` that delegates to the original `typeAdapter` but ensures type safety through runtime checks. Here's the corrected method:\n    [javac]                           ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: ';' expected\n    [javac] To safely handle this, you can create a new `TypeAdapter` that delegates to the original `typeAdapter` but ensures type safety through runtime checks. Here's the corrected method:\n    [javac]                                      ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: <identifier> expected\n    [javac] To safely handle this, you can create a new `TypeAdapter` that delegates to the original `typeAdapter` but ensures type safety through runtime checks. Here's the corrected method:\n    [javac]                                        ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: illegal character: \\96\n    [javac] To safely handle this, you can create a new `TypeAdapter` that delegates to the original `typeAdapter` but ensures type safety through runtime checks. Here's the corrected method:\n    [javac]                                             ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: illegal character: \\96\n    [javac] To safely handle this, you can create a new `TypeAdapter` that delegates to the original `typeAdapter` but ensures type safety through runtime checks. Here's the corrected method:\n    [javac]                                                         ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: ';' expected\n    [javac] To safely handle this, you can create a new `TypeAdapter` that delegates to the original `typeAdapter` but ensures type safety through runtime checks. Here's the corrected method:\n    [javac]                                                                            ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: illegal character: \\96\n    [javac] To safely handle this, you can create a new `TypeAdapter` that delegates to the original `typeAdapter` but ensures type safety through runtime checks. Here's the corrected method:\n    [javac]                                                                                          ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: illegal character: \\96\n    [javac] To safely handle this, you can create a new `TypeAdapter` that delegates to the original `typeAdapter` but ensures type safety through runtime checks. Here's the corrected method:\n    [javac]                                                                                                      ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: ';' expected\n    [javac] To safely handle this, you can create a new `TypeAdapter` that delegates to the original `typeAdapter` but ensures type safety through runtime checks. Here's the corrected method:\n    [javac]                                                                                                                   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: ';' expected\n    [javac] To safely handle this, you can create a new `TypeAdapter` that delegates to the original `typeAdapter` but ensures type safety through runtime checks. Here's the corrected method:\n    [javac]                                                                                                                               ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: ';' expected\n    [javac] To safely handle this, you can create a new `TypeAdapter` that delegates to the original `typeAdapter` but ensures type safety through runtime checks. Here's the corrected method:\n    [javac]                                                                                                                                               ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: unclosed character literal\n    [javac] To safely handle this, you can create a new `TypeAdapter` that delegates to the original `typeAdapter` but ensures type safety through runtime checks. Here's the corrected method:\n    [javac]                                                                                                                                                            ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: ';' expected\n    [javac] To safely handle this, you can create a new `TypeAdapter` that delegates to the original `typeAdapter` but ensures type safety through runtime checks. Here's the corrected method:\n    [javac]                                                                                                                                                                            ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: <identifier> expected\n    [javac] To safely handle this, you can create a new `TypeAdapter` that delegates to the original `typeAdapter` but ensures type safety through runtime checks. Here's the corrected method:\n    [javac]                                                                                                                                                                                   ^\n    [javac] 51 errors\n    [javac] 1 warning\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-ernie-3.5-128k/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 2 seconds\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: <identifier> expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]          ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                     ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                              ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                     ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                             ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                       ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: <identifier> expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                        ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: <identifier> expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                     ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                      ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                  ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                            ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                                   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                                         ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                                                         ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                                                                  ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                                                                             ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: <identifier> expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                                                                                ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                                                                                              ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                                                                                                              ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal start of type\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                                                                                                               ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                                                                                                                   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                                                                                                                               ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: <identifier> expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                                                                                                                                      ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                                                                                                                                           ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                                                                                                                                                   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                                                                                                                                                         ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                                                                                                                                                                     ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: ';' expected\n    [javac] Certainly! The issue with the current implementation is that the cast `(TypeAdapter<T2>) typeAdapter;` may not be safe because `typeAdapter` is of type `TypeAdapter<T1>` and you are trying to return it as `TypeAdapter<T2>`. To ensure type safety, you need to use a wildcard in the cast.\n    [javac]                                                                                                                                                                                                                                                                                              ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: ';' expected\n    [javac] Here is the complete corrected method:\n    [javac]        ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: ';' expected\n    [javac] Here is the complete corrected method:\n    [javac]                     ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:826: error: ';' expected\n    [javac] Here is the complete corrected method:\n    [javac]                                      ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:828: error: illegal character: \\96\n    [javac] ```java\n    [javac] ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:828: error: illegal character: \\96\n    [javac] ```java\n    [javac]  ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:828: error: illegal character: \\96\n    [javac] ```java\n    [javac]   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:828: error: <identifier> expected\n    [javac] ```java\n    [javac]        ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:845: error: illegal character: \\96\n    [javac] ```\n    [javac] ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:845: error: illegal character: \\96\n    [javac] ```\n    [javac]  ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:845: error: illegal character: \\96\n    [javac] ```\n    [javac]   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:847: error: ';' expected\n    [javac] This ensures that the cast is type-safe by using a wildcard.}\n    [javac]                  ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:847: error: ';' expected\n    [javac] This ensures that the cast is type-safe by using a wildcard.}\n    [javac]                           ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:847: error: ';' expected\n    [javac] This ensures that the cast is type-safe by using a wildcard.}\n    [javac]                                   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:847: error: ';' expected\n    [javac] This ensures that the cast is type-safe by using a wildcard.}\n    [javac]                                           ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:847: error: ';' expected\n    [javac] This ensures that the cast is type-safe by using a wildcard.}\n    [javac]                                                   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:847: error: <identifier> expected\n    [javac] This ensures that the cast is type-safe by using a wildcard.}\n    [javac]                                                             ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:847: error: reached end of file while parsing\n    [javac] This ensures that the cast is type-safe by using a wildcard.}\n    [javac]                                                              ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:848: error: reached end of file while parsing\n    [javac] 47 errors\n    [javac] 1 warning\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-qwen-turbo/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 1 second\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-doubao-pro-4k && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-doubao-pro-4k -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-doubao-pro-4k/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-doubao-pro-4k/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-doubao-pro-4k/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Type.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Timestamp.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/StringWriter.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigDecimal.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigInteger.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Iterable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Comparator.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/ConcurrentModificationException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/NoSuchElementException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Character.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map$Entry.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractCollection.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Annotation.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Field.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalAccessException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Enum.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/EOFException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Reader.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/StringReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Writer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ThreadLocal.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/GenericArrayType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/ParameterizedType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/TypeVariable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Constructor.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/InvocationTargetException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/EnumSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedList.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Queue.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/SortedMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/SortedSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Modifier.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Appendable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Flushable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AssertionError.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Long.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Array.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/GenericDeclaration.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/WildcardType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Properties.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CharSequence.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamClass.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Method.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Time.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/InetAddress.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URI.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URISyntaxException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/BitSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/StringTokenizer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/UUID.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuilder.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuffer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Type.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found\n    [javac] /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Timestamp.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-doubao-pro-4k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:833: error: incompatible types\n    [javac]         return typeAdapter;\n    [javac]                ^\n    [javac]   required: TypeAdapter<T2>\n    [javac]   found:    TypeAdapter<T1>\n    [javac]   where T1,T2 are type-variables:\n    [javac]     T1 extends Object declared in method <T1>newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)\n    [javac]     T2 extends Object declared in method <T2>create(Gson,TypeToken<T2>)\n    [javac] 1 error\n    [javac] 100 warnings\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_2-doubao-pro-4k/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 4 seconds\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": 0,
                    "so": "",
                    "se": "Running ant (compile)...................................................... OK\nRunning ant (compile.tests)................................................ OK\n"
                },
                "test": {
                    "rc": 0,
                    "so": "Failing tests: 1\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch\n",
                    "se": "Running ant (compile.tests)................................................ OK\nRunning ant (run.dev.tests)................................................ OK\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": 0,
                    "so": "",
                    "se": "Running ant (compile)...................................................... OK\nRunning ant (compile.tests)................................................ OK\n"
                },
                "test": {
                    "rc": 0,
                    "so": "Failing tests: 1\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch\n",
                    "se": "Running ant (compile.tests)................................................ OK\nRunning ant (run.dev.tests)................................................ OK\n"
                }
            }
        },
        "prompt_apr_3": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-ernie-3.5-128k && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-ernie-3.5-128k -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-ernie-3.5-128k/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-ernie-3.5-128k/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-ernie-3.5-128k/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:834: error: reached end of file while parsing\n    [javac] }\n    [javac]  ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:835: error: reached end of file while parsing\n    [javac] 2 errors\n    [javac] 1 warning\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-ernie-3.5-128k/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 1 second\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-qwen-turbo && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-qwen-turbo -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-qwen-turbo/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-qwen-turbo/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-qwen-turbo/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] ```java\n    [javac] ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] ```java\n    [javac]  ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:824: error: illegal character: \\96\n    [javac] ```java\n    [javac]   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:835: error: illegal character: \\96\n    [javac] ```}\n    [javac] ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:835: error: illegal character: \\96\n    [javac] ```}\n    [javac]  ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:835: error: illegal character: \\96\n    [javac] ```}\n    [javac]   ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:835: error: reached end of file while parsing\n    [javac] ```}\n    [javac]     ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:836: error: reached end of file while parsing\n    [javac] 8 errors\n    [javac] 1 warning\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-qwen-turbo/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 1 second\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-doubao-pro-4k && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-doubao-pro-4k -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-doubao-pro-4k/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-doubao-pro-4k/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-doubao-pro-4k/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Type.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Timestamp.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/StringWriter.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigDecimal.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigInteger.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Iterable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Comparator.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/ConcurrentModificationException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/NoSuchElementException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Character.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map$Entry.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractCollection.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Annotation.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Field.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalAccessException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Enum.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/EOFException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Reader.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/StringReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Writer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ThreadLocal.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/GenericArrayType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/ParameterizedType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/TypeVariable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Constructor.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/InvocationTargetException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/EnumSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedList.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Queue.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/SortedMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/SortedSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Modifier.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Appendable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Flushable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AssertionError.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Long.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Array.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/GenericDeclaration.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/WildcardType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Properties.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CharSequence.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamClass.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Method.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Time.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/InetAddress.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URI.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URISyntaxException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/BitSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/StringTokenizer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/UUID.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuilder.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuffer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Type.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found\n    [javac] /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Timestamp.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-doubao-pro-4k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:833: error: cannot find symbol\n    [javac]         return typeAdapter.cast(typeAdapter);\n    [javac]                           ^\n    [javac]   symbol:   method cast(TypeAdapter<T1>)\n    [javac]   location: variable typeAdapter of type TypeAdapter<T1>\n    [javac]   where T1 is a type-variable:\n    [javac]     T1 extends Object declared in method <T1>newTypeHierarchyFactory(Class<T1>,TypeAdapter<T1>)\n    [javac] 1 error\n    [javac] 100 warnings\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-doubao-pro-4k/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 4 seconds\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": 0,
                    "so": "",
                    "se": "Running ant (compile)...................................................... OK\nRunning ant (compile.tests)................................................ OK\n"
                },
                "test": {
                    "rc": 0,
                    "so": "Failing tests: 1\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch\n",
                    "se": "Running ant (compile.tests)................................................ OK\nRunning ant (run.dev.tests)................................................ OK\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-deepseek-chat && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-deepseek-chat -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-deepseek-chat/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-deepseek-chat/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-deepseek-chat/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:833: error: reached end of file while parsing\n    [javac]         return (TypeAdapter<T2>) typeAdapter.nullSafe();}\n    [javac]                                                          ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:834: error: reached end of file while parsing\n    [javac] 2 errors\n    [javac] 1 warning\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_3-deepseek-chat/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 1 second\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            }
        },
        "prompt_apr_4": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": 0,
                    "so": "",
                    "se": "Running ant (compile)...................................................... OK\nRunning ant (compile.tests)................................................ OK\n"
                },
                "test": {
                    "rc": 0,
                    "so": "Failing tests: 11\n  - com.google.gson.DefaultInetAddressTypeAdapterTest::testInetAddressSerializationAndDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArraySerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArrayDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveDeserialization\n  - com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical\n",
                    "se": "Running ant (compile.tests)................................................ OK\nRunning ant (run.dev.tests)................................................ OK\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_4-qwen-turbo && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_4-qwen-turbo -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_4-qwen-turbo/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_4-qwen-turbo/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_4-qwen-turbo/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Type.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Timestamp.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/StringWriter.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigDecimal.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigInteger.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Iterable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Comparator.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/ConcurrentModificationException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/NoSuchElementException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Character.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map$Entry.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractCollection.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Annotation.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Field.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalAccessException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Enum.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/EOFException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Reader.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/StringReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Writer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ThreadLocal.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/GenericArrayType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/ParameterizedType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/TypeVariable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Constructor.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/InvocationTargetException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/EnumSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedList.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Queue.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/SortedMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/SortedSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Modifier.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Appendable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Flushable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AssertionError.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Long.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Array.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/GenericDeclaration.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/WildcardType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Properties.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CharSequence.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamClass.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Method.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Time.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/InetAddress.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URI.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URISyntaxException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/BitSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/StringTokenizer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/UUID.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuilder.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuffer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Type.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found\n    [javac] /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Timestamp.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_4-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:833: error: incompatible types\n    [javac] return (TypeAdapter<? super T2>) typeAdapter;\n    [javac]        ^\n    [javac]   required: TypeAdapter<T2>\n    [javac]   found:    TypeAdapter<CAP#1>\n    [javac]   where T2 is a type-variable:\n    [javac]     T2 extends Object declared in method <T2>create(Gson,TypeToken<T2>)\n    [javac]   where CAP#1 is a fresh type-variable:\n    [javac]     CAP#1 extends Object super: T2 from capture of ? super T2\n    [javac] 1 error\n    [javac] 100 warnings\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_4-qwen-turbo/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 4 seconds\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": 0,
                    "so": "",
                    "se": "Running ant (compile)...................................................... OK\nRunning ant (compile.tests)................................................ OK\n"
                },
                "test": {
                    "rc": 0,
                    "so": "Failing tests: 1\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch\n",
                    "se": "Running ant (compile.tests)................................................ OK\nRunning ant (run.dev.tests)................................................ OK\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": 0,
                    "so": "",
                    "se": "Running ant (compile)...................................................... OK\nRunning ant (compile.tests)................................................ OK\n"
                },
                "test": {
                    "rc": 0,
                    "so": "Failing tests: 1\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch\n",
                    "se": "Running ant (compile.tests)................................................ OK\nRunning ant (run.dev.tests)................................................ OK\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_4-deepseek-chat && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_4-deepseek-chat -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_4-deepseek-chat/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_4-deepseek-chat/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_4-deepseek-chat/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_4-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:834: error: ';' expected\n    [javac]       }\n    [javac]        ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_4-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:835: error: ';' expected\n    [javac]       @Override public String toString() {\n    [javac]                                       ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_4-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:839: error: ';' expected\n    [javac]   }\n    [javac]    ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_4-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:840: error: reached end of file while parsing\n    [javac] }\n    [javac]  ^\n    [javac] 4 errors\n    [javac] 1 warning\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_4-deepseek-chat/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 1 second\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            }
        },
        "prompt_apr_5": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": 0,
                    "so": "",
                    "se": "Running ant (compile)...................................................... OK\nRunning ant (compile.tests)................................................ OK\n"
                },
                "test": {
                    "rc": 0,
                    "so": "Failing tests: 11\n  - com.google.gson.DefaultInetAddressTypeAdapterTest::testInetAddressSerializationAndDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArraySerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonArrayDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonObjectSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullDeserialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonNullSerialization\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonPrimitiveDeserialization\n  - com.google.gson.functional.TypeAdapterPrecedenceTest::testStreamingHierarchicalFollowedByNonstreamingHierarchical\n",
                    "se": "Running ant (compile.tests)................................................ OK\nRunning ant (run.dev.tests)................................................ OK\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-qwen-turbo && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-qwen-turbo -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-qwen-turbo/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-qwen-turbo/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-qwen-turbo/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Type.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Timestamp.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/StringWriter.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigDecimal.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigInteger.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Iterable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Comparator.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/ConcurrentModificationException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/NoSuchElementException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Character.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map$Entry.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractCollection.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Annotation.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Field.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalAccessException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Enum.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/EOFException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Reader.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/StringReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Writer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ThreadLocal.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/GenericArrayType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/ParameterizedType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/TypeVariable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Constructor.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/InvocationTargetException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/EnumSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedList.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Queue.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/SortedMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/SortedSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Modifier.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Appendable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Flushable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AssertionError.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Long.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Array.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/GenericDeclaration.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/WildcardType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Properties.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CharSequence.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamClass.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Method.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Time.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/InetAddress.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URI.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URISyntaxException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/BitSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/StringTokenizer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/UUID.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuilder.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuffer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Type.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found\n    [javac] /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Timestamp.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:831: error: <anonymous com.google.gson.internal.bind.TypeAdapters$31$1> is not abstract and does not override abstract method read(JsonReader) in TypeAdapter\n    [javac] return new TypeAdapter<T2>() { }.nullSafe();        }\n    [javac]                              ^\n    [javac]   where T2 is a type-variable:\n    [javac]     T2 extends Object declared in method <T2>create(Gson,TypeToken<T2>)\n    [javac] 1 error\n    [javac] 100 warnings\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-qwen-turbo/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 5 seconds\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-doubao-pro-4k && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-doubao-pro-4k -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-doubao-pro-4k/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-doubao-pro-4k/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-doubao-pro-4k/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Type.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Timestamp.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/StringWriter.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigDecimal.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigInteger.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Iterable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Comparator.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/ConcurrentModificationException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/NoSuchElementException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Character.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map$Entry.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractCollection.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Annotation.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Field.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalAccessException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Enum.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/EOFException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Reader.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/StringReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Writer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ThreadLocal.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/GenericArrayType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/ParameterizedType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/TypeVariable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Constructor.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/InvocationTargetException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/EnumSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedList.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Queue.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/SortedMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/SortedSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Modifier.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Appendable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Flushable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AssertionError.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Long.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Array.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/GenericDeclaration.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/WildcardType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Properties.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CharSequence.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamClass.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Method.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Time.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/InetAddress.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URI.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URISyntaxException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/BitSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/StringTokenizer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/UUID.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuilder.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuffer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Type.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found\n    [javac] /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Timestamp.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-doubao-pro-4k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:833: error: clone() has protected access in Object\n    [javac] return (TypeAdapter<T2>) typeAdapter.clone();\n    [javac]                                     ^\n    [javac] 1 error\n    [javac] 100 warnings\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-doubao-pro-4k/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 5 seconds\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-gpt-4o-mini && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-gpt-4o-mini -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-gpt-4o-mini/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-gpt-4o-mini/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-gpt-4o-mini/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-gpt-4o-mini/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:835: error: ';' expected\n    [javac] return (TypeAdapter<T2>) gson.getAdapter(typeToken);      @Override public String toString() {\n    [javac]                                                                                           ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-gpt-4o-mini/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:839: error: ';' expected\n    [javac]   }\n    [javac]    ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-gpt-4o-mini/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:840: error: reached end of file while parsing\n    [javac] }\n    [javac]  ^\n    [javac] 3 errors\n    [javac] 1 warning\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-gpt-4o-mini/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 1 second\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-deepseek-chat && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-deepseek-chat -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-deepseek-chat/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-deepseek-chat/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-deepseek-chat/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:832: error: illegal start of type\n    [javac]         return (TypeAdapter<T2>) typeAdapter;\n    [javac]         ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:832: error: <identifier> expected\n    [javac]         return (TypeAdapter<T2>) typeAdapter;\n    [javac]                                ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:832: error: ';' expected\n    [javac]         return (TypeAdapter<T2>) typeAdapter;\n    [javac]                                 ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:834: error: ';' expected\n    [javac]       }\n    [javac]        ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:835: error: ';' expected\n    [javac]       @Override public String toString() {\n    [javac]                                       ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:840: error: class, interface, or enum expected\n    [javac] }\n    [javac] ^\n    [javac] 6 errors\n    [javac] 1 warning\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_5-deepseek-chat/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 2 seconds\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            }
        },
        "prompt_apr_6": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-ernie-3.5-128k && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-ernie-3.5-128k -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-ernie-3.5-128k/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-ernie-3.5-128k/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-ernie-3.5-128k/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Type.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Timestamp.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/StringWriter.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigDecimal.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigInteger.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Iterable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Comparator.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/ConcurrentModificationException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/NoSuchElementException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Character.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map$Entry.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractCollection.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Annotation.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Field.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalAccessException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Enum.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/EOFException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Reader.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/StringReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Writer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ThreadLocal.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/GenericArrayType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/ParameterizedType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/TypeVariable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Constructor.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/InvocationTargetException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/EnumSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedList.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Queue.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/SortedMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/SortedSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Modifier.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Appendable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Flushable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AssertionError.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Long.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Array.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/GenericDeclaration.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/WildcardType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Properties.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CharSequence.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamClass.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Method.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Time.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/InetAddress.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URI.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URISyntaxException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/BitSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/StringTokenizer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/UUID.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuilder.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuffer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Type.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found\n    [javac] /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Timestamp.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-ernie-3.5-128k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:834: error: unreachable statement\n    [javac] return (TypeAdapter<T2>) gson.getDelegateAdapter(this, TypeToken.get(requestedType));      }\n    [javac] ^\n    [javac] 1 error\n    [javac] 100 warnings\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-ernie-3.5-128k/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 5 seconds\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-qwen-turbo && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-qwen-turbo -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-qwen-turbo/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-qwen-turbo/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-qwen-turbo/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Type.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Timestamp.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/DateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/ParseException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/text/SimpleDateFormat.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Locale.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TimeZone.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Object.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/String.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/IOException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/StringWriter.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigDecimal.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/math/BigInteger.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/RuntimeException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Exception.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Throwable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Serializable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Set.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/ArrayList.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Iterator.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/List.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Iterable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Boolean.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Number.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Comparator.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/ConcurrentModificationException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/NoSuchElementException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Character.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Map$Entry.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Class.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Comparable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collection.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/AbstractCollection.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Annotation.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Field.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Arrays.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/IllegalAccessException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Enum.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/EOFException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Reader.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/StringReader.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Writer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Collections.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/HashMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/ThreadLocal.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/GenericArrayType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/ParameterizedType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/TypeVariable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Constructor.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/InvocationTargetException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/EnumSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedHashSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/LinkedList.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Queue.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/SortedMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/SortedSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeMap.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/TreeSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Modifier.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Cloneable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Appendable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Closeable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/Flushable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AutoCloseable.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/AssertionError.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/ElementType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Retention.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/RetentionPolicy.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/annotation/Target.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/Long.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Array.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/GenericDeclaration.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/WildcardType.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Properties.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/CharSequence.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectInputStream.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/io/ObjectStreamClass.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Method.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Date.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Time.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/InetAddress.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URI.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URISyntaxException.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/net/URL.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/BitSet.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/Calendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/GregorianCalendar.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/StringTokenizer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/util/UUID.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuilder.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] warning: /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/StringBuffer.class): major version 52 is newer than 51, the highest major version supported by this compiler.\n    [javac]   It is recommended that the compiler be upgraded.\n    [javac] /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/lang/reflect/Type.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation': class file for jdk.Profile+Annotation not found\n    [javac] /home/cmd/jdk1.8.0_391/lib/ct.sym(META-INF/sym/rt.jar/java/sql/Timestamp.class): warning: Cannot find annotation method 'value()' in type 'Profile+Annotation'\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-qwen-turbo/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:829: error: cannot find symbol\n    [javac] return (TypeAdapter<T2>) ((TypeAdapter<? super T2>) typeAdapter);        if (!clazz.isAssignableFrom(requestedType)) {\n    [javac]                                                                                                      ^\n    [javac]   symbol: variable requestedType\n    [javac] 1 error\n    [javac] 100 warnings\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-qwen-turbo/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 4 seconds\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-doubao-pro-4k && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-doubao-pro-4k -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-doubao-pro-4k/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-doubao-pro-4k/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-doubao-pro-4k/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-doubao-pro-4k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:835: error: ';' expected\n    [javac] return (TypeAdapter<T2>) (typeAdapter);      @Override public String toString() {\n    [javac]                                                                              ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-doubao-pro-4k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:839: error: ';' expected\n    [javac]   }\n    [javac]    ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-doubao-pro-4k/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:840: error: reached end of file while parsing\n    [javac] }\n    [javac]  ^\n    [javac] 3 errors\n    [javac] 1 warning\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-doubao-pro-4k/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 2 seconds\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": 0,
                    "so": "",
                    "se": "Running ant (compile)...................................................... OK\nRunning ant (compile.tests)................................................ OK\n"
                },
                "test": {
                    "rc": 0,
                    "so": "Failing tests: 1\n  - com.google.gson.functional.DefaultTypeAdaptersTest::testJsonElementTypeMismatch\n",
                    "se": "Running ant (compile.tests)................................................ OK\nRunning ant (run.dev.tests)................................................ OK\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Running ant (compile)...................................................... FAIL\nExecuted command:  cd /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-deepseek-chat && /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/major/bin/ant -f /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml -Dd4j.home=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0 -Dd4j.dir.projects=/data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects -Dbasedir=/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-deepseek-chat -Dbuild.compiler=javac1.7  compile 2>&1\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0\nBuildfile: /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/projects/defects4j.build.xml\n\ntest-offline:\n\nget-deps:\n\ngson-from-maven.compile:\n    [mkdir] Created dir: /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-deepseek-chat/target/classes\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-deepseek-chat/gson/maven-build.xml:73: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds\n    [javac] Compiling 66 source files to /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-deepseek-chat/target/classes\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:832: error: illegal start of type\n    [javac]         return (TypeAdapter<T2>) typeAdapter;\n    [javac]         ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:832: error: <identifier> expected\n    [javac]         return (TypeAdapter<T2>) typeAdapter;\n    [javac]                                ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:832: error: ';' expected\n    [javac]         return (TypeAdapter<T2>) typeAdapter;\n    [javac]                                 ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:834: error: ';' expected\n    [javac]       }\n    [javac]        ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:835: error: ';' expected\n    [javac]       @Override public String toString() {\n    [javac]                                       ^\n    [javac] /data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-deepseek-chat/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java:840: error: class, interface, or enum expected\n    [javac] }\n    [javac] ^\n    [javac] 6 errors\n    [javac] 1 warning\n\nBUILD FAILED\n/data/cmd/Ming/llm-fl-apr/tmp/Gson_2-prompt_apr_6-deepseek-chat/gson/maven-build.xml:73: Compile failed; see the compiler error output for details.\n\nTotal time: 2 seconds\nCannot compile sources! at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/d4j/d4j-compile line 82.\nCompilation failed in require at /data/cmd/Ming/LLM_Based-Mutation/tools/mutant/defects4j-2.1.0/framework/bin/defects4j line 195.\n"
                }
            }
        }
    }
}