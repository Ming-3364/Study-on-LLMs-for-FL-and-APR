{
    "overall_status": {
        "prompt_apr_1": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Pass all tests",
            "gpt-4o-mini": "Pass all tests",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_2": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Pass all tests",
            "gpt-4o-mini": "Pass all tests",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_3": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Fail some tests",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_4": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_5": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Pass all tests"
        },
        "prompt_apr_6": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Compile failed"
        }
    },
    "check_results_list": {
        "prompt_apr_1": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:61: error: reached end of file while parsing\n\t}\n\t ^\n1 error\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:30: error: <identifier> expected\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n         ^\nMain.java:30: error: ';' expected\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                    ^\nMain.java:30: error: ']' expected\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                              ^\nMain.java:30: error: ';' expected\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                          ^\nMain.java:30: error: ';' expected\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                     ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                             ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                                  ^\nMain.java:30: error: '{' expected\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                                               ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                                                                                                                      ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                                                                                                                           ^\nMain.java:30: error: '{' expected\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                                                                                                                                      ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                                                                                                                                               ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                                                                                                                                                      ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                                                                                                                                                            ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                                                                                                                                                                   ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                                                                                                                                                                                                 ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                                                                                                                                                                                                      ^\nMain.java:30: error: '{' expected\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                                                                                                                                                                                                                ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                                                                                                                                                                                                                                                                             ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                                                                                                                                                                                                                                                                                  ^\nMain.java:30: error: <identifier> expected\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                                                                                                                                                                                                                                                                                         ^\nMain.java:30: error: '{' expected\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                                                                                                                                                                                                                                                                                                                               ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                                                                                                                                                                                                                                                                                                                                    ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue on line [10] seems to be related to the `Pair` class which is being used but not defined in the provided code. Assuming that the `Pair` class has methods `getX()` and `getY()`, we need to ensure that the `Pair` class is correctly implemented. However, if you do not have a custom `Pair` class, we can use a simple class definition for `Pair`.\n                                                                                                                                                                                                                                                                                                                                                                         ^\nMain.java:32: error: illegal character: '`'\nHere is the complete corrected method with an assumed implementation of the `Pair` class:\n                                                                            ^\nMain.java:32: error: illegal character: '`'\nHere is the complete corrected method with an assumed implementation of the `Pair` class:\n                                                                                 ^\nMain.java:32: error: <identifier> expected\nHere is the complete corrected method with an assumed implementation of the `Pair` class:\n                                                                                        ^\nMain.java:34: error: illegal character: '`'\n```java\n^\nMain.java:34: error: illegal character: '`'\n```java\n ^\nMain.java:34: error: illegal character: '`'\n```java\n  ^\nMain.java:36: error: illegal start of type\nimport java.util.List;\n^\nMain.java:36: error: <identifier> expected\nimport java.util.List;\n                     ^\nMain.java:37: error: illegal start of type\nimport java.util.Scanner;\n^\nMain.java:37: error: <identifier> expected\nimport java.util.Scanner;\n                        ^\nMain.java:89: error: illegal character: '`'\n```\n^\nMain.java:89: error: illegal character: '`'\n```\n ^\nMain.java:89: error: illegal character: '`'\n```\n  ^\nMain.java:91: error: illegal start of type\nIn this code:\n   ^\nMain.java:91: error: ';' expected\nIn this code:\n       ^\nMain.java:91: error: <identifier> expected\nIn this code:\n            ^\nMain.java:92: error: illegal character: '`'\n- A `Pair` class is defined with `getX()` and `getY()` methods.\n    ^\nMain.java:92: error: illegal character: '`'\n- A `Pair` class is defined with `getX()` and `getY()` methods.\n         ^\nMain.java:92: error: '{' expected\n- A `Pair` class is defined with `getX()` and `getY()` methods.\n                   ^\nMain.java:92: error: illegal character: '`'\n- A `Pair` class is defined with `getX()` and `getY()` methods.\n                                 ^\nMain.java:92: error: illegal character: '`'\n- A `Pair` class is defined with `getX()` and `getY()` methods.\n                                        ^\nMain.java:92: error: illegal character: '`'\n- A `Pair` class is defined with `getX()` and `getY()` methods.\n                                              ^\nMain.java:92: error: illegal character: '`'\n- A `Pair` class is defined with `getX()` and `getY()` methods.\n                                                     ^\nMain.java:93: error: illegal character: '`'\n- The `Pair` class is instantiated and added to the `answer` list.\n      ^\nMain.java:93: error: illegal character: '`'\n- The `Pair` class is instantiated and added to the `answer` list.\n           ^\nMain.java:93: error: '{' expected\n- The `Pair` class is instantiated and added to the `answer` list.\n                     ^\nMain.java:93: error: illegal character: '`'\n- The `Pair` class is instantiated and added to the `answer` list.\n                                                    ^\nMain.java:93: error: illegal character: '`'\n- The `Pair` class is instantiated and added to the `answer` list.\n                                                           ^\nMain.java:94: error: reached end of file while parsing\n- The rest of the logic remains unchanged, ensuring the pairs are correctly calculated and printed.}\n                                                                                                    ^\n53 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": 0,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_test_11",
                            "returncode": 0,
                            "stdout": "55\n893124445952679748 893124445952679752\n893124445952679752 893124445952679760\n893124445952679760 893124445952679776\n893124445952679776 893124445952679808\n893124445952679808 893124445952679936\n893124445952679936 893124445952688128\n893124445952688128 893124445952704512\n893124445952704512 893124445952737280\n893124445952737280 893124445952802816\n893124445952802816 893124445953064960\n893124445953064960 893124445957259264\n893124445957259264 893124445965647872\n893124445965647872 893124445999202304\n893124445999202304 893124446536073216\n893124446536073216 893124447609815040\n893124447609815040 893124464789684224\n893124464789684224 893124499149422592\n893124499149422592 893128897195933696\n893128897195933696 893137693288955904\n893137693288955904 893155285475000320\n893155285475000320 893190469847089152\n893190469847089152 893260838591266816\n893260838591266816 893401576079622144\n893401576079622144 893964526033043456\n893964526033043456 896216325846728704\n896216325846728704 900719925474099200\n900719925474099200 936748722493063168\n936748722493063168 1008806316530991104\n1008806316530991104 1026820715040473088\n1026820715040473088 1035827914295214080\n1035827914295214080 1038079714108899328\n1038079714108899328 1039205614015741952\n1039205614015741952 1039768563969163264\n1039768563969163264 1039803748341252096\n1039803748341252096 1039821340527296512\n1039821340527296512 1039830136620318720\n1039830136620318720 1039834534666829824\n1039834534666829824 1039836733690085376\n1039836733690085376 1039837833201713152\n1039837833201713152 1039838382957527040\n1039838382957527040 1039838417317265408\n1039838417317265408 1039838425907200000\n1039838425907200000 1039838426980941824\n1039838426980941824 1039838427517812736\n1039838427517812736 1039838427534589952\n1039838427534589952 1039838427542978560\n1039838427542978560 1039838427545075712\n1039838427545075712 1039838427545092096\n1039838427545092096 1039838427545096192\n1039838427545096192 1039838427545097216\n1039838427545097216 1039838427545097728\n1039838427545097728 1039838427545097984\n1039838427545097984 1039838427545098112\n1039838427545098112 1039838427545098128\n1039838427545098128 1039838427545098129\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": 0,
                            "stdout": "1\n0 1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": 0,
                            "stdout": "98\n505529333062828545 505529333062828546\n505529333062828546 505529333062828548\n505529333062828548 505529333062828552\n505529333062828552 505529333062828560\n505529333062828560 505529333062828576\n505529333062828576 505529333062828608\n505529333062828608 505529333062828672\n505529333062828672 505529333062828800\n505529333062828800 505529333062829056\n505529333062829056 505529333062830080\n505529333062830080 505529333062832128\n505529333062832128 505529333062836224\n505529333062836224 505529333062844416\n505529333062844416 505529333062860800\n505529333062860800 505529333062893568\n505529333062893568 505529333062959104\n505529333062959104 505529333063090176\n505529333063090176 505529333063352320\n505529333063352320 505529333063876608\n505529333063876608 505529333064925184\n505529333064925184 505529333067022336\n505529333067022336 505529333083799552\n505529333083799552 505529333117353984\n505529333117353984 505529333184462848\n505529333184462848 505529333318680576\n505529333318680576 505529333587116032\n505529333587116032 505529334123986944\n505529334123986944 505529335197728768\n505529335197728768 505529337345212416\n505529337345212416 505529341640179712\n505529341640179712 505529350230114304\n505529350230114304 505529367409983488\n505529367409983488 505529401769721856\n505529401769721856 505529470489198592\n505529470489198592 505529607928152064\n505529607928152064 505530157683965952\n505530157683965952 505531257195593728\n505531257195593728 505533456218849280\n505533456218849280 505537854265360384\n505537854265360384 505546650358382592\n505546650358382592 505564242544427008\n505564242544427008 505599426916515840\n505599426916515840 505669795660693504\n505669795660693504 505810533149048832\n505810533149048832 506092008125759488\n506092008125759488 506654958079180800\n506654958079180800 508906757892866048\n508906757892866048 513410357520236544\n513410357520236544 522417556774977536\n522417556774977536 540431955284459520\n540431955284459520 558446353793941504\n558446353793941504 567453553048682496\n567453553048682496 571957152676052992\n571957152676052992 574208952489738240\n574208952489738240 575334852396580864\n575334852396580864 575616327373291520\n575616327373291520 575757064861646848\n575757064861646848 575827433605824512\n575827433605824512 575862617977913344\n575862617977913344 575880210163957760\n575880210163957760 575889006256979968\n575889006256979968 575893404303491072\n575893404303491072 575895603326746624\n575895603326746624 575896702838374400\n575896702838374400 575897252594188288\n575897252594188288 575897527472095232\n575897527472095232 575897664911048704\n575897664911048704 575897733630525440\n575897733630525440 575897767990263808\n575897767990263808 575897785170132992\n575897785170132992 575897793760067584\n575897793760067584 575897795907551232\n575897795907551232 575897796981293056\n575897796981293056 575897797518163968\n575897797518163968 575897797786599424\n575897797786599424 575897797920817152\n575897797920817152 575897797987926016\n575897797987926016 575897798021480448\n575897798021480448 575897798038257664\n575897798038257664 575897798046646272\n575897798046646272 575897798050840576\n575897798050840576 575897798052937728\n575897798052937728 575897798053986304\n575897798053986304 575897798054510592\n575897798054510592 575897798054772736\n575897798054772736 575897798054903808\n575897798054903808 575897798054936576\n575897798054936576 575897798054952960\n575897798054952960 575897798054953984\n575897798054953984 575897798054954496\n575897798054954496 575897798054954752\n575897798054954752 575897798054954880\n575897798054954880 575897798054954944\n575897798054954944 575897798054954976\n575897798054954976 575897798054954992\n575897798054954992 575897798054954996\n575897798054954996 575897798054954998\n575897798054954998 575897798054954999\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": 0,
                            "stdout": "61\n181262195287766621 181262195287766622\n181262195287766622 181262195287766624\n181262195287766624 181262195287766656\n181262195287766656 181262195287766784\n181262195287766784 181262195287767040\n181262195287767040 181262195287769088\n181262195287769088 181262195287785472\n181262195287785472 181262195287916544\n181262195287916544 181262195288440832\n181262195288440832 181262195290537984\n181262195290537984 181262195298926592\n181262195298926592 181262195332481024\n181262195332481024 181262195399589888\n181262195399589888 181262195936460800\n181262195936460800 181262197010202624\n181262197010202624 181262205600137216\n181262205600137216 181262222780006400\n181262222780006400 181262257139744768\n181262257139744768 181262325859221504\n181262325859221504 181262463298174976\n181262463298174976 181262738176081920\n181262738176081920 181263287931895808\n181263287931895808 181265486955151360\n181265486955151360 181269885001662464\n181269885001662464 182395784908505088\n182395784908505088 184647584722190336\n184647584722190336 189151184349560832\n189151184349560832 198158383604301824\n198158383604301824 216172782113783808\n216172782113783808 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 756604737398243328\n756604737398243328 774619135907725312\n774619135907725312 776870935721410560\n776870935721410560 777996835628253184\n777996835628253184 778559785581674496\n778559785581674496 778841260558385152\n778841260558385152 778981998046740480\n778981998046740480 778990794139762688\n778990794139762688 778991893651390464\n778991893651390464 778992443407204352\n778992443407204352 778992718285111296\n778992718285111296 778992726875045888\n778992726875045888 778992729022529536\n778992729022529536 778992730096271360\n778992730096271360 778992730364706816\n778992730364706816 778992730381484032\n778992730381484032 778992730385678336\n778992730385678336 778992730387775488\n778992730387775488 778992730388037632\n778992730388037632 778992730388168704\n778992730388168704 778992730388234240\n778992730388234240 778992730388267008\n778992730388267008 778992730388283392\n778992730388283392 778992730388287488\n778992730388287488 778992730388288512\n778992730388288512 778992730388288768\n778992730388288768 778992730388288800\n778992730388288800 778992730388288816\n778992730388288816 778992730388288824\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": 0,
                            "stdout": "2\n288230376151711744 576460752303423488\n576460752303423488 864691128455135232\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": 0,
                            "stdout": "59\n366943872216607560 366943872216607568\n366943872216607568 366943872216607584\n366943872216607584 366943872216607616\n366943872216607616 366943872216607744\n366943872216607744 366943872216608768\n366943872216608768 366943872216612864\n366943872216612864 366943872216629248\n366943872216629248 366943872216662016\n366943872216662016 366943872216727552\n366943872216727552 366943872216989696\n366943872216989696 366943872284098560\n366943872284098560 366943872418316288\n366943872418316288 366943881008250880\n366943881008250880 366943898188120064\n366943898188120064 366943932547858432\n366943932547858432 366944001267335168\n366944001267335168 366944138706288640\n366944138706288640 366944413584195584\n366944413584195584 366946612607451136\n366946612607451136 366955408700473344\n366955408700473344 366973000886517760\n366973000886517760 367043369630695424\n367043369630695424 369295169444380672\n369295169444380672 378302368699121664\n378302368699121664 396316767208603648\n396316767208603648 432345564227567616\n432345564227567616 576460752303423488\n576460752303423488 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1080863910568919040\n1080863910568919040 1081004648057274368\n1081004648057274368 1081039832429363200\n1081039832429363200 1081057424615407616\n1081057424615407616 1081066220708429824\n1081066220708429824 1081068419731685376\n1081068419731685376 1081069519243313152\n1081069519243313152 1081070068999127040\n1081070068999127040 1081070343877033984\n1081070343877033984 1081070412596510720\n1081070412596510720 1081070446956249088\n1081070446956249088 1081070455546183680\n1081070455546183680 1081070457693667328\n1081070457693667328 1081070458767409152\n1081070458767409152 1081070459304280064\n1081070459304280064 1081070459371388928\n1081070459371388928 1081070459388166144\n1081070459388166144 1081070459390263296\n1081070459390263296 1081070459391311872\n1081070459391311872 1081070459391574016\n1081070459391574016 1081070459391705088\n1081070459391705088 1081070459391707136\n1081070459391707136 1081070459391708160\n1081070459391708160 1081070459391708416\n1081070459391708416 1081070459391708544\n1081070459391708544 1081070459391708608\n1081070459391708608 1081070459391708640\n1081070459391708640 1081070459391708656\n1081070459391708656 1081070459391708660\n1081070459391708660 1081070459391708661\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": 0,
                            "stdout": "52\n813135255471707232 813135255471707264\n813135255471707264 813135255471707392\n813135255471707392 813135255471707648\n813135255471707648 813135255471708160\n813135255471708160 813135255471710208\n813135255471710208 813135255471718400\n813135255471718400 813135255471783936\n813135255471783936 813135255471915008\n813135255471915008 813135255476109312\n813135255476109312 813135255492886528\n813135255492886528 813135255526440960\n813135255526440960 813135255593549824\n813135255593549824 813135255861985280\n813135255861985280 813135260156952576\n813135260156952576 813135268746887168\n813135268746887168 813135303106625536\n813135303106625536 813135577984532480\n813135577984532480 813136127740346368\n813136127740346368 813137227251974144\n813137227251974144 813146023344996352\n813146023344996352 813181207717085184\n813181207717085184 813462682693795840\n813462682693795840 814025632647217152\n814025632647217152 815151532554059776\n815151532554059776 819655132181430272\n819655132181430272 828662331436171264\n828662331436171264 846676729945653248\n846676729945653248 847802629852495872\n847802629852495872 848084104829206528\n848084104829206528 848154473573384192\n848154473573384192 848172065759428608\n848172065759428608 848174264782684160\n848174264782684160 848174539660591104\n848174539660591104 848174677099544576\n848174677099544576 848174745819021312\n848174745819021312 848174780178759680\n848174780178759680 848174788768694272\n848174788768694272 848174793063661568\n848174793063661568 848174794137403392\n848174794137403392 848174794405838848\n848174794405838848 848174794472947712\n848174794472947712 848174794506502144\n848174794506502144 848174794508599296\n848174794508599296 848174794509647872\n848174794509647872 848174794509713408\n848174794509713408 848174794509729792\n848174794509729792 848174794509733888\n848174794509733888 848174794509734912\n848174794509734912 848174794509735424\n848174794509735424 848174794509735680\n848174794509735680 848174794509735808\n848174794509735808 848174794509735812\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": 0,
                            "stdout": "110\n504403158265495553 504403158265495554\n504403158265495554 504403158265495556\n504403158265495556 504403158265495560\n504403158265495560 504403158265495568\n504403158265495568 504403158265495584\n504403158265495584 504403158265495616\n504403158265495616 504403158265495680\n504403158265495680 504403158265495808\n504403158265495808 504403158265496064\n504403158265496064 504403158265496576\n504403158265496576 504403158265497600\n504403158265497600 504403158265499648\n504403158265499648 504403158265503744\n504403158265503744 504403158265511936\n504403158265511936 504403158265528320\n504403158265528320 504403158265561088\n504403158265561088 504403158265626624\n504403158265626624 504403158265757696\n504403158265757696 504403158266019840\n504403158266019840 504403158266544128\n504403158266544128 504403158267592704\n504403158267592704 504403158269689856\n504403158269689856 504403158273884160\n504403158273884160 504403158282272768\n504403158282272768 504403158299049984\n504403158299049984 504403158332604416\n504403158332604416 504403158399713280\n504403158399713280 504403158533931008\n504403158533931008 504403158802366464\n504403158802366464 504403159339237376\n504403159339237376 504403160412979200\n504403160412979200 504403162560462848\n504403162560462848 504403166855430144\n504403166855430144 504403175445364736\n504403175445364736 504403192625233920\n504403192625233920 504403226984972288\n504403226984972288 504403295704449024\n504403295704449024 504403433143402496\n504403433143402496 504403708021309440\n504403708021309440 504404257777123328\n504404257777123328 504405357288751104\n504405357288751104 504407556312006656\n504407556312006656 504411954358517760\n504411954358517760 504420750451539968\n504420750451539968 504438342637584384\n504438342637584384 504473527009673216\n504473527009673216 504543895753850880\n504543895753850880 504684633242206208\n504684633242206208 504966108218916864\n504966108218916864 505529058172338176\n505529058172338176 506654958079180800\n506654958079180800 508906757892866048\n508906757892866048 513410357520236544\n513410357520236544 522417556774977536\n522417556774977536 540431955284459520\n540431955284459520 558446353793941504\n558446353793941504 567453553048682496\n567453553048682496 571957152676052992\n571957152676052992 574208952489738240\n574208952489738240 575334852396580864\n575334852396580864 575897802350002176\n575897802350002176 576179277326712832\n576179277326712832 576320014815068160\n576320014815068160 576390383559245824\n576390383559245824 576425567931334656\n576425567931334656 576443160117379072\n576443160117379072 576451956210401280\n576451956210401280 576456354256912384\n576456354256912384 576458553280167936\n576458553280167936 576459652791795712\n576459652791795712 576460202547609600\n576460202547609600 576460477425516544\n576460477425516544 576460614864470016\n576460614864470016 576460683583946752\n576460683583946752 576460717943685120\n576460717943685120 576460735123554304\n576460735123554304 576460743713488896\n576460743713488896 576460748008456192\n576460748008456192 576460750155939840\n576460750155939840 576460751229681664\n576460751229681664 576460751766552576\n576460751766552576 576460752034988032\n576460752034988032 576460752169205760\n576460752169205760 576460752236314624\n576460752236314624 576460752269869056\n576460752269869056 576460752286646272\n576460752286646272 576460752295034880\n576460752295034880 576460752299229184\n576460752299229184 576460752301326336\n576460752301326336 576460752302374912\n576460752302374912 576460752302899200\n576460752302899200 576460752303161344\n576460752303161344 576460752303292416\n576460752303292416 576460752303357952\n576460752303357952 576460752303390720\n576460752303390720 576460752303407104\n576460752303407104 576460752303415296\n576460752303415296 576460752303419392\n576460752303419392 576460752303421440\n576460752303421440 576460752303422464\n576460752303422464 576460752303422976\n576460752303422976 576460752303423232\n576460752303423232 576460752303423360\n576460752303423360 576460752303423424\n576460752303423424 576460752303423456\n576460752303423456 576460752303423472\n576460752303423472 576460752303423480\n576460752303423480 576460752303423484\n576460752303423484 576460752303423486\n576460752303423486 576460752303423487\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": 0,
                            "stdout": "25\n432344644764301224 432344644764301232\n432344644764301232 432344644764301248\n432344644764301248 432344644764301312\n432344644764301312 432344644764303360\n432344644764303360 432344644764827648\n432344644764827648 432344644769021952\n432344644769021952 432344644836130816\n432344644836130816 432344645104566272\n432344645104566272 432344653694500864\n432344653694500864 432344670874370048\n432344670874370048 432344739593846784\n432344739593846784 432345014471753728\n432345014471753728 432345564227567616\n432345564227567616 504403158265495552\n504403158265495552 540431955284459520\n540431955284459520 558446353793941504\n558446353793941504 558448552817197056\n558448552817197056 558448827695104000\n558448827695104000 558448896414580736\n558448896414580736 558448896683016192\n558448896683016192 558448896716570624\n558448896716570624 558448896716832768\n558448896716832768 558448896716849152\n558448896716849152 558448896716853248\n558448896716853248 558448896716855296\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": 0,
                            "stdout": "5\n3 4\n4 8\n8 16\n16 18\n18 19\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": 0,
                            "stdout": "60\n1 2\n2 4\n4 8\n8 16\n16 32\n32 64\n64 128\n128 256\n256 512\n512 1024\n1024 2048\n2048 4096\n4096 8192\n8192 16384\n16384 32768\n32768 65536\n65536 131072\n131072 262144\n262144 524288\n524288 1048576\n1048576 2097152\n2097152 4194304\n4194304 8388608\n8388608 16777216\n16777216 33554432\n33554432 67108864\n67108864 134217728\n134217728 268435456\n268435456 536870912\n536870912 1073741824\n1073741824 2147483648\n2147483648 4294967296\n4294967296 8589934592\n8589934592 17179869184\n17179869184 34359738368\n34359738368 68719476736\n68719476736 137438953472\n137438953472 274877906944\n274877906944 549755813888\n549755813888 1099511627776\n1099511627776 2199023255552\n2199023255552 4398046511104\n4398046511104 8796093022208\n8796093022208 17592186044416\n17592186044416 35184372088832\n35184372088832 70368744177664\n70368744177664 140737488355328\n140737488355328 281474976710656\n281474976710656 562949953421312\n562949953421312 1125899906842624\n1125899906842624 2251799813685248\n2251799813685248 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 1152921504606846976\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": 0,
                            "stdout": "2\n1 2\n2 3\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": 0,
                            "stdout": "118\n1 2\n2 4\n4 8\n8 16\n16 32\n32 64\n64 128\n128 256\n256 512\n512 1024\n1024 2048\n2048 4096\n4096 8192\n8192 16384\n16384 32768\n32768 65536\n65536 131072\n131072 262144\n262144 524288\n524288 1048576\n1048576 2097152\n2097152 4194304\n4194304 8388608\n8388608 16777216\n16777216 33554432\n33554432 67108864\n67108864 134217728\n134217728 268435456\n268435456 536870912\n536870912 1073741824\n1073741824 2147483648\n2147483648 4294967296\n4294967296 8589934592\n8589934592 17179869184\n17179869184 34359738368\n34359738368 68719476736\n68719476736 137438953472\n137438953472 274877906944\n274877906944 549755813888\n549755813888 1099511627776\n1099511627776 2199023255552\n2199023255552 4398046511104\n4398046511104 8796093022208\n8796093022208 17592186044416\n17592186044416 35184372088832\n35184372088832 70368744177664\n70368744177664 140737488355328\n140737488355328 281474976710656\n281474976710656 562949953421312\n562949953421312 1125899906842624\n1125899906842624 2251799813685248\n2251799813685248 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1080863910568919040\n1080863910568919040 1116892707587883008\n1116892707587883008 1134907106097364992\n1134907106097364992 1143914305352105984\n1143914305352105984 1148417904979476480\n1148417904979476480 1150669704793161728\n1150669704793161728 1151795604700004352\n1151795604700004352 1152358554653425664\n1152358554653425664 1152640029630136320\n1152640029630136320 1152780767118491648\n1152780767118491648 1152851135862669312\n1152851135862669312 1152886320234758144\n1152886320234758144 1152903912420802560\n1152903912420802560 1152912708513824768\n1152912708513824768 1152917106560335872\n1152917106560335872 1152919305583591424\n1152919305583591424 1152920405095219200\n1152920405095219200 1152920954851033088\n1152920954851033088 1152921229728940032\n1152921229728940032 1152921367167893504\n1152921367167893504 1152921435887370240\n1152921435887370240 1152921470247108608\n1152921470247108608 1152921487426977792\n1152921487426977792 1152921496016912384\n1152921496016912384 1152921500311879680\n1152921500311879680 1152921502459363328\n1152921502459363328 1152921503533105152\n1152921503533105152 1152921504069976064\n1152921504069976064 1152921504338411520\n1152921504338411520 1152921504472629248\n1152921504472629248 1152921504539738112\n1152921504539738112 1152921504573292544\n1152921504573292544 1152921504590069760\n1152921504590069760 1152921504598458368\n1152921504598458368 1152921504602652672\n1152921504602652672 1152921504604749824\n1152921504604749824 1152921504605798400\n1152921504605798400 1152921504606322688\n1152921504606322688 1152921504606584832\n1152921504606584832 1152921504606715904\n1152921504606715904 1152921504606781440\n1152921504606781440 1152921504606814208\n1152921504606814208 1152921504606830592\n1152921504606830592 1152921504606838784\n1152921504606838784 1152921504606842880\n1152921504606842880 1152921504606844928\n1152921504606844928 1152921504606845952\n1152921504606845952 1152921504606846464\n1152921504606846464 1152921504606846720\n1152921504606846720 1152921504606846848\n1152921504606846848 1152921504606846912\n1152921504606846912 1152921504606846944\n1152921504606846944 1152921504606846960\n1152921504606846960 1152921504606846968\n1152921504606846968 1152921504606846972\n1152921504606846972 1152921504606846974\n1152921504606846974 1152921504606846975\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": 0,
                            "stdout": "1\n1 2\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": 0,
                            "stdout": "1\n576460752303423488 1152921504606846976\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": 0,
                            "stdout": "60\n0 576460752303423488\n576460752303423488 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1080863910568919040\n1080863910568919040 1116892707587883008\n1116892707587883008 1134907106097364992\n1134907106097364992 1143914305352105984\n1143914305352105984 1148417904979476480\n1148417904979476480 1150669704793161728\n1150669704793161728 1151795604700004352\n1151795604700004352 1152358554653425664\n1152358554653425664 1152640029630136320\n1152640029630136320 1152780767118491648\n1152780767118491648 1152851135862669312\n1152851135862669312 1152886320234758144\n1152886320234758144 1152903912420802560\n1152903912420802560 1152912708513824768\n1152912708513824768 1152917106560335872\n1152917106560335872 1152919305583591424\n1152919305583591424 1152920405095219200\n1152920405095219200 1152920954851033088\n1152920954851033088 1152921229728940032\n1152921229728940032 1152921367167893504\n1152921367167893504 1152921435887370240\n1152921435887370240 1152921470247108608\n1152921470247108608 1152921487426977792\n1152921487426977792 1152921496016912384\n1152921496016912384 1152921500311879680\n1152921500311879680 1152921502459363328\n1152921502459363328 1152921503533105152\n1152921503533105152 1152921504069976064\n1152921504069976064 1152921504338411520\n1152921504338411520 1152921504472629248\n1152921504472629248 1152921504539738112\n1152921504539738112 1152921504573292544\n1152921504573292544 1152921504590069760\n1152921504590069760 1152921504598458368\n1152921504598458368 1152921504602652672\n1152921504602652672 1152921504604749824\n1152921504604749824 1152921504605798400\n1152921504605798400 1152921504606322688\n1152921504606322688 1152921504606584832\n1152921504606584832 1152921504606715904\n1152921504606715904 1152921504606781440\n1152921504606781440 1152921504606814208\n1152921504606814208 1152921504606830592\n1152921504606830592 1152921504606838784\n1152921504606838784 1152921504606842880\n1152921504606842880 1152921504606844928\n1152921504606844928 1152921504606845952\n1152921504606845952 1152921504606846464\n1152921504606846464 1152921504606846720\n1152921504606846720 1152921504606846848\n1152921504606846848 1152921504606846912\n1152921504606846912 1152921504606846944\n1152921504606846944 1152921504606846960\n1152921504606846960 1152921504606846968\n1152921504606846968 1152921504606846972\n1152921504606846972 1152921504606846974\n1152921504606846974 1152921504606846975\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": 0,
                            "stdout": "87\n432486315808860234 432486315808860236\n432486315808860236 432486315808860240\n432486315808860240 432486315808860256\n432486315808860256 432486315808860288\n432486315808860288 432486315808860416\n432486315808860416 432486315808860672\n432486315808860672 432486315808861184\n432486315808861184 432486315808862208\n432486315808862208 432486315808866304\n432486315808866304 432486315808882688\n432486315808882688 432486315808915456\n432486315808915456 432486315809046528\n432486315809046528 432486315809308672\n432486315809308672 432486315809832960\n432486315809832960 432486315810881536\n432486315810881536 432486315812978688\n432486315812978688 432486315817172992\n432486315817172992 432486315825561600\n432486315825561600 432486315842338816\n432486315842338816 432486315875893248\n432486315875893248 432486315943002112\n432486315943002112 432486316211437568\n432486316211437568 432486316748308480\n432486316748308480 432486318895792128\n432486318895792128 432486336075661312\n432486336075661312 432486370435399680\n432486370435399680 432486439154876416\n432486439154876416 432486576593829888\n432486576593829888 432486851471736832\n432486851471736832 432487401227550720\n432487401227550720 432488500739178496\n432488500739178496 432490699762434048\n432490699762434048 432495097808945152\n432495097808945152 432503893901967360\n432503893901967360 432521486088011776\n432521486088011776 432556670460100608\n432556670460100608 432627039204278272\n432627039204278272 432908514180988928\n432908514180988928 433471464134410240\n433471464134410240 434597364041252864\n434597364041252864 436849163854938112\n436849163854938112 441352763482308608\n441352763482308608 450359962737049600\n450359962737049600 468374361246531584\n468374361246531584 504403158265495552\n504403158265495552 522417556774977536\n522417556774977536 526921156402348032\n526921156402348032 529172956216033280\n529172956216033280 530298856122875904\n530298856122875904 530861806076297216\n530861806076297216 531143281053007872\n531143281053007872 531284018541363200\n531284018541363200 531354387285540864\n531354387285540864 531389571657629696\n531389571657629696 531407163843674112\n531407163843674112 531415959936696320\n531415959936696320 531420357983207424\n531420357983207424 531422557006462976\n531422557006462976 531423106762276864\n531423106762276864 531423381640183808\n531423381640183808 531423450359660544\n531423450359660544 531423467539529728\n531423467539529728 531423469687013376\n531423469687013376 531423470760755200\n531423470760755200 531423471297626112\n531423471297626112 531423471431843840\n531423471431843840 531423471498952704\n531423471498952704 531423471532507136\n531423471532507136 531423471549284352\n531423471549284352 531423471557672960\n531423471557672960 531423471561867264\n531423471561867264 531423471563964416\n531423471563964416 531423471564226560\n531423471564226560 531423471564357632\n531423471564357632 531423471564390400\n531423471564390400 531423471564398592\n531423471564398592 531423471564400640\n531423471564400640 531423471564401664\n531423471564401664 531423471564402176\n531423471564402176 531423471564402432\n531423471564402432 531423471564402560\n531423471564402560 531423471564402624\n531423471564402624 531423471564402656\n531423471564402656 531423471564402664\n531423471564402664 531423471564402668\n531423471564402668 531423471564402670\n531423471564402670 531423471564402671\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": 0,
                            "stdout": "63\n11801128058619141 11801128058619142\n11801128058619142 11801128058619144\n11801128058619144 11801128058619152\n11801128058619152 11801128058619168\n11801128058619168 11801128058619200\n11801128058619200 11801128058619264\n11801128058619264 11801128058619392\n11801128058619392 11801128058619904\n11801128058619904 11801128058621952\n11801128058621952 11801128058626048\n11801128058626048 11801128058634240\n11801128058634240 11801128058650624\n11801128058650624 11801128058683392\n11801128058683392 11801128058748928\n11801128058748928 11801128059011072\n11801128059011072 11801128059535360\n11801128059535360 11801128060583936\n11801128060583936 11801128094138368\n11801128094138368 11801129167880192\n11801129167880192 11801131315363840\n11801131315363840 11801135610331136\n11801135610331136 11801144200265728\n11801144200265728 11801161380134912\n11801161380134912 11801195739873280\n11801195739873280 11801333178826752\n11801333178826752 11801608056733696\n11801608056733696 11802157812547584\n11802157812547584 11804356835803136\n11804356835803136 11821949021847552\n11821949021847552 12384898975268864\n12384898975268864 13510798882111488\n13510798882111488 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 432345564227567616\n432345564227567616 468374361246531584\n468374361246531584 477381560501272576\n477381560501272576 481885160128643072\n481885160128643072 484136959942328320\n484136959942328320 484418434919038976\n484418434919038976 484488803663216640\n484488803663216640 484491002686472192\n484491002686472192 484492102198099968\n484492102198099968 484492651953913856\n484492651953913856 484492789392867328\n484492789392867328 484492858112344064\n484492858112344064 484492892472082432\n484492892472082432 484492909651951616\n484492909651951616 484492910725693440\n484492910725693440 484492910859911168\n484492910859911168 484492910927020032\n484492910927020032 484492910960574464\n484492910960574464 484492910964768768\n484492910964768768 484492910965817344\n484492910965817344 484492910965818368\n484492910965818368 484492910965818624\n484492910965818624 484492910965818688\n484492910965818688 484492910965818720\n484492910965818720 484492910965818728\n484492910965818728 484492910965818730\n484492910965818730 484492910965818731\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": 0,
                            "stdout": "85\n282183781417523 282183781417524\n282183781417524 282183781417528\n282183781417528 282183781417536\n282183781417536 282183781417600\n282183781417600 282183781417728\n282183781417728 282183781417984\n282183781417984 282183781419008\n282183781419008 282183781421056\n282183781421056 282183781425152\n282183781425152 282183781433344\n282183781433344 282183781449728\n282183781449728 282183781580800\n282183781580800 282183782629376\n282183782629376 282183784726528\n282183784726528 282183788920832\n282183788920832 282183797309440\n282183797309440 282183814086656\n282183814086656 282183847641088\n282183847641088 282183914749952\n282183914749952 282184183185408\n282184183185408 282184720056320\n282184720056320 282185793798144\n282185793798144 282187941281792\n282187941281792 282196531216384\n282196531216384 282230890954752\n282230890954752 282299610431488\n282299610431488 282574488338432\n282574488338432 283673999966208\n283673999966208 285873023221760\n285873023221760 290271069732864\n290271069732864 299067162755072\n299067162755072 316659348799488\n316659348799488 351843720888320\n351843720888320 422212465065984\n422212465065984 562949953421312\n562949953421312 1125899906842624\n1125899906842624 2251799813685248\n2251799813685248 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 216172782113783808\n216172782113783808 252201579132747776\n252201579132747776 270215977642229760\n270215977642229760 279223176896970752\n279223176896970752 283726776524341248\n283726776524341248 285978576338026496\n285978576338026496 286541526291447808\n286541526291447808 286611895035625472\n286611895035625472 286647079407714304\n286647079407714304 286664671593758720\n286664671593758720 286673467686780928\n286673467686780928 286677865733292032\n286677865733292032 286680064756547584\n286680064756547584 286681164268175360\n286681164268175360 286681714023989248\n286681714023989248 286681988901896192\n286681988901896192 286682126340849664\n286682126340849664 286682195060326400\n286682195060326400 286682229420064768\n286682229420064768 286682246599933952\n286682246599933952 286682250894901248\n286682250894901248 286682251968643072\n286682251968643072 286682252505513984\n286682252505513984 286682252773949440\n286682252773949440 286682252908167168\n286682252908167168 286682252975276032\n286682252975276032 286682253008830464\n286682253008830464 286682253017219072\n286682253017219072 286682253019316224\n286682253019316224 286682253020364800\n286682253020364800 286682253020889088\n286682253020889088 286682253020954624\n286682253020954624 286682253020987392\n286682253020987392 286682253021003776\n286682253021003776 286682253021011968\n286682253021011968 286682253021016064\n286682253021016064 286682253021018112\n286682253021018112 286682253021019136\n286682253021019136 286682253021019648\n286682253021019648 286682253021019776\n286682253021019776 286682253021019780\n286682253021019780 286682253021019781\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": 0,
                            "stdout": "28\n144106357446602451 144106357446602452\n144106357446602452 144106357446602456\n144106357446602456 144106357446602464\n144106357446602464 144106357446602496\n144106357446602496 144106357446602752\n144106357446602752 144106357446606848\n144106357446606848 144106357446672384\n144106357446672384 144106357446934528\n144106357446934528 144106357455323136\n144106357455323136 144106357488877568\n144106357488877568 144106357623095296\n144106357623095296 144106391982833664\n144106391982833664 144115188075855872\n144115188075855872 216172782113783808\n216172782113783808 252201579132747776\n252201579132747776 261208778387488768\n261208778387488768 261771728340910080\n261771728340910080 261789320526954496\n261789320526954496 261791519550210048\n261791519550210048 261791588269686784\n261791588269686784 261791622629425152\n261791622629425152 261791639809294336\n261791639809294336 261791641956777984\n261791641956777984 261791642225213440\n261791642225213440 261791642225344512\n261791642225344512 261791642225410048\n261791642225410048 261791642225414144\n261791642225414144 261791642225414176\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": 0,
                            "stdout": "1\n0 1152921504606846976\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": 0,
                            "stdout": "41\n360198504640541332 360198504640541336\n360198504640541336 360198504640541344\n360198504640541344 360198504640541376\n360198504640541376 360198504640541440\n360198504640541440 360198504640541696\n360198504640541696 360198504640542720\n360198504640542720 360198504640544768\n360198504640544768 360198504640675840\n360198504640675840 360198504640937984\n360198504640937984 360198504645132288\n360198504645132288 360198504678686720\n360198504678686720 360198504947122176\n360198504947122176 360198506020864000\n360198506020864000 360198514610798592\n360198514610798592 360198531790667776\n360198531790667776 360198566150406144\n360198566150406144 360198634869882880\n360198634869882880 360198909747789824\n360198909747789824 360200009259417600\n360200009259417600 360217601445462016\n360217601445462016 360287970189639680\n360287970189639680 432345564227567616\n432345564227567616 504403158265495552\n504403158265495552 504966108218916864\n504966108218916864 505247583195627520\n505247583195627520 505256379288649728\n505256379288649728 505257478800277504\n505257478800277504 505258028556091392\n505258028556091392 505258032851058688\n505258032851058688 505258033387929600\n505258033387929600 505258033455038464\n505258033455038464 505258033488592896\n505258033488592896 505258033496981504\n505258033496981504 505258033499078656\n505258033499078656 505258033500127232\n505258033500127232 505258033500651520\n505258033500651520 505258033500667904\n505258033500667904 505258033500676096\n505258033500676096 505258033500676608\n505258033500676608 505258033500676864\n505258033500676864 505258033500676866\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": 0,
                            "stdout": "55\n170125114320639076 170125114320639080\n170125114320639080 170125114320639088\n170125114320639088 170125114320639104\n170125114320639104 170125114320639232\n170125114320639232 170125114320639488\n170125114320639488 170125114320640000\n170125114320640000 170125114320642048\n170125114320642048 170125114320650240\n170125114320650240 170125114320683008\n170125114320683008 170125114320748544\n170125114320748544 170125114320879616\n170125114320879616 170125114321403904\n170125114321403904 170125114329792512\n170125114329792512 170125114346569728\n170125114346569728 170125114883440640\n170125114883440640 170125132063309824\n170125132063309824 170125166423048192\n170125166423048192 170125235142524928\n170125235142524928 170134031235547136\n170134031235547136 170151623421591552\n170151623421591552 170292360909946880\n170292360909946880 170573835886657536\n170573835886657536 171136785840078848\n171136785840078848 180143985094819840\n180143985094819840 198158383604301824\n198158383604301824 202661983231672320\n202661983231672320 203787883138514944\n203787883138514944 204350833091936256\n204350833091936256 204632308068646912\n204632308068646912 204634507091902464\n204634507091902464 204635606603530240\n204635606603530240 204635881481437184\n204635881481437184 204636018920390656\n204636018920390656 204636027510325248\n204636027510325248 204636029657808896\n204636029657808896 204636030731550720\n204636030731550720 204636031268421632\n204636031268421632 204636031536857088\n204636031536857088 204636031671074816\n204636031671074816 204636031704629248\n204636031704629248 204636031721406464\n204636031721406464 204636031729795072\n204636031729795072 204636031731892224\n204636031731892224 204636031732940800\n204636031732940800 204636031733465088\n204636031733465088 204636031733727232\n204636031733727232 204636031733858304\n204636031733858304 204636031733923840\n204636031733923840 204636031733956608\n204636031733956608 204636031733972992\n204636031733972992 204636031733975040\n204636031733975040 204636031733976064\n204636031733976064 204636031733976576\n204636031733976576 204636031733976832\n204636031733976832 204636031733976848\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": 0,
                            "stdout": "54\n271518219607274605 271518219607274606\n271518219607274606 271518219607274608\n271518219607274608 271518219607274624\n271518219607274624 271518219607274752\n271518219607274752 271518219607275008\n271518219607275008 271518219607275520\n271518219607275520 271518219607277568\n271518219607277568 271518219607343104\n271518219607343104 271518219607474176\n271518219607474176 271518219611668480\n271518219611668480 271518219645222912\n271518219645222912 271518219779440640\n271518219779440640 271518220316311552\n271518220316311552 271518228906246144\n271518228906246144 271518246086115328\n271518246086115328 271518280445853696\n271518280445853696 271518349165330432\n271518349165330432 271518898921144320\n271518898921144320 271519998432772096\n271519998432772096 271522197456027648\n271522197456027648 271526595502538752\n271526595502538752 271535391595560960\n271535391595560960 271552983781605376\n271552983781605376 271623352525783040\n271623352525783040 271904827502493696\n271904827502493696 272467777455915008\n272467777455915008 274719577269600256\n274719577269600256 279223176896970752\n279223176896970752 288230376151711744\n288230376151711744 432345564227567616\n432345564227567616 468374361246531584\n468374361246531584 486388759756013568\n486388759756013568 490892359383384064\n490892359383384064 493144159197069312\n493144159197069312 493425634173779968\n493425634173779968 493496002917957632\n493496002917957632 493513595104002048\n493513595104002048 493515794127257600\n493515794127257600 493515931566211072\n493515931566211072 493515932639952896\n493515932639952896 493515933176823808\n493515933176823808 493515933311041536\n493515933311041536 493515933378150400\n493515933378150400 493515933394927616\n493515933394927616 493515933403316224\n493515933403316224 493515933404364800\n493515933404364800 493515933404430336\n493515933404430336 493515933404463104\n493515933404463104 493515933404467200\n493515933404467200 493515933404467264\n493515933404467264 493515933404467280\n493515933404467280 493515933404467288\n493515933404467288 493515933404467292\n493515933404467292 493515933404467293\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": 0,
                            "stdout": "48\n123989531008007376 123989531008007392\n123989531008007392 123989531008007424\n123989531008007424 123989531008007680\n123989531008007680 123989531008008192\n123989531008008192 123989531008040960\n123989531008040960 123989531008172032\n123989531008172032 123989531008434176\n123989531008434176 123989531010531328\n123989531010531328 123989531014725632\n123989531014725632 123989531283161088\n123989531283161088 123989531820032000\n123989531820032000 123989533967515648\n123989533967515648 123989538262482944\n123989538262482944 123989555442352128\n123989555442352128 123989589802090496\n123989589802090496 123989727241043968\n123989727241043968 124130464729399296\n124130464729399296 124411939706109952\n124411939706109952 124974889659531264\n124974889659531264 126100789566373888\n126100789566373888 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 792633534417207296\n792633534417207296 794885334230892544\n794885334230892544 795448284184313856\n795448284184313856 795518652928491520\n795518652928491520 795527449021513728\n795527449021513728 795527723899420672\n795527723899420672 795527861338374144\n795527861338374144 795527930057850880\n795527930057850880 795527938647785472\n795527938647785472 795527940795269120\n795527940795269120 795527941063704576\n795527941063704576 795527941130813440\n795527941130813440 795527941164367872\n795527941164367872 795527941166465024\n795527941166465024 795527941167513600\n795527941167513600 795527941168037888\n795527941168037888 795527941168070656\n795527941168070656 795527941168087040\n795527941168087040 795527941168095232\n795527941168095232 795527941168099328\n795527941168099328 795527941168099840\n795527941168099840 795527941168099968\n795527941168099968 795527941168099984\n795527941168099984 795527941168099988\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": 0,
                            "stdout": "4\n288054454257713152 288054454291267584\n288054454291267584 288089638663356416\n288089638663356416 288230376151711744\n288230376151711744 288230376160100352\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": 0,
                            "stdout": "57\n395279993370173227 395279993370173228\n395279993370173228 395279993370173232\n395279993370173232 395279993370173248\n395279993370173248 395279993370173312\n395279993370173312 395279993370173440\n395279993370173440 395279993370181632\n395279993370181632 395279993370312704\n395279993370312704 395279993370836992\n395279993370836992 395279993371885568\n395279993371885568 395279993376079872\n395279993376079872 395279993510297600\n395279993510297600 395279993778733056\n395279993778733056 395279994315603968\n395279994315603968 395279996463087616\n395279996463087616 395280065182564352\n395280065182564352 395280202621517824\n395280202621517824 395280477499424768\n395280477499424768 395281027255238656\n395281027255238656 395283226278494208\n395283226278494208 395287624325005312\n395287624325005312 395296420418027520\n395296420418027520 395331604790116352\n395331604790116352 395472342278471680\n395472342278471680 395753817255182336\n395753817255182336 396316767208603648\n396316767208603648 432345564227567616\n432345564227567616 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 729583139634020352\n729583139634020352 734086739261390848\n734086739261390848 736338539075076096\n736338539075076096 737464438981918720\n737464438981918720 737745913958629376\n737745913958629376 737816282702807040\n737816282702807040 737851467074895872\n737851467074895872 737869059260940288\n737869059260940288 737873457307451392\n737873457307451392 737875656330706944\n737875656330706944 737876755842334720\n737876755842334720 737876773022203904\n737876773022203904 737876777317171200\n737876777317171200 737876777854042112\n737876777854042112 737876777988259840\n737876777988259840 737876778055368704\n737876778055368704 737876778088923136\n737876778088923136 737876778091020288\n737876778091020288 737876778092068864\n737876778092068864 737876778092331008\n737876778092331008 737876778092363776\n737876778092363776 737876778092380160\n737876778092380160 737876778092388352\n737876778092388352 737876778092390400\n737876778092390400 737876778092391424\n737876778092391424 737876778092391936\n737876778092391936 737876778092392192\n737876778092392192 737876778092392196\n737876778092392196 737876778092392198\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_03",
                            "returncode": 0,
                            "stdout": "8\n3940649673945088 3940649673949184\n3940649673949184 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 11258999068426240\n11258999068426240 11540474045136896\n11540474045136896 11549270138159104\n11549270138159104 11549545016066048\n11549545016066048 11549545024454656\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": 0,
                            "stdout": "61\n61398917963652103 61398917963652104\n61398917963652104 61398917963652112\n61398917963652112 61398917963652128\n61398917963652128 61398917963652160\n61398917963652160 61398917963652224\n61398917963652224 61398917963652352\n61398917963652352 61398917963652608\n61398917963652608 61398917963653120\n61398917963653120 61398917963661312\n61398917963661312 61398917963677696\n61398917963677696 61398917963710464\n61398917963710464 61398917963841536\n61398917963841536 61398917964103680\n61398917964103680 61398917964627968\n61398917964627968 61398917966725120\n61398917966725120 61398917983502336\n61398917983502336 61398918117720064\n61398918117720064 61398918654590976\n61398918654590976 61398919728332800\n61398919728332800 61398928318267392\n61398928318267392 61401127341522944\n61401127341522944 61405525388034048\n61405525388034048 61414321481056256\n61414321481056256 61431913667100672\n61431913667100672 61502282411278336\n61502282411278336 61643019899633664\n61643019899633664 61924494876344320\n61924494876344320 63050394783186944\n63050394783186944 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 180143985094819840\n180143985094819840 198158383604301824\n198158383604301824 198721333557723136\n198721333557723136 199002808534433792\n199002808534433792 199143546022789120\n199143546022789120 199213914766966784\n199213914766966784 199249099139055616\n199249099139055616 199253497185566720\n199253497185566720 199255696208822272\n199255696208822272 199256795720450048\n199256795720450048 199257345476263936\n199257345476263936 199257414195740672\n199257414195740672 199257448555479040\n199257448555479040 199257465735348224\n199257465735348224 199257470030315520\n199257470030315520 199257470298750976\n199257470298750976 199257470432968704\n199257470432968704 199257470466523136\n199257470466523136 199257470468620288\n199257470468620288 199257470469668864\n199257470469668864 199257470470193152\n199257470470193152 199257470470455296\n199257470470455296 199257470470586368\n199257470470586368 199257470470594560\n199257470470594560 199257470470596608\n199257470470596608 199257470470596864\n199257470470596864 199257470470596992\n199257470470596992 199257470470597056\n199257470470597056 199257470470597072\n199257470470597072 199257470470597076\n199257470470597076 199257470470597078\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": 0,
                            "stdout": "1\n0 1024\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": 0,
                            "stdout": "51\n860329287908420023 860329287908420024\n860329287908420024 860329287908420032\n860329287908420032 860329287908420096\n860329287908420096 860329287908420608\n860329287908420608 860329287908421632\n860329287908421632 860329287908425728\n860329287908425728 860329287908458496\n860329287908458496 860329287908589568\n860329287908589568 860329287909113856\n860329287909113856 860329287910162432\n860329287910162432 860329287914356736\n860329287914356736 860329287981465600\n860329287981465600 860329288518336512\n860329288518336512 860329297108271104\n860329297108271104 860329365827747840\n860329365827747840 860330465339375616\n860330465339375616 860332664362631168\n860332664362631168 860337062409142272\n860337062409142272 860345858502164480\n860345858502164480 860363450688208896\n860363450688208896 860398635060297728\n860398635060297728 860469003804475392\n860469003804475392 860750478781186048\n860750478781186048 861313428734607360\n861313428734607360 862439328641449984\n862439328641449984 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1044835113549955072\n1044835113549955072 1062849512059437056\n1062849512059437056 1067353111686807552\n1067353111686807552 1067916061640228864\n1067916061640228864 1068056799128584192\n1068056799128584192 1068127167872761856\n1068127167872761856 1068162352244850688\n1068162352244850688 1068166750291361792\n1068166750291361792 1068167025169268736\n1068167025169268736 1068167042349137920\n1068167042349137920 1068167042382692352\n1068167042382692352 1068167042391080960\n1068167042391080960 1068167042392129536\n1068167042392129536 1068167042392653824\n1068167042392653824 1068167042392784896\n1068167042392784896 1068167042392850432\n1068167042392850432 1068167042392883200\n1068167042392883200 1068167042392899584\n1068167042392899584 1068167042392901632\n1068167042392901632 1068167042392902656\n1068167042392902656 1068167042392903168\n1068167042392903168 1068167042392903232\n1068167042392903232 1068167042392903248\n1068167042392903248 1068167042392903250\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": 0,
                            "stdout": "67\n278964037634255119 278964037634255120\n278964037634255120 278964037634255136\n278964037634255136 278964037634255168\n278964037634255168 278964037634255232\n278964037634255232 278964037634255360\n278964037634255360 278964037634255872\n278964037634255872 278964037634256896\n278964037634256896 278964037634260992\n278964037634260992 278964037634293760\n278964037634293760 278964037634359296\n278964037634359296 278964037634490368\n278964037634490368 278964037635538944\n278964037635538944 278964037637636096\n278964037637636096 278964037646024704\n278964037646024704 278964037662801920\n278964037662801920 278964037696356352\n278964037696356352 278964037763465216\n278964037763465216 278964037897682944\n278964037897682944 278964040045166592\n278964040045166592 278964044340133888\n278964044340133888 278964052930068480\n278964052930068480 278964070109937664\n278964070109937664 278964104469676032\n278964104469676032 278964241908629504\n278964241908629504 278964791664443392\n278964791664443392 278965891176071168\n278965891176071168 278968090199326720\n278968090199326720 278976886292348928\n278976886292348928 279012070664437760\n279012070664437760 279082439408615424\n279082439408615424 279223176896970752\n279223176896970752 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 792633534417207296\n792633534417207296 828662331436171264\n828662331436171264 833165931063541760\n833165931063541760 835417730877227008\n835417730877227008 836543630784069632\n836543630784069632 836825105760780288\n836825105760780288 836860290132869120\n836860290132869120 836877882318913536\n836877882318913536 836882280365424640\n836882280365424640 836884479388680192\n836884479388680192 836884616827633664\n836884616827633664 836884651187372032\n836884651187372032 836884668367241216\n836884668367241216 836884670514724864\n836884670514724864 836884671588466688\n836884671588466688 836884672125337600\n836884672125337600 836884672158892032\n836884672158892032 836884672175669248\n836884672175669248 836884672179863552\n836884672179863552 836884672180912128\n836884672180912128 836884672181436416\n836884672181436416 836884672181567488\n836884672181567488 836884672181583872\n836884672181583872 836884672181592064\n836884672181592064 836884672181596160\n836884672181596160 836884672181598208\n836884672181598208 836884672181598464\n836884672181598464 836884672181598592\n836884672181598592 836884672181598624\n836884672181598624 836884672181598640\n836884672181598640 836884672181598648\n836884672181598648 836884672181598650\n836884672181598650 836884672181598651\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": 0,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_test_11",
                            "returncode": 0,
                            "stdout": "55\n893124445952679748 893124445952679752\n893124445952679752 893124445952679760\n893124445952679760 893124445952679776\n893124445952679776 893124445952679808\n893124445952679808 893124445952679936\n893124445952679936 893124445952688128\n893124445952688128 893124445952704512\n893124445952704512 893124445952737280\n893124445952737280 893124445952802816\n893124445952802816 893124445953064960\n893124445953064960 893124445957259264\n893124445957259264 893124445965647872\n893124445965647872 893124445999202304\n893124445999202304 893124446536073216\n893124446536073216 893124447609815040\n893124447609815040 893124464789684224\n893124464789684224 893124499149422592\n893124499149422592 893128897195933696\n893128897195933696 893137693288955904\n893137693288955904 893155285475000320\n893155285475000320 893190469847089152\n893190469847089152 893260838591266816\n893260838591266816 893401576079622144\n893401576079622144 893964526033043456\n893964526033043456 896216325846728704\n896216325846728704 900719925474099200\n900719925474099200 936748722493063168\n936748722493063168 1008806316530991104\n1008806316530991104 1026820715040473088\n1026820715040473088 1035827914295214080\n1035827914295214080 1038079714108899328\n1038079714108899328 1039205614015741952\n1039205614015741952 1039768563969163264\n1039768563969163264 1039803748341252096\n1039803748341252096 1039821340527296512\n1039821340527296512 1039830136620318720\n1039830136620318720 1039834534666829824\n1039834534666829824 1039836733690085376\n1039836733690085376 1039837833201713152\n1039837833201713152 1039838382957527040\n1039838382957527040 1039838417317265408\n1039838417317265408 1039838425907200000\n1039838425907200000 1039838426980941824\n1039838426980941824 1039838427517812736\n1039838427517812736 1039838427534589952\n1039838427534589952 1039838427542978560\n1039838427542978560 1039838427545075712\n1039838427545075712 1039838427545092096\n1039838427545092096 1039838427545096192\n1039838427545096192 1039838427545097216\n1039838427545097216 1039838427545097728\n1039838427545097728 1039838427545097984\n1039838427545097984 1039838427545098112\n1039838427545098112 1039838427545098128\n1039838427545098128 1039838427545098129\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": 0,
                            "stdout": "1\n0 1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": 0,
                            "stdout": "98\n505529333062828545 505529333062828546\n505529333062828546 505529333062828548\n505529333062828548 505529333062828552\n505529333062828552 505529333062828560\n505529333062828560 505529333062828576\n505529333062828576 505529333062828608\n505529333062828608 505529333062828672\n505529333062828672 505529333062828800\n505529333062828800 505529333062829056\n505529333062829056 505529333062830080\n505529333062830080 505529333062832128\n505529333062832128 505529333062836224\n505529333062836224 505529333062844416\n505529333062844416 505529333062860800\n505529333062860800 505529333062893568\n505529333062893568 505529333062959104\n505529333062959104 505529333063090176\n505529333063090176 505529333063352320\n505529333063352320 505529333063876608\n505529333063876608 505529333064925184\n505529333064925184 505529333067022336\n505529333067022336 505529333083799552\n505529333083799552 505529333117353984\n505529333117353984 505529333184462848\n505529333184462848 505529333318680576\n505529333318680576 505529333587116032\n505529333587116032 505529334123986944\n505529334123986944 505529335197728768\n505529335197728768 505529337345212416\n505529337345212416 505529341640179712\n505529341640179712 505529350230114304\n505529350230114304 505529367409983488\n505529367409983488 505529401769721856\n505529401769721856 505529470489198592\n505529470489198592 505529607928152064\n505529607928152064 505530157683965952\n505530157683965952 505531257195593728\n505531257195593728 505533456218849280\n505533456218849280 505537854265360384\n505537854265360384 505546650358382592\n505546650358382592 505564242544427008\n505564242544427008 505599426916515840\n505599426916515840 505669795660693504\n505669795660693504 505810533149048832\n505810533149048832 506092008125759488\n506092008125759488 506654958079180800\n506654958079180800 508906757892866048\n508906757892866048 513410357520236544\n513410357520236544 522417556774977536\n522417556774977536 540431955284459520\n540431955284459520 558446353793941504\n558446353793941504 567453553048682496\n567453553048682496 571957152676052992\n571957152676052992 574208952489738240\n574208952489738240 575334852396580864\n575334852396580864 575616327373291520\n575616327373291520 575757064861646848\n575757064861646848 575827433605824512\n575827433605824512 575862617977913344\n575862617977913344 575880210163957760\n575880210163957760 575889006256979968\n575889006256979968 575893404303491072\n575893404303491072 575895603326746624\n575895603326746624 575896702838374400\n575896702838374400 575897252594188288\n575897252594188288 575897527472095232\n575897527472095232 575897664911048704\n575897664911048704 575897733630525440\n575897733630525440 575897767990263808\n575897767990263808 575897785170132992\n575897785170132992 575897793760067584\n575897793760067584 575897795907551232\n575897795907551232 575897796981293056\n575897796981293056 575897797518163968\n575897797518163968 575897797786599424\n575897797786599424 575897797920817152\n575897797920817152 575897797987926016\n575897797987926016 575897798021480448\n575897798021480448 575897798038257664\n575897798038257664 575897798046646272\n575897798046646272 575897798050840576\n575897798050840576 575897798052937728\n575897798052937728 575897798053986304\n575897798053986304 575897798054510592\n575897798054510592 575897798054772736\n575897798054772736 575897798054903808\n575897798054903808 575897798054936576\n575897798054936576 575897798054952960\n575897798054952960 575897798054953984\n575897798054953984 575897798054954496\n575897798054954496 575897798054954752\n575897798054954752 575897798054954880\n575897798054954880 575897798054954944\n575897798054954944 575897798054954976\n575897798054954976 575897798054954992\n575897798054954992 575897798054954996\n575897798054954996 575897798054954998\n575897798054954998 575897798054954999\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": 0,
                            "stdout": "61\n181262195287766621 181262195287766622\n181262195287766622 181262195287766624\n181262195287766624 181262195287766656\n181262195287766656 181262195287766784\n181262195287766784 181262195287767040\n181262195287767040 181262195287769088\n181262195287769088 181262195287785472\n181262195287785472 181262195287916544\n181262195287916544 181262195288440832\n181262195288440832 181262195290537984\n181262195290537984 181262195298926592\n181262195298926592 181262195332481024\n181262195332481024 181262195399589888\n181262195399589888 181262195936460800\n181262195936460800 181262197010202624\n181262197010202624 181262205600137216\n181262205600137216 181262222780006400\n181262222780006400 181262257139744768\n181262257139744768 181262325859221504\n181262325859221504 181262463298174976\n181262463298174976 181262738176081920\n181262738176081920 181263287931895808\n181263287931895808 181265486955151360\n181265486955151360 181269885001662464\n181269885001662464 182395784908505088\n182395784908505088 184647584722190336\n184647584722190336 189151184349560832\n189151184349560832 198158383604301824\n198158383604301824 216172782113783808\n216172782113783808 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 756604737398243328\n756604737398243328 774619135907725312\n774619135907725312 776870935721410560\n776870935721410560 777996835628253184\n777996835628253184 778559785581674496\n778559785581674496 778841260558385152\n778841260558385152 778981998046740480\n778981998046740480 778990794139762688\n778990794139762688 778991893651390464\n778991893651390464 778992443407204352\n778992443407204352 778992718285111296\n778992718285111296 778992726875045888\n778992726875045888 778992729022529536\n778992729022529536 778992730096271360\n778992730096271360 778992730364706816\n778992730364706816 778992730381484032\n778992730381484032 778992730385678336\n778992730385678336 778992730387775488\n778992730387775488 778992730388037632\n778992730388037632 778992730388168704\n778992730388168704 778992730388234240\n778992730388234240 778992730388267008\n778992730388267008 778992730388283392\n778992730388283392 778992730388287488\n778992730388287488 778992730388288512\n778992730388288512 778992730388288768\n778992730388288768 778992730388288800\n778992730388288800 778992730388288816\n778992730388288816 778992730388288824\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": 0,
                            "stdout": "2\n288230376151711744 576460752303423488\n576460752303423488 864691128455135232\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": 0,
                            "stdout": "59\n366943872216607560 366943872216607568\n366943872216607568 366943872216607584\n366943872216607584 366943872216607616\n366943872216607616 366943872216607744\n366943872216607744 366943872216608768\n366943872216608768 366943872216612864\n366943872216612864 366943872216629248\n366943872216629248 366943872216662016\n366943872216662016 366943872216727552\n366943872216727552 366943872216989696\n366943872216989696 366943872284098560\n366943872284098560 366943872418316288\n366943872418316288 366943881008250880\n366943881008250880 366943898188120064\n366943898188120064 366943932547858432\n366943932547858432 366944001267335168\n366944001267335168 366944138706288640\n366944138706288640 366944413584195584\n366944413584195584 366946612607451136\n366946612607451136 366955408700473344\n366955408700473344 366973000886517760\n366973000886517760 367043369630695424\n367043369630695424 369295169444380672\n369295169444380672 378302368699121664\n378302368699121664 396316767208603648\n396316767208603648 432345564227567616\n432345564227567616 576460752303423488\n576460752303423488 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1080863910568919040\n1080863910568919040 1081004648057274368\n1081004648057274368 1081039832429363200\n1081039832429363200 1081057424615407616\n1081057424615407616 1081066220708429824\n1081066220708429824 1081068419731685376\n1081068419731685376 1081069519243313152\n1081069519243313152 1081070068999127040\n1081070068999127040 1081070343877033984\n1081070343877033984 1081070412596510720\n1081070412596510720 1081070446956249088\n1081070446956249088 1081070455546183680\n1081070455546183680 1081070457693667328\n1081070457693667328 1081070458767409152\n1081070458767409152 1081070459304280064\n1081070459304280064 1081070459371388928\n1081070459371388928 1081070459388166144\n1081070459388166144 1081070459390263296\n1081070459390263296 1081070459391311872\n1081070459391311872 1081070459391574016\n1081070459391574016 1081070459391705088\n1081070459391705088 1081070459391707136\n1081070459391707136 1081070459391708160\n1081070459391708160 1081070459391708416\n1081070459391708416 1081070459391708544\n1081070459391708544 1081070459391708608\n1081070459391708608 1081070459391708640\n1081070459391708640 1081070459391708656\n1081070459391708656 1081070459391708660\n1081070459391708660 1081070459391708661\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": 0,
                            "stdout": "52\n813135255471707232 813135255471707264\n813135255471707264 813135255471707392\n813135255471707392 813135255471707648\n813135255471707648 813135255471708160\n813135255471708160 813135255471710208\n813135255471710208 813135255471718400\n813135255471718400 813135255471783936\n813135255471783936 813135255471915008\n813135255471915008 813135255476109312\n813135255476109312 813135255492886528\n813135255492886528 813135255526440960\n813135255526440960 813135255593549824\n813135255593549824 813135255861985280\n813135255861985280 813135260156952576\n813135260156952576 813135268746887168\n813135268746887168 813135303106625536\n813135303106625536 813135577984532480\n813135577984532480 813136127740346368\n813136127740346368 813137227251974144\n813137227251974144 813146023344996352\n813146023344996352 813181207717085184\n813181207717085184 813462682693795840\n813462682693795840 814025632647217152\n814025632647217152 815151532554059776\n815151532554059776 819655132181430272\n819655132181430272 828662331436171264\n828662331436171264 846676729945653248\n846676729945653248 847802629852495872\n847802629852495872 848084104829206528\n848084104829206528 848154473573384192\n848154473573384192 848172065759428608\n848172065759428608 848174264782684160\n848174264782684160 848174539660591104\n848174539660591104 848174677099544576\n848174677099544576 848174745819021312\n848174745819021312 848174780178759680\n848174780178759680 848174788768694272\n848174788768694272 848174793063661568\n848174793063661568 848174794137403392\n848174794137403392 848174794405838848\n848174794405838848 848174794472947712\n848174794472947712 848174794506502144\n848174794506502144 848174794508599296\n848174794508599296 848174794509647872\n848174794509647872 848174794509713408\n848174794509713408 848174794509729792\n848174794509729792 848174794509733888\n848174794509733888 848174794509734912\n848174794509734912 848174794509735424\n848174794509735424 848174794509735680\n848174794509735680 848174794509735808\n848174794509735808 848174794509735812\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": 0,
                            "stdout": "110\n504403158265495553 504403158265495554\n504403158265495554 504403158265495556\n504403158265495556 504403158265495560\n504403158265495560 504403158265495568\n504403158265495568 504403158265495584\n504403158265495584 504403158265495616\n504403158265495616 504403158265495680\n504403158265495680 504403158265495808\n504403158265495808 504403158265496064\n504403158265496064 504403158265496576\n504403158265496576 504403158265497600\n504403158265497600 504403158265499648\n504403158265499648 504403158265503744\n504403158265503744 504403158265511936\n504403158265511936 504403158265528320\n504403158265528320 504403158265561088\n504403158265561088 504403158265626624\n504403158265626624 504403158265757696\n504403158265757696 504403158266019840\n504403158266019840 504403158266544128\n504403158266544128 504403158267592704\n504403158267592704 504403158269689856\n504403158269689856 504403158273884160\n504403158273884160 504403158282272768\n504403158282272768 504403158299049984\n504403158299049984 504403158332604416\n504403158332604416 504403158399713280\n504403158399713280 504403158533931008\n504403158533931008 504403158802366464\n504403158802366464 504403159339237376\n504403159339237376 504403160412979200\n504403160412979200 504403162560462848\n504403162560462848 504403166855430144\n504403166855430144 504403175445364736\n504403175445364736 504403192625233920\n504403192625233920 504403226984972288\n504403226984972288 504403295704449024\n504403295704449024 504403433143402496\n504403433143402496 504403708021309440\n504403708021309440 504404257777123328\n504404257777123328 504405357288751104\n504405357288751104 504407556312006656\n504407556312006656 504411954358517760\n504411954358517760 504420750451539968\n504420750451539968 504438342637584384\n504438342637584384 504473527009673216\n504473527009673216 504543895753850880\n504543895753850880 504684633242206208\n504684633242206208 504966108218916864\n504966108218916864 505529058172338176\n505529058172338176 506654958079180800\n506654958079180800 508906757892866048\n508906757892866048 513410357520236544\n513410357520236544 522417556774977536\n522417556774977536 540431955284459520\n540431955284459520 558446353793941504\n558446353793941504 567453553048682496\n567453553048682496 571957152676052992\n571957152676052992 574208952489738240\n574208952489738240 575334852396580864\n575334852396580864 575897802350002176\n575897802350002176 576179277326712832\n576179277326712832 576320014815068160\n576320014815068160 576390383559245824\n576390383559245824 576425567931334656\n576425567931334656 576443160117379072\n576443160117379072 576451956210401280\n576451956210401280 576456354256912384\n576456354256912384 576458553280167936\n576458553280167936 576459652791795712\n576459652791795712 576460202547609600\n576460202547609600 576460477425516544\n576460477425516544 576460614864470016\n576460614864470016 576460683583946752\n576460683583946752 576460717943685120\n576460717943685120 576460735123554304\n576460735123554304 576460743713488896\n576460743713488896 576460748008456192\n576460748008456192 576460750155939840\n576460750155939840 576460751229681664\n576460751229681664 576460751766552576\n576460751766552576 576460752034988032\n576460752034988032 576460752169205760\n576460752169205760 576460752236314624\n576460752236314624 576460752269869056\n576460752269869056 576460752286646272\n576460752286646272 576460752295034880\n576460752295034880 576460752299229184\n576460752299229184 576460752301326336\n576460752301326336 576460752302374912\n576460752302374912 576460752302899200\n576460752302899200 576460752303161344\n576460752303161344 576460752303292416\n576460752303292416 576460752303357952\n576460752303357952 576460752303390720\n576460752303390720 576460752303407104\n576460752303407104 576460752303415296\n576460752303415296 576460752303419392\n576460752303419392 576460752303421440\n576460752303421440 576460752303422464\n576460752303422464 576460752303422976\n576460752303422976 576460752303423232\n576460752303423232 576460752303423360\n576460752303423360 576460752303423424\n576460752303423424 576460752303423456\n576460752303423456 576460752303423472\n576460752303423472 576460752303423480\n576460752303423480 576460752303423484\n576460752303423484 576460752303423486\n576460752303423486 576460752303423487\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": 0,
                            "stdout": "25\n432344644764301224 432344644764301232\n432344644764301232 432344644764301248\n432344644764301248 432344644764301312\n432344644764301312 432344644764303360\n432344644764303360 432344644764827648\n432344644764827648 432344644769021952\n432344644769021952 432344644836130816\n432344644836130816 432344645104566272\n432344645104566272 432344653694500864\n432344653694500864 432344670874370048\n432344670874370048 432344739593846784\n432344739593846784 432345014471753728\n432345014471753728 432345564227567616\n432345564227567616 504403158265495552\n504403158265495552 540431955284459520\n540431955284459520 558446353793941504\n558446353793941504 558448552817197056\n558448552817197056 558448827695104000\n558448827695104000 558448896414580736\n558448896414580736 558448896683016192\n558448896683016192 558448896716570624\n558448896716570624 558448896716832768\n558448896716832768 558448896716849152\n558448896716849152 558448896716853248\n558448896716853248 558448896716855296\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": 0,
                            "stdout": "5\n3 4\n4 8\n8 16\n16 18\n18 19\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": 0,
                            "stdout": "60\n1 2\n2 4\n4 8\n8 16\n16 32\n32 64\n64 128\n128 256\n256 512\n512 1024\n1024 2048\n2048 4096\n4096 8192\n8192 16384\n16384 32768\n32768 65536\n65536 131072\n131072 262144\n262144 524288\n524288 1048576\n1048576 2097152\n2097152 4194304\n4194304 8388608\n8388608 16777216\n16777216 33554432\n33554432 67108864\n67108864 134217728\n134217728 268435456\n268435456 536870912\n536870912 1073741824\n1073741824 2147483648\n2147483648 4294967296\n4294967296 8589934592\n8589934592 17179869184\n17179869184 34359738368\n34359738368 68719476736\n68719476736 137438953472\n137438953472 274877906944\n274877906944 549755813888\n549755813888 1099511627776\n1099511627776 2199023255552\n2199023255552 4398046511104\n4398046511104 8796093022208\n8796093022208 17592186044416\n17592186044416 35184372088832\n35184372088832 70368744177664\n70368744177664 140737488355328\n140737488355328 281474976710656\n281474976710656 562949953421312\n562949953421312 1125899906842624\n1125899906842624 2251799813685248\n2251799813685248 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 1152921504606846976\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": 0,
                            "stdout": "2\n1 2\n2 3\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": 0,
                            "stdout": "118\n1 2\n2 4\n4 8\n8 16\n16 32\n32 64\n64 128\n128 256\n256 512\n512 1024\n1024 2048\n2048 4096\n4096 8192\n8192 16384\n16384 32768\n32768 65536\n65536 131072\n131072 262144\n262144 524288\n524288 1048576\n1048576 2097152\n2097152 4194304\n4194304 8388608\n8388608 16777216\n16777216 33554432\n33554432 67108864\n67108864 134217728\n134217728 268435456\n268435456 536870912\n536870912 1073741824\n1073741824 2147483648\n2147483648 4294967296\n4294967296 8589934592\n8589934592 17179869184\n17179869184 34359738368\n34359738368 68719476736\n68719476736 137438953472\n137438953472 274877906944\n274877906944 549755813888\n549755813888 1099511627776\n1099511627776 2199023255552\n2199023255552 4398046511104\n4398046511104 8796093022208\n8796093022208 17592186044416\n17592186044416 35184372088832\n35184372088832 70368744177664\n70368744177664 140737488355328\n140737488355328 281474976710656\n281474976710656 562949953421312\n562949953421312 1125899906842624\n1125899906842624 2251799813685248\n2251799813685248 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1080863910568919040\n1080863910568919040 1116892707587883008\n1116892707587883008 1134907106097364992\n1134907106097364992 1143914305352105984\n1143914305352105984 1148417904979476480\n1148417904979476480 1150669704793161728\n1150669704793161728 1151795604700004352\n1151795604700004352 1152358554653425664\n1152358554653425664 1152640029630136320\n1152640029630136320 1152780767118491648\n1152780767118491648 1152851135862669312\n1152851135862669312 1152886320234758144\n1152886320234758144 1152903912420802560\n1152903912420802560 1152912708513824768\n1152912708513824768 1152917106560335872\n1152917106560335872 1152919305583591424\n1152919305583591424 1152920405095219200\n1152920405095219200 1152920954851033088\n1152920954851033088 1152921229728940032\n1152921229728940032 1152921367167893504\n1152921367167893504 1152921435887370240\n1152921435887370240 1152921470247108608\n1152921470247108608 1152921487426977792\n1152921487426977792 1152921496016912384\n1152921496016912384 1152921500311879680\n1152921500311879680 1152921502459363328\n1152921502459363328 1152921503533105152\n1152921503533105152 1152921504069976064\n1152921504069976064 1152921504338411520\n1152921504338411520 1152921504472629248\n1152921504472629248 1152921504539738112\n1152921504539738112 1152921504573292544\n1152921504573292544 1152921504590069760\n1152921504590069760 1152921504598458368\n1152921504598458368 1152921504602652672\n1152921504602652672 1152921504604749824\n1152921504604749824 1152921504605798400\n1152921504605798400 1152921504606322688\n1152921504606322688 1152921504606584832\n1152921504606584832 1152921504606715904\n1152921504606715904 1152921504606781440\n1152921504606781440 1152921504606814208\n1152921504606814208 1152921504606830592\n1152921504606830592 1152921504606838784\n1152921504606838784 1152921504606842880\n1152921504606842880 1152921504606844928\n1152921504606844928 1152921504606845952\n1152921504606845952 1152921504606846464\n1152921504606846464 1152921504606846720\n1152921504606846720 1152921504606846848\n1152921504606846848 1152921504606846912\n1152921504606846912 1152921504606846944\n1152921504606846944 1152921504606846960\n1152921504606846960 1152921504606846968\n1152921504606846968 1152921504606846972\n1152921504606846972 1152921504606846974\n1152921504606846974 1152921504606846975\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": 0,
                            "stdout": "1\n1 2\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": 0,
                            "stdout": "1\n576460752303423488 1152921504606846976\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": 0,
                            "stdout": "60\n0 576460752303423488\n576460752303423488 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1080863910568919040\n1080863910568919040 1116892707587883008\n1116892707587883008 1134907106097364992\n1134907106097364992 1143914305352105984\n1143914305352105984 1148417904979476480\n1148417904979476480 1150669704793161728\n1150669704793161728 1151795604700004352\n1151795604700004352 1152358554653425664\n1152358554653425664 1152640029630136320\n1152640029630136320 1152780767118491648\n1152780767118491648 1152851135862669312\n1152851135862669312 1152886320234758144\n1152886320234758144 1152903912420802560\n1152903912420802560 1152912708513824768\n1152912708513824768 1152917106560335872\n1152917106560335872 1152919305583591424\n1152919305583591424 1152920405095219200\n1152920405095219200 1152920954851033088\n1152920954851033088 1152921229728940032\n1152921229728940032 1152921367167893504\n1152921367167893504 1152921435887370240\n1152921435887370240 1152921470247108608\n1152921470247108608 1152921487426977792\n1152921487426977792 1152921496016912384\n1152921496016912384 1152921500311879680\n1152921500311879680 1152921502459363328\n1152921502459363328 1152921503533105152\n1152921503533105152 1152921504069976064\n1152921504069976064 1152921504338411520\n1152921504338411520 1152921504472629248\n1152921504472629248 1152921504539738112\n1152921504539738112 1152921504573292544\n1152921504573292544 1152921504590069760\n1152921504590069760 1152921504598458368\n1152921504598458368 1152921504602652672\n1152921504602652672 1152921504604749824\n1152921504604749824 1152921504605798400\n1152921504605798400 1152921504606322688\n1152921504606322688 1152921504606584832\n1152921504606584832 1152921504606715904\n1152921504606715904 1152921504606781440\n1152921504606781440 1152921504606814208\n1152921504606814208 1152921504606830592\n1152921504606830592 1152921504606838784\n1152921504606838784 1152921504606842880\n1152921504606842880 1152921504606844928\n1152921504606844928 1152921504606845952\n1152921504606845952 1152921504606846464\n1152921504606846464 1152921504606846720\n1152921504606846720 1152921504606846848\n1152921504606846848 1152921504606846912\n1152921504606846912 1152921504606846944\n1152921504606846944 1152921504606846960\n1152921504606846960 1152921504606846968\n1152921504606846968 1152921504606846972\n1152921504606846972 1152921504606846974\n1152921504606846974 1152921504606846975\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": 0,
                            "stdout": "87\n432486315808860234 432486315808860236\n432486315808860236 432486315808860240\n432486315808860240 432486315808860256\n432486315808860256 432486315808860288\n432486315808860288 432486315808860416\n432486315808860416 432486315808860672\n432486315808860672 432486315808861184\n432486315808861184 432486315808862208\n432486315808862208 432486315808866304\n432486315808866304 432486315808882688\n432486315808882688 432486315808915456\n432486315808915456 432486315809046528\n432486315809046528 432486315809308672\n432486315809308672 432486315809832960\n432486315809832960 432486315810881536\n432486315810881536 432486315812978688\n432486315812978688 432486315817172992\n432486315817172992 432486315825561600\n432486315825561600 432486315842338816\n432486315842338816 432486315875893248\n432486315875893248 432486315943002112\n432486315943002112 432486316211437568\n432486316211437568 432486316748308480\n432486316748308480 432486318895792128\n432486318895792128 432486336075661312\n432486336075661312 432486370435399680\n432486370435399680 432486439154876416\n432486439154876416 432486576593829888\n432486576593829888 432486851471736832\n432486851471736832 432487401227550720\n432487401227550720 432488500739178496\n432488500739178496 432490699762434048\n432490699762434048 432495097808945152\n432495097808945152 432503893901967360\n432503893901967360 432521486088011776\n432521486088011776 432556670460100608\n432556670460100608 432627039204278272\n432627039204278272 432908514180988928\n432908514180988928 433471464134410240\n433471464134410240 434597364041252864\n434597364041252864 436849163854938112\n436849163854938112 441352763482308608\n441352763482308608 450359962737049600\n450359962737049600 468374361246531584\n468374361246531584 504403158265495552\n504403158265495552 522417556774977536\n522417556774977536 526921156402348032\n526921156402348032 529172956216033280\n529172956216033280 530298856122875904\n530298856122875904 530861806076297216\n530861806076297216 531143281053007872\n531143281053007872 531284018541363200\n531284018541363200 531354387285540864\n531354387285540864 531389571657629696\n531389571657629696 531407163843674112\n531407163843674112 531415959936696320\n531415959936696320 531420357983207424\n531420357983207424 531422557006462976\n531422557006462976 531423106762276864\n531423106762276864 531423381640183808\n531423381640183808 531423450359660544\n531423450359660544 531423467539529728\n531423467539529728 531423469687013376\n531423469687013376 531423470760755200\n531423470760755200 531423471297626112\n531423471297626112 531423471431843840\n531423471431843840 531423471498952704\n531423471498952704 531423471532507136\n531423471532507136 531423471549284352\n531423471549284352 531423471557672960\n531423471557672960 531423471561867264\n531423471561867264 531423471563964416\n531423471563964416 531423471564226560\n531423471564226560 531423471564357632\n531423471564357632 531423471564390400\n531423471564390400 531423471564398592\n531423471564398592 531423471564400640\n531423471564400640 531423471564401664\n531423471564401664 531423471564402176\n531423471564402176 531423471564402432\n531423471564402432 531423471564402560\n531423471564402560 531423471564402624\n531423471564402624 531423471564402656\n531423471564402656 531423471564402664\n531423471564402664 531423471564402668\n531423471564402668 531423471564402670\n531423471564402670 531423471564402671\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": 0,
                            "stdout": "63\n11801128058619141 11801128058619142\n11801128058619142 11801128058619144\n11801128058619144 11801128058619152\n11801128058619152 11801128058619168\n11801128058619168 11801128058619200\n11801128058619200 11801128058619264\n11801128058619264 11801128058619392\n11801128058619392 11801128058619904\n11801128058619904 11801128058621952\n11801128058621952 11801128058626048\n11801128058626048 11801128058634240\n11801128058634240 11801128058650624\n11801128058650624 11801128058683392\n11801128058683392 11801128058748928\n11801128058748928 11801128059011072\n11801128059011072 11801128059535360\n11801128059535360 11801128060583936\n11801128060583936 11801128094138368\n11801128094138368 11801129167880192\n11801129167880192 11801131315363840\n11801131315363840 11801135610331136\n11801135610331136 11801144200265728\n11801144200265728 11801161380134912\n11801161380134912 11801195739873280\n11801195739873280 11801333178826752\n11801333178826752 11801608056733696\n11801608056733696 11802157812547584\n11802157812547584 11804356835803136\n11804356835803136 11821949021847552\n11821949021847552 12384898975268864\n12384898975268864 13510798882111488\n13510798882111488 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 432345564227567616\n432345564227567616 468374361246531584\n468374361246531584 477381560501272576\n477381560501272576 481885160128643072\n481885160128643072 484136959942328320\n484136959942328320 484418434919038976\n484418434919038976 484488803663216640\n484488803663216640 484491002686472192\n484491002686472192 484492102198099968\n484492102198099968 484492651953913856\n484492651953913856 484492789392867328\n484492789392867328 484492858112344064\n484492858112344064 484492892472082432\n484492892472082432 484492909651951616\n484492909651951616 484492910725693440\n484492910725693440 484492910859911168\n484492910859911168 484492910927020032\n484492910927020032 484492910960574464\n484492910960574464 484492910964768768\n484492910964768768 484492910965817344\n484492910965817344 484492910965818368\n484492910965818368 484492910965818624\n484492910965818624 484492910965818688\n484492910965818688 484492910965818720\n484492910965818720 484492910965818728\n484492910965818728 484492910965818730\n484492910965818730 484492910965818731\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": 0,
                            "stdout": "85\n282183781417523 282183781417524\n282183781417524 282183781417528\n282183781417528 282183781417536\n282183781417536 282183781417600\n282183781417600 282183781417728\n282183781417728 282183781417984\n282183781417984 282183781419008\n282183781419008 282183781421056\n282183781421056 282183781425152\n282183781425152 282183781433344\n282183781433344 282183781449728\n282183781449728 282183781580800\n282183781580800 282183782629376\n282183782629376 282183784726528\n282183784726528 282183788920832\n282183788920832 282183797309440\n282183797309440 282183814086656\n282183814086656 282183847641088\n282183847641088 282183914749952\n282183914749952 282184183185408\n282184183185408 282184720056320\n282184720056320 282185793798144\n282185793798144 282187941281792\n282187941281792 282196531216384\n282196531216384 282230890954752\n282230890954752 282299610431488\n282299610431488 282574488338432\n282574488338432 283673999966208\n283673999966208 285873023221760\n285873023221760 290271069732864\n290271069732864 299067162755072\n299067162755072 316659348799488\n316659348799488 351843720888320\n351843720888320 422212465065984\n422212465065984 562949953421312\n562949953421312 1125899906842624\n1125899906842624 2251799813685248\n2251799813685248 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 216172782113783808\n216172782113783808 252201579132747776\n252201579132747776 270215977642229760\n270215977642229760 279223176896970752\n279223176896970752 283726776524341248\n283726776524341248 285978576338026496\n285978576338026496 286541526291447808\n286541526291447808 286611895035625472\n286611895035625472 286647079407714304\n286647079407714304 286664671593758720\n286664671593758720 286673467686780928\n286673467686780928 286677865733292032\n286677865733292032 286680064756547584\n286680064756547584 286681164268175360\n286681164268175360 286681714023989248\n286681714023989248 286681988901896192\n286681988901896192 286682126340849664\n286682126340849664 286682195060326400\n286682195060326400 286682229420064768\n286682229420064768 286682246599933952\n286682246599933952 286682250894901248\n286682250894901248 286682251968643072\n286682251968643072 286682252505513984\n286682252505513984 286682252773949440\n286682252773949440 286682252908167168\n286682252908167168 286682252975276032\n286682252975276032 286682253008830464\n286682253008830464 286682253017219072\n286682253017219072 286682253019316224\n286682253019316224 286682253020364800\n286682253020364800 286682253020889088\n286682253020889088 286682253020954624\n286682253020954624 286682253020987392\n286682253020987392 286682253021003776\n286682253021003776 286682253021011968\n286682253021011968 286682253021016064\n286682253021016064 286682253021018112\n286682253021018112 286682253021019136\n286682253021019136 286682253021019648\n286682253021019648 286682253021019776\n286682253021019776 286682253021019780\n286682253021019780 286682253021019781\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": 0,
                            "stdout": "28\n144106357446602451 144106357446602452\n144106357446602452 144106357446602456\n144106357446602456 144106357446602464\n144106357446602464 144106357446602496\n144106357446602496 144106357446602752\n144106357446602752 144106357446606848\n144106357446606848 144106357446672384\n144106357446672384 144106357446934528\n144106357446934528 144106357455323136\n144106357455323136 144106357488877568\n144106357488877568 144106357623095296\n144106357623095296 144106391982833664\n144106391982833664 144115188075855872\n144115188075855872 216172782113783808\n216172782113783808 252201579132747776\n252201579132747776 261208778387488768\n261208778387488768 261771728340910080\n261771728340910080 261789320526954496\n261789320526954496 261791519550210048\n261791519550210048 261791588269686784\n261791588269686784 261791622629425152\n261791622629425152 261791639809294336\n261791639809294336 261791641956777984\n261791641956777984 261791642225213440\n261791642225213440 261791642225344512\n261791642225344512 261791642225410048\n261791642225410048 261791642225414144\n261791642225414144 261791642225414176\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": 0,
                            "stdout": "1\n0 1152921504606846976\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": 0,
                            "stdout": "41\n360198504640541332 360198504640541336\n360198504640541336 360198504640541344\n360198504640541344 360198504640541376\n360198504640541376 360198504640541440\n360198504640541440 360198504640541696\n360198504640541696 360198504640542720\n360198504640542720 360198504640544768\n360198504640544768 360198504640675840\n360198504640675840 360198504640937984\n360198504640937984 360198504645132288\n360198504645132288 360198504678686720\n360198504678686720 360198504947122176\n360198504947122176 360198506020864000\n360198506020864000 360198514610798592\n360198514610798592 360198531790667776\n360198531790667776 360198566150406144\n360198566150406144 360198634869882880\n360198634869882880 360198909747789824\n360198909747789824 360200009259417600\n360200009259417600 360217601445462016\n360217601445462016 360287970189639680\n360287970189639680 432345564227567616\n432345564227567616 504403158265495552\n504403158265495552 504966108218916864\n504966108218916864 505247583195627520\n505247583195627520 505256379288649728\n505256379288649728 505257478800277504\n505257478800277504 505258028556091392\n505258028556091392 505258032851058688\n505258032851058688 505258033387929600\n505258033387929600 505258033455038464\n505258033455038464 505258033488592896\n505258033488592896 505258033496981504\n505258033496981504 505258033499078656\n505258033499078656 505258033500127232\n505258033500127232 505258033500651520\n505258033500651520 505258033500667904\n505258033500667904 505258033500676096\n505258033500676096 505258033500676608\n505258033500676608 505258033500676864\n505258033500676864 505258033500676866\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": 0,
                            "stdout": "55\n170125114320639076 170125114320639080\n170125114320639080 170125114320639088\n170125114320639088 170125114320639104\n170125114320639104 170125114320639232\n170125114320639232 170125114320639488\n170125114320639488 170125114320640000\n170125114320640000 170125114320642048\n170125114320642048 170125114320650240\n170125114320650240 170125114320683008\n170125114320683008 170125114320748544\n170125114320748544 170125114320879616\n170125114320879616 170125114321403904\n170125114321403904 170125114329792512\n170125114329792512 170125114346569728\n170125114346569728 170125114883440640\n170125114883440640 170125132063309824\n170125132063309824 170125166423048192\n170125166423048192 170125235142524928\n170125235142524928 170134031235547136\n170134031235547136 170151623421591552\n170151623421591552 170292360909946880\n170292360909946880 170573835886657536\n170573835886657536 171136785840078848\n171136785840078848 180143985094819840\n180143985094819840 198158383604301824\n198158383604301824 202661983231672320\n202661983231672320 203787883138514944\n203787883138514944 204350833091936256\n204350833091936256 204632308068646912\n204632308068646912 204634507091902464\n204634507091902464 204635606603530240\n204635606603530240 204635881481437184\n204635881481437184 204636018920390656\n204636018920390656 204636027510325248\n204636027510325248 204636029657808896\n204636029657808896 204636030731550720\n204636030731550720 204636031268421632\n204636031268421632 204636031536857088\n204636031536857088 204636031671074816\n204636031671074816 204636031704629248\n204636031704629248 204636031721406464\n204636031721406464 204636031729795072\n204636031729795072 204636031731892224\n204636031731892224 204636031732940800\n204636031732940800 204636031733465088\n204636031733465088 204636031733727232\n204636031733727232 204636031733858304\n204636031733858304 204636031733923840\n204636031733923840 204636031733956608\n204636031733956608 204636031733972992\n204636031733972992 204636031733975040\n204636031733975040 204636031733976064\n204636031733976064 204636031733976576\n204636031733976576 204636031733976832\n204636031733976832 204636031733976848\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": 0,
                            "stdout": "54\n271518219607274605 271518219607274606\n271518219607274606 271518219607274608\n271518219607274608 271518219607274624\n271518219607274624 271518219607274752\n271518219607274752 271518219607275008\n271518219607275008 271518219607275520\n271518219607275520 271518219607277568\n271518219607277568 271518219607343104\n271518219607343104 271518219607474176\n271518219607474176 271518219611668480\n271518219611668480 271518219645222912\n271518219645222912 271518219779440640\n271518219779440640 271518220316311552\n271518220316311552 271518228906246144\n271518228906246144 271518246086115328\n271518246086115328 271518280445853696\n271518280445853696 271518349165330432\n271518349165330432 271518898921144320\n271518898921144320 271519998432772096\n271519998432772096 271522197456027648\n271522197456027648 271526595502538752\n271526595502538752 271535391595560960\n271535391595560960 271552983781605376\n271552983781605376 271623352525783040\n271623352525783040 271904827502493696\n271904827502493696 272467777455915008\n272467777455915008 274719577269600256\n274719577269600256 279223176896970752\n279223176896970752 288230376151711744\n288230376151711744 432345564227567616\n432345564227567616 468374361246531584\n468374361246531584 486388759756013568\n486388759756013568 490892359383384064\n490892359383384064 493144159197069312\n493144159197069312 493425634173779968\n493425634173779968 493496002917957632\n493496002917957632 493513595104002048\n493513595104002048 493515794127257600\n493515794127257600 493515931566211072\n493515931566211072 493515932639952896\n493515932639952896 493515933176823808\n493515933176823808 493515933311041536\n493515933311041536 493515933378150400\n493515933378150400 493515933394927616\n493515933394927616 493515933403316224\n493515933403316224 493515933404364800\n493515933404364800 493515933404430336\n493515933404430336 493515933404463104\n493515933404463104 493515933404467200\n493515933404467200 493515933404467264\n493515933404467264 493515933404467280\n493515933404467280 493515933404467288\n493515933404467288 493515933404467292\n493515933404467292 493515933404467293\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": 0,
                            "stdout": "48\n123989531008007376 123989531008007392\n123989531008007392 123989531008007424\n123989531008007424 123989531008007680\n123989531008007680 123989531008008192\n123989531008008192 123989531008040960\n123989531008040960 123989531008172032\n123989531008172032 123989531008434176\n123989531008434176 123989531010531328\n123989531010531328 123989531014725632\n123989531014725632 123989531283161088\n123989531283161088 123989531820032000\n123989531820032000 123989533967515648\n123989533967515648 123989538262482944\n123989538262482944 123989555442352128\n123989555442352128 123989589802090496\n123989589802090496 123989727241043968\n123989727241043968 124130464729399296\n124130464729399296 124411939706109952\n124411939706109952 124974889659531264\n124974889659531264 126100789566373888\n126100789566373888 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 792633534417207296\n792633534417207296 794885334230892544\n794885334230892544 795448284184313856\n795448284184313856 795518652928491520\n795518652928491520 795527449021513728\n795527449021513728 795527723899420672\n795527723899420672 795527861338374144\n795527861338374144 795527930057850880\n795527930057850880 795527938647785472\n795527938647785472 795527940795269120\n795527940795269120 795527941063704576\n795527941063704576 795527941130813440\n795527941130813440 795527941164367872\n795527941164367872 795527941166465024\n795527941166465024 795527941167513600\n795527941167513600 795527941168037888\n795527941168037888 795527941168070656\n795527941168070656 795527941168087040\n795527941168087040 795527941168095232\n795527941168095232 795527941168099328\n795527941168099328 795527941168099840\n795527941168099840 795527941168099968\n795527941168099968 795527941168099984\n795527941168099984 795527941168099988\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": 0,
                            "stdout": "4\n288054454257713152 288054454291267584\n288054454291267584 288089638663356416\n288089638663356416 288230376151711744\n288230376151711744 288230376160100352\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": 0,
                            "stdout": "57\n395279993370173227 395279993370173228\n395279993370173228 395279993370173232\n395279993370173232 395279993370173248\n395279993370173248 395279993370173312\n395279993370173312 395279993370173440\n395279993370173440 395279993370181632\n395279993370181632 395279993370312704\n395279993370312704 395279993370836992\n395279993370836992 395279993371885568\n395279993371885568 395279993376079872\n395279993376079872 395279993510297600\n395279993510297600 395279993778733056\n395279993778733056 395279994315603968\n395279994315603968 395279996463087616\n395279996463087616 395280065182564352\n395280065182564352 395280202621517824\n395280202621517824 395280477499424768\n395280477499424768 395281027255238656\n395281027255238656 395283226278494208\n395283226278494208 395287624325005312\n395287624325005312 395296420418027520\n395296420418027520 395331604790116352\n395331604790116352 395472342278471680\n395472342278471680 395753817255182336\n395753817255182336 396316767208603648\n396316767208603648 432345564227567616\n432345564227567616 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 729583139634020352\n729583139634020352 734086739261390848\n734086739261390848 736338539075076096\n736338539075076096 737464438981918720\n737464438981918720 737745913958629376\n737745913958629376 737816282702807040\n737816282702807040 737851467074895872\n737851467074895872 737869059260940288\n737869059260940288 737873457307451392\n737873457307451392 737875656330706944\n737875656330706944 737876755842334720\n737876755842334720 737876773022203904\n737876773022203904 737876777317171200\n737876777317171200 737876777854042112\n737876777854042112 737876777988259840\n737876777988259840 737876778055368704\n737876778055368704 737876778088923136\n737876778088923136 737876778091020288\n737876778091020288 737876778092068864\n737876778092068864 737876778092331008\n737876778092331008 737876778092363776\n737876778092363776 737876778092380160\n737876778092380160 737876778092388352\n737876778092388352 737876778092390400\n737876778092390400 737876778092391424\n737876778092391424 737876778092391936\n737876778092391936 737876778092392192\n737876778092392192 737876778092392196\n737876778092392196 737876778092392198\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_03",
                            "returncode": 0,
                            "stdout": "8\n3940649673945088 3940649673949184\n3940649673949184 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 11258999068426240\n11258999068426240 11540474045136896\n11540474045136896 11549270138159104\n11549270138159104 11549545016066048\n11549545016066048 11549545024454656\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": 0,
                            "stdout": "61\n61398917963652103 61398917963652104\n61398917963652104 61398917963652112\n61398917963652112 61398917963652128\n61398917963652128 61398917963652160\n61398917963652160 61398917963652224\n61398917963652224 61398917963652352\n61398917963652352 61398917963652608\n61398917963652608 61398917963653120\n61398917963653120 61398917963661312\n61398917963661312 61398917963677696\n61398917963677696 61398917963710464\n61398917963710464 61398917963841536\n61398917963841536 61398917964103680\n61398917964103680 61398917964627968\n61398917964627968 61398917966725120\n61398917966725120 61398917983502336\n61398917983502336 61398918117720064\n61398918117720064 61398918654590976\n61398918654590976 61398919728332800\n61398919728332800 61398928318267392\n61398928318267392 61401127341522944\n61401127341522944 61405525388034048\n61405525388034048 61414321481056256\n61414321481056256 61431913667100672\n61431913667100672 61502282411278336\n61502282411278336 61643019899633664\n61643019899633664 61924494876344320\n61924494876344320 63050394783186944\n63050394783186944 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 180143985094819840\n180143985094819840 198158383604301824\n198158383604301824 198721333557723136\n198721333557723136 199002808534433792\n199002808534433792 199143546022789120\n199143546022789120 199213914766966784\n199213914766966784 199249099139055616\n199249099139055616 199253497185566720\n199253497185566720 199255696208822272\n199255696208822272 199256795720450048\n199256795720450048 199257345476263936\n199257345476263936 199257414195740672\n199257414195740672 199257448555479040\n199257448555479040 199257465735348224\n199257465735348224 199257470030315520\n199257470030315520 199257470298750976\n199257470298750976 199257470432968704\n199257470432968704 199257470466523136\n199257470466523136 199257470468620288\n199257470468620288 199257470469668864\n199257470469668864 199257470470193152\n199257470470193152 199257470470455296\n199257470470455296 199257470470586368\n199257470470586368 199257470470594560\n199257470470594560 199257470470596608\n199257470470596608 199257470470596864\n199257470470596864 199257470470596992\n199257470470596992 199257470470597056\n199257470470597056 199257470470597072\n199257470470597072 199257470470597076\n199257470470597076 199257470470597078\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": 0,
                            "stdout": "1\n0 1024\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": 0,
                            "stdout": "51\n860329287908420023 860329287908420024\n860329287908420024 860329287908420032\n860329287908420032 860329287908420096\n860329287908420096 860329287908420608\n860329287908420608 860329287908421632\n860329287908421632 860329287908425728\n860329287908425728 860329287908458496\n860329287908458496 860329287908589568\n860329287908589568 860329287909113856\n860329287909113856 860329287910162432\n860329287910162432 860329287914356736\n860329287914356736 860329287981465600\n860329287981465600 860329288518336512\n860329288518336512 860329297108271104\n860329297108271104 860329365827747840\n860329365827747840 860330465339375616\n860330465339375616 860332664362631168\n860332664362631168 860337062409142272\n860337062409142272 860345858502164480\n860345858502164480 860363450688208896\n860363450688208896 860398635060297728\n860398635060297728 860469003804475392\n860469003804475392 860750478781186048\n860750478781186048 861313428734607360\n861313428734607360 862439328641449984\n862439328641449984 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1044835113549955072\n1044835113549955072 1062849512059437056\n1062849512059437056 1067353111686807552\n1067353111686807552 1067916061640228864\n1067916061640228864 1068056799128584192\n1068056799128584192 1068127167872761856\n1068127167872761856 1068162352244850688\n1068162352244850688 1068166750291361792\n1068166750291361792 1068167025169268736\n1068167025169268736 1068167042349137920\n1068167042349137920 1068167042382692352\n1068167042382692352 1068167042391080960\n1068167042391080960 1068167042392129536\n1068167042392129536 1068167042392653824\n1068167042392653824 1068167042392784896\n1068167042392784896 1068167042392850432\n1068167042392850432 1068167042392883200\n1068167042392883200 1068167042392899584\n1068167042392899584 1068167042392901632\n1068167042392901632 1068167042392902656\n1068167042392902656 1068167042392903168\n1068167042392903168 1068167042392903232\n1068167042392903232 1068167042392903248\n1068167042392903248 1068167042392903250\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": 0,
                            "stdout": "67\n278964037634255119 278964037634255120\n278964037634255120 278964037634255136\n278964037634255136 278964037634255168\n278964037634255168 278964037634255232\n278964037634255232 278964037634255360\n278964037634255360 278964037634255872\n278964037634255872 278964037634256896\n278964037634256896 278964037634260992\n278964037634260992 278964037634293760\n278964037634293760 278964037634359296\n278964037634359296 278964037634490368\n278964037634490368 278964037635538944\n278964037635538944 278964037637636096\n278964037637636096 278964037646024704\n278964037646024704 278964037662801920\n278964037662801920 278964037696356352\n278964037696356352 278964037763465216\n278964037763465216 278964037897682944\n278964037897682944 278964040045166592\n278964040045166592 278964044340133888\n278964044340133888 278964052930068480\n278964052930068480 278964070109937664\n278964070109937664 278964104469676032\n278964104469676032 278964241908629504\n278964241908629504 278964791664443392\n278964791664443392 278965891176071168\n278965891176071168 278968090199326720\n278968090199326720 278976886292348928\n278976886292348928 279012070664437760\n279012070664437760 279082439408615424\n279082439408615424 279223176896970752\n279223176896970752 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 792633534417207296\n792633534417207296 828662331436171264\n828662331436171264 833165931063541760\n833165931063541760 835417730877227008\n835417730877227008 836543630784069632\n836543630784069632 836825105760780288\n836825105760780288 836860290132869120\n836860290132869120 836877882318913536\n836877882318913536 836882280365424640\n836882280365424640 836884479388680192\n836884479388680192 836884616827633664\n836884616827633664 836884651187372032\n836884651187372032 836884668367241216\n836884668367241216 836884670514724864\n836884670514724864 836884671588466688\n836884671588466688 836884672125337600\n836884672125337600 836884672158892032\n836884672158892032 836884672175669248\n836884672175669248 836884672179863552\n836884672179863552 836884672180912128\n836884672180912128 836884672181436416\n836884672181436416 836884672181567488\n836884672181567488 836884672181583872\n836884672181583872 836884672181592064\n836884672181592064 836884672181596160\n836884672181596160 836884672181598208\n836884672181598208 836884672181598464\n836884672181598464 836884672181598592\n836884672181598592 836884672181598624\n836884672181598624 836884672181598640\n836884672181598640 836884672181598648\n836884672181598648 836884672181598650\n836884672181598650 836884672181598651\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:30: error: ';' expected\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n       ^\nMain.java:30: error: ']' expected\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                 ^\nMain.java:30: error: ';' expected\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                            ^\nMain.java:30: error: illegal character: '`'\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                                           ^\nMain.java:30: error: <identifier> expected\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                                                ^\nMain.java:30: error: <identifier> expected\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                                                    ^\nMain.java:30: error: illegal character: '`'\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                                                         ^\nMain.java:30: error: illegal character: '`'\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                                                                     ^\nMain.java:30: error: <identifier> expected\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                                                                          ^\nMain.java:30: error: <identifier> expected\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                                                                              ^\nMain.java:30: error: illegal character: '`'\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                                                                                   ^\nMain.java:30: error: ';' expected\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                                                                                              ^\nMain.java:30: error: illegal character: '`'\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                                                                                                    ^\nMain.java:30: error: illegal character: '`'\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                                                                                                         ^\nMain.java:30: error: ';' expected\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                                                                                                                       ^\nMain.java:30: error: illegal character: '`'\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                                                                                                                           ^\nMain.java:30: error: illegal character: '`'\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                                                                                                                             ^\nMain.java:30: error: ';' expected\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                                                                                                                                       ^\nMain.java:30: error: ';' expected\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                                                                                                                                                    ^\nMain.java:30: error: ';' expected\nThe bug in line [10] is that the condition `left % w != 0` should be `left % w == 0` to ensure that `left` is divisible by `w`. Here is the complete corrected method:\n                                                                                                                                                                     ^\n20 errors\n"
                }
            }
        },
        "prompt_apr_2": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:64: error: <identifier> expected\nNote: Ensure that the `Pair` class is defined properly with `getX()` and `getY()` methods, or you may use a different approach to store and retrieve the pair values.}\n    ^\nMain.java:64: error: ';' expected\nNote: Ensure that the `Pair` class is defined properly with `getX()` and `getY()` methods, or you may use a different approach to store and retrieve the pair values.}\n                 ^\nMain.java:64: error: illegal character: '`'\nNote: Ensure that the `Pair` class is defined properly with `getX()` and `getY()` methods, or you may use a different approach to store and retrieve the pair values.}\n                      ^\nMain.java:64: error: illegal character: '`'\nNote: Ensure that the `Pair` class is defined properly with `getX()` and `getY()` methods, or you may use a different approach to store and retrieve the pair values.}\n                           ^\nMain.java:64: error: '{' expected\nNote: Ensure that the `Pair` class is defined properly with `getX()` and `getY()` methods, or you may use a different approach to store and retrieve the pair values.}\n                                     ^\nMain.java:64: error: illegal character: '`'\nNote: Ensure that the `Pair` class is defined properly with `getX()` and `getY()` methods, or you may use a different approach to store and retrieve the pair values.}\n                                                            ^\nMain.java:64: error: illegal character: '`'\nNote: Ensure that the `Pair` class is defined properly with `getX()` and `getY()` methods, or you may use a different approach to store and retrieve the pair values.}\n                                                                   ^\nMain.java:64: error: illegal character: '`'\nNote: Ensure that the `Pair` class is defined properly with `getX()` and `getY()` methods, or you may use a different approach to store and retrieve the pair values.}\n                                                                         ^\nMain.java:64: error: illegal character: '`'\nNote: Ensure that the `Pair` class is defined properly with `getX()` and `getY()` methods, or you may use a different approach to store and retrieve the pair values.}\n                                                                                ^\nMain.java:64: error: reached end of file while parsing\nNote: Ensure that the `Pair` class is defined properly with `getX()` and `getY()` methods, or you may use a different approach to store and retrieve the pair values.}\n                                                                                                                                                                      ^\n10 errors\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:30: error: <identifier> expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n         ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                    ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                             ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                   ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                    ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                             ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                      ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                    ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                             ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                        ^\nMain.java:30: error: <identifier> expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                            ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                        ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                          ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                                    ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                                              ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                                                       ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                                                            ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                                                                       ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                                                                                  ^\nMain.java:30: error: <identifier> expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                                                                                     ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                                                                                                   ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                                                                                                               ^\nMain.java:30: error: <identifier> expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                                                                                                                     ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                                                                                                                            ^\nMain.java:30: error: illegal character: '`'\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                                                                                                                                 ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                                                                                                                                          ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                                                                                                                                                ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                                                                                                                                                         ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                                                                                                                                                                   ^\nMain.java:30: error: ';' expected\nCertainly! The issue with the line `long w = 1 << i;` is that it calculates a power of two correctly but does not handle the case where `i` might be too large for the `long` data type. To ensure we do not exceed the maximum value for a `long`, we can add a check to limit the shift operation.\n                                                                                                                                                                                                                                                                                                   ^\nMain.java:32: error: ';' expected\nHere is the complete corrected method:\n       ^\nMain.java:32: error: ';' expected\nHere is the complete corrected method:\n                    ^\nMain.java:32: error: ';' expected\nHere is the complete corrected method:\n                                     ^\nMain.java:34: error: illegal character: '`'\n```java\n^\nMain.java:34: error: illegal character: '`'\n```java\n ^\nMain.java:34: error: illegal character: '`'\n```java\n  ^\nMain.java:34: error: <identifier> expected\n```java\n       ^\nMain.java:35: error: <identifier> expected\nimport java.util.ArrayList;\n                          ^\nMain.java:36: error: illegal start of type\nimport java.util.List;\n^\nMain.java:36: error: <identifier> expected\nimport java.util.List;\n                     ^\nMain.java:37: error: illegal start of type\nimport java.util.Scanner;\n^\nMain.java:37: error: <identifier> expected\nimport java.util.Scanner;\n                        ^\nMain.java:91: error: illegal character: '`'\n```\n^\nMain.java:91: error: illegal character: '`'\n```\n ^\nMain.java:91: error: illegal character: '`'\n```\n  ^\nMain.java:93: error: ';' expected\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                 ^\nMain.java:93: error: ';' expected\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                          ^\nMain.java:93: error: ';' expected\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                          ^\nMain.java:93: error: ';' expected\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                                  ^\nMain.java:93: error: ';' expected\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                                           ^\nMain.java:93: error: ';' expected\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                                                     ^\nMain.java:93: error: ';' expected\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                                                                     ^\nMain.java:93: error: illegal character: '`'\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                                                                               ^\nMain.java:93: error: illegal character: '`'\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                                                                                  ^\nMain.java:93: error: illegal character: '`'\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                                                                                               ^\nMain.java:93: error: illegal character: '`'\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                                                                                                 ^\nMain.java:93: error: <identifier> expected\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                                                                                                                ^\nMain.java:93: error: ';' expected\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                                                                                                                     ^\nMain.java:93: error: ';' expected\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                                                                                                                              ^\nMain.java:93: error: ';' expected\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                                                                                                                                      ^\nMain.java:93: error: <identifier> expected\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                                                                                                                                         ^\nMain.java:93: error: ';' expected\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                                                                                                                                                          ^\nMain.java:93: error: ';' expected\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                                                                                                                                                                    ^\nMain.java:93: error: ';' expected\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                                                                                                                                                                            ^\nMain.java:93: error: illegal character: '`'\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                                                                                                                                                                               ^\nMain.java:93: error: illegal character: '`'\nThis code ensures that the shift operation is safe and does not cause overflow issues by using `1L` instead of `1`. Additionally, the loop now runs up to 63 iterations to cover all bits in a `long`.}\n                                                                                                                                                                                                    ^\n67 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": 0,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_test_11",
                            "returncode": 0,
                            "stdout": "55\n893124445952679748 893124445952679752\n893124445952679752 893124445952679760\n893124445952679760 893124445952679776\n893124445952679776 893124445952679808\n893124445952679808 893124445952679936\n893124445952679936 893124445952688128\n893124445952688128 893124445952704512\n893124445952704512 893124445952737280\n893124445952737280 893124445952802816\n893124445952802816 893124445953064960\n893124445953064960 893124445957259264\n893124445957259264 893124445965647872\n893124445965647872 893124445999202304\n893124445999202304 893124446536073216\n893124446536073216 893124447609815040\n893124447609815040 893124464789684224\n893124464789684224 893124499149422592\n893124499149422592 893128897195933696\n893128897195933696 893137693288955904\n893137693288955904 893155285475000320\n893155285475000320 893190469847089152\n893190469847089152 893260838591266816\n893260838591266816 893401576079622144\n893401576079622144 893964526033043456\n893964526033043456 896216325846728704\n896216325846728704 900719925474099200\n900719925474099200 936748722493063168\n936748722493063168 1008806316530991104\n1008806316530991104 1026820715040473088\n1026820715040473088 1035827914295214080\n1035827914295214080 1038079714108899328\n1038079714108899328 1039205614015741952\n1039205614015741952 1039768563969163264\n1039768563969163264 1039803748341252096\n1039803748341252096 1039821340527296512\n1039821340527296512 1039830136620318720\n1039830136620318720 1039834534666829824\n1039834534666829824 1039836733690085376\n1039836733690085376 1039837833201713152\n1039837833201713152 1039838382957527040\n1039838382957527040 1039838417317265408\n1039838417317265408 1039838425907200000\n1039838425907200000 1039838426980941824\n1039838426980941824 1039838427517812736\n1039838427517812736 1039838427534589952\n1039838427534589952 1039838427542978560\n1039838427542978560 1039838427545075712\n1039838427545075712 1039838427545092096\n1039838427545092096 1039838427545096192\n1039838427545096192 1039838427545097216\n1039838427545097216 1039838427545097728\n1039838427545097728 1039838427545097984\n1039838427545097984 1039838427545098112\n1039838427545098112 1039838427545098128\n1039838427545098128 1039838427545098129\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": 0,
                            "stdout": "1\n0 1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": 0,
                            "stdout": "98\n505529333062828545 505529333062828546\n505529333062828546 505529333062828548\n505529333062828548 505529333062828552\n505529333062828552 505529333062828560\n505529333062828560 505529333062828576\n505529333062828576 505529333062828608\n505529333062828608 505529333062828672\n505529333062828672 505529333062828800\n505529333062828800 505529333062829056\n505529333062829056 505529333062830080\n505529333062830080 505529333062832128\n505529333062832128 505529333062836224\n505529333062836224 505529333062844416\n505529333062844416 505529333062860800\n505529333062860800 505529333062893568\n505529333062893568 505529333062959104\n505529333062959104 505529333063090176\n505529333063090176 505529333063352320\n505529333063352320 505529333063876608\n505529333063876608 505529333064925184\n505529333064925184 505529333067022336\n505529333067022336 505529333083799552\n505529333083799552 505529333117353984\n505529333117353984 505529333184462848\n505529333184462848 505529333318680576\n505529333318680576 505529333587116032\n505529333587116032 505529334123986944\n505529334123986944 505529335197728768\n505529335197728768 505529337345212416\n505529337345212416 505529341640179712\n505529341640179712 505529350230114304\n505529350230114304 505529367409983488\n505529367409983488 505529401769721856\n505529401769721856 505529470489198592\n505529470489198592 505529607928152064\n505529607928152064 505530157683965952\n505530157683965952 505531257195593728\n505531257195593728 505533456218849280\n505533456218849280 505537854265360384\n505537854265360384 505546650358382592\n505546650358382592 505564242544427008\n505564242544427008 505599426916515840\n505599426916515840 505669795660693504\n505669795660693504 505810533149048832\n505810533149048832 506092008125759488\n506092008125759488 506654958079180800\n506654958079180800 508906757892866048\n508906757892866048 513410357520236544\n513410357520236544 522417556774977536\n522417556774977536 540431955284459520\n540431955284459520 558446353793941504\n558446353793941504 567453553048682496\n567453553048682496 571957152676052992\n571957152676052992 574208952489738240\n574208952489738240 575334852396580864\n575334852396580864 575616327373291520\n575616327373291520 575757064861646848\n575757064861646848 575827433605824512\n575827433605824512 575862617977913344\n575862617977913344 575880210163957760\n575880210163957760 575889006256979968\n575889006256979968 575893404303491072\n575893404303491072 575895603326746624\n575895603326746624 575896702838374400\n575896702838374400 575897252594188288\n575897252594188288 575897527472095232\n575897527472095232 575897664911048704\n575897664911048704 575897733630525440\n575897733630525440 575897767990263808\n575897767990263808 575897785170132992\n575897785170132992 575897793760067584\n575897793760067584 575897795907551232\n575897795907551232 575897796981293056\n575897796981293056 575897797518163968\n575897797518163968 575897797786599424\n575897797786599424 575897797920817152\n575897797920817152 575897797987926016\n575897797987926016 575897798021480448\n575897798021480448 575897798038257664\n575897798038257664 575897798046646272\n575897798046646272 575897798050840576\n575897798050840576 575897798052937728\n575897798052937728 575897798053986304\n575897798053986304 575897798054510592\n575897798054510592 575897798054772736\n575897798054772736 575897798054903808\n575897798054903808 575897798054936576\n575897798054936576 575897798054952960\n575897798054952960 575897798054953984\n575897798054953984 575897798054954496\n575897798054954496 575897798054954752\n575897798054954752 575897798054954880\n575897798054954880 575897798054954944\n575897798054954944 575897798054954976\n575897798054954976 575897798054954992\n575897798054954992 575897798054954996\n575897798054954996 575897798054954998\n575897798054954998 575897798054954999\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": 0,
                            "stdout": "61\n181262195287766621 181262195287766622\n181262195287766622 181262195287766624\n181262195287766624 181262195287766656\n181262195287766656 181262195287766784\n181262195287766784 181262195287767040\n181262195287767040 181262195287769088\n181262195287769088 181262195287785472\n181262195287785472 181262195287916544\n181262195287916544 181262195288440832\n181262195288440832 181262195290537984\n181262195290537984 181262195298926592\n181262195298926592 181262195332481024\n181262195332481024 181262195399589888\n181262195399589888 181262195936460800\n181262195936460800 181262197010202624\n181262197010202624 181262205600137216\n181262205600137216 181262222780006400\n181262222780006400 181262257139744768\n181262257139744768 181262325859221504\n181262325859221504 181262463298174976\n181262463298174976 181262738176081920\n181262738176081920 181263287931895808\n181263287931895808 181265486955151360\n181265486955151360 181269885001662464\n181269885001662464 182395784908505088\n182395784908505088 184647584722190336\n184647584722190336 189151184349560832\n189151184349560832 198158383604301824\n198158383604301824 216172782113783808\n216172782113783808 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 756604737398243328\n756604737398243328 774619135907725312\n774619135907725312 776870935721410560\n776870935721410560 777996835628253184\n777996835628253184 778559785581674496\n778559785581674496 778841260558385152\n778841260558385152 778981998046740480\n778981998046740480 778990794139762688\n778990794139762688 778991893651390464\n778991893651390464 778992443407204352\n778992443407204352 778992718285111296\n778992718285111296 778992726875045888\n778992726875045888 778992729022529536\n778992729022529536 778992730096271360\n778992730096271360 778992730364706816\n778992730364706816 778992730381484032\n778992730381484032 778992730385678336\n778992730385678336 778992730387775488\n778992730387775488 778992730388037632\n778992730388037632 778992730388168704\n778992730388168704 778992730388234240\n778992730388234240 778992730388267008\n778992730388267008 778992730388283392\n778992730388283392 778992730388287488\n778992730388287488 778992730388288512\n778992730388288512 778992730388288768\n778992730388288768 778992730388288800\n778992730388288800 778992730388288816\n778992730388288816 778992730388288824\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": 0,
                            "stdout": "2\n288230376151711744 576460752303423488\n576460752303423488 864691128455135232\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": 0,
                            "stdout": "59\n366943872216607560 366943872216607568\n366943872216607568 366943872216607584\n366943872216607584 366943872216607616\n366943872216607616 366943872216607744\n366943872216607744 366943872216608768\n366943872216608768 366943872216612864\n366943872216612864 366943872216629248\n366943872216629248 366943872216662016\n366943872216662016 366943872216727552\n366943872216727552 366943872216989696\n366943872216989696 366943872284098560\n366943872284098560 366943872418316288\n366943872418316288 366943881008250880\n366943881008250880 366943898188120064\n366943898188120064 366943932547858432\n366943932547858432 366944001267335168\n366944001267335168 366944138706288640\n366944138706288640 366944413584195584\n366944413584195584 366946612607451136\n366946612607451136 366955408700473344\n366955408700473344 366973000886517760\n366973000886517760 367043369630695424\n367043369630695424 369295169444380672\n369295169444380672 378302368699121664\n378302368699121664 396316767208603648\n396316767208603648 432345564227567616\n432345564227567616 576460752303423488\n576460752303423488 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1080863910568919040\n1080863910568919040 1081004648057274368\n1081004648057274368 1081039832429363200\n1081039832429363200 1081057424615407616\n1081057424615407616 1081066220708429824\n1081066220708429824 1081068419731685376\n1081068419731685376 1081069519243313152\n1081069519243313152 1081070068999127040\n1081070068999127040 1081070343877033984\n1081070343877033984 1081070412596510720\n1081070412596510720 1081070446956249088\n1081070446956249088 1081070455546183680\n1081070455546183680 1081070457693667328\n1081070457693667328 1081070458767409152\n1081070458767409152 1081070459304280064\n1081070459304280064 1081070459371388928\n1081070459371388928 1081070459388166144\n1081070459388166144 1081070459390263296\n1081070459390263296 1081070459391311872\n1081070459391311872 1081070459391574016\n1081070459391574016 1081070459391705088\n1081070459391705088 1081070459391707136\n1081070459391707136 1081070459391708160\n1081070459391708160 1081070459391708416\n1081070459391708416 1081070459391708544\n1081070459391708544 1081070459391708608\n1081070459391708608 1081070459391708640\n1081070459391708640 1081070459391708656\n1081070459391708656 1081070459391708660\n1081070459391708660 1081070459391708661\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": 0,
                            "stdout": "52\n813135255471707232 813135255471707264\n813135255471707264 813135255471707392\n813135255471707392 813135255471707648\n813135255471707648 813135255471708160\n813135255471708160 813135255471710208\n813135255471710208 813135255471718400\n813135255471718400 813135255471783936\n813135255471783936 813135255471915008\n813135255471915008 813135255476109312\n813135255476109312 813135255492886528\n813135255492886528 813135255526440960\n813135255526440960 813135255593549824\n813135255593549824 813135255861985280\n813135255861985280 813135260156952576\n813135260156952576 813135268746887168\n813135268746887168 813135303106625536\n813135303106625536 813135577984532480\n813135577984532480 813136127740346368\n813136127740346368 813137227251974144\n813137227251974144 813146023344996352\n813146023344996352 813181207717085184\n813181207717085184 813462682693795840\n813462682693795840 814025632647217152\n814025632647217152 815151532554059776\n815151532554059776 819655132181430272\n819655132181430272 828662331436171264\n828662331436171264 846676729945653248\n846676729945653248 847802629852495872\n847802629852495872 848084104829206528\n848084104829206528 848154473573384192\n848154473573384192 848172065759428608\n848172065759428608 848174264782684160\n848174264782684160 848174539660591104\n848174539660591104 848174677099544576\n848174677099544576 848174745819021312\n848174745819021312 848174780178759680\n848174780178759680 848174788768694272\n848174788768694272 848174793063661568\n848174793063661568 848174794137403392\n848174794137403392 848174794405838848\n848174794405838848 848174794472947712\n848174794472947712 848174794506502144\n848174794506502144 848174794508599296\n848174794508599296 848174794509647872\n848174794509647872 848174794509713408\n848174794509713408 848174794509729792\n848174794509729792 848174794509733888\n848174794509733888 848174794509734912\n848174794509734912 848174794509735424\n848174794509735424 848174794509735680\n848174794509735680 848174794509735808\n848174794509735808 848174794509735812\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": 0,
                            "stdout": "110\n504403158265495553 504403158265495554\n504403158265495554 504403158265495556\n504403158265495556 504403158265495560\n504403158265495560 504403158265495568\n504403158265495568 504403158265495584\n504403158265495584 504403158265495616\n504403158265495616 504403158265495680\n504403158265495680 504403158265495808\n504403158265495808 504403158265496064\n504403158265496064 504403158265496576\n504403158265496576 504403158265497600\n504403158265497600 504403158265499648\n504403158265499648 504403158265503744\n504403158265503744 504403158265511936\n504403158265511936 504403158265528320\n504403158265528320 504403158265561088\n504403158265561088 504403158265626624\n504403158265626624 504403158265757696\n504403158265757696 504403158266019840\n504403158266019840 504403158266544128\n504403158266544128 504403158267592704\n504403158267592704 504403158269689856\n504403158269689856 504403158273884160\n504403158273884160 504403158282272768\n504403158282272768 504403158299049984\n504403158299049984 504403158332604416\n504403158332604416 504403158399713280\n504403158399713280 504403158533931008\n504403158533931008 504403158802366464\n504403158802366464 504403159339237376\n504403159339237376 504403160412979200\n504403160412979200 504403162560462848\n504403162560462848 504403166855430144\n504403166855430144 504403175445364736\n504403175445364736 504403192625233920\n504403192625233920 504403226984972288\n504403226984972288 504403295704449024\n504403295704449024 504403433143402496\n504403433143402496 504403708021309440\n504403708021309440 504404257777123328\n504404257777123328 504405357288751104\n504405357288751104 504407556312006656\n504407556312006656 504411954358517760\n504411954358517760 504420750451539968\n504420750451539968 504438342637584384\n504438342637584384 504473527009673216\n504473527009673216 504543895753850880\n504543895753850880 504684633242206208\n504684633242206208 504966108218916864\n504966108218916864 505529058172338176\n505529058172338176 506654958079180800\n506654958079180800 508906757892866048\n508906757892866048 513410357520236544\n513410357520236544 522417556774977536\n522417556774977536 540431955284459520\n540431955284459520 558446353793941504\n558446353793941504 567453553048682496\n567453553048682496 571957152676052992\n571957152676052992 574208952489738240\n574208952489738240 575334852396580864\n575334852396580864 575897802350002176\n575897802350002176 576179277326712832\n576179277326712832 576320014815068160\n576320014815068160 576390383559245824\n576390383559245824 576425567931334656\n576425567931334656 576443160117379072\n576443160117379072 576451956210401280\n576451956210401280 576456354256912384\n576456354256912384 576458553280167936\n576458553280167936 576459652791795712\n576459652791795712 576460202547609600\n576460202547609600 576460477425516544\n576460477425516544 576460614864470016\n576460614864470016 576460683583946752\n576460683583946752 576460717943685120\n576460717943685120 576460735123554304\n576460735123554304 576460743713488896\n576460743713488896 576460748008456192\n576460748008456192 576460750155939840\n576460750155939840 576460751229681664\n576460751229681664 576460751766552576\n576460751766552576 576460752034988032\n576460752034988032 576460752169205760\n576460752169205760 576460752236314624\n576460752236314624 576460752269869056\n576460752269869056 576460752286646272\n576460752286646272 576460752295034880\n576460752295034880 576460752299229184\n576460752299229184 576460752301326336\n576460752301326336 576460752302374912\n576460752302374912 576460752302899200\n576460752302899200 576460752303161344\n576460752303161344 576460752303292416\n576460752303292416 576460752303357952\n576460752303357952 576460752303390720\n576460752303390720 576460752303407104\n576460752303407104 576460752303415296\n576460752303415296 576460752303419392\n576460752303419392 576460752303421440\n576460752303421440 576460752303422464\n576460752303422464 576460752303422976\n576460752303422976 576460752303423232\n576460752303423232 576460752303423360\n576460752303423360 576460752303423424\n576460752303423424 576460752303423456\n576460752303423456 576460752303423472\n576460752303423472 576460752303423480\n576460752303423480 576460752303423484\n576460752303423484 576460752303423486\n576460752303423486 576460752303423487\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": 0,
                            "stdout": "25\n432344644764301224 432344644764301232\n432344644764301232 432344644764301248\n432344644764301248 432344644764301312\n432344644764301312 432344644764303360\n432344644764303360 432344644764827648\n432344644764827648 432344644769021952\n432344644769021952 432344644836130816\n432344644836130816 432344645104566272\n432344645104566272 432344653694500864\n432344653694500864 432344670874370048\n432344670874370048 432344739593846784\n432344739593846784 432345014471753728\n432345014471753728 432345564227567616\n432345564227567616 504403158265495552\n504403158265495552 540431955284459520\n540431955284459520 558446353793941504\n558446353793941504 558448552817197056\n558448552817197056 558448827695104000\n558448827695104000 558448896414580736\n558448896414580736 558448896683016192\n558448896683016192 558448896716570624\n558448896716570624 558448896716832768\n558448896716832768 558448896716849152\n558448896716849152 558448896716853248\n558448896716853248 558448896716855296\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": 0,
                            "stdout": "5\n3 4\n4 8\n8 16\n16 18\n18 19\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": 0,
                            "stdout": "60\n1 2\n2 4\n4 8\n8 16\n16 32\n32 64\n64 128\n128 256\n256 512\n512 1024\n1024 2048\n2048 4096\n4096 8192\n8192 16384\n16384 32768\n32768 65536\n65536 131072\n131072 262144\n262144 524288\n524288 1048576\n1048576 2097152\n2097152 4194304\n4194304 8388608\n8388608 16777216\n16777216 33554432\n33554432 67108864\n67108864 134217728\n134217728 268435456\n268435456 536870912\n536870912 1073741824\n1073741824 2147483648\n2147483648 4294967296\n4294967296 8589934592\n8589934592 17179869184\n17179869184 34359738368\n34359738368 68719476736\n68719476736 137438953472\n137438953472 274877906944\n274877906944 549755813888\n549755813888 1099511627776\n1099511627776 2199023255552\n2199023255552 4398046511104\n4398046511104 8796093022208\n8796093022208 17592186044416\n17592186044416 35184372088832\n35184372088832 70368744177664\n70368744177664 140737488355328\n140737488355328 281474976710656\n281474976710656 562949953421312\n562949953421312 1125899906842624\n1125899906842624 2251799813685248\n2251799813685248 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 1152921504606846976\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": 0,
                            "stdout": "2\n1 2\n2 3\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": 0,
                            "stdout": "118\n1 2\n2 4\n4 8\n8 16\n16 32\n32 64\n64 128\n128 256\n256 512\n512 1024\n1024 2048\n2048 4096\n4096 8192\n8192 16384\n16384 32768\n32768 65536\n65536 131072\n131072 262144\n262144 524288\n524288 1048576\n1048576 2097152\n2097152 4194304\n4194304 8388608\n8388608 16777216\n16777216 33554432\n33554432 67108864\n67108864 134217728\n134217728 268435456\n268435456 536870912\n536870912 1073741824\n1073741824 2147483648\n2147483648 4294967296\n4294967296 8589934592\n8589934592 17179869184\n17179869184 34359738368\n34359738368 68719476736\n68719476736 137438953472\n137438953472 274877906944\n274877906944 549755813888\n549755813888 1099511627776\n1099511627776 2199023255552\n2199023255552 4398046511104\n4398046511104 8796093022208\n8796093022208 17592186044416\n17592186044416 35184372088832\n35184372088832 70368744177664\n70368744177664 140737488355328\n140737488355328 281474976710656\n281474976710656 562949953421312\n562949953421312 1125899906842624\n1125899906842624 2251799813685248\n2251799813685248 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1080863910568919040\n1080863910568919040 1116892707587883008\n1116892707587883008 1134907106097364992\n1134907106097364992 1143914305352105984\n1143914305352105984 1148417904979476480\n1148417904979476480 1150669704793161728\n1150669704793161728 1151795604700004352\n1151795604700004352 1152358554653425664\n1152358554653425664 1152640029630136320\n1152640029630136320 1152780767118491648\n1152780767118491648 1152851135862669312\n1152851135862669312 1152886320234758144\n1152886320234758144 1152903912420802560\n1152903912420802560 1152912708513824768\n1152912708513824768 1152917106560335872\n1152917106560335872 1152919305583591424\n1152919305583591424 1152920405095219200\n1152920405095219200 1152920954851033088\n1152920954851033088 1152921229728940032\n1152921229728940032 1152921367167893504\n1152921367167893504 1152921435887370240\n1152921435887370240 1152921470247108608\n1152921470247108608 1152921487426977792\n1152921487426977792 1152921496016912384\n1152921496016912384 1152921500311879680\n1152921500311879680 1152921502459363328\n1152921502459363328 1152921503533105152\n1152921503533105152 1152921504069976064\n1152921504069976064 1152921504338411520\n1152921504338411520 1152921504472629248\n1152921504472629248 1152921504539738112\n1152921504539738112 1152921504573292544\n1152921504573292544 1152921504590069760\n1152921504590069760 1152921504598458368\n1152921504598458368 1152921504602652672\n1152921504602652672 1152921504604749824\n1152921504604749824 1152921504605798400\n1152921504605798400 1152921504606322688\n1152921504606322688 1152921504606584832\n1152921504606584832 1152921504606715904\n1152921504606715904 1152921504606781440\n1152921504606781440 1152921504606814208\n1152921504606814208 1152921504606830592\n1152921504606830592 1152921504606838784\n1152921504606838784 1152921504606842880\n1152921504606842880 1152921504606844928\n1152921504606844928 1152921504606845952\n1152921504606845952 1152921504606846464\n1152921504606846464 1152921504606846720\n1152921504606846720 1152921504606846848\n1152921504606846848 1152921504606846912\n1152921504606846912 1152921504606846944\n1152921504606846944 1152921504606846960\n1152921504606846960 1152921504606846968\n1152921504606846968 1152921504606846972\n1152921504606846972 1152921504606846974\n1152921504606846974 1152921504606846975\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": 0,
                            "stdout": "1\n1 2\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": 0,
                            "stdout": "1\n576460752303423488 1152921504606846976\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": 0,
                            "stdout": "60\n0 576460752303423488\n576460752303423488 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1080863910568919040\n1080863910568919040 1116892707587883008\n1116892707587883008 1134907106097364992\n1134907106097364992 1143914305352105984\n1143914305352105984 1148417904979476480\n1148417904979476480 1150669704793161728\n1150669704793161728 1151795604700004352\n1151795604700004352 1152358554653425664\n1152358554653425664 1152640029630136320\n1152640029630136320 1152780767118491648\n1152780767118491648 1152851135862669312\n1152851135862669312 1152886320234758144\n1152886320234758144 1152903912420802560\n1152903912420802560 1152912708513824768\n1152912708513824768 1152917106560335872\n1152917106560335872 1152919305583591424\n1152919305583591424 1152920405095219200\n1152920405095219200 1152920954851033088\n1152920954851033088 1152921229728940032\n1152921229728940032 1152921367167893504\n1152921367167893504 1152921435887370240\n1152921435887370240 1152921470247108608\n1152921470247108608 1152921487426977792\n1152921487426977792 1152921496016912384\n1152921496016912384 1152921500311879680\n1152921500311879680 1152921502459363328\n1152921502459363328 1152921503533105152\n1152921503533105152 1152921504069976064\n1152921504069976064 1152921504338411520\n1152921504338411520 1152921504472629248\n1152921504472629248 1152921504539738112\n1152921504539738112 1152921504573292544\n1152921504573292544 1152921504590069760\n1152921504590069760 1152921504598458368\n1152921504598458368 1152921504602652672\n1152921504602652672 1152921504604749824\n1152921504604749824 1152921504605798400\n1152921504605798400 1152921504606322688\n1152921504606322688 1152921504606584832\n1152921504606584832 1152921504606715904\n1152921504606715904 1152921504606781440\n1152921504606781440 1152921504606814208\n1152921504606814208 1152921504606830592\n1152921504606830592 1152921504606838784\n1152921504606838784 1152921504606842880\n1152921504606842880 1152921504606844928\n1152921504606844928 1152921504606845952\n1152921504606845952 1152921504606846464\n1152921504606846464 1152921504606846720\n1152921504606846720 1152921504606846848\n1152921504606846848 1152921504606846912\n1152921504606846912 1152921504606846944\n1152921504606846944 1152921504606846960\n1152921504606846960 1152921504606846968\n1152921504606846968 1152921504606846972\n1152921504606846972 1152921504606846974\n1152921504606846974 1152921504606846975\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": 0,
                            "stdout": "87\n432486315808860234 432486315808860236\n432486315808860236 432486315808860240\n432486315808860240 432486315808860256\n432486315808860256 432486315808860288\n432486315808860288 432486315808860416\n432486315808860416 432486315808860672\n432486315808860672 432486315808861184\n432486315808861184 432486315808862208\n432486315808862208 432486315808866304\n432486315808866304 432486315808882688\n432486315808882688 432486315808915456\n432486315808915456 432486315809046528\n432486315809046528 432486315809308672\n432486315809308672 432486315809832960\n432486315809832960 432486315810881536\n432486315810881536 432486315812978688\n432486315812978688 432486315817172992\n432486315817172992 432486315825561600\n432486315825561600 432486315842338816\n432486315842338816 432486315875893248\n432486315875893248 432486315943002112\n432486315943002112 432486316211437568\n432486316211437568 432486316748308480\n432486316748308480 432486318895792128\n432486318895792128 432486336075661312\n432486336075661312 432486370435399680\n432486370435399680 432486439154876416\n432486439154876416 432486576593829888\n432486576593829888 432486851471736832\n432486851471736832 432487401227550720\n432487401227550720 432488500739178496\n432488500739178496 432490699762434048\n432490699762434048 432495097808945152\n432495097808945152 432503893901967360\n432503893901967360 432521486088011776\n432521486088011776 432556670460100608\n432556670460100608 432627039204278272\n432627039204278272 432908514180988928\n432908514180988928 433471464134410240\n433471464134410240 434597364041252864\n434597364041252864 436849163854938112\n436849163854938112 441352763482308608\n441352763482308608 450359962737049600\n450359962737049600 468374361246531584\n468374361246531584 504403158265495552\n504403158265495552 522417556774977536\n522417556774977536 526921156402348032\n526921156402348032 529172956216033280\n529172956216033280 530298856122875904\n530298856122875904 530861806076297216\n530861806076297216 531143281053007872\n531143281053007872 531284018541363200\n531284018541363200 531354387285540864\n531354387285540864 531389571657629696\n531389571657629696 531407163843674112\n531407163843674112 531415959936696320\n531415959936696320 531420357983207424\n531420357983207424 531422557006462976\n531422557006462976 531423106762276864\n531423106762276864 531423381640183808\n531423381640183808 531423450359660544\n531423450359660544 531423467539529728\n531423467539529728 531423469687013376\n531423469687013376 531423470760755200\n531423470760755200 531423471297626112\n531423471297626112 531423471431843840\n531423471431843840 531423471498952704\n531423471498952704 531423471532507136\n531423471532507136 531423471549284352\n531423471549284352 531423471557672960\n531423471557672960 531423471561867264\n531423471561867264 531423471563964416\n531423471563964416 531423471564226560\n531423471564226560 531423471564357632\n531423471564357632 531423471564390400\n531423471564390400 531423471564398592\n531423471564398592 531423471564400640\n531423471564400640 531423471564401664\n531423471564401664 531423471564402176\n531423471564402176 531423471564402432\n531423471564402432 531423471564402560\n531423471564402560 531423471564402624\n531423471564402624 531423471564402656\n531423471564402656 531423471564402664\n531423471564402664 531423471564402668\n531423471564402668 531423471564402670\n531423471564402670 531423471564402671\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": 0,
                            "stdout": "63\n11801128058619141 11801128058619142\n11801128058619142 11801128058619144\n11801128058619144 11801128058619152\n11801128058619152 11801128058619168\n11801128058619168 11801128058619200\n11801128058619200 11801128058619264\n11801128058619264 11801128058619392\n11801128058619392 11801128058619904\n11801128058619904 11801128058621952\n11801128058621952 11801128058626048\n11801128058626048 11801128058634240\n11801128058634240 11801128058650624\n11801128058650624 11801128058683392\n11801128058683392 11801128058748928\n11801128058748928 11801128059011072\n11801128059011072 11801128059535360\n11801128059535360 11801128060583936\n11801128060583936 11801128094138368\n11801128094138368 11801129167880192\n11801129167880192 11801131315363840\n11801131315363840 11801135610331136\n11801135610331136 11801144200265728\n11801144200265728 11801161380134912\n11801161380134912 11801195739873280\n11801195739873280 11801333178826752\n11801333178826752 11801608056733696\n11801608056733696 11802157812547584\n11802157812547584 11804356835803136\n11804356835803136 11821949021847552\n11821949021847552 12384898975268864\n12384898975268864 13510798882111488\n13510798882111488 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 432345564227567616\n432345564227567616 468374361246531584\n468374361246531584 477381560501272576\n477381560501272576 481885160128643072\n481885160128643072 484136959942328320\n484136959942328320 484418434919038976\n484418434919038976 484488803663216640\n484488803663216640 484491002686472192\n484491002686472192 484492102198099968\n484492102198099968 484492651953913856\n484492651953913856 484492789392867328\n484492789392867328 484492858112344064\n484492858112344064 484492892472082432\n484492892472082432 484492909651951616\n484492909651951616 484492910725693440\n484492910725693440 484492910859911168\n484492910859911168 484492910927020032\n484492910927020032 484492910960574464\n484492910960574464 484492910964768768\n484492910964768768 484492910965817344\n484492910965817344 484492910965818368\n484492910965818368 484492910965818624\n484492910965818624 484492910965818688\n484492910965818688 484492910965818720\n484492910965818720 484492910965818728\n484492910965818728 484492910965818730\n484492910965818730 484492910965818731\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": 0,
                            "stdout": "85\n282183781417523 282183781417524\n282183781417524 282183781417528\n282183781417528 282183781417536\n282183781417536 282183781417600\n282183781417600 282183781417728\n282183781417728 282183781417984\n282183781417984 282183781419008\n282183781419008 282183781421056\n282183781421056 282183781425152\n282183781425152 282183781433344\n282183781433344 282183781449728\n282183781449728 282183781580800\n282183781580800 282183782629376\n282183782629376 282183784726528\n282183784726528 282183788920832\n282183788920832 282183797309440\n282183797309440 282183814086656\n282183814086656 282183847641088\n282183847641088 282183914749952\n282183914749952 282184183185408\n282184183185408 282184720056320\n282184720056320 282185793798144\n282185793798144 282187941281792\n282187941281792 282196531216384\n282196531216384 282230890954752\n282230890954752 282299610431488\n282299610431488 282574488338432\n282574488338432 283673999966208\n283673999966208 285873023221760\n285873023221760 290271069732864\n290271069732864 299067162755072\n299067162755072 316659348799488\n316659348799488 351843720888320\n351843720888320 422212465065984\n422212465065984 562949953421312\n562949953421312 1125899906842624\n1125899906842624 2251799813685248\n2251799813685248 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 216172782113783808\n216172782113783808 252201579132747776\n252201579132747776 270215977642229760\n270215977642229760 279223176896970752\n279223176896970752 283726776524341248\n283726776524341248 285978576338026496\n285978576338026496 286541526291447808\n286541526291447808 286611895035625472\n286611895035625472 286647079407714304\n286647079407714304 286664671593758720\n286664671593758720 286673467686780928\n286673467686780928 286677865733292032\n286677865733292032 286680064756547584\n286680064756547584 286681164268175360\n286681164268175360 286681714023989248\n286681714023989248 286681988901896192\n286681988901896192 286682126340849664\n286682126340849664 286682195060326400\n286682195060326400 286682229420064768\n286682229420064768 286682246599933952\n286682246599933952 286682250894901248\n286682250894901248 286682251968643072\n286682251968643072 286682252505513984\n286682252505513984 286682252773949440\n286682252773949440 286682252908167168\n286682252908167168 286682252975276032\n286682252975276032 286682253008830464\n286682253008830464 286682253017219072\n286682253017219072 286682253019316224\n286682253019316224 286682253020364800\n286682253020364800 286682253020889088\n286682253020889088 286682253020954624\n286682253020954624 286682253020987392\n286682253020987392 286682253021003776\n286682253021003776 286682253021011968\n286682253021011968 286682253021016064\n286682253021016064 286682253021018112\n286682253021018112 286682253021019136\n286682253021019136 286682253021019648\n286682253021019648 286682253021019776\n286682253021019776 286682253021019780\n286682253021019780 286682253021019781\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": 0,
                            "stdout": "28\n144106357446602451 144106357446602452\n144106357446602452 144106357446602456\n144106357446602456 144106357446602464\n144106357446602464 144106357446602496\n144106357446602496 144106357446602752\n144106357446602752 144106357446606848\n144106357446606848 144106357446672384\n144106357446672384 144106357446934528\n144106357446934528 144106357455323136\n144106357455323136 144106357488877568\n144106357488877568 144106357623095296\n144106357623095296 144106391982833664\n144106391982833664 144115188075855872\n144115188075855872 216172782113783808\n216172782113783808 252201579132747776\n252201579132747776 261208778387488768\n261208778387488768 261771728340910080\n261771728340910080 261789320526954496\n261789320526954496 261791519550210048\n261791519550210048 261791588269686784\n261791588269686784 261791622629425152\n261791622629425152 261791639809294336\n261791639809294336 261791641956777984\n261791641956777984 261791642225213440\n261791642225213440 261791642225344512\n261791642225344512 261791642225410048\n261791642225410048 261791642225414144\n261791642225414144 261791642225414176\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": 0,
                            "stdout": "1\n0 1152921504606846976\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": 0,
                            "stdout": "41\n360198504640541332 360198504640541336\n360198504640541336 360198504640541344\n360198504640541344 360198504640541376\n360198504640541376 360198504640541440\n360198504640541440 360198504640541696\n360198504640541696 360198504640542720\n360198504640542720 360198504640544768\n360198504640544768 360198504640675840\n360198504640675840 360198504640937984\n360198504640937984 360198504645132288\n360198504645132288 360198504678686720\n360198504678686720 360198504947122176\n360198504947122176 360198506020864000\n360198506020864000 360198514610798592\n360198514610798592 360198531790667776\n360198531790667776 360198566150406144\n360198566150406144 360198634869882880\n360198634869882880 360198909747789824\n360198909747789824 360200009259417600\n360200009259417600 360217601445462016\n360217601445462016 360287970189639680\n360287970189639680 432345564227567616\n432345564227567616 504403158265495552\n504403158265495552 504966108218916864\n504966108218916864 505247583195627520\n505247583195627520 505256379288649728\n505256379288649728 505257478800277504\n505257478800277504 505258028556091392\n505258028556091392 505258032851058688\n505258032851058688 505258033387929600\n505258033387929600 505258033455038464\n505258033455038464 505258033488592896\n505258033488592896 505258033496981504\n505258033496981504 505258033499078656\n505258033499078656 505258033500127232\n505258033500127232 505258033500651520\n505258033500651520 505258033500667904\n505258033500667904 505258033500676096\n505258033500676096 505258033500676608\n505258033500676608 505258033500676864\n505258033500676864 505258033500676866\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": 0,
                            "stdout": "55\n170125114320639076 170125114320639080\n170125114320639080 170125114320639088\n170125114320639088 170125114320639104\n170125114320639104 170125114320639232\n170125114320639232 170125114320639488\n170125114320639488 170125114320640000\n170125114320640000 170125114320642048\n170125114320642048 170125114320650240\n170125114320650240 170125114320683008\n170125114320683008 170125114320748544\n170125114320748544 170125114320879616\n170125114320879616 170125114321403904\n170125114321403904 170125114329792512\n170125114329792512 170125114346569728\n170125114346569728 170125114883440640\n170125114883440640 170125132063309824\n170125132063309824 170125166423048192\n170125166423048192 170125235142524928\n170125235142524928 170134031235547136\n170134031235547136 170151623421591552\n170151623421591552 170292360909946880\n170292360909946880 170573835886657536\n170573835886657536 171136785840078848\n171136785840078848 180143985094819840\n180143985094819840 198158383604301824\n198158383604301824 202661983231672320\n202661983231672320 203787883138514944\n203787883138514944 204350833091936256\n204350833091936256 204632308068646912\n204632308068646912 204634507091902464\n204634507091902464 204635606603530240\n204635606603530240 204635881481437184\n204635881481437184 204636018920390656\n204636018920390656 204636027510325248\n204636027510325248 204636029657808896\n204636029657808896 204636030731550720\n204636030731550720 204636031268421632\n204636031268421632 204636031536857088\n204636031536857088 204636031671074816\n204636031671074816 204636031704629248\n204636031704629248 204636031721406464\n204636031721406464 204636031729795072\n204636031729795072 204636031731892224\n204636031731892224 204636031732940800\n204636031732940800 204636031733465088\n204636031733465088 204636031733727232\n204636031733727232 204636031733858304\n204636031733858304 204636031733923840\n204636031733923840 204636031733956608\n204636031733956608 204636031733972992\n204636031733972992 204636031733975040\n204636031733975040 204636031733976064\n204636031733976064 204636031733976576\n204636031733976576 204636031733976832\n204636031733976832 204636031733976848\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": 0,
                            "stdout": "54\n271518219607274605 271518219607274606\n271518219607274606 271518219607274608\n271518219607274608 271518219607274624\n271518219607274624 271518219607274752\n271518219607274752 271518219607275008\n271518219607275008 271518219607275520\n271518219607275520 271518219607277568\n271518219607277568 271518219607343104\n271518219607343104 271518219607474176\n271518219607474176 271518219611668480\n271518219611668480 271518219645222912\n271518219645222912 271518219779440640\n271518219779440640 271518220316311552\n271518220316311552 271518228906246144\n271518228906246144 271518246086115328\n271518246086115328 271518280445853696\n271518280445853696 271518349165330432\n271518349165330432 271518898921144320\n271518898921144320 271519998432772096\n271519998432772096 271522197456027648\n271522197456027648 271526595502538752\n271526595502538752 271535391595560960\n271535391595560960 271552983781605376\n271552983781605376 271623352525783040\n271623352525783040 271904827502493696\n271904827502493696 272467777455915008\n272467777455915008 274719577269600256\n274719577269600256 279223176896970752\n279223176896970752 288230376151711744\n288230376151711744 432345564227567616\n432345564227567616 468374361246531584\n468374361246531584 486388759756013568\n486388759756013568 490892359383384064\n490892359383384064 493144159197069312\n493144159197069312 493425634173779968\n493425634173779968 493496002917957632\n493496002917957632 493513595104002048\n493513595104002048 493515794127257600\n493515794127257600 493515931566211072\n493515931566211072 493515932639952896\n493515932639952896 493515933176823808\n493515933176823808 493515933311041536\n493515933311041536 493515933378150400\n493515933378150400 493515933394927616\n493515933394927616 493515933403316224\n493515933403316224 493515933404364800\n493515933404364800 493515933404430336\n493515933404430336 493515933404463104\n493515933404463104 493515933404467200\n493515933404467200 493515933404467264\n493515933404467264 493515933404467280\n493515933404467280 493515933404467288\n493515933404467288 493515933404467292\n493515933404467292 493515933404467293\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": 0,
                            "stdout": "48\n123989531008007376 123989531008007392\n123989531008007392 123989531008007424\n123989531008007424 123989531008007680\n123989531008007680 123989531008008192\n123989531008008192 123989531008040960\n123989531008040960 123989531008172032\n123989531008172032 123989531008434176\n123989531008434176 123989531010531328\n123989531010531328 123989531014725632\n123989531014725632 123989531283161088\n123989531283161088 123989531820032000\n123989531820032000 123989533967515648\n123989533967515648 123989538262482944\n123989538262482944 123989555442352128\n123989555442352128 123989589802090496\n123989589802090496 123989727241043968\n123989727241043968 124130464729399296\n124130464729399296 124411939706109952\n124411939706109952 124974889659531264\n124974889659531264 126100789566373888\n126100789566373888 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 792633534417207296\n792633534417207296 794885334230892544\n794885334230892544 795448284184313856\n795448284184313856 795518652928491520\n795518652928491520 795527449021513728\n795527449021513728 795527723899420672\n795527723899420672 795527861338374144\n795527861338374144 795527930057850880\n795527930057850880 795527938647785472\n795527938647785472 795527940795269120\n795527940795269120 795527941063704576\n795527941063704576 795527941130813440\n795527941130813440 795527941164367872\n795527941164367872 795527941166465024\n795527941166465024 795527941167513600\n795527941167513600 795527941168037888\n795527941168037888 795527941168070656\n795527941168070656 795527941168087040\n795527941168087040 795527941168095232\n795527941168095232 795527941168099328\n795527941168099328 795527941168099840\n795527941168099840 795527941168099968\n795527941168099968 795527941168099984\n795527941168099984 795527941168099988\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": 0,
                            "stdout": "4\n288054454257713152 288054454291267584\n288054454291267584 288089638663356416\n288089638663356416 288230376151711744\n288230376151711744 288230376160100352\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": 0,
                            "stdout": "57\n395279993370173227 395279993370173228\n395279993370173228 395279993370173232\n395279993370173232 395279993370173248\n395279993370173248 395279993370173312\n395279993370173312 395279993370173440\n395279993370173440 395279993370181632\n395279993370181632 395279993370312704\n395279993370312704 395279993370836992\n395279993370836992 395279993371885568\n395279993371885568 395279993376079872\n395279993376079872 395279993510297600\n395279993510297600 395279993778733056\n395279993778733056 395279994315603968\n395279994315603968 395279996463087616\n395279996463087616 395280065182564352\n395280065182564352 395280202621517824\n395280202621517824 395280477499424768\n395280477499424768 395281027255238656\n395281027255238656 395283226278494208\n395283226278494208 395287624325005312\n395287624325005312 395296420418027520\n395296420418027520 395331604790116352\n395331604790116352 395472342278471680\n395472342278471680 395753817255182336\n395753817255182336 396316767208603648\n396316767208603648 432345564227567616\n432345564227567616 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 729583139634020352\n729583139634020352 734086739261390848\n734086739261390848 736338539075076096\n736338539075076096 737464438981918720\n737464438981918720 737745913958629376\n737745913958629376 737816282702807040\n737816282702807040 737851467074895872\n737851467074895872 737869059260940288\n737869059260940288 737873457307451392\n737873457307451392 737875656330706944\n737875656330706944 737876755842334720\n737876755842334720 737876773022203904\n737876773022203904 737876777317171200\n737876777317171200 737876777854042112\n737876777854042112 737876777988259840\n737876777988259840 737876778055368704\n737876778055368704 737876778088923136\n737876778088923136 737876778091020288\n737876778091020288 737876778092068864\n737876778092068864 737876778092331008\n737876778092331008 737876778092363776\n737876778092363776 737876778092380160\n737876778092380160 737876778092388352\n737876778092388352 737876778092390400\n737876778092390400 737876778092391424\n737876778092391424 737876778092391936\n737876778092391936 737876778092392192\n737876778092392192 737876778092392196\n737876778092392196 737876778092392198\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_03",
                            "returncode": 0,
                            "stdout": "8\n3940649673945088 3940649673949184\n3940649673949184 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 11258999068426240\n11258999068426240 11540474045136896\n11540474045136896 11549270138159104\n11549270138159104 11549545016066048\n11549545016066048 11549545024454656\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": 0,
                            "stdout": "61\n61398917963652103 61398917963652104\n61398917963652104 61398917963652112\n61398917963652112 61398917963652128\n61398917963652128 61398917963652160\n61398917963652160 61398917963652224\n61398917963652224 61398917963652352\n61398917963652352 61398917963652608\n61398917963652608 61398917963653120\n61398917963653120 61398917963661312\n61398917963661312 61398917963677696\n61398917963677696 61398917963710464\n61398917963710464 61398917963841536\n61398917963841536 61398917964103680\n61398917964103680 61398917964627968\n61398917964627968 61398917966725120\n61398917966725120 61398917983502336\n61398917983502336 61398918117720064\n61398918117720064 61398918654590976\n61398918654590976 61398919728332800\n61398919728332800 61398928318267392\n61398928318267392 61401127341522944\n61401127341522944 61405525388034048\n61405525388034048 61414321481056256\n61414321481056256 61431913667100672\n61431913667100672 61502282411278336\n61502282411278336 61643019899633664\n61643019899633664 61924494876344320\n61924494876344320 63050394783186944\n63050394783186944 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 180143985094819840\n180143985094819840 198158383604301824\n198158383604301824 198721333557723136\n198721333557723136 199002808534433792\n199002808534433792 199143546022789120\n199143546022789120 199213914766966784\n199213914766966784 199249099139055616\n199249099139055616 199253497185566720\n199253497185566720 199255696208822272\n199255696208822272 199256795720450048\n199256795720450048 199257345476263936\n199257345476263936 199257414195740672\n199257414195740672 199257448555479040\n199257448555479040 199257465735348224\n199257465735348224 199257470030315520\n199257470030315520 199257470298750976\n199257470298750976 199257470432968704\n199257470432968704 199257470466523136\n199257470466523136 199257470468620288\n199257470468620288 199257470469668864\n199257470469668864 199257470470193152\n199257470470193152 199257470470455296\n199257470470455296 199257470470586368\n199257470470586368 199257470470594560\n199257470470594560 199257470470596608\n199257470470596608 199257470470596864\n199257470470596864 199257470470596992\n199257470470596992 199257470470597056\n199257470470597056 199257470470597072\n199257470470597072 199257470470597076\n199257470470597076 199257470470597078\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": 0,
                            "stdout": "1\n0 1024\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": 0,
                            "stdout": "51\n860329287908420023 860329287908420024\n860329287908420024 860329287908420032\n860329287908420032 860329287908420096\n860329287908420096 860329287908420608\n860329287908420608 860329287908421632\n860329287908421632 860329287908425728\n860329287908425728 860329287908458496\n860329287908458496 860329287908589568\n860329287908589568 860329287909113856\n860329287909113856 860329287910162432\n860329287910162432 860329287914356736\n860329287914356736 860329287981465600\n860329287981465600 860329288518336512\n860329288518336512 860329297108271104\n860329297108271104 860329365827747840\n860329365827747840 860330465339375616\n860330465339375616 860332664362631168\n860332664362631168 860337062409142272\n860337062409142272 860345858502164480\n860345858502164480 860363450688208896\n860363450688208896 860398635060297728\n860398635060297728 860469003804475392\n860469003804475392 860750478781186048\n860750478781186048 861313428734607360\n861313428734607360 862439328641449984\n862439328641449984 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1044835113549955072\n1044835113549955072 1062849512059437056\n1062849512059437056 1067353111686807552\n1067353111686807552 1067916061640228864\n1067916061640228864 1068056799128584192\n1068056799128584192 1068127167872761856\n1068127167872761856 1068162352244850688\n1068162352244850688 1068166750291361792\n1068166750291361792 1068167025169268736\n1068167025169268736 1068167042349137920\n1068167042349137920 1068167042382692352\n1068167042382692352 1068167042391080960\n1068167042391080960 1068167042392129536\n1068167042392129536 1068167042392653824\n1068167042392653824 1068167042392784896\n1068167042392784896 1068167042392850432\n1068167042392850432 1068167042392883200\n1068167042392883200 1068167042392899584\n1068167042392899584 1068167042392901632\n1068167042392901632 1068167042392902656\n1068167042392902656 1068167042392903168\n1068167042392903168 1068167042392903232\n1068167042392903232 1068167042392903248\n1068167042392903248 1068167042392903250\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": 0,
                            "stdout": "67\n278964037634255119 278964037634255120\n278964037634255120 278964037634255136\n278964037634255136 278964037634255168\n278964037634255168 278964037634255232\n278964037634255232 278964037634255360\n278964037634255360 278964037634255872\n278964037634255872 278964037634256896\n278964037634256896 278964037634260992\n278964037634260992 278964037634293760\n278964037634293760 278964037634359296\n278964037634359296 278964037634490368\n278964037634490368 278964037635538944\n278964037635538944 278964037637636096\n278964037637636096 278964037646024704\n278964037646024704 278964037662801920\n278964037662801920 278964037696356352\n278964037696356352 278964037763465216\n278964037763465216 278964037897682944\n278964037897682944 278964040045166592\n278964040045166592 278964044340133888\n278964044340133888 278964052930068480\n278964052930068480 278964070109937664\n278964070109937664 278964104469676032\n278964104469676032 278964241908629504\n278964241908629504 278964791664443392\n278964791664443392 278965891176071168\n278965891176071168 278968090199326720\n278968090199326720 278976886292348928\n278976886292348928 279012070664437760\n279012070664437760 279082439408615424\n279082439408615424 279223176896970752\n279223176896970752 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 792633534417207296\n792633534417207296 828662331436171264\n828662331436171264 833165931063541760\n833165931063541760 835417730877227008\n835417730877227008 836543630784069632\n836543630784069632 836825105760780288\n836825105760780288 836860290132869120\n836860290132869120 836877882318913536\n836877882318913536 836882280365424640\n836882280365424640 836884479388680192\n836884479388680192 836884616827633664\n836884616827633664 836884651187372032\n836884651187372032 836884668367241216\n836884668367241216 836884670514724864\n836884670514724864 836884671588466688\n836884671588466688 836884672125337600\n836884672125337600 836884672158892032\n836884672158892032 836884672175669248\n836884672175669248 836884672179863552\n836884672179863552 836884672180912128\n836884672180912128 836884672181436416\n836884672181436416 836884672181567488\n836884672181567488 836884672181583872\n836884672181583872 836884672181592064\n836884672181592064 836884672181596160\n836884672181596160 836884672181598208\n836884672181598208 836884672181598464\n836884672181598464 836884672181598592\n836884672181598592 836884672181598624\n836884672181598624 836884672181598640\n836884672181598640 836884672181598648\n836884672181598648 836884672181598650\n836884672181598650 836884672181598651\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": 0,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_test_11",
                            "returncode": 0,
                            "stdout": "55\n893124445952679748 893124445952679752\n893124445952679752 893124445952679760\n893124445952679760 893124445952679776\n893124445952679776 893124445952679808\n893124445952679808 893124445952679936\n893124445952679936 893124445952688128\n893124445952688128 893124445952704512\n893124445952704512 893124445952737280\n893124445952737280 893124445952802816\n893124445952802816 893124445953064960\n893124445953064960 893124445957259264\n893124445957259264 893124445965647872\n893124445965647872 893124445999202304\n893124445999202304 893124446536073216\n893124446536073216 893124447609815040\n893124447609815040 893124464789684224\n893124464789684224 893124499149422592\n893124499149422592 893128897195933696\n893128897195933696 893137693288955904\n893137693288955904 893155285475000320\n893155285475000320 893190469847089152\n893190469847089152 893260838591266816\n893260838591266816 893401576079622144\n893401576079622144 893964526033043456\n893964526033043456 896216325846728704\n896216325846728704 900719925474099200\n900719925474099200 936748722493063168\n936748722493063168 1008806316530991104\n1008806316530991104 1026820715040473088\n1026820715040473088 1035827914295214080\n1035827914295214080 1038079714108899328\n1038079714108899328 1039205614015741952\n1039205614015741952 1039768563969163264\n1039768563969163264 1039803748341252096\n1039803748341252096 1039821340527296512\n1039821340527296512 1039830136620318720\n1039830136620318720 1039834534666829824\n1039834534666829824 1039836733690085376\n1039836733690085376 1039837833201713152\n1039837833201713152 1039838382957527040\n1039838382957527040 1039838417317265408\n1039838417317265408 1039838425907200000\n1039838425907200000 1039838426980941824\n1039838426980941824 1039838427517812736\n1039838427517812736 1039838427534589952\n1039838427534589952 1039838427542978560\n1039838427542978560 1039838427545075712\n1039838427545075712 1039838427545092096\n1039838427545092096 1039838427545096192\n1039838427545096192 1039838427545097216\n1039838427545097216 1039838427545097728\n1039838427545097728 1039838427545097984\n1039838427545097984 1039838427545098112\n1039838427545098112 1039838427545098128\n1039838427545098128 1039838427545098129\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": 0,
                            "stdout": "1\n0 1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": 0,
                            "stdout": "98\n505529333062828545 505529333062828546\n505529333062828546 505529333062828548\n505529333062828548 505529333062828552\n505529333062828552 505529333062828560\n505529333062828560 505529333062828576\n505529333062828576 505529333062828608\n505529333062828608 505529333062828672\n505529333062828672 505529333062828800\n505529333062828800 505529333062829056\n505529333062829056 505529333062830080\n505529333062830080 505529333062832128\n505529333062832128 505529333062836224\n505529333062836224 505529333062844416\n505529333062844416 505529333062860800\n505529333062860800 505529333062893568\n505529333062893568 505529333062959104\n505529333062959104 505529333063090176\n505529333063090176 505529333063352320\n505529333063352320 505529333063876608\n505529333063876608 505529333064925184\n505529333064925184 505529333067022336\n505529333067022336 505529333083799552\n505529333083799552 505529333117353984\n505529333117353984 505529333184462848\n505529333184462848 505529333318680576\n505529333318680576 505529333587116032\n505529333587116032 505529334123986944\n505529334123986944 505529335197728768\n505529335197728768 505529337345212416\n505529337345212416 505529341640179712\n505529341640179712 505529350230114304\n505529350230114304 505529367409983488\n505529367409983488 505529401769721856\n505529401769721856 505529470489198592\n505529470489198592 505529607928152064\n505529607928152064 505530157683965952\n505530157683965952 505531257195593728\n505531257195593728 505533456218849280\n505533456218849280 505537854265360384\n505537854265360384 505546650358382592\n505546650358382592 505564242544427008\n505564242544427008 505599426916515840\n505599426916515840 505669795660693504\n505669795660693504 505810533149048832\n505810533149048832 506092008125759488\n506092008125759488 506654958079180800\n506654958079180800 508906757892866048\n508906757892866048 513410357520236544\n513410357520236544 522417556774977536\n522417556774977536 540431955284459520\n540431955284459520 558446353793941504\n558446353793941504 567453553048682496\n567453553048682496 571957152676052992\n571957152676052992 574208952489738240\n574208952489738240 575334852396580864\n575334852396580864 575616327373291520\n575616327373291520 575757064861646848\n575757064861646848 575827433605824512\n575827433605824512 575862617977913344\n575862617977913344 575880210163957760\n575880210163957760 575889006256979968\n575889006256979968 575893404303491072\n575893404303491072 575895603326746624\n575895603326746624 575896702838374400\n575896702838374400 575897252594188288\n575897252594188288 575897527472095232\n575897527472095232 575897664911048704\n575897664911048704 575897733630525440\n575897733630525440 575897767990263808\n575897767990263808 575897785170132992\n575897785170132992 575897793760067584\n575897793760067584 575897795907551232\n575897795907551232 575897796981293056\n575897796981293056 575897797518163968\n575897797518163968 575897797786599424\n575897797786599424 575897797920817152\n575897797920817152 575897797987926016\n575897797987926016 575897798021480448\n575897798021480448 575897798038257664\n575897798038257664 575897798046646272\n575897798046646272 575897798050840576\n575897798050840576 575897798052937728\n575897798052937728 575897798053986304\n575897798053986304 575897798054510592\n575897798054510592 575897798054772736\n575897798054772736 575897798054903808\n575897798054903808 575897798054936576\n575897798054936576 575897798054952960\n575897798054952960 575897798054953984\n575897798054953984 575897798054954496\n575897798054954496 575897798054954752\n575897798054954752 575897798054954880\n575897798054954880 575897798054954944\n575897798054954944 575897798054954976\n575897798054954976 575897798054954992\n575897798054954992 575897798054954996\n575897798054954996 575897798054954998\n575897798054954998 575897798054954999\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": 0,
                            "stdout": "61\n181262195287766621 181262195287766622\n181262195287766622 181262195287766624\n181262195287766624 181262195287766656\n181262195287766656 181262195287766784\n181262195287766784 181262195287767040\n181262195287767040 181262195287769088\n181262195287769088 181262195287785472\n181262195287785472 181262195287916544\n181262195287916544 181262195288440832\n181262195288440832 181262195290537984\n181262195290537984 181262195298926592\n181262195298926592 181262195332481024\n181262195332481024 181262195399589888\n181262195399589888 181262195936460800\n181262195936460800 181262197010202624\n181262197010202624 181262205600137216\n181262205600137216 181262222780006400\n181262222780006400 181262257139744768\n181262257139744768 181262325859221504\n181262325859221504 181262463298174976\n181262463298174976 181262738176081920\n181262738176081920 181263287931895808\n181263287931895808 181265486955151360\n181265486955151360 181269885001662464\n181269885001662464 182395784908505088\n182395784908505088 184647584722190336\n184647584722190336 189151184349560832\n189151184349560832 198158383604301824\n198158383604301824 216172782113783808\n216172782113783808 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 756604737398243328\n756604737398243328 774619135907725312\n774619135907725312 776870935721410560\n776870935721410560 777996835628253184\n777996835628253184 778559785581674496\n778559785581674496 778841260558385152\n778841260558385152 778981998046740480\n778981998046740480 778990794139762688\n778990794139762688 778991893651390464\n778991893651390464 778992443407204352\n778992443407204352 778992718285111296\n778992718285111296 778992726875045888\n778992726875045888 778992729022529536\n778992729022529536 778992730096271360\n778992730096271360 778992730364706816\n778992730364706816 778992730381484032\n778992730381484032 778992730385678336\n778992730385678336 778992730387775488\n778992730387775488 778992730388037632\n778992730388037632 778992730388168704\n778992730388168704 778992730388234240\n778992730388234240 778992730388267008\n778992730388267008 778992730388283392\n778992730388283392 778992730388287488\n778992730388287488 778992730388288512\n778992730388288512 778992730388288768\n778992730388288768 778992730388288800\n778992730388288800 778992730388288816\n778992730388288816 778992730388288824\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": 0,
                            "stdout": "2\n288230376151711744 576460752303423488\n576460752303423488 864691128455135232\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": 0,
                            "stdout": "59\n366943872216607560 366943872216607568\n366943872216607568 366943872216607584\n366943872216607584 366943872216607616\n366943872216607616 366943872216607744\n366943872216607744 366943872216608768\n366943872216608768 366943872216612864\n366943872216612864 366943872216629248\n366943872216629248 366943872216662016\n366943872216662016 366943872216727552\n366943872216727552 366943872216989696\n366943872216989696 366943872284098560\n366943872284098560 366943872418316288\n366943872418316288 366943881008250880\n366943881008250880 366943898188120064\n366943898188120064 366943932547858432\n366943932547858432 366944001267335168\n366944001267335168 366944138706288640\n366944138706288640 366944413584195584\n366944413584195584 366946612607451136\n366946612607451136 366955408700473344\n366955408700473344 366973000886517760\n366973000886517760 367043369630695424\n367043369630695424 369295169444380672\n369295169444380672 378302368699121664\n378302368699121664 396316767208603648\n396316767208603648 432345564227567616\n432345564227567616 576460752303423488\n576460752303423488 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1080863910568919040\n1080863910568919040 1081004648057274368\n1081004648057274368 1081039832429363200\n1081039832429363200 1081057424615407616\n1081057424615407616 1081066220708429824\n1081066220708429824 1081068419731685376\n1081068419731685376 1081069519243313152\n1081069519243313152 1081070068999127040\n1081070068999127040 1081070343877033984\n1081070343877033984 1081070412596510720\n1081070412596510720 1081070446956249088\n1081070446956249088 1081070455546183680\n1081070455546183680 1081070457693667328\n1081070457693667328 1081070458767409152\n1081070458767409152 1081070459304280064\n1081070459304280064 1081070459371388928\n1081070459371388928 1081070459388166144\n1081070459388166144 1081070459390263296\n1081070459390263296 1081070459391311872\n1081070459391311872 1081070459391574016\n1081070459391574016 1081070459391705088\n1081070459391705088 1081070459391707136\n1081070459391707136 1081070459391708160\n1081070459391708160 1081070459391708416\n1081070459391708416 1081070459391708544\n1081070459391708544 1081070459391708608\n1081070459391708608 1081070459391708640\n1081070459391708640 1081070459391708656\n1081070459391708656 1081070459391708660\n1081070459391708660 1081070459391708661\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": 0,
                            "stdout": "52\n813135255471707232 813135255471707264\n813135255471707264 813135255471707392\n813135255471707392 813135255471707648\n813135255471707648 813135255471708160\n813135255471708160 813135255471710208\n813135255471710208 813135255471718400\n813135255471718400 813135255471783936\n813135255471783936 813135255471915008\n813135255471915008 813135255476109312\n813135255476109312 813135255492886528\n813135255492886528 813135255526440960\n813135255526440960 813135255593549824\n813135255593549824 813135255861985280\n813135255861985280 813135260156952576\n813135260156952576 813135268746887168\n813135268746887168 813135303106625536\n813135303106625536 813135577984532480\n813135577984532480 813136127740346368\n813136127740346368 813137227251974144\n813137227251974144 813146023344996352\n813146023344996352 813181207717085184\n813181207717085184 813462682693795840\n813462682693795840 814025632647217152\n814025632647217152 815151532554059776\n815151532554059776 819655132181430272\n819655132181430272 828662331436171264\n828662331436171264 846676729945653248\n846676729945653248 847802629852495872\n847802629852495872 848084104829206528\n848084104829206528 848154473573384192\n848154473573384192 848172065759428608\n848172065759428608 848174264782684160\n848174264782684160 848174539660591104\n848174539660591104 848174677099544576\n848174677099544576 848174745819021312\n848174745819021312 848174780178759680\n848174780178759680 848174788768694272\n848174788768694272 848174793063661568\n848174793063661568 848174794137403392\n848174794137403392 848174794405838848\n848174794405838848 848174794472947712\n848174794472947712 848174794506502144\n848174794506502144 848174794508599296\n848174794508599296 848174794509647872\n848174794509647872 848174794509713408\n848174794509713408 848174794509729792\n848174794509729792 848174794509733888\n848174794509733888 848174794509734912\n848174794509734912 848174794509735424\n848174794509735424 848174794509735680\n848174794509735680 848174794509735808\n848174794509735808 848174794509735812\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": 0,
                            "stdout": "110\n504403158265495553 504403158265495554\n504403158265495554 504403158265495556\n504403158265495556 504403158265495560\n504403158265495560 504403158265495568\n504403158265495568 504403158265495584\n504403158265495584 504403158265495616\n504403158265495616 504403158265495680\n504403158265495680 504403158265495808\n504403158265495808 504403158265496064\n504403158265496064 504403158265496576\n504403158265496576 504403158265497600\n504403158265497600 504403158265499648\n504403158265499648 504403158265503744\n504403158265503744 504403158265511936\n504403158265511936 504403158265528320\n504403158265528320 504403158265561088\n504403158265561088 504403158265626624\n504403158265626624 504403158265757696\n504403158265757696 504403158266019840\n504403158266019840 504403158266544128\n504403158266544128 504403158267592704\n504403158267592704 504403158269689856\n504403158269689856 504403158273884160\n504403158273884160 504403158282272768\n504403158282272768 504403158299049984\n504403158299049984 504403158332604416\n504403158332604416 504403158399713280\n504403158399713280 504403158533931008\n504403158533931008 504403158802366464\n504403158802366464 504403159339237376\n504403159339237376 504403160412979200\n504403160412979200 504403162560462848\n504403162560462848 504403166855430144\n504403166855430144 504403175445364736\n504403175445364736 504403192625233920\n504403192625233920 504403226984972288\n504403226984972288 504403295704449024\n504403295704449024 504403433143402496\n504403433143402496 504403708021309440\n504403708021309440 504404257777123328\n504404257777123328 504405357288751104\n504405357288751104 504407556312006656\n504407556312006656 504411954358517760\n504411954358517760 504420750451539968\n504420750451539968 504438342637584384\n504438342637584384 504473527009673216\n504473527009673216 504543895753850880\n504543895753850880 504684633242206208\n504684633242206208 504966108218916864\n504966108218916864 505529058172338176\n505529058172338176 506654958079180800\n506654958079180800 508906757892866048\n508906757892866048 513410357520236544\n513410357520236544 522417556774977536\n522417556774977536 540431955284459520\n540431955284459520 558446353793941504\n558446353793941504 567453553048682496\n567453553048682496 571957152676052992\n571957152676052992 574208952489738240\n574208952489738240 575334852396580864\n575334852396580864 575897802350002176\n575897802350002176 576179277326712832\n576179277326712832 576320014815068160\n576320014815068160 576390383559245824\n576390383559245824 576425567931334656\n576425567931334656 576443160117379072\n576443160117379072 576451956210401280\n576451956210401280 576456354256912384\n576456354256912384 576458553280167936\n576458553280167936 576459652791795712\n576459652791795712 576460202547609600\n576460202547609600 576460477425516544\n576460477425516544 576460614864470016\n576460614864470016 576460683583946752\n576460683583946752 576460717943685120\n576460717943685120 576460735123554304\n576460735123554304 576460743713488896\n576460743713488896 576460748008456192\n576460748008456192 576460750155939840\n576460750155939840 576460751229681664\n576460751229681664 576460751766552576\n576460751766552576 576460752034988032\n576460752034988032 576460752169205760\n576460752169205760 576460752236314624\n576460752236314624 576460752269869056\n576460752269869056 576460752286646272\n576460752286646272 576460752295034880\n576460752295034880 576460752299229184\n576460752299229184 576460752301326336\n576460752301326336 576460752302374912\n576460752302374912 576460752302899200\n576460752302899200 576460752303161344\n576460752303161344 576460752303292416\n576460752303292416 576460752303357952\n576460752303357952 576460752303390720\n576460752303390720 576460752303407104\n576460752303407104 576460752303415296\n576460752303415296 576460752303419392\n576460752303419392 576460752303421440\n576460752303421440 576460752303422464\n576460752303422464 576460752303422976\n576460752303422976 576460752303423232\n576460752303423232 576460752303423360\n576460752303423360 576460752303423424\n576460752303423424 576460752303423456\n576460752303423456 576460752303423472\n576460752303423472 576460752303423480\n576460752303423480 576460752303423484\n576460752303423484 576460752303423486\n576460752303423486 576460752303423487\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": 0,
                            "stdout": "25\n432344644764301224 432344644764301232\n432344644764301232 432344644764301248\n432344644764301248 432344644764301312\n432344644764301312 432344644764303360\n432344644764303360 432344644764827648\n432344644764827648 432344644769021952\n432344644769021952 432344644836130816\n432344644836130816 432344645104566272\n432344645104566272 432344653694500864\n432344653694500864 432344670874370048\n432344670874370048 432344739593846784\n432344739593846784 432345014471753728\n432345014471753728 432345564227567616\n432345564227567616 504403158265495552\n504403158265495552 540431955284459520\n540431955284459520 558446353793941504\n558446353793941504 558448552817197056\n558448552817197056 558448827695104000\n558448827695104000 558448896414580736\n558448896414580736 558448896683016192\n558448896683016192 558448896716570624\n558448896716570624 558448896716832768\n558448896716832768 558448896716849152\n558448896716849152 558448896716853248\n558448896716853248 558448896716855296\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": 0,
                            "stdout": "5\n3 4\n4 8\n8 16\n16 18\n18 19\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": 0,
                            "stdout": "60\n1 2\n2 4\n4 8\n8 16\n16 32\n32 64\n64 128\n128 256\n256 512\n512 1024\n1024 2048\n2048 4096\n4096 8192\n8192 16384\n16384 32768\n32768 65536\n65536 131072\n131072 262144\n262144 524288\n524288 1048576\n1048576 2097152\n2097152 4194304\n4194304 8388608\n8388608 16777216\n16777216 33554432\n33554432 67108864\n67108864 134217728\n134217728 268435456\n268435456 536870912\n536870912 1073741824\n1073741824 2147483648\n2147483648 4294967296\n4294967296 8589934592\n8589934592 17179869184\n17179869184 34359738368\n34359738368 68719476736\n68719476736 137438953472\n137438953472 274877906944\n274877906944 549755813888\n549755813888 1099511627776\n1099511627776 2199023255552\n2199023255552 4398046511104\n4398046511104 8796093022208\n8796093022208 17592186044416\n17592186044416 35184372088832\n35184372088832 70368744177664\n70368744177664 140737488355328\n140737488355328 281474976710656\n281474976710656 562949953421312\n562949953421312 1125899906842624\n1125899906842624 2251799813685248\n2251799813685248 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 1152921504606846976\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": 0,
                            "stdout": "2\n1 2\n2 3\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": 0,
                            "stdout": "118\n1 2\n2 4\n4 8\n8 16\n16 32\n32 64\n64 128\n128 256\n256 512\n512 1024\n1024 2048\n2048 4096\n4096 8192\n8192 16384\n16384 32768\n32768 65536\n65536 131072\n131072 262144\n262144 524288\n524288 1048576\n1048576 2097152\n2097152 4194304\n4194304 8388608\n8388608 16777216\n16777216 33554432\n33554432 67108864\n67108864 134217728\n134217728 268435456\n268435456 536870912\n536870912 1073741824\n1073741824 2147483648\n2147483648 4294967296\n4294967296 8589934592\n8589934592 17179869184\n17179869184 34359738368\n34359738368 68719476736\n68719476736 137438953472\n137438953472 274877906944\n274877906944 549755813888\n549755813888 1099511627776\n1099511627776 2199023255552\n2199023255552 4398046511104\n4398046511104 8796093022208\n8796093022208 17592186044416\n17592186044416 35184372088832\n35184372088832 70368744177664\n70368744177664 140737488355328\n140737488355328 281474976710656\n281474976710656 562949953421312\n562949953421312 1125899906842624\n1125899906842624 2251799813685248\n2251799813685248 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1080863910568919040\n1080863910568919040 1116892707587883008\n1116892707587883008 1134907106097364992\n1134907106097364992 1143914305352105984\n1143914305352105984 1148417904979476480\n1148417904979476480 1150669704793161728\n1150669704793161728 1151795604700004352\n1151795604700004352 1152358554653425664\n1152358554653425664 1152640029630136320\n1152640029630136320 1152780767118491648\n1152780767118491648 1152851135862669312\n1152851135862669312 1152886320234758144\n1152886320234758144 1152903912420802560\n1152903912420802560 1152912708513824768\n1152912708513824768 1152917106560335872\n1152917106560335872 1152919305583591424\n1152919305583591424 1152920405095219200\n1152920405095219200 1152920954851033088\n1152920954851033088 1152921229728940032\n1152921229728940032 1152921367167893504\n1152921367167893504 1152921435887370240\n1152921435887370240 1152921470247108608\n1152921470247108608 1152921487426977792\n1152921487426977792 1152921496016912384\n1152921496016912384 1152921500311879680\n1152921500311879680 1152921502459363328\n1152921502459363328 1152921503533105152\n1152921503533105152 1152921504069976064\n1152921504069976064 1152921504338411520\n1152921504338411520 1152921504472629248\n1152921504472629248 1152921504539738112\n1152921504539738112 1152921504573292544\n1152921504573292544 1152921504590069760\n1152921504590069760 1152921504598458368\n1152921504598458368 1152921504602652672\n1152921504602652672 1152921504604749824\n1152921504604749824 1152921504605798400\n1152921504605798400 1152921504606322688\n1152921504606322688 1152921504606584832\n1152921504606584832 1152921504606715904\n1152921504606715904 1152921504606781440\n1152921504606781440 1152921504606814208\n1152921504606814208 1152921504606830592\n1152921504606830592 1152921504606838784\n1152921504606838784 1152921504606842880\n1152921504606842880 1152921504606844928\n1152921504606844928 1152921504606845952\n1152921504606845952 1152921504606846464\n1152921504606846464 1152921504606846720\n1152921504606846720 1152921504606846848\n1152921504606846848 1152921504606846912\n1152921504606846912 1152921504606846944\n1152921504606846944 1152921504606846960\n1152921504606846960 1152921504606846968\n1152921504606846968 1152921504606846972\n1152921504606846972 1152921504606846974\n1152921504606846974 1152921504606846975\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": 0,
                            "stdout": "1\n1 2\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": 0,
                            "stdout": "1\n576460752303423488 1152921504606846976\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": 0,
                            "stdout": "60\n0 576460752303423488\n576460752303423488 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1080863910568919040\n1080863910568919040 1116892707587883008\n1116892707587883008 1134907106097364992\n1134907106097364992 1143914305352105984\n1143914305352105984 1148417904979476480\n1148417904979476480 1150669704793161728\n1150669704793161728 1151795604700004352\n1151795604700004352 1152358554653425664\n1152358554653425664 1152640029630136320\n1152640029630136320 1152780767118491648\n1152780767118491648 1152851135862669312\n1152851135862669312 1152886320234758144\n1152886320234758144 1152903912420802560\n1152903912420802560 1152912708513824768\n1152912708513824768 1152917106560335872\n1152917106560335872 1152919305583591424\n1152919305583591424 1152920405095219200\n1152920405095219200 1152920954851033088\n1152920954851033088 1152921229728940032\n1152921229728940032 1152921367167893504\n1152921367167893504 1152921435887370240\n1152921435887370240 1152921470247108608\n1152921470247108608 1152921487426977792\n1152921487426977792 1152921496016912384\n1152921496016912384 1152921500311879680\n1152921500311879680 1152921502459363328\n1152921502459363328 1152921503533105152\n1152921503533105152 1152921504069976064\n1152921504069976064 1152921504338411520\n1152921504338411520 1152921504472629248\n1152921504472629248 1152921504539738112\n1152921504539738112 1152921504573292544\n1152921504573292544 1152921504590069760\n1152921504590069760 1152921504598458368\n1152921504598458368 1152921504602652672\n1152921504602652672 1152921504604749824\n1152921504604749824 1152921504605798400\n1152921504605798400 1152921504606322688\n1152921504606322688 1152921504606584832\n1152921504606584832 1152921504606715904\n1152921504606715904 1152921504606781440\n1152921504606781440 1152921504606814208\n1152921504606814208 1152921504606830592\n1152921504606830592 1152921504606838784\n1152921504606838784 1152921504606842880\n1152921504606842880 1152921504606844928\n1152921504606844928 1152921504606845952\n1152921504606845952 1152921504606846464\n1152921504606846464 1152921504606846720\n1152921504606846720 1152921504606846848\n1152921504606846848 1152921504606846912\n1152921504606846912 1152921504606846944\n1152921504606846944 1152921504606846960\n1152921504606846960 1152921504606846968\n1152921504606846968 1152921504606846972\n1152921504606846972 1152921504606846974\n1152921504606846974 1152921504606846975\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": 0,
                            "stdout": "87\n432486315808860234 432486315808860236\n432486315808860236 432486315808860240\n432486315808860240 432486315808860256\n432486315808860256 432486315808860288\n432486315808860288 432486315808860416\n432486315808860416 432486315808860672\n432486315808860672 432486315808861184\n432486315808861184 432486315808862208\n432486315808862208 432486315808866304\n432486315808866304 432486315808882688\n432486315808882688 432486315808915456\n432486315808915456 432486315809046528\n432486315809046528 432486315809308672\n432486315809308672 432486315809832960\n432486315809832960 432486315810881536\n432486315810881536 432486315812978688\n432486315812978688 432486315817172992\n432486315817172992 432486315825561600\n432486315825561600 432486315842338816\n432486315842338816 432486315875893248\n432486315875893248 432486315943002112\n432486315943002112 432486316211437568\n432486316211437568 432486316748308480\n432486316748308480 432486318895792128\n432486318895792128 432486336075661312\n432486336075661312 432486370435399680\n432486370435399680 432486439154876416\n432486439154876416 432486576593829888\n432486576593829888 432486851471736832\n432486851471736832 432487401227550720\n432487401227550720 432488500739178496\n432488500739178496 432490699762434048\n432490699762434048 432495097808945152\n432495097808945152 432503893901967360\n432503893901967360 432521486088011776\n432521486088011776 432556670460100608\n432556670460100608 432627039204278272\n432627039204278272 432908514180988928\n432908514180988928 433471464134410240\n433471464134410240 434597364041252864\n434597364041252864 436849163854938112\n436849163854938112 441352763482308608\n441352763482308608 450359962737049600\n450359962737049600 468374361246531584\n468374361246531584 504403158265495552\n504403158265495552 522417556774977536\n522417556774977536 526921156402348032\n526921156402348032 529172956216033280\n529172956216033280 530298856122875904\n530298856122875904 530861806076297216\n530861806076297216 531143281053007872\n531143281053007872 531284018541363200\n531284018541363200 531354387285540864\n531354387285540864 531389571657629696\n531389571657629696 531407163843674112\n531407163843674112 531415959936696320\n531415959936696320 531420357983207424\n531420357983207424 531422557006462976\n531422557006462976 531423106762276864\n531423106762276864 531423381640183808\n531423381640183808 531423450359660544\n531423450359660544 531423467539529728\n531423467539529728 531423469687013376\n531423469687013376 531423470760755200\n531423470760755200 531423471297626112\n531423471297626112 531423471431843840\n531423471431843840 531423471498952704\n531423471498952704 531423471532507136\n531423471532507136 531423471549284352\n531423471549284352 531423471557672960\n531423471557672960 531423471561867264\n531423471561867264 531423471563964416\n531423471563964416 531423471564226560\n531423471564226560 531423471564357632\n531423471564357632 531423471564390400\n531423471564390400 531423471564398592\n531423471564398592 531423471564400640\n531423471564400640 531423471564401664\n531423471564401664 531423471564402176\n531423471564402176 531423471564402432\n531423471564402432 531423471564402560\n531423471564402560 531423471564402624\n531423471564402624 531423471564402656\n531423471564402656 531423471564402664\n531423471564402664 531423471564402668\n531423471564402668 531423471564402670\n531423471564402670 531423471564402671\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": 0,
                            "stdout": "63\n11801128058619141 11801128058619142\n11801128058619142 11801128058619144\n11801128058619144 11801128058619152\n11801128058619152 11801128058619168\n11801128058619168 11801128058619200\n11801128058619200 11801128058619264\n11801128058619264 11801128058619392\n11801128058619392 11801128058619904\n11801128058619904 11801128058621952\n11801128058621952 11801128058626048\n11801128058626048 11801128058634240\n11801128058634240 11801128058650624\n11801128058650624 11801128058683392\n11801128058683392 11801128058748928\n11801128058748928 11801128059011072\n11801128059011072 11801128059535360\n11801128059535360 11801128060583936\n11801128060583936 11801128094138368\n11801128094138368 11801129167880192\n11801129167880192 11801131315363840\n11801131315363840 11801135610331136\n11801135610331136 11801144200265728\n11801144200265728 11801161380134912\n11801161380134912 11801195739873280\n11801195739873280 11801333178826752\n11801333178826752 11801608056733696\n11801608056733696 11802157812547584\n11802157812547584 11804356835803136\n11804356835803136 11821949021847552\n11821949021847552 12384898975268864\n12384898975268864 13510798882111488\n13510798882111488 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 432345564227567616\n432345564227567616 468374361246531584\n468374361246531584 477381560501272576\n477381560501272576 481885160128643072\n481885160128643072 484136959942328320\n484136959942328320 484418434919038976\n484418434919038976 484488803663216640\n484488803663216640 484491002686472192\n484491002686472192 484492102198099968\n484492102198099968 484492651953913856\n484492651953913856 484492789392867328\n484492789392867328 484492858112344064\n484492858112344064 484492892472082432\n484492892472082432 484492909651951616\n484492909651951616 484492910725693440\n484492910725693440 484492910859911168\n484492910859911168 484492910927020032\n484492910927020032 484492910960574464\n484492910960574464 484492910964768768\n484492910964768768 484492910965817344\n484492910965817344 484492910965818368\n484492910965818368 484492910965818624\n484492910965818624 484492910965818688\n484492910965818688 484492910965818720\n484492910965818720 484492910965818728\n484492910965818728 484492910965818730\n484492910965818730 484492910965818731\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": 0,
                            "stdout": "85\n282183781417523 282183781417524\n282183781417524 282183781417528\n282183781417528 282183781417536\n282183781417536 282183781417600\n282183781417600 282183781417728\n282183781417728 282183781417984\n282183781417984 282183781419008\n282183781419008 282183781421056\n282183781421056 282183781425152\n282183781425152 282183781433344\n282183781433344 282183781449728\n282183781449728 282183781580800\n282183781580800 282183782629376\n282183782629376 282183784726528\n282183784726528 282183788920832\n282183788920832 282183797309440\n282183797309440 282183814086656\n282183814086656 282183847641088\n282183847641088 282183914749952\n282183914749952 282184183185408\n282184183185408 282184720056320\n282184720056320 282185793798144\n282185793798144 282187941281792\n282187941281792 282196531216384\n282196531216384 282230890954752\n282230890954752 282299610431488\n282299610431488 282574488338432\n282574488338432 283673999966208\n283673999966208 285873023221760\n285873023221760 290271069732864\n290271069732864 299067162755072\n299067162755072 316659348799488\n316659348799488 351843720888320\n351843720888320 422212465065984\n422212465065984 562949953421312\n562949953421312 1125899906842624\n1125899906842624 2251799813685248\n2251799813685248 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 216172782113783808\n216172782113783808 252201579132747776\n252201579132747776 270215977642229760\n270215977642229760 279223176896970752\n279223176896970752 283726776524341248\n283726776524341248 285978576338026496\n285978576338026496 286541526291447808\n286541526291447808 286611895035625472\n286611895035625472 286647079407714304\n286647079407714304 286664671593758720\n286664671593758720 286673467686780928\n286673467686780928 286677865733292032\n286677865733292032 286680064756547584\n286680064756547584 286681164268175360\n286681164268175360 286681714023989248\n286681714023989248 286681988901896192\n286681988901896192 286682126340849664\n286682126340849664 286682195060326400\n286682195060326400 286682229420064768\n286682229420064768 286682246599933952\n286682246599933952 286682250894901248\n286682250894901248 286682251968643072\n286682251968643072 286682252505513984\n286682252505513984 286682252773949440\n286682252773949440 286682252908167168\n286682252908167168 286682252975276032\n286682252975276032 286682253008830464\n286682253008830464 286682253017219072\n286682253017219072 286682253019316224\n286682253019316224 286682253020364800\n286682253020364800 286682253020889088\n286682253020889088 286682253020954624\n286682253020954624 286682253020987392\n286682253020987392 286682253021003776\n286682253021003776 286682253021011968\n286682253021011968 286682253021016064\n286682253021016064 286682253021018112\n286682253021018112 286682253021019136\n286682253021019136 286682253021019648\n286682253021019648 286682253021019776\n286682253021019776 286682253021019780\n286682253021019780 286682253021019781\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": 0,
                            "stdout": "28\n144106357446602451 144106357446602452\n144106357446602452 144106357446602456\n144106357446602456 144106357446602464\n144106357446602464 144106357446602496\n144106357446602496 144106357446602752\n144106357446602752 144106357446606848\n144106357446606848 144106357446672384\n144106357446672384 144106357446934528\n144106357446934528 144106357455323136\n144106357455323136 144106357488877568\n144106357488877568 144106357623095296\n144106357623095296 144106391982833664\n144106391982833664 144115188075855872\n144115188075855872 216172782113783808\n216172782113783808 252201579132747776\n252201579132747776 261208778387488768\n261208778387488768 261771728340910080\n261771728340910080 261789320526954496\n261789320526954496 261791519550210048\n261791519550210048 261791588269686784\n261791588269686784 261791622629425152\n261791622629425152 261791639809294336\n261791639809294336 261791641956777984\n261791641956777984 261791642225213440\n261791642225213440 261791642225344512\n261791642225344512 261791642225410048\n261791642225410048 261791642225414144\n261791642225414144 261791642225414176\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": 0,
                            "stdout": "1\n0 1152921504606846976\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": 0,
                            "stdout": "41\n360198504640541332 360198504640541336\n360198504640541336 360198504640541344\n360198504640541344 360198504640541376\n360198504640541376 360198504640541440\n360198504640541440 360198504640541696\n360198504640541696 360198504640542720\n360198504640542720 360198504640544768\n360198504640544768 360198504640675840\n360198504640675840 360198504640937984\n360198504640937984 360198504645132288\n360198504645132288 360198504678686720\n360198504678686720 360198504947122176\n360198504947122176 360198506020864000\n360198506020864000 360198514610798592\n360198514610798592 360198531790667776\n360198531790667776 360198566150406144\n360198566150406144 360198634869882880\n360198634869882880 360198909747789824\n360198909747789824 360200009259417600\n360200009259417600 360217601445462016\n360217601445462016 360287970189639680\n360287970189639680 432345564227567616\n432345564227567616 504403158265495552\n504403158265495552 504966108218916864\n504966108218916864 505247583195627520\n505247583195627520 505256379288649728\n505256379288649728 505257478800277504\n505257478800277504 505258028556091392\n505258028556091392 505258032851058688\n505258032851058688 505258033387929600\n505258033387929600 505258033455038464\n505258033455038464 505258033488592896\n505258033488592896 505258033496981504\n505258033496981504 505258033499078656\n505258033499078656 505258033500127232\n505258033500127232 505258033500651520\n505258033500651520 505258033500667904\n505258033500667904 505258033500676096\n505258033500676096 505258033500676608\n505258033500676608 505258033500676864\n505258033500676864 505258033500676866\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": 0,
                            "stdout": "55\n170125114320639076 170125114320639080\n170125114320639080 170125114320639088\n170125114320639088 170125114320639104\n170125114320639104 170125114320639232\n170125114320639232 170125114320639488\n170125114320639488 170125114320640000\n170125114320640000 170125114320642048\n170125114320642048 170125114320650240\n170125114320650240 170125114320683008\n170125114320683008 170125114320748544\n170125114320748544 170125114320879616\n170125114320879616 170125114321403904\n170125114321403904 170125114329792512\n170125114329792512 170125114346569728\n170125114346569728 170125114883440640\n170125114883440640 170125132063309824\n170125132063309824 170125166423048192\n170125166423048192 170125235142524928\n170125235142524928 170134031235547136\n170134031235547136 170151623421591552\n170151623421591552 170292360909946880\n170292360909946880 170573835886657536\n170573835886657536 171136785840078848\n171136785840078848 180143985094819840\n180143985094819840 198158383604301824\n198158383604301824 202661983231672320\n202661983231672320 203787883138514944\n203787883138514944 204350833091936256\n204350833091936256 204632308068646912\n204632308068646912 204634507091902464\n204634507091902464 204635606603530240\n204635606603530240 204635881481437184\n204635881481437184 204636018920390656\n204636018920390656 204636027510325248\n204636027510325248 204636029657808896\n204636029657808896 204636030731550720\n204636030731550720 204636031268421632\n204636031268421632 204636031536857088\n204636031536857088 204636031671074816\n204636031671074816 204636031704629248\n204636031704629248 204636031721406464\n204636031721406464 204636031729795072\n204636031729795072 204636031731892224\n204636031731892224 204636031732940800\n204636031732940800 204636031733465088\n204636031733465088 204636031733727232\n204636031733727232 204636031733858304\n204636031733858304 204636031733923840\n204636031733923840 204636031733956608\n204636031733956608 204636031733972992\n204636031733972992 204636031733975040\n204636031733975040 204636031733976064\n204636031733976064 204636031733976576\n204636031733976576 204636031733976832\n204636031733976832 204636031733976848\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": 0,
                            "stdout": "54\n271518219607274605 271518219607274606\n271518219607274606 271518219607274608\n271518219607274608 271518219607274624\n271518219607274624 271518219607274752\n271518219607274752 271518219607275008\n271518219607275008 271518219607275520\n271518219607275520 271518219607277568\n271518219607277568 271518219607343104\n271518219607343104 271518219607474176\n271518219607474176 271518219611668480\n271518219611668480 271518219645222912\n271518219645222912 271518219779440640\n271518219779440640 271518220316311552\n271518220316311552 271518228906246144\n271518228906246144 271518246086115328\n271518246086115328 271518280445853696\n271518280445853696 271518349165330432\n271518349165330432 271518898921144320\n271518898921144320 271519998432772096\n271519998432772096 271522197456027648\n271522197456027648 271526595502538752\n271526595502538752 271535391595560960\n271535391595560960 271552983781605376\n271552983781605376 271623352525783040\n271623352525783040 271904827502493696\n271904827502493696 272467777455915008\n272467777455915008 274719577269600256\n274719577269600256 279223176896970752\n279223176896970752 288230376151711744\n288230376151711744 432345564227567616\n432345564227567616 468374361246531584\n468374361246531584 486388759756013568\n486388759756013568 490892359383384064\n490892359383384064 493144159197069312\n493144159197069312 493425634173779968\n493425634173779968 493496002917957632\n493496002917957632 493513595104002048\n493513595104002048 493515794127257600\n493515794127257600 493515931566211072\n493515931566211072 493515932639952896\n493515932639952896 493515933176823808\n493515933176823808 493515933311041536\n493515933311041536 493515933378150400\n493515933378150400 493515933394927616\n493515933394927616 493515933403316224\n493515933403316224 493515933404364800\n493515933404364800 493515933404430336\n493515933404430336 493515933404463104\n493515933404463104 493515933404467200\n493515933404467200 493515933404467264\n493515933404467264 493515933404467280\n493515933404467280 493515933404467288\n493515933404467288 493515933404467292\n493515933404467292 493515933404467293\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": 0,
                            "stdout": "48\n123989531008007376 123989531008007392\n123989531008007392 123989531008007424\n123989531008007424 123989531008007680\n123989531008007680 123989531008008192\n123989531008008192 123989531008040960\n123989531008040960 123989531008172032\n123989531008172032 123989531008434176\n123989531008434176 123989531010531328\n123989531010531328 123989531014725632\n123989531014725632 123989531283161088\n123989531283161088 123989531820032000\n123989531820032000 123989533967515648\n123989533967515648 123989538262482944\n123989538262482944 123989555442352128\n123989555442352128 123989589802090496\n123989589802090496 123989727241043968\n123989727241043968 124130464729399296\n124130464729399296 124411939706109952\n124411939706109952 124974889659531264\n124974889659531264 126100789566373888\n126100789566373888 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 792633534417207296\n792633534417207296 794885334230892544\n794885334230892544 795448284184313856\n795448284184313856 795518652928491520\n795518652928491520 795527449021513728\n795527449021513728 795527723899420672\n795527723899420672 795527861338374144\n795527861338374144 795527930057850880\n795527930057850880 795527938647785472\n795527938647785472 795527940795269120\n795527940795269120 795527941063704576\n795527941063704576 795527941130813440\n795527941130813440 795527941164367872\n795527941164367872 795527941166465024\n795527941166465024 795527941167513600\n795527941167513600 795527941168037888\n795527941168037888 795527941168070656\n795527941168070656 795527941168087040\n795527941168087040 795527941168095232\n795527941168095232 795527941168099328\n795527941168099328 795527941168099840\n795527941168099840 795527941168099968\n795527941168099968 795527941168099984\n795527941168099984 795527941168099988\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": 0,
                            "stdout": "4\n288054454257713152 288054454291267584\n288054454291267584 288089638663356416\n288089638663356416 288230376151711744\n288230376151711744 288230376160100352\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": 0,
                            "stdout": "57\n395279993370173227 395279993370173228\n395279993370173228 395279993370173232\n395279993370173232 395279993370173248\n395279993370173248 395279993370173312\n395279993370173312 395279993370173440\n395279993370173440 395279993370181632\n395279993370181632 395279993370312704\n395279993370312704 395279993370836992\n395279993370836992 395279993371885568\n395279993371885568 395279993376079872\n395279993376079872 395279993510297600\n395279993510297600 395279993778733056\n395279993778733056 395279994315603968\n395279994315603968 395279996463087616\n395279996463087616 395280065182564352\n395280065182564352 395280202621517824\n395280202621517824 395280477499424768\n395280477499424768 395281027255238656\n395281027255238656 395283226278494208\n395283226278494208 395287624325005312\n395287624325005312 395296420418027520\n395296420418027520 395331604790116352\n395331604790116352 395472342278471680\n395472342278471680 395753817255182336\n395753817255182336 396316767208603648\n396316767208603648 432345564227567616\n432345564227567616 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 729583139634020352\n729583139634020352 734086739261390848\n734086739261390848 736338539075076096\n736338539075076096 737464438981918720\n737464438981918720 737745913958629376\n737745913958629376 737816282702807040\n737816282702807040 737851467074895872\n737851467074895872 737869059260940288\n737869059260940288 737873457307451392\n737873457307451392 737875656330706944\n737875656330706944 737876755842334720\n737876755842334720 737876773022203904\n737876773022203904 737876777317171200\n737876777317171200 737876777854042112\n737876777854042112 737876777988259840\n737876777988259840 737876778055368704\n737876778055368704 737876778088923136\n737876778088923136 737876778091020288\n737876778091020288 737876778092068864\n737876778092068864 737876778092331008\n737876778092331008 737876778092363776\n737876778092363776 737876778092380160\n737876778092380160 737876778092388352\n737876778092388352 737876778092390400\n737876778092390400 737876778092391424\n737876778092391424 737876778092391936\n737876778092391936 737876778092392192\n737876778092392192 737876778092392196\n737876778092392196 737876778092392198\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_03",
                            "returncode": 0,
                            "stdout": "8\n3940649673945088 3940649673949184\n3940649673949184 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 11258999068426240\n11258999068426240 11540474045136896\n11540474045136896 11549270138159104\n11549270138159104 11549545016066048\n11549545016066048 11549545024454656\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": 0,
                            "stdout": "61\n61398917963652103 61398917963652104\n61398917963652104 61398917963652112\n61398917963652112 61398917963652128\n61398917963652128 61398917963652160\n61398917963652160 61398917963652224\n61398917963652224 61398917963652352\n61398917963652352 61398917963652608\n61398917963652608 61398917963653120\n61398917963653120 61398917963661312\n61398917963661312 61398917963677696\n61398917963677696 61398917963710464\n61398917963710464 61398917963841536\n61398917963841536 61398917964103680\n61398917964103680 61398917964627968\n61398917964627968 61398917966725120\n61398917966725120 61398917983502336\n61398917983502336 61398918117720064\n61398918117720064 61398918654590976\n61398918654590976 61398919728332800\n61398919728332800 61398928318267392\n61398928318267392 61401127341522944\n61401127341522944 61405525388034048\n61405525388034048 61414321481056256\n61414321481056256 61431913667100672\n61431913667100672 61502282411278336\n61502282411278336 61643019899633664\n61643019899633664 61924494876344320\n61924494876344320 63050394783186944\n63050394783186944 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 180143985094819840\n180143985094819840 198158383604301824\n198158383604301824 198721333557723136\n198721333557723136 199002808534433792\n199002808534433792 199143546022789120\n199143546022789120 199213914766966784\n199213914766966784 199249099139055616\n199249099139055616 199253497185566720\n199253497185566720 199255696208822272\n199255696208822272 199256795720450048\n199256795720450048 199257345476263936\n199257345476263936 199257414195740672\n199257414195740672 199257448555479040\n199257448555479040 199257465735348224\n199257465735348224 199257470030315520\n199257470030315520 199257470298750976\n199257470298750976 199257470432968704\n199257470432968704 199257470466523136\n199257470466523136 199257470468620288\n199257470468620288 199257470469668864\n199257470469668864 199257470470193152\n199257470470193152 199257470470455296\n199257470470455296 199257470470586368\n199257470470586368 199257470470594560\n199257470470594560 199257470470596608\n199257470470596608 199257470470596864\n199257470470596864 199257470470596992\n199257470470596992 199257470470597056\n199257470470597056 199257470470597072\n199257470470597072 199257470470597076\n199257470470597076 199257470470597078\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": 0,
                            "stdout": "1\n0 1024\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": 0,
                            "stdout": "51\n860329287908420023 860329287908420024\n860329287908420024 860329287908420032\n860329287908420032 860329287908420096\n860329287908420096 860329287908420608\n860329287908420608 860329287908421632\n860329287908421632 860329287908425728\n860329287908425728 860329287908458496\n860329287908458496 860329287908589568\n860329287908589568 860329287909113856\n860329287909113856 860329287910162432\n860329287910162432 860329287914356736\n860329287914356736 860329287981465600\n860329287981465600 860329288518336512\n860329288518336512 860329297108271104\n860329297108271104 860329365827747840\n860329365827747840 860330465339375616\n860330465339375616 860332664362631168\n860332664362631168 860337062409142272\n860337062409142272 860345858502164480\n860345858502164480 860363450688208896\n860363450688208896 860398635060297728\n860398635060297728 860469003804475392\n860469003804475392 860750478781186048\n860750478781186048 861313428734607360\n861313428734607360 862439328641449984\n862439328641449984 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1044835113549955072\n1044835113549955072 1062849512059437056\n1062849512059437056 1067353111686807552\n1067353111686807552 1067916061640228864\n1067916061640228864 1068056799128584192\n1068056799128584192 1068127167872761856\n1068127167872761856 1068162352244850688\n1068162352244850688 1068166750291361792\n1068166750291361792 1068167025169268736\n1068167025169268736 1068167042349137920\n1068167042349137920 1068167042382692352\n1068167042382692352 1068167042391080960\n1068167042391080960 1068167042392129536\n1068167042392129536 1068167042392653824\n1068167042392653824 1068167042392784896\n1068167042392784896 1068167042392850432\n1068167042392850432 1068167042392883200\n1068167042392883200 1068167042392899584\n1068167042392899584 1068167042392901632\n1068167042392901632 1068167042392902656\n1068167042392902656 1068167042392903168\n1068167042392903168 1068167042392903232\n1068167042392903232 1068167042392903248\n1068167042392903248 1068167042392903250\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": 0,
                            "stdout": "67\n278964037634255119 278964037634255120\n278964037634255120 278964037634255136\n278964037634255136 278964037634255168\n278964037634255168 278964037634255232\n278964037634255232 278964037634255360\n278964037634255360 278964037634255872\n278964037634255872 278964037634256896\n278964037634256896 278964037634260992\n278964037634260992 278964037634293760\n278964037634293760 278964037634359296\n278964037634359296 278964037634490368\n278964037634490368 278964037635538944\n278964037635538944 278964037637636096\n278964037637636096 278964037646024704\n278964037646024704 278964037662801920\n278964037662801920 278964037696356352\n278964037696356352 278964037763465216\n278964037763465216 278964037897682944\n278964037897682944 278964040045166592\n278964040045166592 278964044340133888\n278964044340133888 278964052930068480\n278964052930068480 278964070109937664\n278964070109937664 278964104469676032\n278964104469676032 278964241908629504\n278964241908629504 278964791664443392\n278964791664443392 278965891176071168\n278965891176071168 278968090199326720\n278968090199326720 278976886292348928\n278976886292348928 279012070664437760\n279012070664437760 279082439408615424\n279082439408615424 279223176896970752\n279223176896970752 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 792633534417207296\n792633534417207296 828662331436171264\n828662331436171264 833165931063541760\n833165931063541760 835417730877227008\n835417730877227008 836543630784069632\n836543630784069632 836825105760780288\n836825105760780288 836860290132869120\n836860290132869120 836877882318913536\n836877882318913536 836882280365424640\n836882280365424640 836884479388680192\n836884479388680192 836884616827633664\n836884616827633664 836884651187372032\n836884651187372032 836884668367241216\n836884668367241216 836884670514724864\n836884670514724864 836884671588466688\n836884671588466688 836884672125337600\n836884672125337600 836884672158892032\n836884672158892032 836884672175669248\n836884672175669248 836884672179863552\n836884672179863552 836884672180912128\n836884672180912128 836884672181436416\n836884672181436416 836884672181567488\n836884672181567488 836884672181583872\n836884672181583872 836884672181592064\n836884672181592064 836884672181596160\n836884672181596160 836884672181598208\n836884672181598208 836884672181598464\n836884672181598464 836884672181598592\n836884672181598592 836884672181598624\n836884672181598624 836884672181598640\n836884672181598640 836884672181598648\n836884672181598648 836884672181598650\n836884672181598650 836884672181598651\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n       ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n              ^\nMain.java:30: error: illegal character: '`'\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                    ^\nMain.java:30: error: illegal character: '`'\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                     ^\nMain.java:30: error: illegal character: '`'\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                               ^\nMain.java:30: error: illegal character: '`'\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                 ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                        ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                             ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                         ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                 ^\nMain.java:30: error: <identifier> expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                      ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                                   ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                                             ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                                                                 ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                                                                        ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                                                                                         ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                                                                                                 ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                                                                                                                  ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                                                                                                                        ^\nMain.java:30: error: illegal character: '`'\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                                                                                                                                      ^\nMain.java:30: error: illegal character: '`'\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                                                                                                                                         ^\nMain.java:30: error: illegal character: '`'\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                                                                                                                                                      ^\nMain.java:30: error: illegal character: '`'\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                                                                                                                                                        ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                                                                                                                                                                   ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                                                                                                                                                                            ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                                                                                                                                                                                            ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                                                                                                                                                                                                         ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                                                                                                                                                                                                              ^\nMain.java:30: error: ';' expected\nThe bug in the line `long w = 1 << i;` is that `1` is an integer literal, and shifting it by more than 31 bits will result in unexpected behavior due to integer overflow. To fix this, you should use a long literal `1L` instead of `1` to ensure that the shift operation is performed on a long value.\n                                                                                                                                                                                                                                                                                                         ^\nMain.java:32: error: ';' expected\nHere is the complete corrected method:\n       ^\nMain.java:32: error: ';' expected\nHere is the complete corrected method:\n                    ^\nMain.java:32: error: ';' expected\nHere is the complete corrected method:\n                                     ^\n32 errors\n"
                }
            }
        },
        "prompt_apr_3": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:39: error: reached end of file while parsing\n\t\t\tlong w = 1L << i;}\n\t\t\t                  ^\n1 error\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:30: error: illegal character: '`'\n```java\n^\nMain.java:30: error: illegal character: '`'\n```java\n ^\nMain.java:30: error: illegal character: '`'\n```java\n  ^\nMain.java:41: error: illegal character: '`'\n```}\n^\nMain.java:41: error: illegal character: '`'\n```}\n ^\nMain.java:41: error: illegal character: '`'\n```}\n  ^\nMain.java:41: error: reached end of file while parsing\n```}\n    ^\n7 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": 0,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_test_11",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "00_sample_03",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": -1,
                            "stdout": null,
                            "stderr": "Timeout"
                        }
                    ]
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:39: error: reached end of file while parsing\n\t\t\t\tlong w = 1L << i;}\n\t\t\t\t                  ^\n1 error\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:30: error: illegal character: '`'\n```java\n^\nMain.java:30: error: illegal character: '`'\n```java\n ^\nMain.java:30: error: illegal character: '`'\n```java\n  ^\nMain.java:41: error: illegal character: '`'\n```}\n^\nMain.java:41: error: illegal character: '`'\n```}\n ^\nMain.java:41: error: illegal character: '`'\n```}\n  ^\nMain.java:41: error: reached end of file while parsing\n```}\n    ^\n7 errors\n"
                }
            }
        },
        "prompt_apr_4": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:39: error: type Pair does not take parameters\nList<Pair<Long, Long>> answer = new ArrayList<>();\t\t\t\t\n         ^\nMain.java:39: error: variable answer is already defined in method main(String[])\nList<Pair<Long, Long>> answer = new ArrayList<>();\t\t\t\t\n                       ^\nMain.java:40: error: cannot find symbol\n\t\t\t\tif (left % w != 0) {\n\t\t\t\t           ^\n  symbol:   variable w\n  location: class Main\nMain.java:44: error: cannot find symbol\n\t\t\t\tif (left + w > right) {\n\t\t\t\t           ^\n  symbol:   variable w\n  location: class Main\nMain.java:48: error: cannot find symbol\n\t\t\t\tanswer.add(new Pair(left, left + w));\n\t\t\t\t                                 ^\n  symbol:   variable w\n  location: class Main\nMain.java:50: error: cannot find symbol\n\t\t\t\tleft += w;\n\t\t\t\t        ^\n  symbol:   variable w\n  location: class Main\n6 errors\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:39: error: illegal start of expression\nif ((left + w - 1) & w) != 0\t\t\t\t\n                        ^\nMain.java:39: error: ';' expected\nif ((left + w - 1) & w) != 0\t\t\t\t\n                            ^\n2 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:40: error: cannot find symbol\n\t\t\t\tif (left % w != 0) {\n\t\t\t\t           ^\n  symbol:   variable w\n  location: class Main\nMain.java:44: error: cannot find symbol\n\t\t\t\tif (left + w > right) {\n\t\t\t\t           ^\n  symbol:   variable w\n  location: class Main\nMain.java:48: error: cannot find symbol\n\t\t\t\tanswer.add(new Pair(left, left + w));\n\t\t\t\t                                 ^\n  symbol:   variable w\n  location: class Main\nMain.java:50: error: cannot find symbol\n\t\t\t\tleft += w;\n\t\t\t\t        ^\n  symbol:   variable w\n  location: class Main\n4 errors\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:61: error: reached end of file while parsing\n}\n ^\n1 error\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:61: error: reached end of file while parsing\n}\n ^\n1 error\n"
                }
            }
        },
        "prompt_apr_5": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:56: error: <identifier> expected\n\t\tSystem.out.println(answer.size());\n\t\t                  ^\nMain.java:56: error: <identifier> expected\n\t\tSystem.out.println(answer.size());\n\t\t                              ^\nMain.java:57: error: illegal start of type\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t^\nMain.java:57: error: > expected\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t                               ^\nMain.java:57: error: <identifier> expected\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t                                    ^\nMain.java:61: error: class, interface, or enum expected\n}\n^\n6 errors\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:36: error: cannot find symbol\nlong w = 1L << i;\t\twhile (left < right) {\n               ^\n  symbol:   variable i\n  location: class Main\nMain.java:38: error: variable w is already defined in method main(String[])\n\t\t\t\tlong w = 1 << i;\n\t\t\t\t     ^\n2 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:56: error: <identifier> expected\n\t\tSystem.out.println(answer.size());\n\t\t                  ^\nMain.java:56: error: <identifier> expected\n\t\tSystem.out.println(answer.size());\n\t\t                              ^\nMain.java:57: error: illegal start of type\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t^\nMain.java:57: error: > expected\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t                               ^\nMain.java:57: error: <identifier> expected\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t                                    ^\nMain.java:61: error: class, interface, or enum expected\n}\n^\n6 errors\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:56: error: <identifier> expected\n\t\tSystem.out.println(answer.size());\n\t\t                  ^\nMain.java:56: error: <identifier> expected\n\t\tSystem.out.println(answer.size());\n\t\t                              ^\nMain.java:57: error: illegal start of type\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t^\nMain.java:57: error: > expected\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t                               ^\nMain.java:57: error: <identifier> expected\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t                                    ^\nMain.java:61: error: class, interface, or enum expected\n}\n^\n6 errors\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": 0,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_test_11",
                            "returncode": 0,
                            "stdout": "55\n893124445952679748 893124445952679752\n893124445952679752 893124445952679760\n893124445952679760 893124445952679776\n893124445952679776 893124445952679808\n893124445952679808 893124445952679936\n893124445952679936 893124445952688128\n893124445952688128 893124445952704512\n893124445952704512 893124445952737280\n893124445952737280 893124445952802816\n893124445952802816 893124445953064960\n893124445953064960 893124445957259264\n893124445957259264 893124445965647872\n893124445965647872 893124445999202304\n893124445999202304 893124446536073216\n893124446536073216 893124447609815040\n893124447609815040 893124464789684224\n893124464789684224 893124499149422592\n893124499149422592 893128897195933696\n893128897195933696 893137693288955904\n893137693288955904 893155285475000320\n893155285475000320 893190469847089152\n893190469847089152 893260838591266816\n893260838591266816 893401576079622144\n893401576079622144 893964526033043456\n893964526033043456 896216325846728704\n896216325846728704 900719925474099200\n900719925474099200 936748722493063168\n936748722493063168 1008806316530991104\n1008806316530991104 1026820715040473088\n1026820715040473088 1035827914295214080\n1035827914295214080 1038079714108899328\n1038079714108899328 1039205614015741952\n1039205614015741952 1039768563969163264\n1039768563969163264 1039803748341252096\n1039803748341252096 1039821340527296512\n1039821340527296512 1039830136620318720\n1039830136620318720 1039834534666829824\n1039834534666829824 1039836733690085376\n1039836733690085376 1039837833201713152\n1039837833201713152 1039838382957527040\n1039838382957527040 1039838417317265408\n1039838417317265408 1039838425907200000\n1039838425907200000 1039838426980941824\n1039838426980941824 1039838427517812736\n1039838427517812736 1039838427534589952\n1039838427534589952 1039838427542978560\n1039838427542978560 1039838427545075712\n1039838427545075712 1039838427545092096\n1039838427545092096 1039838427545096192\n1039838427545096192 1039838427545097216\n1039838427545097216 1039838427545097728\n1039838427545097728 1039838427545097984\n1039838427545097984 1039838427545098112\n1039838427545098112 1039838427545098128\n1039838427545098128 1039838427545098129\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_27",
                            "returncode": 0,
                            "stdout": "1\n0 1\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_09",
                            "returncode": 0,
                            "stdout": "98\n505529333062828545 505529333062828546\n505529333062828546 505529333062828548\n505529333062828548 505529333062828552\n505529333062828552 505529333062828560\n505529333062828560 505529333062828576\n505529333062828576 505529333062828608\n505529333062828608 505529333062828672\n505529333062828672 505529333062828800\n505529333062828800 505529333062829056\n505529333062829056 505529333062830080\n505529333062830080 505529333062832128\n505529333062832128 505529333062836224\n505529333062836224 505529333062844416\n505529333062844416 505529333062860800\n505529333062860800 505529333062893568\n505529333062893568 505529333062959104\n505529333062959104 505529333063090176\n505529333063090176 505529333063352320\n505529333063352320 505529333063876608\n505529333063876608 505529333064925184\n505529333064925184 505529333067022336\n505529333067022336 505529333083799552\n505529333083799552 505529333117353984\n505529333117353984 505529333184462848\n505529333184462848 505529333318680576\n505529333318680576 505529333587116032\n505529333587116032 505529334123986944\n505529334123986944 505529335197728768\n505529335197728768 505529337345212416\n505529337345212416 505529341640179712\n505529341640179712 505529350230114304\n505529350230114304 505529367409983488\n505529367409983488 505529401769721856\n505529401769721856 505529470489198592\n505529470489198592 505529607928152064\n505529607928152064 505530157683965952\n505530157683965952 505531257195593728\n505531257195593728 505533456218849280\n505533456218849280 505537854265360384\n505537854265360384 505546650358382592\n505546650358382592 505564242544427008\n505564242544427008 505599426916515840\n505599426916515840 505669795660693504\n505669795660693504 505810533149048832\n505810533149048832 506092008125759488\n506092008125759488 506654958079180800\n506654958079180800 508906757892866048\n508906757892866048 513410357520236544\n513410357520236544 522417556774977536\n522417556774977536 540431955284459520\n540431955284459520 558446353793941504\n558446353793941504 567453553048682496\n567453553048682496 571957152676052992\n571957152676052992 574208952489738240\n574208952489738240 575334852396580864\n575334852396580864 575616327373291520\n575616327373291520 575757064861646848\n575757064861646848 575827433605824512\n575827433605824512 575862617977913344\n575862617977913344 575880210163957760\n575880210163957760 575889006256979968\n575889006256979968 575893404303491072\n575893404303491072 575895603326746624\n575895603326746624 575896702838374400\n575896702838374400 575897252594188288\n575897252594188288 575897527472095232\n575897527472095232 575897664911048704\n575897664911048704 575897733630525440\n575897733630525440 575897767990263808\n575897767990263808 575897785170132992\n575897785170132992 575897793760067584\n575897793760067584 575897795907551232\n575897795907551232 575897796981293056\n575897796981293056 575897797518163968\n575897797518163968 575897797786599424\n575897797786599424 575897797920817152\n575897797920817152 575897797987926016\n575897797987926016 575897798021480448\n575897798021480448 575897798038257664\n575897798038257664 575897798046646272\n575897798046646272 575897798050840576\n575897798050840576 575897798052937728\n575897798052937728 575897798053986304\n575897798053986304 575897798054510592\n575897798054510592 575897798054772736\n575897798054772736 575897798054903808\n575897798054903808 575897798054936576\n575897798054936576 575897798054952960\n575897798054952960 575897798054953984\n575897798054953984 575897798054954496\n575897798054954496 575897798054954752\n575897798054954752 575897798054954880\n575897798054954880 575897798054954944\n575897798054954944 575897798054954976\n575897798054954976 575897798054954992\n575897798054954992 575897798054954996\n575897798054954996 575897798054954998\n575897798054954998 575897798054954999\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_20",
                            "returncode": 0,
                            "stdout": "61\n181262195287766621 181262195287766622\n181262195287766622 181262195287766624\n181262195287766624 181262195287766656\n181262195287766656 181262195287766784\n181262195287766784 181262195287767040\n181262195287767040 181262195287769088\n181262195287769088 181262195287785472\n181262195287785472 181262195287916544\n181262195287916544 181262195288440832\n181262195288440832 181262195290537984\n181262195290537984 181262195298926592\n181262195298926592 181262195332481024\n181262195332481024 181262195399589888\n181262195399589888 181262195936460800\n181262195936460800 181262197010202624\n181262197010202624 181262205600137216\n181262205600137216 181262222780006400\n181262222780006400 181262257139744768\n181262257139744768 181262325859221504\n181262325859221504 181262463298174976\n181262463298174976 181262738176081920\n181262738176081920 181263287931895808\n181263287931895808 181265486955151360\n181265486955151360 181269885001662464\n181269885001662464 182395784908505088\n182395784908505088 184647584722190336\n184647584722190336 189151184349560832\n189151184349560832 198158383604301824\n198158383604301824 216172782113783808\n216172782113783808 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 756604737398243328\n756604737398243328 774619135907725312\n774619135907725312 776870935721410560\n776870935721410560 777996835628253184\n777996835628253184 778559785581674496\n778559785581674496 778841260558385152\n778841260558385152 778981998046740480\n778981998046740480 778990794139762688\n778990794139762688 778991893651390464\n778991893651390464 778992443407204352\n778992443407204352 778992718285111296\n778992718285111296 778992726875045888\n778992726875045888 778992729022529536\n778992729022529536 778992730096271360\n778992730096271360 778992730364706816\n778992730364706816 778992730381484032\n778992730381484032 778992730385678336\n778992730385678336 778992730387775488\n778992730387775488 778992730388037632\n778992730388037632 778992730388168704\n778992730388168704 778992730388234240\n778992730388234240 778992730388267008\n778992730388267008 778992730388283392\n778992730388283392 778992730388287488\n778992730388287488 778992730388288512\n778992730388288512 778992730388288768\n778992730388288768 778992730388288800\n778992730388288800 778992730388288816\n778992730388288816 778992730388288824\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_25",
                            "returncode": 0,
                            "stdout": "2\n288230376151711744 576460752303423488\n576460752303423488 864691128455135232\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_17",
                            "returncode": 0,
                            "stdout": "59\n366943872216607560 366943872216607568\n366943872216607568 366943872216607584\n366943872216607584 366943872216607616\n366943872216607616 366943872216607744\n366943872216607744 366943872216608768\n366943872216608768 366943872216612864\n366943872216612864 366943872216629248\n366943872216629248 366943872216662016\n366943872216662016 366943872216727552\n366943872216727552 366943872216989696\n366943872216989696 366943872284098560\n366943872284098560 366943872418316288\n366943872418316288 366943881008250880\n366943881008250880 366943898188120064\n366943898188120064 366943932547858432\n366943932547858432 366944001267335168\n366944001267335168 366944138706288640\n366944138706288640 366944413584195584\n366944413584195584 366946612607451136\n366946612607451136 366955408700473344\n366955408700473344 366973000886517760\n366973000886517760 367043369630695424\n367043369630695424 369295169444380672\n369295169444380672 378302368699121664\n378302368699121664 396316767208603648\n396316767208603648 432345564227567616\n432345564227567616 576460752303423488\n576460752303423488 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1080863910568919040\n1080863910568919040 1081004648057274368\n1081004648057274368 1081039832429363200\n1081039832429363200 1081057424615407616\n1081057424615407616 1081066220708429824\n1081066220708429824 1081068419731685376\n1081068419731685376 1081069519243313152\n1081069519243313152 1081070068999127040\n1081070068999127040 1081070343877033984\n1081070343877033984 1081070412596510720\n1081070412596510720 1081070446956249088\n1081070446956249088 1081070455546183680\n1081070455546183680 1081070457693667328\n1081070457693667328 1081070458767409152\n1081070458767409152 1081070459304280064\n1081070459304280064 1081070459371388928\n1081070459371388928 1081070459388166144\n1081070459388166144 1081070459390263296\n1081070459390263296 1081070459391311872\n1081070459391311872 1081070459391574016\n1081070459391574016 1081070459391705088\n1081070459391705088 1081070459391707136\n1081070459391707136 1081070459391708160\n1081070459391708160 1081070459391708416\n1081070459391708416 1081070459391708544\n1081070459391708544 1081070459391708608\n1081070459391708608 1081070459391708640\n1081070459391708640 1081070459391708656\n1081070459391708656 1081070459391708660\n1081070459391708660 1081070459391708661\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_13",
                            "returncode": 0,
                            "stdout": "52\n813135255471707232 813135255471707264\n813135255471707264 813135255471707392\n813135255471707392 813135255471707648\n813135255471707648 813135255471708160\n813135255471708160 813135255471710208\n813135255471710208 813135255471718400\n813135255471718400 813135255471783936\n813135255471783936 813135255471915008\n813135255471915008 813135255476109312\n813135255476109312 813135255492886528\n813135255492886528 813135255526440960\n813135255526440960 813135255593549824\n813135255593549824 813135255861985280\n813135255861985280 813135260156952576\n813135260156952576 813135268746887168\n813135268746887168 813135303106625536\n813135303106625536 813135577984532480\n813135577984532480 813136127740346368\n813136127740346368 813137227251974144\n813137227251974144 813146023344996352\n813146023344996352 813181207717085184\n813181207717085184 813462682693795840\n813462682693795840 814025632647217152\n814025632647217152 815151532554059776\n815151532554059776 819655132181430272\n819655132181430272 828662331436171264\n828662331436171264 846676729945653248\n846676729945653248 847802629852495872\n847802629852495872 848084104829206528\n848084104829206528 848154473573384192\n848154473573384192 848172065759428608\n848172065759428608 848174264782684160\n848174264782684160 848174539660591104\n848174539660591104 848174677099544576\n848174677099544576 848174745819021312\n848174745819021312 848174780178759680\n848174780178759680 848174788768694272\n848174788768694272 848174793063661568\n848174793063661568 848174794137403392\n848174794137403392 848174794405838848\n848174794405838848 848174794472947712\n848174794472947712 848174794506502144\n848174794506502144 848174794508599296\n848174794508599296 848174794509647872\n848174794509647872 848174794509713408\n848174794509713408 848174794509729792\n848174794509729792 848174794509733888\n848174794509733888 848174794509734912\n848174794509734912 848174794509735424\n848174794509735424 848174794509735680\n848174794509735680 848174794509735808\n848174794509735808 848174794509735812\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_10",
                            "returncode": 0,
                            "stdout": "110\n504403158265495553 504403158265495554\n504403158265495554 504403158265495556\n504403158265495556 504403158265495560\n504403158265495560 504403158265495568\n504403158265495568 504403158265495584\n504403158265495584 504403158265495616\n504403158265495616 504403158265495680\n504403158265495680 504403158265495808\n504403158265495808 504403158265496064\n504403158265496064 504403158265496576\n504403158265496576 504403158265497600\n504403158265497600 504403158265499648\n504403158265499648 504403158265503744\n504403158265503744 504403158265511936\n504403158265511936 504403158265528320\n504403158265528320 504403158265561088\n504403158265561088 504403158265626624\n504403158265626624 504403158265757696\n504403158265757696 504403158266019840\n504403158266019840 504403158266544128\n504403158266544128 504403158267592704\n504403158267592704 504403158269689856\n504403158269689856 504403158273884160\n504403158273884160 504403158282272768\n504403158282272768 504403158299049984\n504403158299049984 504403158332604416\n504403158332604416 504403158399713280\n504403158399713280 504403158533931008\n504403158533931008 504403158802366464\n504403158802366464 504403159339237376\n504403159339237376 504403160412979200\n504403160412979200 504403162560462848\n504403162560462848 504403166855430144\n504403166855430144 504403175445364736\n504403175445364736 504403192625233920\n504403192625233920 504403226984972288\n504403226984972288 504403295704449024\n504403295704449024 504403433143402496\n504403433143402496 504403708021309440\n504403708021309440 504404257777123328\n504404257777123328 504405357288751104\n504405357288751104 504407556312006656\n504407556312006656 504411954358517760\n504411954358517760 504420750451539968\n504420750451539968 504438342637584384\n504438342637584384 504473527009673216\n504473527009673216 504543895753850880\n504543895753850880 504684633242206208\n504684633242206208 504966108218916864\n504966108218916864 505529058172338176\n505529058172338176 506654958079180800\n506654958079180800 508906757892866048\n508906757892866048 513410357520236544\n513410357520236544 522417556774977536\n522417556774977536 540431955284459520\n540431955284459520 558446353793941504\n558446353793941504 567453553048682496\n567453553048682496 571957152676052992\n571957152676052992 574208952489738240\n574208952489738240 575334852396580864\n575334852396580864 575897802350002176\n575897802350002176 576179277326712832\n576179277326712832 576320014815068160\n576320014815068160 576390383559245824\n576390383559245824 576425567931334656\n576425567931334656 576443160117379072\n576443160117379072 576451956210401280\n576451956210401280 576456354256912384\n576456354256912384 576458553280167936\n576458553280167936 576459652791795712\n576459652791795712 576460202547609600\n576460202547609600 576460477425516544\n576460477425516544 576460614864470016\n576460614864470016 576460683583946752\n576460683583946752 576460717943685120\n576460717943685120 576460735123554304\n576460735123554304 576460743713488896\n576460743713488896 576460748008456192\n576460748008456192 576460750155939840\n576460750155939840 576460751229681664\n576460751229681664 576460751766552576\n576460751766552576 576460752034988032\n576460752034988032 576460752169205760\n576460752169205760 576460752236314624\n576460752236314624 576460752269869056\n576460752269869056 576460752286646272\n576460752286646272 576460752295034880\n576460752295034880 576460752299229184\n576460752299229184 576460752301326336\n576460752301326336 576460752302374912\n576460752302374912 576460752302899200\n576460752302899200 576460752303161344\n576460752303161344 576460752303292416\n576460752303292416 576460752303357952\n576460752303357952 576460752303390720\n576460752303390720 576460752303407104\n576460752303407104 576460752303415296\n576460752303415296 576460752303419392\n576460752303419392 576460752303421440\n576460752303421440 576460752303422464\n576460752303422464 576460752303422976\n576460752303422976 576460752303423232\n576460752303423232 576460752303423360\n576460752303423360 576460752303423424\n576460752303423424 576460752303423456\n576460752303423456 576460752303423472\n576460752303423472 576460752303423480\n576460752303423480 576460752303423484\n576460752303423484 576460752303423486\n576460752303423486 576460752303423487\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_02",
                            "returncode": 0,
                            "stdout": "25\n432344644764301224 432344644764301232\n432344644764301232 432344644764301248\n432344644764301248 432344644764301312\n432344644764301312 432344644764303360\n432344644764303360 432344644764827648\n432344644764827648 432344644769021952\n432344644769021952 432344644836130816\n432344644836130816 432344645104566272\n432344645104566272 432344653694500864\n432344653694500864 432344670874370048\n432344670874370048 432344739593846784\n432344739593846784 432345014471753728\n432345014471753728 432345564227567616\n432345564227567616 504403158265495552\n504403158265495552 540431955284459520\n540431955284459520 558446353793941504\n558446353793941504 558448552817197056\n558448552817197056 558448827695104000\n558448827695104000 558448896414580736\n558448896414580736 558448896683016192\n558448896683016192 558448896716570624\n558448896716570624 558448896716832768\n558448896716832768 558448896716849152\n558448896716849152 558448896716853248\n558448896716853248 558448896716855296\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": 0,
                            "stdout": "5\n3 4\n4 8\n8 16\n16 18\n18 19\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_23",
                            "returncode": 0,
                            "stdout": "60\n1 2\n2 4\n4 8\n8 16\n16 32\n32 64\n64 128\n128 256\n256 512\n512 1024\n1024 2048\n2048 4096\n4096 8192\n8192 16384\n16384 32768\n32768 65536\n65536 131072\n131072 262144\n262144 524288\n524288 1048576\n1048576 2097152\n2097152 4194304\n4194304 8388608\n8388608 16777216\n16777216 33554432\n33554432 67108864\n67108864 134217728\n134217728 268435456\n268435456 536870912\n536870912 1073741824\n1073741824 2147483648\n2147483648 4294967296\n4294967296 8589934592\n8589934592 17179869184\n17179869184 34359738368\n34359738368 68719476736\n68719476736 137438953472\n137438953472 274877906944\n274877906944 549755813888\n549755813888 1099511627776\n1099511627776 2199023255552\n2199023255552 4398046511104\n4398046511104 8796093022208\n8796093022208 17592186044416\n17592186044416 35184372088832\n35184372088832 70368744177664\n70368744177664 140737488355328\n140737488355328 281474976710656\n281474976710656 562949953421312\n562949953421312 1125899906842624\n1125899906842624 2251799813685248\n2251799813685248 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 1152921504606846976\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_29",
                            "returncode": 0,
                            "stdout": "2\n1 2\n2 3\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_24",
                            "returncode": 0,
                            "stdout": "118\n1 2\n2 4\n4 8\n8 16\n16 32\n32 64\n64 128\n128 256\n256 512\n512 1024\n1024 2048\n2048 4096\n4096 8192\n8192 16384\n16384 32768\n32768 65536\n65536 131072\n131072 262144\n262144 524288\n524288 1048576\n1048576 2097152\n2097152 4194304\n4194304 8388608\n8388608 16777216\n16777216 33554432\n33554432 67108864\n67108864 134217728\n134217728 268435456\n268435456 536870912\n536870912 1073741824\n1073741824 2147483648\n2147483648 4294967296\n4294967296 8589934592\n8589934592 17179869184\n17179869184 34359738368\n34359738368 68719476736\n68719476736 137438953472\n137438953472 274877906944\n274877906944 549755813888\n549755813888 1099511627776\n1099511627776 2199023255552\n2199023255552 4398046511104\n4398046511104 8796093022208\n8796093022208 17592186044416\n17592186044416 35184372088832\n35184372088832 70368744177664\n70368744177664 140737488355328\n140737488355328 281474976710656\n281474976710656 562949953421312\n562949953421312 1125899906842624\n1125899906842624 2251799813685248\n2251799813685248 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1080863910568919040\n1080863910568919040 1116892707587883008\n1116892707587883008 1134907106097364992\n1134907106097364992 1143914305352105984\n1143914305352105984 1148417904979476480\n1148417904979476480 1150669704793161728\n1150669704793161728 1151795604700004352\n1151795604700004352 1152358554653425664\n1152358554653425664 1152640029630136320\n1152640029630136320 1152780767118491648\n1152780767118491648 1152851135862669312\n1152851135862669312 1152886320234758144\n1152886320234758144 1152903912420802560\n1152903912420802560 1152912708513824768\n1152912708513824768 1152917106560335872\n1152917106560335872 1152919305583591424\n1152919305583591424 1152920405095219200\n1152920405095219200 1152920954851033088\n1152920954851033088 1152921229728940032\n1152921229728940032 1152921367167893504\n1152921367167893504 1152921435887370240\n1152921435887370240 1152921470247108608\n1152921470247108608 1152921487426977792\n1152921487426977792 1152921496016912384\n1152921496016912384 1152921500311879680\n1152921500311879680 1152921502459363328\n1152921502459363328 1152921503533105152\n1152921503533105152 1152921504069976064\n1152921504069976064 1152921504338411520\n1152921504338411520 1152921504472629248\n1152921504472629248 1152921504539738112\n1152921504539738112 1152921504573292544\n1152921504573292544 1152921504590069760\n1152921504590069760 1152921504598458368\n1152921504598458368 1152921504602652672\n1152921504602652672 1152921504604749824\n1152921504604749824 1152921504605798400\n1152921504605798400 1152921504606322688\n1152921504606322688 1152921504606584832\n1152921504606584832 1152921504606715904\n1152921504606715904 1152921504606781440\n1152921504606781440 1152921504606814208\n1152921504606814208 1152921504606830592\n1152921504606830592 1152921504606838784\n1152921504606838784 1152921504606842880\n1152921504606842880 1152921504606844928\n1152921504606844928 1152921504606845952\n1152921504606845952 1152921504606846464\n1152921504606846464 1152921504606846720\n1152921504606846720 1152921504606846848\n1152921504606846848 1152921504606846912\n1152921504606846912 1152921504606846944\n1152921504606846944 1152921504606846960\n1152921504606846960 1152921504606846968\n1152921504606846968 1152921504606846972\n1152921504606846972 1152921504606846974\n1152921504606846974 1152921504606846975\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_28",
                            "returncode": 0,
                            "stdout": "1\n1 2\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_26",
                            "returncode": 0,
                            "stdout": "1\n576460752303423488 1152921504606846976\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_22",
                            "returncode": 0,
                            "stdout": "60\n0 576460752303423488\n576460752303423488 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1080863910568919040\n1080863910568919040 1116892707587883008\n1116892707587883008 1134907106097364992\n1134907106097364992 1143914305352105984\n1143914305352105984 1148417904979476480\n1148417904979476480 1150669704793161728\n1150669704793161728 1151795604700004352\n1151795604700004352 1152358554653425664\n1152358554653425664 1152640029630136320\n1152640029630136320 1152780767118491648\n1152780767118491648 1152851135862669312\n1152851135862669312 1152886320234758144\n1152886320234758144 1152903912420802560\n1152903912420802560 1152912708513824768\n1152912708513824768 1152917106560335872\n1152917106560335872 1152919305583591424\n1152919305583591424 1152920405095219200\n1152920405095219200 1152920954851033088\n1152920954851033088 1152921229728940032\n1152921229728940032 1152921367167893504\n1152921367167893504 1152921435887370240\n1152921435887370240 1152921470247108608\n1152921470247108608 1152921487426977792\n1152921487426977792 1152921496016912384\n1152921496016912384 1152921500311879680\n1152921500311879680 1152921502459363328\n1152921502459363328 1152921503533105152\n1152921503533105152 1152921504069976064\n1152921504069976064 1152921504338411520\n1152921504338411520 1152921504472629248\n1152921504472629248 1152921504539738112\n1152921504539738112 1152921504573292544\n1152921504573292544 1152921504590069760\n1152921504590069760 1152921504598458368\n1152921504598458368 1152921504602652672\n1152921504602652672 1152921504604749824\n1152921504604749824 1152921504605798400\n1152921504605798400 1152921504606322688\n1152921504606322688 1152921504606584832\n1152921504606584832 1152921504606715904\n1152921504606715904 1152921504606781440\n1152921504606781440 1152921504606814208\n1152921504606814208 1152921504606830592\n1152921504606830592 1152921504606838784\n1152921504606838784 1152921504606842880\n1152921504606842880 1152921504606844928\n1152921504606844928 1152921504606845952\n1152921504606845952 1152921504606846464\n1152921504606846464 1152921504606846720\n1152921504606846720 1152921504606846848\n1152921504606846848 1152921504606846912\n1152921504606846912 1152921504606846944\n1152921504606846944 1152921504606846960\n1152921504606846960 1152921504606846968\n1152921504606846968 1152921504606846972\n1152921504606846972 1152921504606846974\n1152921504606846974 1152921504606846975\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_08",
                            "returncode": 0,
                            "stdout": "87\n432486315808860234 432486315808860236\n432486315808860236 432486315808860240\n432486315808860240 432486315808860256\n432486315808860256 432486315808860288\n432486315808860288 432486315808860416\n432486315808860416 432486315808860672\n432486315808860672 432486315808861184\n432486315808861184 432486315808862208\n432486315808862208 432486315808866304\n432486315808866304 432486315808882688\n432486315808882688 432486315808915456\n432486315808915456 432486315809046528\n432486315809046528 432486315809308672\n432486315809308672 432486315809832960\n432486315809832960 432486315810881536\n432486315810881536 432486315812978688\n432486315812978688 432486315817172992\n432486315817172992 432486315825561600\n432486315825561600 432486315842338816\n432486315842338816 432486315875893248\n432486315875893248 432486315943002112\n432486315943002112 432486316211437568\n432486316211437568 432486316748308480\n432486316748308480 432486318895792128\n432486318895792128 432486336075661312\n432486336075661312 432486370435399680\n432486370435399680 432486439154876416\n432486439154876416 432486576593829888\n432486576593829888 432486851471736832\n432486851471736832 432487401227550720\n432487401227550720 432488500739178496\n432488500739178496 432490699762434048\n432490699762434048 432495097808945152\n432495097808945152 432503893901967360\n432503893901967360 432521486088011776\n432521486088011776 432556670460100608\n432556670460100608 432627039204278272\n432627039204278272 432908514180988928\n432908514180988928 433471464134410240\n433471464134410240 434597364041252864\n434597364041252864 436849163854938112\n436849163854938112 441352763482308608\n441352763482308608 450359962737049600\n450359962737049600 468374361246531584\n468374361246531584 504403158265495552\n504403158265495552 522417556774977536\n522417556774977536 526921156402348032\n526921156402348032 529172956216033280\n529172956216033280 530298856122875904\n530298856122875904 530861806076297216\n530861806076297216 531143281053007872\n531143281053007872 531284018541363200\n531284018541363200 531354387285540864\n531354387285540864 531389571657629696\n531389571657629696 531407163843674112\n531407163843674112 531415959936696320\n531415959936696320 531420357983207424\n531420357983207424 531422557006462976\n531422557006462976 531423106762276864\n531423106762276864 531423381640183808\n531423381640183808 531423450359660544\n531423450359660544 531423467539529728\n531423467539529728 531423469687013376\n531423469687013376 531423470760755200\n531423470760755200 531423471297626112\n531423471297626112 531423471431843840\n531423471431843840 531423471498952704\n531423471498952704 531423471532507136\n531423471532507136 531423471549284352\n531423471549284352 531423471557672960\n531423471557672960 531423471561867264\n531423471561867264 531423471563964416\n531423471563964416 531423471564226560\n531423471564226560 531423471564357632\n531423471564357632 531423471564390400\n531423471564390400 531423471564398592\n531423471564398592 531423471564400640\n531423471564400640 531423471564401664\n531423471564401664 531423471564402176\n531423471564402176 531423471564402432\n531423471564402432 531423471564402560\n531423471564402560 531423471564402624\n531423471564402624 531423471564402656\n531423471564402656 531423471564402664\n531423471564402664 531423471564402668\n531423471564402668 531423471564402670\n531423471564402670 531423471564402671\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_06",
                            "returncode": 0,
                            "stdout": "63\n11801128058619141 11801128058619142\n11801128058619142 11801128058619144\n11801128058619144 11801128058619152\n11801128058619152 11801128058619168\n11801128058619168 11801128058619200\n11801128058619200 11801128058619264\n11801128058619264 11801128058619392\n11801128058619392 11801128058619904\n11801128058619904 11801128058621952\n11801128058621952 11801128058626048\n11801128058626048 11801128058634240\n11801128058634240 11801128058650624\n11801128058650624 11801128058683392\n11801128058683392 11801128058748928\n11801128058748928 11801128059011072\n11801128059011072 11801128059535360\n11801128059535360 11801128060583936\n11801128060583936 11801128094138368\n11801128094138368 11801129167880192\n11801129167880192 11801131315363840\n11801131315363840 11801135610331136\n11801135610331136 11801144200265728\n11801144200265728 11801161380134912\n11801161380134912 11801195739873280\n11801195739873280 11801333178826752\n11801333178826752 11801608056733696\n11801608056733696 11802157812547584\n11802157812547584 11804356835803136\n11804356835803136 11821949021847552\n11821949021847552 12384898975268864\n12384898975268864 13510798882111488\n13510798882111488 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 432345564227567616\n432345564227567616 468374361246531584\n468374361246531584 477381560501272576\n477381560501272576 481885160128643072\n481885160128643072 484136959942328320\n484136959942328320 484418434919038976\n484418434919038976 484488803663216640\n484488803663216640 484491002686472192\n484491002686472192 484492102198099968\n484492102198099968 484492651953913856\n484492651953913856 484492789392867328\n484492789392867328 484492858112344064\n484492858112344064 484492892472082432\n484492892472082432 484492909651951616\n484492909651951616 484492910725693440\n484492910725693440 484492910859911168\n484492910859911168 484492910927020032\n484492910927020032 484492910960574464\n484492910960574464 484492910964768768\n484492910964768768 484492910965817344\n484492910965817344 484492910965818368\n484492910965818368 484492910965818624\n484492910965818624 484492910965818688\n484492910965818688 484492910965818720\n484492910965818720 484492910965818728\n484492910965818728 484492910965818730\n484492910965818730 484492910965818731\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_07",
                            "returncode": 0,
                            "stdout": "85\n282183781417523 282183781417524\n282183781417524 282183781417528\n282183781417528 282183781417536\n282183781417536 282183781417600\n282183781417600 282183781417728\n282183781417728 282183781417984\n282183781417984 282183781419008\n282183781419008 282183781421056\n282183781421056 282183781425152\n282183781425152 282183781433344\n282183781433344 282183781449728\n282183781449728 282183781580800\n282183781580800 282183782629376\n282183782629376 282183784726528\n282183784726528 282183788920832\n282183788920832 282183797309440\n282183797309440 282183814086656\n282183814086656 282183847641088\n282183847641088 282183914749952\n282183914749952 282184183185408\n282184183185408 282184720056320\n282184720056320 282185793798144\n282185793798144 282187941281792\n282187941281792 282196531216384\n282196531216384 282230890954752\n282230890954752 282299610431488\n282299610431488 282574488338432\n282574488338432 283673999966208\n283673999966208 285873023221760\n285873023221760 290271069732864\n290271069732864 299067162755072\n299067162755072 316659348799488\n316659348799488 351843720888320\n351843720888320 422212465065984\n422212465065984 562949953421312\n562949953421312 1125899906842624\n1125899906842624 2251799813685248\n2251799813685248 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 18014398509481984\n18014398509481984 36028797018963968\n36028797018963968 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 216172782113783808\n216172782113783808 252201579132747776\n252201579132747776 270215977642229760\n270215977642229760 279223176896970752\n279223176896970752 283726776524341248\n283726776524341248 285978576338026496\n285978576338026496 286541526291447808\n286541526291447808 286611895035625472\n286611895035625472 286647079407714304\n286647079407714304 286664671593758720\n286664671593758720 286673467686780928\n286673467686780928 286677865733292032\n286677865733292032 286680064756547584\n286680064756547584 286681164268175360\n286681164268175360 286681714023989248\n286681714023989248 286681988901896192\n286681988901896192 286682126340849664\n286682126340849664 286682195060326400\n286682195060326400 286682229420064768\n286682229420064768 286682246599933952\n286682246599933952 286682250894901248\n286682250894901248 286682251968643072\n286682251968643072 286682252505513984\n286682252505513984 286682252773949440\n286682252773949440 286682252908167168\n286682252908167168 286682252975276032\n286682252975276032 286682253008830464\n286682253008830464 286682253017219072\n286682253017219072 286682253019316224\n286682253019316224 286682253020364800\n286682253020364800 286682253020889088\n286682253020889088 286682253020954624\n286682253020954624 286682253020987392\n286682253020987392 286682253021003776\n286682253021003776 286682253021011968\n286682253021011968 286682253021016064\n286682253021016064 286682253021018112\n286682253021018112 286682253021019136\n286682253021019136 286682253021019648\n286682253021019648 286682253021019776\n286682253021019776 286682253021019780\n286682253021019780 286682253021019781\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_03",
                            "returncode": 0,
                            "stdout": "28\n144106357446602451 144106357446602452\n144106357446602452 144106357446602456\n144106357446602456 144106357446602464\n144106357446602464 144106357446602496\n144106357446602496 144106357446602752\n144106357446602752 144106357446606848\n144106357446606848 144106357446672384\n144106357446672384 144106357446934528\n144106357446934528 144106357455323136\n144106357455323136 144106357488877568\n144106357488877568 144106357623095296\n144106357623095296 144106391982833664\n144106391982833664 144115188075855872\n144115188075855872 216172782113783808\n216172782113783808 252201579132747776\n252201579132747776 261208778387488768\n261208778387488768 261771728340910080\n261771728340910080 261789320526954496\n261789320526954496 261791519550210048\n261791519550210048 261791588269686784\n261791588269686784 261791622629425152\n261791622629425152 261791639809294336\n261791639809294336 261791641956777984\n261791641956777984 261791642225213440\n261791642225213440 261791642225344512\n261791642225344512 261791642225410048\n261791642225410048 261791642225414144\n261791642225414144 261791642225414176\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_21",
                            "returncode": 0,
                            "stdout": "1\n0 1152921504606846976\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_04",
                            "returncode": 0,
                            "stdout": "41\n360198504640541332 360198504640541336\n360198504640541336 360198504640541344\n360198504640541344 360198504640541376\n360198504640541376 360198504640541440\n360198504640541440 360198504640541696\n360198504640541696 360198504640542720\n360198504640542720 360198504640544768\n360198504640544768 360198504640675840\n360198504640675840 360198504640937984\n360198504640937984 360198504645132288\n360198504645132288 360198504678686720\n360198504678686720 360198504947122176\n360198504947122176 360198506020864000\n360198506020864000 360198514610798592\n360198514610798592 360198531790667776\n360198531790667776 360198566150406144\n360198566150406144 360198634869882880\n360198634869882880 360198909747789824\n360198909747789824 360200009259417600\n360200009259417600 360217601445462016\n360217601445462016 360287970189639680\n360287970189639680 432345564227567616\n432345564227567616 504403158265495552\n504403158265495552 504966108218916864\n504966108218916864 505247583195627520\n505247583195627520 505256379288649728\n505256379288649728 505257478800277504\n505257478800277504 505258028556091392\n505258028556091392 505258032851058688\n505258032851058688 505258033387929600\n505258033387929600 505258033455038464\n505258033455038464 505258033488592896\n505258033488592896 505258033496981504\n505258033496981504 505258033499078656\n505258033499078656 505258033500127232\n505258033500127232 505258033500651520\n505258033500651520 505258033500667904\n505258033500667904 505258033500676096\n505258033500676096 505258033500676608\n505258033500676608 505258033500676864\n505258033500676864 505258033500676866\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_05",
                            "returncode": 0,
                            "stdout": "55\n170125114320639076 170125114320639080\n170125114320639080 170125114320639088\n170125114320639088 170125114320639104\n170125114320639104 170125114320639232\n170125114320639232 170125114320639488\n170125114320639488 170125114320640000\n170125114320640000 170125114320642048\n170125114320642048 170125114320650240\n170125114320650240 170125114320683008\n170125114320683008 170125114320748544\n170125114320748544 170125114320879616\n170125114320879616 170125114321403904\n170125114321403904 170125114329792512\n170125114329792512 170125114346569728\n170125114346569728 170125114883440640\n170125114883440640 170125132063309824\n170125132063309824 170125166423048192\n170125166423048192 170125235142524928\n170125235142524928 170134031235547136\n170134031235547136 170151623421591552\n170151623421591552 170292360909946880\n170292360909946880 170573835886657536\n170573835886657536 171136785840078848\n171136785840078848 180143985094819840\n180143985094819840 198158383604301824\n198158383604301824 202661983231672320\n202661983231672320 203787883138514944\n203787883138514944 204350833091936256\n204350833091936256 204632308068646912\n204632308068646912 204634507091902464\n204634507091902464 204635606603530240\n204635606603530240 204635881481437184\n204635881481437184 204636018920390656\n204636018920390656 204636027510325248\n204636027510325248 204636029657808896\n204636029657808896 204636030731550720\n204636030731550720 204636031268421632\n204636031268421632 204636031536857088\n204636031536857088 204636031671074816\n204636031671074816 204636031704629248\n204636031704629248 204636031721406464\n204636031721406464 204636031729795072\n204636031729795072 204636031731892224\n204636031731892224 204636031732940800\n204636031732940800 204636031733465088\n204636031733465088 204636031733727232\n204636031733727232 204636031733858304\n204636031733858304 204636031733923840\n204636031733923840 204636031733956608\n204636031733956608 204636031733972992\n204636031733972992 204636031733975040\n204636031733975040 204636031733976064\n204636031733976064 204636031733976576\n204636031733976576 204636031733976832\n204636031733976832 204636031733976848\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_12",
                            "returncode": 0,
                            "stdout": "54\n271518219607274605 271518219607274606\n271518219607274606 271518219607274608\n271518219607274608 271518219607274624\n271518219607274624 271518219607274752\n271518219607274752 271518219607275008\n271518219607275008 271518219607275520\n271518219607275520 271518219607277568\n271518219607277568 271518219607343104\n271518219607343104 271518219607474176\n271518219607474176 271518219611668480\n271518219611668480 271518219645222912\n271518219645222912 271518219779440640\n271518219779440640 271518220316311552\n271518220316311552 271518228906246144\n271518228906246144 271518246086115328\n271518246086115328 271518280445853696\n271518280445853696 271518349165330432\n271518349165330432 271518898921144320\n271518898921144320 271519998432772096\n271519998432772096 271522197456027648\n271522197456027648 271526595502538752\n271526595502538752 271535391595560960\n271535391595560960 271552983781605376\n271552983781605376 271623352525783040\n271623352525783040 271904827502493696\n271904827502493696 272467777455915008\n272467777455915008 274719577269600256\n274719577269600256 279223176896970752\n279223176896970752 288230376151711744\n288230376151711744 432345564227567616\n432345564227567616 468374361246531584\n468374361246531584 486388759756013568\n486388759756013568 490892359383384064\n490892359383384064 493144159197069312\n493144159197069312 493425634173779968\n493425634173779968 493496002917957632\n493496002917957632 493513595104002048\n493513595104002048 493515794127257600\n493515794127257600 493515931566211072\n493515931566211072 493515932639952896\n493515932639952896 493515933176823808\n493515933176823808 493515933311041536\n493515933311041536 493515933378150400\n493515933378150400 493515933394927616\n493515933394927616 493515933403316224\n493515933403316224 493515933404364800\n493515933404364800 493515933404430336\n493515933404430336 493515933404463104\n493515933404463104 493515933404467200\n493515933404467200 493515933404467264\n493515933404467264 493515933404467280\n493515933404467280 493515933404467288\n493515933404467288 493515933404467292\n493515933404467292 493515933404467293\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_15",
                            "returncode": 0,
                            "stdout": "48\n123989531008007376 123989531008007392\n123989531008007392 123989531008007424\n123989531008007424 123989531008007680\n123989531008007680 123989531008008192\n123989531008008192 123989531008040960\n123989531008040960 123989531008172032\n123989531008172032 123989531008434176\n123989531008434176 123989531010531328\n123989531010531328 123989531014725632\n123989531014725632 123989531283161088\n123989531283161088 123989531820032000\n123989531820032000 123989533967515648\n123989533967515648 123989538262482944\n123989538262482944 123989555442352128\n123989555442352128 123989589802090496\n123989589802090496 123989727241043968\n123989727241043968 124130464729399296\n124130464729399296 124411939706109952\n124411939706109952 124974889659531264\n124974889659531264 126100789566373888\n126100789566373888 144115188075855872\n144115188075855872 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 792633534417207296\n792633534417207296 794885334230892544\n794885334230892544 795448284184313856\n795448284184313856 795518652928491520\n795518652928491520 795527449021513728\n795527449021513728 795527723899420672\n795527723899420672 795527861338374144\n795527861338374144 795527930057850880\n795527930057850880 795527938647785472\n795527938647785472 795527940795269120\n795527940795269120 795527941063704576\n795527941063704576 795527941130813440\n795527941130813440 795527941164367872\n795527941164367872 795527941166465024\n795527941166465024 795527941167513600\n795527941167513600 795527941168037888\n795527941168037888 795527941168070656\n795527941168070656 795527941168087040\n795527941168087040 795527941168095232\n795527941168095232 795527941168099328\n795527941168099328 795527941168099840\n795527941168099840 795527941168099968\n795527941168099968 795527941168099984\n795527941168099984 795527941168099988\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_01",
                            "returncode": 0,
                            "stdout": "4\n288054454257713152 288054454291267584\n288054454291267584 288089638663356416\n288089638663356416 288230376151711744\n288230376151711744 288230376160100352\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_16",
                            "returncode": 0,
                            "stdout": "57\n395279993370173227 395279993370173228\n395279993370173228 395279993370173232\n395279993370173232 395279993370173248\n395279993370173248 395279993370173312\n395279993370173312 395279993370173440\n395279993370173440 395279993370181632\n395279993370181632 395279993370312704\n395279993370312704 395279993370836992\n395279993370836992 395279993371885568\n395279993371885568 395279993376079872\n395279993376079872 395279993510297600\n395279993510297600 395279993778733056\n395279993778733056 395279994315603968\n395279994315603968 395279996463087616\n395279996463087616 395280065182564352\n395280065182564352 395280202621517824\n395280202621517824 395280477499424768\n395280477499424768 395281027255238656\n395281027255238656 395283226278494208\n395283226278494208 395287624325005312\n395287624325005312 395296420418027520\n395296420418027520 395331604790116352\n395331604790116352 395472342278471680\n395472342278471680 395753817255182336\n395753817255182336 396316767208603648\n396316767208603648 432345564227567616\n432345564227567616 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 729583139634020352\n729583139634020352 734086739261390848\n734086739261390848 736338539075076096\n736338539075076096 737464438981918720\n737464438981918720 737745913958629376\n737745913958629376 737816282702807040\n737816282702807040 737851467074895872\n737851467074895872 737869059260940288\n737869059260940288 737873457307451392\n737873457307451392 737875656330706944\n737875656330706944 737876755842334720\n737876755842334720 737876773022203904\n737876773022203904 737876777317171200\n737876777317171200 737876777854042112\n737876777854042112 737876777988259840\n737876777988259840 737876778055368704\n737876778055368704 737876778088923136\n737876778088923136 737876778091020288\n737876778091020288 737876778092068864\n737876778092068864 737876778092331008\n737876778092331008 737876778092363776\n737876778092363776 737876778092380160\n737876778092380160 737876778092388352\n737876778092388352 737876778092390400\n737876778092390400 737876778092391424\n737876778092391424 737876778092391936\n737876778092391936 737876778092392192\n737876778092392192 737876778092392196\n737876778092392196 737876778092392198\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_03",
                            "returncode": 0,
                            "stdout": "8\n3940649673945088 3940649673949184\n3940649673949184 4503599627370496\n4503599627370496 9007199254740992\n9007199254740992 11258999068426240\n11258999068426240 11540474045136896\n11540474045136896 11549270138159104\n11549270138159104 11549545016066048\n11549545016066048 11549545024454656\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_18",
                            "returncode": 0,
                            "stdout": "61\n61398917963652103 61398917963652104\n61398917963652104 61398917963652112\n61398917963652112 61398917963652128\n61398917963652128 61398917963652160\n61398917963652160 61398917963652224\n61398917963652224 61398917963652352\n61398917963652352 61398917963652608\n61398917963652608 61398917963653120\n61398917963653120 61398917963661312\n61398917963661312 61398917963677696\n61398917963677696 61398917963710464\n61398917963710464 61398917963841536\n61398917963841536 61398917964103680\n61398917964103680 61398917964627968\n61398917964627968 61398917966725120\n61398917966725120 61398917983502336\n61398917983502336 61398918117720064\n61398918117720064 61398918654590976\n61398918654590976 61398919728332800\n61398919728332800 61398928318267392\n61398928318267392 61401127341522944\n61401127341522944 61405525388034048\n61405525388034048 61414321481056256\n61414321481056256 61431913667100672\n61431913667100672 61502282411278336\n61502282411278336 61643019899633664\n61643019899633664 61924494876344320\n61924494876344320 63050394783186944\n63050394783186944 72057594037927936\n72057594037927936 144115188075855872\n144115188075855872 180143985094819840\n180143985094819840 198158383604301824\n198158383604301824 198721333557723136\n198721333557723136 199002808534433792\n199002808534433792 199143546022789120\n199143546022789120 199213914766966784\n199213914766966784 199249099139055616\n199249099139055616 199253497185566720\n199253497185566720 199255696208822272\n199255696208822272 199256795720450048\n199256795720450048 199257345476263936\n199257345476263936 199257414195740672\n199257414195740672 199257448555479040\n199257448555479040 199257465735348224\n199257465735348224 199257470030315520\n199257470030315520 199257470298750976\n199257470298750976 199257470432968704\n199257470432968704 199257470466523136\n199257470466523136 199257470468620288\n199257470468620288 199257470469668864\n199257470469668864 199257470470193152\n199257470470193152 199257470470455296\n199257470470455296 199257470470586368\n199257470470586368 199257470470594560\n199257470470594560 199257470470596608\n199257470470596608 199257470470596864\n199257470470596864 199257470470596992\n199257470470596992 199257470470597056\n199257470470597056 199257470470597072\n199257470470597072 199257470470597076\n199257470470597076 199257470470597078\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": 0,
                            "stdout": "1\n0 1024\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_14",
                            "returncode": 0,
                            "stdout": "51\n860329287908420023 860329287908420024\n860329287908420024 860329287908420032\n860329287908420032 860329287908420096\n860329287908420096 860329287908420608\n860329287908420608 860329287908421632\n860329287908421632 860329287908425728\n860329287908425728 860329287908458496\n860329287908458496 860329287908589568\n860329287908589568 860329287909113856\n860329287909113856 860329287910162432\n860329287910162432 860329287914356736\n860329287914356736 860329287981465600\n860329287981465600 860329288518336512\n860329288518336512 860329297108271104\n860329297108271104 860329365827747840\n860329365827747840 860330465339375616\n860330465339375616 860332664362631168\n860332664362631168 860337062409142272\n860337062409142272 860345858502164480\n860345858502164480 860363450688208896\n860363450688208896 860398635060297728\n860398635060297728 860469003804475392\n860469003804475392 860750478781186048\n860750478781186048 861313428734607360\n861313428734607360 862439328641449984\n862439328641449984 864691128455135232\n864691128455135232 1008806316530991104\n1008806316530991104 1044835113549955072\n1044835113549955072 1062849512059437056\n1062849512059437056 1067353111686807552\n1067353111686807552 1067916061640228864\n1067916061640228864 1068056799128584192\n1068056799128584192 1068127167872761856\n1068127167872761856 1068162352244850688\n1068162352244850688 1068166750291361792\n1068166750291361792 1068167025169268736\n1068167025169268736 1068167042349137920\n1068167042349137920 1068167042382692352\n1068167042382692352 1068167042391080960\n1068167042391080960 1068167042392129536\n1068167042392129536 1068167042392653824\n1068167042392653824 1068167042392784896\n1068167042392784896 1068167042392850432\n1068167042392850432 1068167042392883200\n1068167042392883200 1068167042392899584\n1068167042392899584 1068167042392901632\n1068167042392901632 1068167042392902656\n1068167042392902656 1068167042392903168\n1068167042392903168 1068167042392903232\n1068167042392903232 1068167042392903248\n1068167042392903248 1068167042392903250\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_test_19",
                            "returncode": 0,
                            "stdout": "67\n278964037634255119 278964037634255120\n278964037634255120 278964037634255136\n278964037634255136 278964037634255168\n278964037634255168 278964037634255232\n278964037634255232 278964037634255360\n278964037634255360 278964037634255872\n278964037634255872 278964037634256896\n278964037634256896 278964037634260992\n278964037634260992 278964037634293760\n278964037634293760 278964037634359296\n278964037634359296 278964037634490368\n278964037634490368 278964037635538944\n278964037635538944 278964037637636096\n278964037637636096 278964037646024704\n278964037646024704 278964037662801920\n278964037662801920 278964037696356352\n278964037696356352 278964037763465216\n278964037763465216 278964037897682944\n278964037897682944 278964040045166592\n278964040045166592 278964044340133888\n278964044340133888 278964052930068480\n278964052930068480 278964070109937664\n278964070109937664 278964104469676032\n278964104469676032 278964241908629504\n278964241908629504 278964791664443392\n278964791664443392 278965891176071168\n278965891176071168 278968090199326720\n278968090199326720 278976886292348928\n278976886292348928 279012070664437760\n279012070664437760 279082439408615424\n279082439408615424 279223176896970752\n279223176896970752 288230376151711744\n288230376151711744 576460752303423488\n576460752303423488 720575940379279360\n720575940379279360 792633534417207296\n792633534417207296 828662331436171264\n828662331436171264 833165931063541760\n833165931063541760 835417730877227008\n835417730877227008 836543630784069632\n836543630784069632 836825105760780288\n836825105760780288 836860290132869120\n836860290132869120 836877882318913536\n836877882318913536 836882280365424640\n836882280365424640 836884479388680192\n836884479388680192 836884616827633664\n836884616827633664 836884651187372032\n836884651187372032 836884668367241216\n836884668367241216 836884670514724864\n836884670514724864 836884671588466688\n836884671588466688 836884672125337600\n836884672125337600 836884672158892032\n836884672158892032 836884672175669248\n836884672175669248 836884672179863552\n836884672179863552 836884672180912128\n836884672180912128 836884672181436416\n836884672181436416 836884672181567488\n836884672181567488 836884672181583872\n836884672181583872 836884672181592064\n836884672181592064 836884672181596160\n836884672181596160 836884672181598208\n836884672181598208 836884672181598464\n836884672181598464 836884672181598592\n836884672181598592 836884672181598624\n836884672181598624 836884672181598640\n836884672181598640 836884672181598648\n836884672181598648 836884672181598650\n836884672181598650 836884672181598651\n",
                            "stderr": ""
                        }
                    ]
                }
            }
        },
        "prompt_apr_6": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:56: error: <identifier> expected\n\t\tSystem.out.println(answer.size());\n\t\t                  ^\nMain.java:56: error: <identifier> expected\n\t\tSystem.out.println(answer.size());\n\t\t                              ^\nMain.java:57: error: illegal start of type\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t^\nMain.java:57: error: > expected\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t                               ^\nMain.java:57: error: <identifier> expected\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t                                    ^\nMain.java:61: error: class, interface, or enum expected\n}\n^\n6 errors\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:36: error: cannot find symbol\nlong w = left | (1L << i);\t\twhile (left < right) {\n                       ^\n  symbol:   variable i\n  location: class Main\nMain.java:38: error: variable w is already defined in method main(String[])\n\t\t\t\tlong w = 1 << i;\n\t\t\t\t     ^\n2 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:56: error: <identifier> expected\n\t\tSystem.out.println(answer.size());\n\t\t                  ^\nMain.java:56: error: <identifier> expected\n\t\tSystem.out.println(answer.size());\n\t\t                              ^\nMain.java:57: error: illegal start of type\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t^\nMain.java:57: error: > expected\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t                               ^\nMain.java:57: error: <identifier> expected\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t                                    ^\nMain.java:61: error: class, interface, or enum expected\n}\n^\n6 errors\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:61: error: reached end of file while parsing\n}\n ^\n1 error\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": 1,
                    "so": "",
                    "se": "Main.java:56: error: <identifier> expected\n\t\tSystem.out.println(answer.size());\n\t\t                  ^\nMain.java:56: error: <identifier> expected\n\t\tSystem.out.println(answer.size());\n\t\t                              ^\nMain.java:57: error: illegal start of type\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t^\nMain.java:57: error: > expected\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t                               ^\nMain.java:57: error: <identifier> expected\n\t\tfor (int i = 0; i < answer.size(); i++) {\n\t\t                                    ^\nMain.java:61: error: class, interface, or enum expected\n}\n^\n6 errors\n"
                }
            }
        }
    }
}