[
    {
        "buggy_file": "src/main/java/org/jsoup/select/Selector.java",
        "buggy_method": {
            "method_name": "combinator",
            "method_body": "private void combinator(char combinator) {\n        tq.consumeWhitespace();\n        String subQuery = tq.consumeToAny(combinators);\n        \n        Elements output;\n        if (combinator == '>')\n            output = filterForChildren(elements, select(subQuery, elements));\n        else if (combinator == ' ')\n            output = filterForDescendants(elements, select(subQuery, elements));\n        else if (combinator == '+')\n            output = filterForAdjacentSiblings(elements, select(subQuery, root));\n        else if (combinator == '~')\n            output = filterForGeneralSiblings(elements, select(subQuery, root));\n        else\n            throw new IllegalStateException(\"Unknown combinator: \" + combinator);\n        \n        elements.clear(); elements.addAll(output);\n    }",
            "start_line": 137,
            "end_line": 154,
            "buggy_lines": [
                139
            ]
        },
        "buggy_method_src": "private void combinator(char combinator) {\n        tq.consumeWhitespace();\n        String subQuery = tq.consumeToAny(combinators);\n        \n        Elements output;\n        if (combinator == '>')\n            output = filterForChildren(elements, select(subQuery, elements));\n        else if (combinator == ' ')\n            output = filterForDescendants(elements, select(subQuery, elements));\n        else if (combinator == '+')\n            output = filterForAdjacentSiblings(elements, select(subQuery, root));\n        else if (combinator == '~')\n            output = filterForGeneralSiblings(elements, select(subQuery, root));\n        else\n            throw new IllegalStateException(\"Unknown combinator: \" + combinator);\n        \n        elements.clear(); elements.addAll(output);\n    }",
        "test_stack": "org.jsoup.select.SelectorTest::testByAttributeRegexCombined\norg.jsoup.select.Selector$SelectorParseException: Could not parse query '=x|y]': unexpected token at '=x|y]'\n\tat org.jsoup.select.Selector.findElements(Selector.java:187)\n\tat org.jsoup.select.Selector.select(Selector.java:113)\n\tat org.jsoup.select.Selector.select(Selector.java:84)\n\tat org.jsoup.select.Selector.combinator(Selector.java:149)\n\tat org.jsoup.select.Selector.select(Selector.java:126)\n\tat org.jsoup.select.Selector.select(Selector.java:84)\n\tat org.jsoup.nodes.Element.select(Element.java:199)\n\tat org.jsoup.select.SelectorTest.testByAttributeRegexCombined(SelectorTest.java:129)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:38)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n",
        "test_assert": "Elements els = doc.select(\"div table[class~=x|y]\");\n",
        "buggy_lines_in_method": [
            3
        ],
        "buggy_statements": [
            "        String subQuery = tq.consumeToAny(combinators);"
        ],
        "buggy_method_src_endswith_buggy_statement": "private void combinator(char combinator) {\n        tq.consumeWhitespace();\n        String subQuery = tq.consumeToAny(combinators);"
    }
]