
================== buggy_file ==================
src/com/google/javascript/jscomp/DeadAssignmentsElimination.java
================== buggy_method ==================
{'method_name': 'isVariableReadBeforeKill', 'method_body': 'private VariableLiveness isVariableReadBeforeKill(\n      Node n, String variable) {\n    if (NodeUtil.isName(n) && variable.equals(n.getString())) {\n      if (NodeUtil.isLhs(n, n.getParent())) {\n        // The expression to which the assignment is made is evaluated before\n        // the RHS is evaluated (normal left to right evaluation) but the KILL\n        // occurs after the RHS is evaluated.\n        return VariableLiveness.KILL;\n      } else {\n        return VariableLiveness.READ;\n      }\n    }\n\n    // Expressions are evaluated left-right, depth first.\n    for (Node child = n.getFirstChild();\n        child != null; child = child.getNext()) {\n      if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION\n        VariableLiveness state = isVariableReadBeforeKill(child, variable);\n        if (state != VariableLiveness.MAYBE_LIVE) {\n          return state;\n        }\n      }\n    }\n    return VariableLiveness.MAYBE_LIVE;\n  }', 'start_line': 323, 'end_line': 347, 'buggy_lines': [327, 335]}
================== buggy_method_src ==================
private VariableLiveness isVariableReadBeforeKill(
      Node n, String variable) {
    if (NodeUtil.isName(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }

    // Expressions are evaluated left-right, depth first.
    for (Node child = n.getFirstChild();
        child != null; child = child.getNext()) {
      if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
        VariableLiveness state = isVariableReadBeforeKill(child, variable);
        if (state != VariableLiveness.MAYBE_LIVE) {
          return state;
        }
      }
    }
    return VariableLiveness.MAYBE_LIVE;
  }
================== test_stack ==================
com.google.javascript.jscomp.CommandLineRunnerTest::testIssue297
junit.framework.AssertionFailedError:
Expected: function f(b){var a;return(a=b.id)&&(a=parseInt(a.substr(1)))&&a>0}
Result: function f(b){var a;return b.id&&(a=parseInt(a.substr(1)))&&a>0}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: input0] [synthetic: 1]
        FUNCTION  1 [sourcename: input0]
            NAME f 1 [sourcename: input0]
            LP 1 [sourcename: input0]
                NAME b 1 [sourcename: input0]
            BLOCK 1 [sourcename: input0]
                VAR 1 [sourcename: input0]
                    NAME a 1 [sourcename: input0]
                RETURN 1 [sourcename: input0]
                    AND 1 [sourcename: input0] [parenthesized: true]
                        ASSIGN 1 [sourcename: input0] [parenthesized: true]
                            NAME a 1 [sourcename: input0]
                            GETPROP 1 [sourcename: input0]
                                NAME b 1 [sourcename: input0]
                                STRING id 1 [sourcename: input0]
                        AND 1 [sourcename: input0]
                            ASSIGN 1 [sourcename: input0] [parenthesized: true]
                                NAME a 1 [sourcename: input0]
                                CALL 1 [sourcename: input0] [free_call: 1]
                                    NAME parseInt 1 [sourcename: input0]
                                    CALL 1 [sourcename: input0]
                                        GETPROP 1 [sourcename: input0]
                                            NAME a 1 [sourcename: input0]
                                            STRING substr 1 [sourcename: input0]
                                        NUMBER 1.0 1 [sourcename: input0]
                            GT 1 [sourcename: input0]
                                NAME a 1 [sourcename: input0]
                                NUMBER 0.0 1 [sourcename: input0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: input0] [synthetic: 1]
        FUNCTION  1 [sourcename: input0]
            NAME f 1 [sourcename: input0]
            LP 1 [sourcename: input0]
                NAME b 1 [sourcename: input0]
            BLOCK 1 [sourcename: input0]
                VAR 1 [sourcename: input0]
                    NAME a 1 [sourcename: input0]
                RETURN 1 [sourcename: input0]
                    AND 1 [sourcename: input0] [parenthesized: true]
                        GETPROP 1 [sourcename: input0]
                            NAME b 1 [sourcename: input0]
                            STRING id 1 [sourcename: input0]
                        AND 1 [sourcename: input0]
                            ASSIGN 1 [sourcename: input0] [parenthesized: true]
                                NAME a 1 [sourcename: input0]
                                CALL 1 [sourcename: input0] [free_call: 1]
                                    NAME parseInt 1 [sourcename: input0]
                                    CALL 1 [sourcename: input0]
                                        GETPROP 1 [sourcename: input0]
                                            NAME a 1 [sourcename: input0]
                                            STRING substr 1 [sourcename: input0]
                                        NUMBER 1.0 1 [sourcename: input0]
                            GT 1 [sourcename: input0]
                                NAME a 1 [sourcename: input0]
                                NUMBER 0.0 1 [sourcename: input0]


Subtree1: ASSIGN 1 [sourcename: input0] [parenthesized: true]
    NAME a 1 [sourcename: input0]
    GETPROP 1 [sourcename: input0]
        NAME b 1 [sourcename: input0]
        STRING id 1 [sourcename: input0]


Subtree2: GETPROP 1 [sourcename: input0]
    NAME b 1 [sourcename: input0]
    STRING id 1 [sourcename: input0]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:655)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:626)
	at com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:618)
	at com.google.javascript.jscomp.CommandLineRunnerTest.testIssue297(CommandLineRunnerTest.java:252)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.DeadAssignmentsEliminationTest::testIssue297a
junit.framework.AssertionFailedError:
Expected: function f(p){var x;return(x=p.id)&&(x=parseInt(x.substr(1)))&&x>0}f("")
Result: function f(p){var x;return p.id&&(x=parseInt(x.substr(1)))&&x>0}f("")
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME p 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME x 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    AND 1 [sourcename: expected0] [parenthesized: true]
                        ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                            NAME x 1 [sourcename: expected0]
                            GETPROP 1 [sourcename: expected0]
                                NAME p 1 [sourcename: expected0]
                                STRING id 1 [sourcename: expected0]
                        AND 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME x 1 [sourcename: expected0]
                                CALL 1 [sourcename: expected0] [free_call: 1]
                                    NAME parseInt 1 [sourcename: expected0]
                                    CALL 1 [sourcename: expected0]
                                        GETPROP 1 [sourcename: expected0]
                                            NAME x 1 [sourcename: expected0]
                                            STRING substr 1 [sourcename: expected0]
                                        NUMBER 1.0 1 [sourcename: expected0]
                            GT 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                                NUMBER 0.0 1 [sourcename: expected0]
        EMPTY 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME f 1 [sourcename: expected0]
                STRING  1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME p 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME x 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    AND 1 [sourcename: testcode] [parenthesized: true]
                        GETPROP 1 [sourcename: testcode]
                            NAME p 1 [sourcename: testcode]
                            STRING id 1 [sourcename: testcode]
                        AND 1 [sourcename: testcode]
                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]
                                NAME x 1 [sourcename: testcode]
                                CALL 1 [sourcename: testcode] [free_call: 1]
                                    NAME parseInt 1 [sourcename: testcode]
                                    CALL 1 [sourcename: testcode]
                                        GETPROP 1 [sourcename: testcode]
                                            NAME x 1 [sourcename: testcode]
                                            STRING substr 1 [sourcename: testcode]
                                        NUMBER 1.0 1 [sourcename: testcode]
                            GT 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                                NUMBER 0.0 1 [sourcename: testcode]
        EMPTY 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME f 1 [sourcename: testcode]
                STRING  1 [sourcename: testcode]


Subtree1: ASSIGN 1 [sourcename: expected0] [parenthesized: true]
    NAME x 1 [sourcename: expected0]
    GETPROP 1 [sourcename: expected0]
        NAME p 1 [sourcename: expected0]
        STRING id 1 [sourcename: expected0]


Subtree2: GETPROP 1 [sourcename: testcode]
    NAME p 1 [sourcename: testcode]
    STRING id 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:512)
	at com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue297a(DeadAssignmentsEliminationTest.java:368)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.DeadAssignmentsEliminationTest::testIssue297b
junit.framework.AssertionFailedError:
Expected: function f(){var x;return(x="")&&x.substr(1)}
Result: function f(){var x;return""&&x.substr(1)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME x 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    AND 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                            NAME x 1 [sourcename: expected0]
                            STRING  1 [sourcename: expected0]
                        CALL 1 [sourcename: expected0] [parenthesized: true]
                            GETPROP 1 [sourcename: expected0]
                                NAME x 1 [sourcename: expected0]
                                STRING substr 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
        EMPTY 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME x 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    AND 1 [sourcename: testcode]
                        STRING  1 [sourcename: testcode]
                        CALL 1 [sourcename: testcode]
                            GETPROP 1 [sourcename: testcode]
                                NAME x 1 [sourcename: testcode]
                                STRING substr 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
        EMPTY 1 [sourcename: testcode]


Subtree1: ASSIGN 1 [sourcename: expected0] [parenthesized: true]
    NAME x 1 [sourcename: expected0]
    STRING  1 [sourcename: expected0]


Subtree2: STRING  1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)
	at com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue297b(DeadAssignmentsEliminationTest.java:375)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.DeadAssignmentsEliminationTest::testIssue297c
junit.framework.AssertionFailedError:
Expected: function f(){var x;return(x=1)&&f(x)}
Result: function f(){var x;return 1&&f(x)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                VAR 1 [sourcename: expected0]
                    NAME x 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    AND 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                            NAME x 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        CALL 1 [sourcename: expected0] [free_call: 1]
                            NAME f 1 [sourcename: expected0]
                            NAME x 1 [sourcename: expected0]
        EMPTY 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                VAR 1 [sourcename: testcode]
                    NAME x 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    AND 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                        CALL 1 [sourcename: testcode] [free_call: 1]
                            NAME f 1 [sourcename: testcode]
                            NAME x 1 [sourcename: testcode]
        EMPTY 1 [sourcename: testcode]


Subtree1: ASSIGN 1 [sourcename: expected0] [parenthesized: true]
    NAME x 1 [sourcename: expected0]
    NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)
	at com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue297c(DeadAssignmentsEliminationTest.java:386)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.DeadAssignmentsEliminationTest::testIssue297d
junit.framework.AssertionFailedError:
Expected: function f(a){return(a=1)&&f(a)}
Result: function f(a){return 1&&f(a)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    AND 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                            NAME a 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        CALL 1 [sourcename: expected0] [parenthesized: true] [free_call: 1]
                            NAME f 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0]
        EMPTY 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    AND 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                        CALL 1 [sourcename: testcode] [free_call: 1]
                            NAME f 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode]
        EMPTY 1 [sourcename: testcode]


Subtree1: ASSIGN 1 [sourcename: expected0] [parenthesized: true]
    NAME a 1 [sourcename: expected0]
    NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)
	at com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue297d(DeadAssignmentsEliminationTest.java:397)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.DeadAssignmentsEliminationTest::testIssue297e
junit.framework.AssertionFailedError:
Expected: function f(a){return(a=1)-g(a)}
Result: function f(a){return 1-g(a)}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                RETURN 1 [sourcename: expected0]
                    SUB 1 [sourcename: expected0]
                        ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                            NAME a 1 [sourcename: expected0]
                            NUMBER 1.0 1 [sourcename: expected0]
                        CALL 1 [sourcename: expected0] [parenthesized: true] [free_call: 1]
                            NAME g 1 [sourcename: expected0]
                            NAME a 1 [sourcename: expected0]
        EMPTY 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                RETURN 1 [sourcename: testcode]
                    SUB 1 [sourcename: testcode]
                        NUMBER 1.0 1 [sourcename: testcode]
                        CALL 1 [sourcename: testcode] [free_call: 1]
                            NAME g 1 [sourcename: testcode]
                            NAME a 1 [sourcename: testcode]
        EMPTY 1 [sourcename: testcode]


Subtree1: ASSIGN 1 [sourcename: expected0] [parenthesized: true]
    NAME a 1 [sourcename: expected0]
    NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)
	at com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue297e(DeadAssignmentsEliminationTest.java:406)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.DeadAssignmentsEliminationTest::testIssue297f
junit.framework.AssertionFailedError:
Expected: function f(a){h((a=1)-g(a))}
Result: function f(a){h(1-g(a))}
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION  1 [sourcename: expected0]
            NAME f 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
                NAME a 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
                EXPR_RESULT 1 [sourcename: expected0]
                    CALL 1 [sourcename: expected0] [free_call: 1]
                        NAME h 1 [sourcename: expected0]
                        SUB 1 [sourcename: expected0]
                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]
                                NAME a 1 [sourcename: expected0]
                                NUMBER 1.0 1 [sourcename: expected0]
                            CALL 1 [sourcename: expected0] [parenthesized: true] [free_call: 1]
                                NAME g 1 [sourcename: expected0]
                                NAME a 1 [sourcename: expected0]
        EMPTY 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION  1 [sourcename: testcode]
            NAME f 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
                NAME a 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
                EXPR_RESULT 1 [sourcename: testcode]
                    CALL 1 [sourcename: testcode] [free_call: 1]
                        NAME h 1 [sourcename: testcode]
                        SUB 1 [sourcename: testcode]
                            NUMBER 1.0 1 [sourcename: testcode]
                            CALL 1 [sourcename: testcode] [free_call: 1]
                                NAME g 1 [sourcename: testcode]
                                NAME a 1 [sourcename: testcode]
        EMPTY 1 [sourcename: testcode]


Subtree1: ASSIGN 1 [sourcename: expected0] [parenthesized: true]
    NAME a 1 [sourcename: expected0]
    NUMBER 1.0 1 [sourcename: expected0]


Subtree2: NUMBER 1.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)
	at com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue297f(DeadAssignmentsEliminationTest.java:415)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)

================== test_assert ==================
test("function f(p) {" +

================== buggy_lines_in_method ==================
[5, 13]
================== buggy_statements ==================
['        // The expression to which the assignment is made is evaluated before', '']
================== buggy_method_src_endswith_buggy_statement ==================
private VariableLiveness isVariableReadBeforeKill(
      Node n, String variable) {
    if (NodeUtil.isName(n) && variable.equals(n.getString())) {
      if (NodeUtil.isLhs(n, n.getParent())) {
        // The expression to which the assignment is made is evaluated before
        // the RHS is evaluated (normal left to right evaluation) but the KILL
        // occurs after the RHS is evaluated.
        return VariableLiveness.KILL;
      } else {
        return VariableLiveness.READ;
      }
    }
