[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "main",
            "method_body": "public static final void main(String[] args) {\n    final IO io = new IO();\n    final String T = io.getNext();\n    final int TLen = T.length();\n    final int[][] dp = new int[2][TLen + 1];\n    Arrays.fill(dp[1], Integer.MAX_VALUE);\n    dp[1][0] = 1;\n    final int N = io.getNextInt();\n    for(int bag = 0; bag < N; bag++) {\n      Arrays.fill(dp[bag % 2], Integer.MAX_VALUE);\n      final int A = io.getNextInt();\n      for(int sIdx = 0; sIdx < A; sIdx++) {\n        final String S = io.getNext();\n        for(int tPos = 0; tPos < TLen; tPos++) {\n          if(dp[(bag + 1) % 2][tPos] < Integer.MAX_VALUE) {\n            dp[bag % 2][tPos] = Math.min(dp[(bag + 1) % 2][tPos], dp[bag % 2][tPos]);\n            if(tPos + S.length() <= TLen && T.substring(tPos).startsWith(S)) {\n              dp[bag % 2][tPos + S.length()] = Math.min(dp[bag % 2][tPos + S.length()], dp[(bag + 1) % 2][tPos] + 1);\n            }\n          }\n        }\n      }\n    }\n    io.println(dp[(N - 1) % 2][TLen] < Integer.MAX_VALUE ? dp[(N - 1) % 2][TLen] - 1 : -1);\n    io.flush();\n  }",
            "start_line": 10,
            "end_line": 35
        },
        "buggy_method_src": "public static final void main(String[] args) {\n    final IO io = new IO();\n    final String T = io.getNext();\n    final int TLen = T.length();\n    final int[][] dp = new int[2][TLen + 1];\n    Arrays.fill(dp[1], Integer.MAX_VALUE);\n    dp[1][0] = 1;\n    final int N = io.getNextInt();\n    for(int bag = 0; bag < N; bag++) {\n      Arrays.fill(dp[bag % 2], Integer.MAX_VALUE);\n      final int A = io.getNextInt();\n      for(int sIdx = 0; sIdx < A; sIdx++) {\n        final String S = io.getNext();\n        for(int tPos = 0; tPos < TLen; tPos++) {\n          if(dp[(bag + 1) % 2][tPos] < Integer.MAX_VALUE) {\n            dp[bag % 2][tPos] = Math.min(dp[(bag + 1) % 2][tPos], dp[bag % 2][tPos]);\n            if(tPos + S.length() <= TLen && T.substring(tPos).startsWith(S)) {\n              dp[bag % 2][tPos + S.length()] = Math.min(dp[bag % 2][tPos + S.length()], dp[(bag + 1) % 2][tPos] + 1);\n            }\n          }\n        }\n      }\n    }\n    io.println(dp[(N - 1) % 2][TLen] < Integer.MAX_VALUE ? dp[(N - 1) % 2][TLen] - 1 : -1);\n    io.flush();\n  }",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            14
        ],
        "buggy_statements": [
            "        for(int tPos = 0; tPos < TLen; tPos++) {"
        ],
        "buggy_method_src_endswith_buggy_statement": "public static final void main(String[] args) {\n    final IO io = new IO();\n    final String T = io.getNext();\n    final int TLen = T.length();\n    final int[][] dp = new int[2][TLen + 1];\n    Arrays.fill(dp[1], Integer.MAX_VALUE);\n    dp[1][0] = 1;\n    final int N = io.getNextInt();\n    for(int bag = 0; bag < N; bag++) {\n      Arrays.fill(dp[bag % 2], Integer.MAX_VALUE);\n      final int A = io.getNextInt();\n      for(int sIdx = 0; sIdx < A; sIdx++) {\n        final String S = io.getNext();\n        for(int tPos = 0; tPos < TLen; tPos++) {"
    }
]