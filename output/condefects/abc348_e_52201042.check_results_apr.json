{
    "overall_status": {
        "prompt_apr_1": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_2": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_3": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_4": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_5": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_6": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Compile failed"
        }
    },
    "check_results_list": {
        "prompt_apr_1": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:86: error: ';' expected\nBased on the provided code snippet, it seems like you're implementing a Depth-First Search (DFS) algorithm that traverses a graph and calculates some properties like the depth of each node, whether it has been visited, and the cumulative weight of the node and its descendants. However, the given code is incomplete and there's a syntax error indicated at line 8.\n        ^\nMain.java:86: error: ';' expected\nBased on the provided code snippet, it seems like you're implementing a Depth-First Search (DFS) algorithm that traverses a graph and calculates some properties like the depth of each node, whether it has been visited, and the cumulative weight of the node and its descendants. However, the given code is incomplete and there's a syntax error indicated at line 8.\n                     ^\nMain.java:86: error: ';' expected\nBased on the provided code snippet, it seems like you're implementing a Depth-First Search (DFS) algorithm that traverses a graph and calculates some properties like the depth of each node, whether it has been visited, and the cumulative weight of the node and its descendants. However, the given code is incomplete and there's a syntax error indicated at line 8.\n                                      ^\nMain.java:86: error: ';' expected\nBased on the provided code snippet, it seems like you're implementing a Depth-First Search (DFS) algorithm that traverses a graph and calculates some properties like the depth of each node, whether it has been visited, and the cumulative weight of the node and its descendants. However, the given code is incomplete and there's a syntax error indicated at line 8.\n                                                 ^\nMain.java:86: error: unclosed character literal\nBased on the provided code snippet, it seems like you're implementing a Depth-First Search (DFS) algorithm that traverses a graph and calculates some properties like the depth of each node, whether it has been visited, and the cumulative weight of the node and its descendants. However, the given code is incomplete and there's a syntax error indicated at line 8.\n                                                     ^\nMain.java:86: error: ';' expected\nBased on the provided code snippet, it seems like you're implementing a Depth-First Search (DFS) algorithm that traverses a graph and calculates some properties like the depth of each node, whether it has been visited, and the cumulative weight of the node and its descendants. However, the given code is incomplete and there's a syntax error indicated at line 8.\n                                                                     ^\nMain.java:86: error: ';' expected\nBased on the provided code snippet, it seems like you're implementing a Depth-First Search (DFS) algorithm that traverses a graph and calculates some properties like the depth of each node, whether it has been visited, and the cumulative weight of the node and its descendants. However, the given code is incomplete and there's a syntax error indicated at line 8.\n                                                                             ^\nMain.java:86: error: <identifier> expected\nBased on the provided code snippet, it seems like you're implementing a Depth-First Search (DFS) algorithm that traverses a graph and calculates some properties like the depth of each node, whether it has been visited, and the cumulative weight of the node and its descendants. However, the given code is incomplete and there's a syntax error indicated at line 8.\n                                                                                               ^\nMain.java:86: error: ';' expected\nBased on the provided code snippet, it seems like you're implementing a Depth-First Search (DFS) algorithm that traverses a graph and calculates some properties like the depth of each node, whether it has been visited, and the cumulative weight of the node and its descendants. However, the given code is incomplete and there's a syntax error indicated at line 8.\n                                                                                                ^\nMain.java:86: error: unclosed character literal\nBased on the provided code snippet, it seems like you're implementing a Depth-First Search (DFS) algorithm that traverses a graph and calculates some properties like the depth of each node, whether it has been visited, and the cumulative weight of the node and its descendants. However, the given code is incomplete and there's a syntax error indicated at line 8.\n                                                                                                                                                                                                                                                                                                                                     ^\nMain.java:88: error: unclosed character literal\nHere's a possible completion and correction of the method, assuming the context and missing parts:\n    ^\nMain.java:90: error: illegal character: \\96\n1. The `edges` array should be defined as a list of lists or an array of arrays, representing the adjacency list of the graph.\n       ^\nMain.java:90: error: illegal character: \\96\n1. The `edges` array should be defined as a list of lists or an array of arrays, representing the adjacency list of the graph.\n             ^\nMain.java:91: error: illegal character: \\96\n2. The `weight` array should store the weight of each node.\n       ^\nMain.java:91: error: illegal character: \\96\n2. The `weight` array should store the weight of each node.\n              ^\nMain.java:92: error: illegal character: \\96\n3. The `dis`, `visited`, and `child` arrays should be defined to store the depth, visited status, and cumulative weight of nodes, respectively.\n       ^\nMain.java:92: error: illegal character: \\96\n3. The `dis`, `visited`, and `child` arrays should be defined to store the depth, visited status, and cumulative weight of nodes, respectively.\n           ^\nMain.java:92: error: illegal character: \\96\n3. The `dis`, `visited`, and `child` arrays should be defined to store the depth, visited status, and cumulative weight of nodes, respectively.\n              ^\nMain.java:92: error: illegal character: \\96\n3. The `dis`, `visited`, and `child` arrays should be defined to store the depth, visited status, and cumulative weight of nodes, respectively.\n                      ^\nMain.java:92: error: illegal character: \\96\n3. The `dis`, `visited`, and `child` arrays should be defined to store the depth, visited status, and cumulative weight of nodes, respectively.\n                             ^\nMain.java:92: error: illegal character: \\96\n3. The `dis`, `visited`, and `child` arrays should be defined to store the depth, visited status, and cumulative weight of nodes, respectively.\n                                   ^\nMain.java:94: error: unclosed character literal\nHere's the complete corrected method:\n    ^\nMain.java:97: error: illegal character: \\96\n```java\n^\nMain.java:97: error: illegal character: \\96\n```java\n ^\nMain.java:97: error: illegal character: \\96\n```java\n  ^\nMain.java:127: error: illegal character: \\96\n```\n^\nMain.java:127: error: illegal character: \\96\n```\n ^\nMain.java:127: error: illegal character: \\96\n```\n  ^\nMain.java:128: error: illegal start of type\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n    ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n     ^\nMain.java:128: error: illegal character: \\96\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                       ^\nMain.java:128: error: illegal character: \\96\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                         ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                       ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                   ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                          ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                                      ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                                                   ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                                                                ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                                                                        ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                                                                                     ^\nMain.java:128: error: illegal character: \\96\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                                                                                          ^\nMain.java:128: error: illegal character: \\96\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                                                                                            ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                                                                                                         ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                                                                                                               ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                                                                                                                       ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                                                                                                                                         ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                                                                                                                                                    ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                                                                                                                                                               ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                                                                                                                                                                            ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                                                                                                                                                                                       ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                                                                                                                                                                                                ^\nMain.java:128: error: ';' expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                                                                                                                                                                                                       ^\nMain.java:128: error: <identifier> expected\nNote: The static class `P` mentioned in your prompt is not relevant to the provided code snippet and has been omitted. If `P` is supposed to be part of the solution, you would need to provide more context or specify its role in the code.\n                                                                                                                                                                                                                                             ^\nMain.java:129: error: ';' expected\n    static class Point{\n          ^\nMain.java:129: error: <identifier> expected\n    static class Point{\n                      ^\nMain.java:133: error: invalid method declaration; return type required\n        public Point(int x, int y) {\n               ^\n56 errors\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:86: error: <identifier> expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n         ^\nMain.java:86: error: ';' expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                    ^\nMain.java:86: error: ';' expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                            ^\nMain.java:86: error: ';' expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                       ^\nMain.java:86: error: ';' expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                  ^\nMain.java:86: error: illegal character: \\96\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                          ^\nMain.java:86: error: illegal character: \\96\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                              ^\nMain.java:86: error: ';' expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                          ^\nMain.java:86: error: ';' expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                           ^\nMain.java:86: error: illegal character: \\96\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                   ^\nMain.java:86: error: illegal character: \\96\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                       ^\nMain.java:86: error: ';' expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                                  ^\nMain.java:86: error: ';' expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                                               ^\nMain.java:86: error: illegal character: \\96\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                                                             ^\nMain.java:86: error: illegal character: \\96\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                                                                 ^\nMain.java:86: error: ';' expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                                                                                  ^\nMain.java:86: error: <identifier> expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                                                                                       ^\nMain.java:86: error: ';' expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                                                                                                              ^\nMain.java:86: error: ';' expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                                                                                                                     ^\nMain.java:86: error: ';' expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                                                                                                                             ^\nMain.java:86: error: ';' expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                                                                                                                                    ^\nMain.java:86: error: ';' expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                                                                                                                                                   ^\nMain.java:86: error: ';' expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                                                                                                                                                          ^\nMain.java:86: error: unclosed character literal\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                                                                                                                                                                       ^\nMain.java:86: error: illegal character: \\8217\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                                                                                                                                                                                   ^\nMain.java:86: error: ';' expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                                                                                                                                                                                         ^\nMain.java:86: error: ';' expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                                                                                                                                                                                                           ^\nMain.java:86: error: ';' expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                                                                                                                                                                                                                   ^\nMain.java:86: error: <identifier> expected\nCertainly! The issue on line 8 seems to be related to the `dfs` call where the accumulation of the `sum` might not be correctly updated. The `dfs` function should also return the accumulated sum so that it can be properly added to the current node's sum. Here\u2019s the corrected version of your method:\n                                                                                                                                                                                                                                                                                                          ^\nMain.java:88: error: illegal character: \\96\n```java\n^\nMain.java:88: error: illegal character: \\96\n```java\n ^\nMain.java:88: error: illegal character: \\96\n```java\n  ^\nMain.java:99: error: illegal character: \\96\n```\n^\nMain.java:99: error: illegal character: \\96\n```\n ^\nMain.java:99: error: illegal character: \\96\n```\n  ^\nMain.java:101: error: illegal start of type\nAdditionally, you need to ensure that the `dfs` function returns the accumulated sum. Here\u2019s how you can modify the `dfs` function to include this behavior:\n            ^\nMain.java:101: error: ';' expected\nAdditionally, you need to ensure that the `dfs` function returns the accumulated sum. Here\u2019s how you can modify the `dfs` function to include this behavior:\n             ^\nMain.java:101: error: ';' expected\nAdditionally, you need to ensure that the `dfs` function returns the accumulated sum. Here\u2019s how you can modify the `dfs` function to include this behavior:\n                         ^\nMain.java:101: error: ';' expected\nAdditionally, you need to ensure that the `dfs` function returns the accumulated sum. Here\u2019s how you can modify the `dfs` function to include this behavior:\n                                     ^\nMain.java:101: error: illegal character: \\96\nAdditionally, you need to ensure that the `dfs` function returns the accumulated sum. Here\u2019s how you can modify the `dfs` function to include this behavior:\n                                          ^\nMain.java:101: error: illegal character: \\96\nAdditionally, you need to ensure that the `dfs` function returns the accumulated sum. Here\u2019s how you can modify the `dfs` function to include this behavior:\n                                              ^\nMain.java:101: error: ';' expected\nAdditionally, you need to ensure that the `dfs` function returns the accumulated sum. Here\u2019s how you can modify the `dfs` function to include this behavior:\n                                                                ^\nMain.java:101: error: ';' expected\nAdditionally, you need to ensure that the `dfs` function returns the accumulated sum. Here\u2019s how you can modify the `dfs` function to include this behavior:\n                                                                                ^\nMain.java:101: error: illegal character: \\8217\nAdditionally, you need to ensure that the `dfs` function returns the accumulated sum. Here\u2019s how you can modify the `dfs` function to include this behavior:\n                                                                                          ^\nMain.java:101: error: ';' expected\nAdditionally, you need to ensure that the `dfs` function returns the accumulated sum. Here\u2019s how you can modify the `dfs` function to include this behavior:\n                                                                                                ^\nMain.java:101: error: ';' expected\nAdditionally, you need to ensure that the `dfs` function returns the accumulated sum. Here\u2019s how you can modify the `dfs` function to include this behavior:\n                                                                                                        ^\nMain.java:101: error: illegal character: \\96\nAdditionally, you need to ensure that the `dfs` function returns the accumulated sum. Here\u2019s how you can modify the `dfs` function to include this behavior:\n                                                                                                                    ^\nMain.java:101: error: illegal character: \\96\nAdditionally, you need to ensure that the `dfs` function returns the accumulated sum. Here\u2019s how you can modify the `dfs` function to include this behavior:\n                                                                                                                        ^\nMain.java:101: error: ';' expected\nAdditionally, you need to ensure that the `dfs` function returns the accumulated sum. Here\u2019s how you can modify the `dfs` function to include this behavior:\n                                                                                                                                     ^\nMain.java:101: error: <identifier> expected\nAdditionally, you need to ensure that the `dfs` function returns the accumulated sum. Here\u2019s how you can modify the `dfs` function to include this behavior:\n                                                                                                                                             ^\nMain.java:101: error: <identifier> expected\nAdditionally, you need to ensure that the `dfs` function returns the accumulated sum. Here\u2019s how you can modify the `dfs` function to include this behavior:\n                                                                                                                                                           ^\nMain.java:103: error: illegal character: \\96\n```java\n^\nMain.java:103: error: illegal character: \\96\n```java\n ^\nMain.java:103: error: illegal character: \\96\n```java\n  ^\nMain.java:115: error: illegal character: \\96\n```\n^\nMain.java:115: error: illegal character: \\96\n```\n ^\nMain.java:115: error: illegal character: \\96\n```\n  ^\nMain.java:117: error: <identifier> expected\nThis way, the `dfs` function will correctly accumulate the sum of weights for each node and its children.\n        ^\nMain.java:117: error: illegal character: \\96\nThis way, the `dfs` function will correctly accumulate the sum of weights for each node and its children.\n              ^\nMain.java:117: error: illegal character: \\96\nThis way, the `dfs` function will correctly accumulate the sum of weights for each node and its children.\n                  ^\nMain.java:117: error: ';' expected\nThis way, the `dfs` function will correctly accumulate the sum of weights for each node and its children.\n                                 ^\nMain.java:117: error: ';' expected\nThis way, the `dfs` function will correctly accumulate the sum of weights for each node and its children.\n                                                      ^\nMain.java:117: error: ';' expected\nThis way, the `dfs` function will correctly accumulate the sum of weights for each node and its children.\n                                                              ^\nMain.java:117: error: ';' expected\nThis way, the `dfs` function will correctly accumulate the sum of weights for each node and its children.\n                                                                         ^\nMain.java:117: error: ';' expected\nThis way, the `dfs` function will correctly accumulate the sum of weights for each node and its children.\n                                                                                       ^\nMain.java:117: error: ';' expected\nThis way, the `dfs` function will correctly accumulate the sum of weights for each node and its children.\n                                                                                               ^\nMain.java:117: error: <identifier> expected\nThis way, the `dfs` function will correctly accumulate the sum of weights for each node and its children.\n                                                                                                         ^\nMain.java:118: error: ';' expected\n    static class Point{\n          ^\nMain.java:118: error: <identifier> expected\n    static class Point{\n                      ^\nMain.java:122: error: invalid method declaration; return type required\n        public Point(int x, int y) {\n               ^\nMain.java:141: error: class, interface, or enum expected\n    static int[][] mv = new int[][]{{1,0},{-1,0},{0,1},{0,-1}};\n           ^\nMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                  ^\nMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                 ^\nMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                          ^\nMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                             ^\nMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                              ^\nMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                 ^\nMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                         ^\nMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                       ^\nMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                    ^\nMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                            ^\nMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                   ^\nMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^\nMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^\nMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ^\nMain.java:147: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nn100 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:86: error: illegal character: \\96\n```java\n^\nMain.java:86: error: illegal character: \\96\n```java\n ^\nMain.java:86: error: illegal character: \\96\n```java\n  ^\nMain.java:98: error: illegal character: \\96\n```\n^\nMain.java:98: error: illegal character: \\96\n```\n ^\nMain.java:98: error: illegal character: \\96\n```\n  ^\n6 errors\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:86: error: <identifier> expected\ncur, int dep) {\n   ^\nMain.java:86: error: <identifier> expected\ncur, int dep) {\n    ^\nMain.java:86: error: <identifier> expected\ncur, int dep) {\n            ^\nMain.java:98: error: '{' expected\nstatic class P\n              ^\nMain.java:134: error: reached end of file while parsing\n}\n ^\n5 errors\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:86: error: ';' expected\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n       ^\nMain.java:86: error: ']' expected\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                 ^\nMain.java:86: error: illegal start of type\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                  ^\nMain.java:86: error: ';' expected\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                      ^\nMain.java:86: error: illegal character: \\96\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                ^\nMain.java:86: error: illegal character: \\96\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                       ^\nMain.java:86: error: ';' expected\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                 ^\nMain.java:86: error: ';' expected\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                           ^\nMain.java:86: error: ';' expected\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                                             ^\nMain.java:86: error: illegal character: \\96\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                                                   ^\nMain.java:86: error: illegal character: \\96\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                                                       ^\nMain.java:86: error: ';' expected\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                                                                        ^\nMain.java:86: error: ';' expected\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                                                                                       ^\nMain.java:86: error: ';' expected\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                                                                                                  ^\nMain.java:86: error: ';' expected\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                                                                                                            ^\nMain.java:86: error: <identifier> expected\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                                                                                                                  ^\nMain.java:86: error: ';' expected\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                                                                                                                       ^\nMain.java:86: error: ';' expected\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                                                                                                                             ^\nMain.java:86: error: ';' expected\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                                                                                                                                       ^\nMain.java:86: error: ';' expected\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                                                                                                                                               ^\nMain.java:86: error: illegal character: \\96\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                                                                                                                                                           ^\nMain.java:86: error: illegal character: \\96\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                                                                                                                                                                  ^\nMain.java:86: error: ';' expected\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                                                                                                                                                                                  ^\nMain.java:86: error: ';' expected\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                                                                                                                                                                                                ^\nMain.java:86: error: <identifier> expected\nThe bug in line [8] is that the `weight` array is not being updated correctly. The `sum` variable should accumulate the weights of all child nodes, but it is not being used to update the `weight` array. Here is the corrected method:\n                                                                                                                                                                                                                                       ^\n25 errors\n"
                }
            }
        },
        "prompt_apr_2": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:86: error: <identifier> expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n    ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n         ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                    ^\nMain.java:86: error: illegal character: \\96\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                              ^\nMain.java:86: error: <identifier> expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                  ^\nMain.java:86: error: illegal character: \\96\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                   ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                               ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                          ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                    ^\nMain.java:86: error: illegal character: \\96\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                           ^\nMain.java:86: error: illegal character: \\96\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                           ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                           ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                               ^\nMain.java:86: error: <identifier> expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                             ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                  ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                          ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                      ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                              ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                                         ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                                                  ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                                                              ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                                                                             ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                                                                                              ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                                                                                                      ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                                                                                                                               ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                                                                                                                                             ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:86: error: illegal character: \\96\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                                                                                                                                                                   ^\nMain.java:86: error: illegal character: \\96\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                                                                                                                                                                       ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                                                                                                                                                                                      ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                                                                                                                                                                                                       ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                                                                                                                                                                                                                  ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                                                                                                                                                                                                                                ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                                                                                                                                                                                                                                             ^\nMain.java:86: error: ';' expected\nSure, the issue with the line `sum += weight[next];` is that it is outside the scope where `next` nodes are being processed in a meaningful way for aggregation. Specifically, you need to ensure that the sum of weights from the child nodes is accumulated correctly within the DFS traversal. The corrected method should include updating the `sum` variable only after processing each child node. Here is the complete corrected method:\n                                                                                                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:88: error: illegal character: \\96\n```java\n^\nMain.java:88: error: illegal character: \\96\n```java\n ^\nMain.java:88: error: illegal character: \\96\n```java\n  ^\nMain.java:88: error: <identifier> expected\n```java\n       ^\nMain.java:89: error: invalid method declaration; return type required\nvoid dfs(int cur, int dep) {\n     ^\nMain.java:104: error: illegal character: \\96\n```\n^\nMain.java:104: error: illegal character: \\96\n```\n ^\nMain.java:104: error: illegal character: \\96\n```\n  ^\nMain.java:106: error: illegal start of type\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n   ^\nMain.java:106: error: ';' expected\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n       ^\nMain.java:106: error: <identifier> expected\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                         ^\nMain.java:106: error: illegal character: \\96\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                           ^\nMain.java:106: error: <identifier> expected\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                              ^\nMain.java:106: error: illegal character: \\96\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                               ^\nMain.java:106: error: ';' expected\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                          ^\nMain.java:106: error: ';' expected\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                 ^\nMain.java:106: error: illegal character: \\96\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                      ^\nMain.java:106: error: illegal character: \\96\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                            ^\nMain.java:106: error: invalid method declaration; return type required\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                              ^\nMain.java:106: error: ')' expected\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                  ^\nMain.java:106: error: ';' expected\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                        ^\nMain.java:106: error: ';' expected\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                     ^\nMain.java:106: error: ';' expected\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                            ^\nMain.java:106: error: ';' expected\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                           ^\nMain.java:106: error: illegal character: \\96\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                               ^\nMain.java:106: error: illegal character: \\96\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                                    ^\nMain.java:106: error: illegal start of type\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                                     ^\nMain.java:106: error: <identifier> expected\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                                      ^\nMain.java:106: error: ';' expected\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                                       ^\nMain.java:106: error: illegal character: \\96\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                                                      ^\nMain.java:106: error: ']' expected\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                                                             ^\nMain.java:106: error: ';' expected\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                                                                 ^\nMain.java:106: error: illegal character: \\96\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                                                                  ^\nMain.java:106: error: ';' expected\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                                                                               ^\nMain.java:106: error: ';' expected\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                                                                                          ^\nMain.java:106: error: ';' expected\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                                                                                                        ^\nMain.java:106: error: illegal character: \\96\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                                                                                                                  ^\nMain.java:106: error: illegal character: \\96\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                                                                                                                      ^\nMain.java:106: error: illegal start of type\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                                                                                                                        ^\nMain.java:106: error: ';' expected\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                                                                                                                                ^\nMain.java:106: error: illegal character: \\96\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                                                                                                                                            ^\nMain.java:106: error: illegal character: \\96\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                                                                                                                                                 ^\nMain.java:106: error: illegal start of type\nIn this corrected version, `sum += child[next];` correctly accumulates the sum of the `child` values (which should ideally represent the total weight of the subtree rooted at `next`), assuming that `child[next]` is properly updated in the recursive calls to `dfs` for each child node `next`.\n                                                                                                                                                                                                                                                                                                  ^\nMain.java:108: error: ';' expected\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n    ^\nMain.java:108: error: ';' expected\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n                 ^\nMain.java:108: error: illegal character: \\96\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n                      ^\nMain.java:108: error: illegal character: \\96\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n                            ^\nMain.java:108: error: ';' expected\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n                                      ^\nMain.java:108: error: ';' expected\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n                                                           ^\nMain.java:108: error: ';' expected\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n                                                                    ^\nMain.java:108: error: illegal character: \\96\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n                                                                         ^\nMain.java:108: error: illegal character: \\96\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n                                                                                ^\nMain.java:108: error: illegal character: \\96\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n                                                                                      ^\nMain.java:108: error: illegal character: \\96\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n                                                                                            ^\nMain.java:108: error: <identifier> expected\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n                                                                                                    ^\nMain.java:108: error: ';' expected\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n                                                                                                              ^\nMain.java:108: error: ';' expected\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n                                                                                                                            ^\nMain.java:108: error: ';' expected\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n                                                                                                                                  ^\nMain.java:108: error: ';' expected\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n                                                                                                                                                ^\nMain.java:108: error: ';' expected\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n                                                                                                                                                           ^\nMain.java:108: error: ';' expected\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n                                                                                                                                                                     ^\nMain.java:108: error: ';' expected\nNote: Ensure that the `child` array is initialized properly and that the `weight` and `edges` arrays/lists are correctly set up to represent the weights of nodes and their adjacencies, respectively.\n                                                                                                                                                                                                     ^\n99 errors\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:86: error: <identifier> expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n         ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                    ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                             ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                           ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                      ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                              ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                       ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                            ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                        ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                               ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                         ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                           ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                       ^\nMain.java:86: error: <identifier> expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                          ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                               ^\nMain.java:86: error: illegal character: \\96\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                     ^\nMain.java:86: error: <identifier> expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                         ^\nMain.java:86: error: illegal character: \\96\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                          ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                            ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                      ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                     ^\nMain.java:86: error: illegal character: \\96\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                         ^\nMain.java:86: error: invalid method declaration; return type required\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                          ^\nMain.java:86: error: <identifier> expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                                  ^\nMain.java:86: error: <identifier> expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                                       ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                                         ^\nMain.java:86: error: illegal start of type\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                                           ^\nMain.java:86: error: <identifier> expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                                            ^\nMain.java:86: error: illegal character: \\96\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                                             ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                                                        ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                                                                 ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                                                                           ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                                                                                       ^\nMain.java:86: error: illegal character: \\96\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                                                                                             ^\nMain.java:86: error: illegal character: \\96\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                                                                                                  ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                                                                                                            ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                                                                                                                       ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                                                                                                                                      ^\nMain.java:86: error: ';' expected\nCertainly! The issue with the provided code snippet is that it does not correctly accumulate the weights of all the nodes in the subtree of the current node. Specifically, the line `sum += weight[next];` should be placed after the recursive call to `dfs(next, dep + 1);` to ensure that the weight of the current node `next` is added only after processing its entire subtree.\n                                                                                                                                                                                                                                                                                                                                                                                     ^\nMain.java:88: error: ';' expected\nHere is the corrected version of the method:\n       ^\nMain.java:88: error: ';' expected\nHere is the corrected version of the method:\n                     ^\nMain.java:88: error: ';' expected\nHere is the corrected version of the method:\n                                ^\nMain.java:88: error: ';' expected\nHere is the corrected version of the method:\n                                           ^\nMain.java:90: error: illegal character: \\96\n```java\n^\nMain.java:90: error: illegal character: \\96\n```java\n ^\nMain.java:90: error: illegal character: \\96\n```java\n  ^\nMain.java:90: error: <identifier> expected\n```java\n       ^\nMain.java:102: error: illegal character: \\96\n```\n^\nMain.java:102: error: illegal character: \\96\n```\n ^\nMain.java:102: error: illegal character: \\96\n```\n  ^\nMain.java:104: error: illegal start of type\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n   ^\nMain.java:104: error: ';' expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n       ^\nMain.java:104: error: <identifier> expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                         ^\nMain.java:104: error: illegal character: \\96\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                           ^\nMain.java:104: error: ']' expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                  ^\nMain.java:104: error: ';' expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                      ^\nMain.java:104: error: illegal character: \\96\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                       ^\nMain.java:104: error: ';' expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                ^\nMain.java:104: error: illegal character: \\96\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                            ^\nMain.java:104: error: ']' expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                    ^\nMain.java:104: error: ';' expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                        ^\nMain.java:104: error: illegal character: \\96\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                         ^\nMain.java:104: error: ';' expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                                        ^\nMain.java:104: error: ';' expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                                                  ^\nMain.java:104: error: ';' expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                                                            ^\nMain.java:104: error: ';' expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                                                                        ^\nMain.java:104: error: illegal character: \\96\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                                                                                   ^\nMain.java:104: error: illegal character: \\96\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                                                                                        ^\nMain.java:104: error: illegal start of type\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                                                                                         ^\nMain.java:104: error: ';' expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                                                                                               ^\nMain.java:104: error: ';' expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                                                                                                            ^\nMain.java:104: error: ';' expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                                                                                                                       ^\nMain.java:104: error: ';' expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                                                                                                                               ^\nMain.java:104: error: ';' expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                                                                                                                                       ^\nMain.java:104: error: ';' expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                                                                                                                                                   ^\nMain.java:104: error: ';' expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                                                                                                                                                               ^\nMain.java:104: error: ';' expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                                                                                                                                                                      ^\nMain.java:104: error: <identifier> expected\nIn this corrected version, `child[next]` is used instead of `weight[next]` to accumulate the total weight of the subtree rooted at `next`. This ensures that the weight of each node in the subtree is included in the sum.\n                                                                                                                                                                                                                           ^\nMain.java:105: error: ';' expected\n    static class Point{\n          ^\nMain.java:105: error: <identifier> expected\n    static class Point{\n                      ^\nMain.java:109: error: invalid method declaration; return type required\n        public Point(int x, int y) {\n               ^\nMain.java:128: error: class, interface, or enum expected\n    static int[][] mv = new int[][]{{1,0},{-1,0},{0,1},{0,-1}};\n           ^\nMain.java:134: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                  ^\nMain.java:134: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                 ^\nMain.java:134: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                          ^\nMain.java:134: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                             ^\nMain.java:134: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                              ^\nMain.java:134: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                 ^\nMain.java:134: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                         ^\nMain.java:134: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                       ^\nMain.java:134: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                    ^\nMain.java:134: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                            ^\nMain.java:134: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                   ^\nMain.java:134: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^\nMain.java:134: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:134: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:134: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:134: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:134: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nn100 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:86: error: illegal character: \\96\n```java\n^\nMain.java:86: error: illegal character: \\96\n```java\n ^\nMain.java:86: error: illegal character: \\96\n```java\n  ^\nMain.java:98: error: illegal character: \\96\n```\n^\nMain.java:98: error: illegal character: \\96\n```\n ^\nMain.java:98: error: illegal character: \\96\n```\n  ^\n6 errors\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:86: error: <identifier> expected\ncur,int dep){\n   ^\nMain.java:86: error: <identifier> expected\ncur,int dep){\n    ^\nMain.java:86: error: <identifier> expected\ncur,int dep){\n           ^\nMain.java:98: error: '{' expected\n    static class P\n                  ^\nMain.java:134: error: reached end of file while parsing\n}\n ^\n5 errors\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n       ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n              ^\nMain.java:86: error: illegal character: \\96\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                    ^\nMain.java:86: error: <identifier> expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                        ^\nMain.java:86: error: illegal character: \\96\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                         ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                     ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                              ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                                                   ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                                                           ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                                                                  ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                                                                             ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                                                                                       ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                                                                                                          ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                                                                                                                      ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                                                                                                                                    ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                                                                                                                                            ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                                                                                                                                                   ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                                                                                                                                                              ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                                                                                                                                                                        ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                                                                                                                                                                                     ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                                                                                                                                                                                             ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                                                                                                                                                                                                                ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                                                                                                                                                                                                                             ^\nMain.java:86: error: ';' expected\nThe bug in the line `sum += weight[next];` is that it does not correctly accumulate the sum of the weights of the child nodes. The correct approach is to accumulate the sum of the weights of all child nodes during the DFS traversal. Here is the complete corrected method:\n                                                                                                                                                                                                                                                                              ^\nMain.java:104: error: ';' expected\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n      ^\nMain.java:104: error: illegal character: \\96\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                       ^\nMain.java:104: error: <identifier> expected\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                          ^\nMain.java:104: error: illegal character: \\96\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                           ^\nMain.java:104: error: ';' expected\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                            ^\nMain.java:104: error: illegal character: \\96\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                                ^\nMain.java:104: error: <identifier> expected\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                                                    ^\nMain.java:104: error: illegal character: \\96\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                                                     ^\nMain.java:104: error: ';' expected\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                                                                              ^\nMain.java:104: error: ';' expected\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                                                                                      ^\nMain.java:104: error: ';' expected\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                                                                                             ^\nMain.java:104: error: ';' expected\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                                                                                                        ^\nMain.java:104: error: ';' expected\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                                                                                                                  ^\nMain.java:104: error: ';' expected\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                                                                                                                                      ^\nMain.java:104: error: illegal character: \\96\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                                                                                                                                                ^\nMain.java:104: error: illegal character: \\96\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                                                                                                                                                      ^\nMain.java:104: error: ';' expected\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                                                                                                                                                                       ^\nMain.java:104: error: ';' expected\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                                                                                                                                                                                  ^\nMain.java:104: error: ';' expected\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                                                                                                                                                                                         ^\nMain.java:104: error: ';' expected\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                                                                                                                                                                                                     ^\nMain.java:104: error: ';' expected\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                                                                                                                                                                                                            ^\nMain.java:104: error: ';' expected\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                                                                                                                                                                                                                           ^\nMain.java:104: error: ';' expected\nIn the corrected code, `sum += child[next];` is used instead of `sum += weight[next];` to correctly accumulate the sum of the weights of all child nodes. This ensures that the `child` array correctly stores the sum of the weights of all descendants of each node.\n                                                                                                                                                                                                                                                                     ^\n47 errors\n"
                }
            }
        },
        "prompt_apr_3": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:86: error: <identifier> expected\ncur, int dep) {\n   ^\nMain.java:86: error: <identifier> expected\ncur, int dep) {\n    ^\nMain.java:86: error: <identifier> expected\ncur, int dep) {\n            ^\nMain.java:95: error: illegal start of expression\n    static class Point{\n    ^\nMain.java:105: error: illegal start of expression\n    static class Tri{\n    ^\nMain.java:118: error: illegal start of expression\n    static int[][] mv = new int[][]{{1,0},{-1,0},{0,1},{0,-1}};\n    ^\nMain.java:122: error: illegal start of expression\n    static class FastReader { BufferedReader br;StringTokenizer st;public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));}String next() {while (st == null || !st.hasMoreElements()) try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();}return st.nextToken();}int nextInt() {return Integer.parseInt(next());}long nextLong() {return Long.parseLong(next());}double nextDouble() {return Double.parseDouble(next());}String nextLine() {String str = \"\";try {if (st.hasMoreTokens()) str = st.nextToken(\"\\n\"); else str = br.readLine();} catch (IOException e) {e.printStackTrace();}return str;}public int[] readIntArray(int n, int s, int e) {int[] ar = new int[n];for (int i = s; i < e; ++i) ar[i] = se.nextInt();return ar;}public long[] readIntArrayLONG(int n, int s, int e) {long[] ar = new long[n];for (int i = s; i < e; ++i) ar[i] = se.nextLong();return ar;}int[][] next2DInt(int n, int m, int s, int e) {int[][] arr = new int[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int s, int e) {long[][] arr = new long[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList() throws IOException {List<Long> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Long.parseLong(string));return list;}List<Integer> asIntList() throws IOException {List<Integer> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Integer.parseInt(string));return list;}}static class Reader { final private int BUFFER_SIZE = 1 << 16;private DataInputStream din;private byte[] buffer;private int bufferPointer, bytesRead;public Reader() {din = new DataInputStream(System.in);buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public Reader(String file_name) throws IOException {din = new DataInputStream(new FileInputStream(file_name));buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public String readLine() throws IOException {byte[] buf = new byte[64];int cnt = 0, c;while ((c = read()) != -1) {if (c == '\\n') break;buf[cnt++] = (byte) c;}return new String(buf, 0, cnt);}public int nextInt() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public long nextLong() throws IOException {long ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10L + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public double nextDouble() throws IOException {double ret = 0, div = 1;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (c == '.') while ((c = read()) >= '0' && c <= '9') ret += (c - '0') / (div *= 10);if (neg) return -ret;return ret;}private void fillBuffer() throws IOException {bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);if (bytesRead == -1) buffer[0] = -1;}private byte read() throws IOException {if (bufferPointer == bytesRead) fillBuffer();return buffer[bufferPointer++];}public char[] next() throws IOException {StringBuilder sb = new StringBuilder();byte c;while ((c = read()) <= ' ') ;do sb.append((char) c); while ((c = read()) > ' ');return sb.toString().toCharArray();}public int nextInt2() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public void close() throws IOException {if (din == null) return;din.close();}public int[] readIntArray(int n, int se, int e) throws IOException {int[] ar = new int[n];for (int i = se; i < e; ++i) ar[i] = s.nextInt();return ar;}public long[] readIntArrayLONG(int n, int se, int e) throws IOException {long[] ar = new long[n];for (int i = se; i < e; ++i) ar[i] = s.nextLong();return ar;}int[][] next2DInt(int n, int m, int se, int e) throws IOException {int[][] arr = new int[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int se, int e) throws IOException {long[][] arr = new long[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList(int n) throws IOException {List<Long> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextLong());return list;}List<Integer> asIntList(int n) throws IOException {List<Integer> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextInt());return list;}}\n    ^\nMain.java:122: error: illegal start of expression\n    static class FastReader { BufferedReader br;StringTokenizer st;public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));}String next() {while (st == null || !st.hasMoreElements()) try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();}return st.nextToken();}int nextInt() {return Integer.parseInt(next());}long nextLong() {return Long.parseLong(next());}double nextDouble() {return Double.parseDouble(next());}String nextLine() {String str = \"\";try {if (st.hasMoreTokens()) str = st.nextToken(\"\\n\"); else str = br.readLine();} catch (IOException e) {e.printStackTrace();}return str;}public int[] readIntArray(int n, int s, int e) {int[] ar = new int[n];for (int i = s; i < e; ++i) ar[i] = se.nextInt();return ar;}public long[] readIntArrayLONG(int n, int s, int e) {long[] ar = new long[n];for (int i = s; i < e; ++i) ar[i] = se.nextLong();return ar;}int[][] next2DInt(int n, int m, int s, int e) {int[][] arr = new int[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int s, int e) {long[][] arr = new long[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList() throws IOException {List<Long> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Long.parseLong(string));return list;}List<Integer> asIntList() throws IOException {List<Integer> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Integer.parseInt(string));return list;}}static class Reader { final private int BUFFER_SIZE = 1 << 16;private DataInputStream din;private byte[] buffer;private int bufferPointer, bytesRead;public Reader() {din = new DataInputStream(System.in);buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public Reader(String file_name) throws IOException {din = new DataInputStream(new FileInputStream(file_name));buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public String readLine() throws IOException {byte[] buf = new byte[64];int cnt = 0, c;while ((c = read()) != -1) {if (c == '\\n') break;buf[cnt++] = (byte) c;}return new String(buf, 0, cnt);}public int nextInt() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public long nextLong() throws IOException {long ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10L + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public double nextDouble() throws IOException {double ret = 0, div = 1;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (c == '.') while ((c = read()) >= '0' && c <= '9') ret += (c - '0') / (div *= 10);if (neg) return -ret;return ret;}private void fillBuffer() throws IOException {bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);if (bytesRead == -1) buffer[0] = -1;}private byte read() throws IOException {if (bufferPointer == bytesRead) fillBuffer();return buffer[bufferPointer++];}public char[] next() throws IOException {StringBuilder sb = new StringBuilder();byte c;while ((c = read()) <= ' ') ;do sb.append((char) c); while ((c = read()) > ' ');return sb.toString().toCharArray();}public int nextInt2() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public void close() throws IOException {if (din == null) return;din.close();}public int[] readIntArray(int n, int se, int e) throws IOException {int[] ar = new int[n];for (int i = se; i < e; ++i) ar[i] = s.nextInt();return ar;}public long[] readIntArrayLONG(int n, int se, int e) throws IOException {long[] ar = new long[n];for (int i = se; i < e; ++i) ar[i] = s.nextLong();return ar;}int[][] next2DInt(int n, int m, int se, int e) throws IOException {int[][] arr = new int[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int se, int e) throws IOException {long[][] arr = new long[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList(int n) throws IOException {List<Long> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextLong());return list;}List<Integer> asIntList(int n) throws IOException {List<Integer> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextInt());return list;}}\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n    ^\nMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n           ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                 ^\nMain.java:124: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                 ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                         ^\nMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                               ^\nMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                      ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                            ^\nMain.java:124: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                           ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                            ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                    ^\nMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                   ^\nMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                          ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                ^\nMain.java:124: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                    ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                     ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                             ^\nMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                     ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                           ^\nMain.java:124: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                               ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                       ^\nMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ^\nMain.java:124: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^\nMain.java:124: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:127: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n    ^\nMain.java:127: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n           ^\nMain.java:127: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                 ^\nMain.java:127: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                    ^\nMain.java:127: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                     ^\nMain.java:127: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                        ^\nMain.java:127: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                               ^\nMain.java:127: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                     ^\nMain.java:127: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                      ^\nMain.java:127: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                       ^\nMain.java:127: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                        ^\nMain.java:127: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                               ^\nMain.java:127: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                     ^\nMain.java:127: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                     ^\nMain.java:127: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                      ^\nMain.java:127: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                       ^\nMain.java:127: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                              ^\nMain.java:127: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                    ^\nMain.java:127: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                      ^\nMain.java:127: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                       ^\nMain.java:127: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                          ^\nMain.java:127: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                 ^\nMain.java:127: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                       ^\nMain.java:127: error: ')' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                         ^\nMain.java:127: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                           ^\nMain.java:127: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                            ^\n100 errors\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:86: error: illegal character: \\96\n```java\n^\nMain.java:86: error: illegal character: \\96\n```java\n ^\nMain.java:86: error: illegal character: \\96\n```java\n  ^\nMain.java:95: error: illegal character: \\96\n```\n^\nMain.java:95: error: illegal character: \\96\n```\n ^\nMain.java:95: error: illegal character: \\96\n```\n  ^\nMain.java:96: error: illegal start of expression\n    static class Point{\n    ^\nMain.java:96: error: ';' expected\n    static class Point{\n          ^\nMain.java:96: error: not a statement\n    static class Point{\n                 ^\nMain.java:96: error: ';' expected\n    static class Point{\n                      ^\nMain.java:100: error: illegal start of expression\n        public Point(int x, int y) {\n        ^\nMain.java:100: error: '.class' expected\n        public Point(int x, int y) {\n                         ^\nMain.java:100: error: ';' expected\n        public Point(int x, int y) {\n                          ^\nMain.java:100: error: ';' expected\n        public Point(int x, int y) {\n                                 ^\nMain.java:106: error: illegal start of expression\n    static class Tri{\n    ^\nMain.java:119: error: illegal start of expression\n    static int[][] mv = new int[][]{{1,0},{-1,0},{0,1},{0,-1}};\n    ^\nMain.java:123: error: illegal start of expression\n    static class FastReader { BufferedReader br;StringTokenizer st;public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));}String next() {while (st == null || !st.hasMoreElements()) try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();}return st.nextToken();}int nextInt() {return Integer.parseInt(next());}long nextLong() {return Long.parseLong(next());}double nextDouble() {return Double.parseDouble(next());}String nextLine() {String str = \"\";try {if (st.hasMoreTokens()) str = st.nextToken(\"\\n\"); else str = br.readLine();} catch (IOException e) {e.printStackTrace();}return str;}public int[] readIntArray(int n, int s, int e) {int[] ar = new int[n];for (int i = s; i < e; ++i) ar[i] = se.nextInt();return ar;}public long[] readIntArrayLONG(int n, int s, int e) {long[] ar = new long[n];for (int i = s; i < e; ++i) ar[i] = se.nextLong();return ar;}int[][] next2DInt(int n, int m, int s, int e) {int[][] arr = new int[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int s, int e) {long[][] arr = new long[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList() throws IOException {List<Long> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Long.parseLong(string));return list;}List<Integer> asIntList() throws IOException {List<Integer> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Integer.parseInt(string));return list;}}static class Reader { final private int BUFFER_SIZE = 1 << 16;private DataInputStream din;private byte[] buffer;private int bufferPointer, bytesRead;public Reader() {din = new DataInputStream(System.in);buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public Reader(String file_name) throws IOException {din = new DataInputStream(new FileInputStream(file_name));buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public String readLine() throws IOException {byte[] buf = new byte[64];int cnt = 0, c;while ((c = read()) != -1) {if (c == '\\n') break;buf[cnt++] = (byte) c;}return new String(buf, 0, cnt);}public int nextInt() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public long nextLong() throws IOException {long ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10L + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public double nextDouble() throws IOException {double ret = 0, div = 1;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (c == '.') while ((c = read()) >= '0' && c <= '9') ret += (c - '0') / (div *= 10);if (neg) return -ret;return ret;}private void fillBuffer() throws IOException {bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);if (bytesRead == -1) buffer[0] = -1;}private byte read() throws IOException {if (bufferPointer == bytesRead) fillBuffer();return buffer[bufferPointer++];}public char[] next() throws IOException {StringBuilder sb = new StringBuilder();byte c;while ((c = read()) <= ' ') ;do sb.append((char) c); while ((c = read()) > ' ');return sb.toString().toCharArray();}public int nextInt2() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public void close() throws IOException {if (din == null) return;din.close();}public int[] readIntArray(int n, int se, int e) throws IOException {int[] ar = new int[n];for (int i = se; i < e; ++i) ar[i] = s.nextInt();return ar;}public long[] readIntArrayLONG(int n, int se, int e) throws IOException {long[] ar = new long[n];for (int i = se; i < e; ++i) ar[i] = s.nextLong();return ar;}int[][] next2DInt(int n, int m, int se, int e) throws IOException {int[][] arr = new int[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int se, int e) throws IOException {long[][] arr = new long[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList(int n) throws IOException {List<Long> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextLong());return list;}List<Integer> asIntList(int n) throws IOException {List<Integer> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextInt());return list;}}\n    ^\nMain.java:123: error: illegal start of expression\n    static class FastReader { BufferedReader br;StringTokenizer st;public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));}String next() {while (st == null || !st.hasMoreElements()) try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();}return st.nextToken();}int nextInt() {return Integer.parseInt(next());}long nextLong() {return Long.parseLong(next());}double nextDouble() {return Double.parseDouble(next());}String nextLine() {String str = \"\";try {if (st.hasMoreTokens()) str = st.nextToken(\"\\n\"); else str = br.readLine();} catch (IOException e) {e.printStackTrace();}return str;}public int[] readIntArray(int n, int s, int e) {int[] ar = new int[n];for (int i = s; i < e; ++i) ar[i] = se.nextInt();return ar;}public long[] readIntArrayLONG(int n, int s, int e) {long[] ar = new long[n];for (int i = s; i < e; ++i) ar[i] = se.nextLong();return ar;}int[][] next2DInt(int n, int m, int s, int e) {int[][] arr = new int[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int s, int e) {long[][] arr = new long[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList() throws IOException {List<Long> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Long.parseLong(string));return list;}List<Integer> asIntList() throws IOException {List<Integer> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Integer.parseInt(string));return list;}}static class Reader { final private int BUFFER_SIZE = 1 << 16;private DataInputStream din;private byte[] buffer;private int bufferPointer, bytesRead;public Reader() {din = new DataInputStream(System.in);buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public Reader(String file_name) throws IOException {din = new DataInputStream(new FileInputStream(file_name));buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public String readLine() throws IOException {byte[] buf = new byte[64];int cnt = 0, c;while ((c = read()) != -1) {if (c == '\\n') break;buf[cnt++] = (byte) c;}return new String(buf, 0, cnt);}public int nextInt() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public long nextLong() throws IOException {long ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10L + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public double nextDouble() throws IOException {double ret = 0, div = 1;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (c == '.') while ((c = read()) >= '0' && c <= '9') ret += (c - '0') / (div *= 10);if (neg) return -ret;return ret;}private void fillBuffer() throws IOException {bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);if (bytesRead == -1) buffer[0] = -1;}private byte read() throws IOException {if (bufferPointer == bytesRead) fillBuffer();return buffer[bufferPointer++];}public char[] next() throws IOException {StringBuilder sb = new StringBuilder();byte c;while ((c = read()) <= ' ') ;do sb.append((char) c); while ((c = read()) > ' ');return sb.toString().toCharArray();}public int nextInt2() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public void close() throws IOException {if (din == null) return;din.close();}public int[] readIntArray(int n, int se, int e) throws IOException {int[] ar = new int[n];for (int i = se; i < e; ++i) ar[i] = s.nextInt();return ar;}public long[] readIntArrayLONG(int n, int se, int e) throws IOException {long[] ar = new long[n];for (int i = se; i < e; ++i) ar[i] = s.nextLong();return ar;}int[][] next2DInt(int n, int m, int se, int e) throws IOException {int[][] arr = new int[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int se, int e) throws IOException {long[][] arr = new long[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList(int n) throws IOException {List<Long> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextLong());return list;}List<Integer> asIntList(int n) throws IOException {List<Integer> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextInt());return list;}}\nnMain.java:125: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n    ^\nMain.java:125: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n           ^\nMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                 ^\nMain.java:125: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                ^\nMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                 ^\nMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                         ^\nMain.java:125: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                               ^\nMain.java:125: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                      ^\nMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                            ^\nMain.java:125: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                           ^\nMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                            ^\nMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                    ^\nMain.java:125: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                   ^\nMain.java:125: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                          ^\nMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                ^\nMain.java:125: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                    ^\nMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                     ^\nMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                             ^\nMain.java:125: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:125: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                     ^\nMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                           ^\nMain.java:125: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                               ^\nMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                       ^\nMain.java:125: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:125: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^\nMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ^\nMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^\nMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^\nMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^\nMain.java:125: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ^\nMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ^\nMain.java:125: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ^\nMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:125: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:128: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n    ^\nMain.java:128: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n           ^\nMain.java:128: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                 ^\nMain.java:128: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                    ^\nMain.java:128: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                     ^\nMain.java:128: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                        ^\nMain.java:128: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                               ^\nMain.java:128: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                     ^\nMain.java:128: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                      ^\nMain.java:128: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                       ^\nMain.java:128: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                        ^\nMain.java:128: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                               ^\nMain.java:128: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                     ^\nMain.java:128: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                     ^\nMain.java:128: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                      ^\nMain.java:128: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                       ^\n100 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:86: error: <identifier> expected\ncur,int dep){\n   ^\nMain.java:86: error: <identifier> expected\ncur,int dep){\n    ^\nMain.java:86: error: <identifier> expected\ncur,int dep){\n           ^\n3 errors\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:86: error: <identifier> expected\ncur,int dep){\n   ^\nMain.java:86: error: <identifier> expected\ncur,int dep){\n    ^\nMain.java:86: error: <identifier> expected\ncur,int dep){\n           ^\nMain.java:94: error: illegal start of expression\n    static class Point{\n    ^\nMain.java:104: error: illegal start of expression\n    static class Tri{\n    ^\nMain.java:117: error: illegal start of expression\n    static int[][] mv = new int[][]{{1,0},{-1,0},{0,1},{0,-1}};\n    ^\nMain.java:121: error: illegal start of expression\n    static class FastReader { BufferedReader br;StringTokenizer st;public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));}String next() {while (st == null || !st.hasMoreElements()) try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();}return st.nextToken();}int nextInt() {return Integer.parseInt(next());}long nextLong() {return Long.parseLong(next());}double nextDouble() {return Double.parseDouble(next());}String nextLine() {String str = \"\";try {if (st.hasMoreTokens()) str = st.nextToken(\"\\n\"); else str = br.readLine();} catch (IOException e) {e.printStackTrace();}return str;}public int[] readIntArray(int n, int s, int e) {int[] ar = new int[n];for (int i = s; i < e; ++i) ar[i] = se.nextInt();return ar;}public long[] readIntArrayLONG(int n, int s, int e) {long[] ar = new long[n];for (int i = s; i < e; ++i) ar[i] = se.nextLong();return ar;}int[][] next2DInt(int n, int m, int s, int e) {int[][] arr = new int[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int s, int e) {long[][] arr = new long[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList() throws IOException {List<Long> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Long.parseLong(string));return list;}List<Integer> asIntList() throws IOException {List<Integer> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Integer.parseInt(string));return list;}}static class Reader { final private int BUFFER_SIZE = 1 << 16;private DataInputStream din;private byte[] buffer;private int bufferPointer, bytesRead;public Reader() {din = new DataInputStream(System.in);buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public Reader(String file_name) throws IOException {din = new DataInputStream(new FileInputStream(file_name));buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public String readLine() throws IOException {byte[] buf = new byte[64];int cnt = 0, c;while ((c = read()) != -1) {if (c == '\\n') break;buf[cnt++] = (byte) c;}return new String(buf, 0, cnt);}public int nextInt() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public long nextLong() throws IOException {long ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10L + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public double nextDouble() throws IOException {double ret = 0, div = 1;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (c == '.') while ((c = read()) >= '0' && c <= '9') ret += (c - '0') / (div *= 10);if (neg) return -ret;return ret;}private void fillBuffer() throws IOException {bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);if (bytesRead == -1) buffer[0] = -1;}private byte read() throws IOException {if (bufferPointer == bytesRead) fillBuffer();return buffer[bufferPointer++];}public char[] next() throws IOException {StringBuilder sb = new StringBuilder();byte c;while ((c = read()) <= ' ') ;do sb.append((char) c); while ((c = read()) > ' ');return sb.toString().toCharArray();}public int nextInt2() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public void close() throws IOException {if (din == null) return;din.close();}public int[] readIntArray(int n, int se, int e) throws IOException {int[] ar = new int[n];for (int i = se; i < e; ++i) ar[i] = s.nextInt();return ar;}public long[] readIntArrayLONG(int n, int se, int e) throws IOException {long[] ar = new long[n];for (int i = se; i < e; ++i) ar[i] = s.nextLong();return ar;}int[][] next2DInt(int n, int m, int se, int e) throws IOException {int[][] arr = new int[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int se, int e) throws IOException {long[][] arr = new long[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList(int n) throws IOException {List<Long> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextLong());return list;}List<Integer> asIntList(int n) throws IOException {List<Integer> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextInt());return list;}}\n    ^\nMain.java:121: error: illegal start of expression\n    static class FastReader { BufferedReader br;StringTokenizer st;public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));}String next() {while (st == null || !st.hasMoreElements()) try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();}return st.nextToken();}int nextInt() {return Integer.parseInt(next());}long nextLong() {return Long.parseLong(next());}double nextDouble() {return Double.parseDouble(next());}String nextLine() {String str = \"\";try {if (st.hasMoreTokens()) str = st.nextToken(\"\\n\"); else str = br.readLine();} catch (IOException e) {e.printStackTrace();}return str;}public int[] readIntArray(int n, int s, int e) {int[] ar = new int[n];for (int i = s; i < e; ++i) ar[i] = se.nextInt();return ar;}public long[] readIntArrayLONG(int n, int s, int e) {long[] ar = new long[n];for (int i = s; i < e; ++i) ar[i] = se.nextLong();return ar;}int[][] next2DInt(int n, int m, int s, int e) {int[][] arr = new int[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int s, int e) {long[][] arr = new long[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList() throws IOException {List<Long> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Long.parseLong(string));return list;}List<Integer> asIntList() throws IOException {List<Integer> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Integer.parseInt(string));return list;}}static class Reader { final private int BUFFER_SIZE = 1 << 16;private DataInputStream din;private byte[] buffer;private int bufferPointer, bytesRead;public Reader() {din = new DataInputStream(System.in);buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public Reader(String file_name) throws IOException {din = new DataInputStream(new FileInputStream(file_name));buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public String readLine() throws IOException {byte[] buf = new byte[64];int cnt = 0, c;while ((c = read()) != -1) {if (c == '\\n') break;buf[cnt++] = (byte) c;}return new String(buf, 0, cnt);}public int nextInt() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public long nextLong() throws IOException {long ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10L + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public double nextDouble() throws IOException {double ret = 0, div = 1;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (c == '.') while ((c = read()) >= '0' && c <= '9') ret += (c - '0') / (div *= 10);if (neg) return -ret;return ret;}private void fillBuffer() throws IOException {bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);if (bytesRead == -1) buffer[0] = -1;}private byte read() throws IOException {if (bufferPointer == bytesRead) fillBuffer();return buffer[bufferPointer++];}public char[] next() throws IOException {StringBuilder sb = new StringBuilder();byte c;while ((c = read()) <= ' ') ;do sb.append((char) c); while ((c = read()) > ' ');return sb.toString().toCharArray();}public int nextInt2() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public void close() throws IOException {if (din == null) return;din.close();}public int[] readIntArray(int n, int se, int e) throws IOException {int[] ar = new int[n];for (int i = se; i < e; ++i) ar[i] = s.nextInt();return ar;}public long[] readIntArrayLONG(int n, int se, int e) throws IOException {long[] ar = new long[n];for (int i = se; i < e; ++i) ar[i] = s.nextLong();return ar;}int[][] next2DInt(int n, int m, int se, int e) throws IOException {int[][] arr = new int[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int se, int e) throws IOException {long[][] arr = new long[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList(int n) throws IOException {List<Long> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextLong());return list;}List<Integer> asIntList(int n) throws IOException {List<Integer> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextInt());return list;}}\nnMain.java:123: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n    ^\nMain.java:123: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n           ^\nMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                 ^\nMain.java:123: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                ^\nMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                 ^\nMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                         ^\nMain.java:123: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                               ^\nMain.java:123: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                      ^\nMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                            ^\nMain.java:123: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                           ^\nMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                            ^\nMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                    ^\nMain.java:123: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                   ^\nMain.java:123: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                          ^\nMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                ^\nMain.java:123: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                    ^\nMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                     ^\nMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                             ^\nMain.java:123: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:123: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                     ^\nMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                           ^\nMain.java:123: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                               ^\nMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                       ^\nMain.java:123: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^\nMain.java:123: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^\nMain.java:123: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^\nMain.java:123: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^\nMain.java:123: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ^\nMain.java:123: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ^\nMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:123: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n    ^\nMain.java:126: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n           ^\nMain.java:126: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                 ^\nMain.java:126: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                    ^\nMain.java:126: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                     ^\nMain.java:126: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                        ^\nMain.java:126: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                               ^\nMain.java:126: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                     ^\nMain.java:126: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                      ^\nMain.java:126: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                       ^\nMain.java:126: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                        ^\nMain.java:126: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                               ^\nMain.java:126: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                     ^\nMain.java:126: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                     ^\nMain.java:126: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                      ^\nMain.java:126: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                       ^\nMain.java:126: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                              ^\nMain.java:126: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                    ^\nMain.java:126: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                      ^\nMain.java:126: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                       ^\nMain.java:126: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                          ^\nMain.java:126: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                 ^\nMain.java:126: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                       ^\nMain.java:126: error: ')' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                         ^\nMain.java:126: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                           ^\nMain.java:126: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                            ^\n100 errors\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:86: error: illegal character: \\96\n```java\n^\nMain.java:86: error: illegal character: \\96\n```java\n ^\nMain.java:86: error: illegal character: \\96\n```java\n  ^\nMain.java:87: error: <identifier> expected\ncur,int dep){\n   ^\nMain.java:87: error: <identifier> expected\ncur,int dep){\n    ^\nMain.java:87: error: <identifier> expected\ncur,int dep){\n           ^\nMain.java:94: error: illegal character: \\96\n```\n^\nMain.java:94: error: illegal character: \\96\n```\n ^\nMain.java:94: error: illegal character: \\96\n```\n  ^\nMain.java:95: error: illegal start of expression\n    static class Point{\n    ^\nMain.java:95: error: ';' expected\n    static class Point{\n          ^\nMain.java:95: error: not a statement\n    static class Point{\n                 ^\nMain.java:95: error: ';' expected\n    static class Point{\n                      ^\nMain.java:99: error: illegal start of expression\n        public Point(int x, int y) {\n        ^\nMain.java:99: error: '.class' expected\n        public Point(int x, int y) {\n                         ^\nMain.java:99: error: ';' expected\n        public Point(int x, int y) {\n                          ^\nMain.java:99: error: ';' expected\n        public Point(int x, int y) {\n                                 ^\nMain.java:105: error: illegal start of expression\n    static class Tri{\n    ^\nMain.java:118: error: illegal start of expression\n    static int[][] mv = new int[][]{{1,0},{-1,0},{0,1},{0,-1}};\n    ^\nMain.java:122: error: illegal start of expression\n    static class FastReader { BufferedReader br;StringTokenizer st;public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));}String next() {while (st == null || !st.hasMoreElements()) try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();}return st.nextToken();}int nextInt() {return Integer.parseInt(next());}long nextLong() {return Long.parseLong(next());}double nextDouble() {return Double.parseDouble(next());}String nextLine() {String str = \"\";try {if (st.hasMoreTokens()) str = st.nextToken(\"\\n\"); else str = br.readLine();} catch (IOException e) {e.printStackTrace();}return str;}public int[] readIntArray(int n, int s, int e) {int[] ar = new int[n];for (int i = s; i < e; ++i) ar[i] = se.nextInt();return ar;}public long[] readIntArrayLONG(int n, int s, int e) {long[] ar = new long[n];for (int i = s; i < e; ++i) ar[i] = se.nextLong();return ar;}int[][] next2DInt(int n, int m, int s, int e) {int[][] arr = new int[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int s, int e) {long[][] arr = new long[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList() throws IOException {List<Long> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Long.parseLong(string));return list;}List<Integer> asIntList() throws IOException {List<Integer> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Integer.parseInt(string));return list;}}static class Reader { final private int BUFFER_SIZE = 1 << 16;private DataInputStream din;private byte[] buffer;private int bufferPointer, bytesRead;public Reader() {din = new DataInputStream(System.in);buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public Reader(String file_name) throws IOException {din = new DataInputStream(new FileInputStream(file_name));buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public String readLine() throws IOException {byte[] buf = new byte[64];int cnt = 0, c;while ((c = read()) != -1) {if (c == '\\n') break;buf[cnt++] = (byte) c;}return new String(buf, 0, cnt);}public int nextInt() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public long nextLong() throws IOException {long ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10L + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public double nextDouble() throws IOException {double ret = 0, div = 1;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (c == '.') while ((c = read()) >= '0' && c <= '9') ret += (c - '0') / (div *= 10);if (neg) return -ret;return ret;}private void fillBuffer() throws IOException {bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);if (bytesRead == -1) buffer[0] = -1;}private byte read() throws IOException {if (bufferPointer == bytesRead) fillBuffer();return buffer[bufferPointer++];}public char[] next() throws IOException {StringBuilder sb = new StringBuilder();byte c;while ((c = read()) <= ' ') ;do sb.append((char) c); while ((c = read()) > ' ');return sb.toString().toCharArray();}public int nextInt2() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public void close() throws IOException {if (din == null) return;din.close();}public int[] readIntArray(int n, int se, int e) throws IOException {int[] ar = new int[n];for (int i = se; i < e; ++i) ar[i] = s.nextInt();return ar;}public long[] readIntArrayLONG(int n, int se, int e) throws IOException {long[] ar = new long[n];for (int i = se; i < e; ++i) ar[i] = s.nextLong();return ar;}int[][] next2DInt(int n, int m, int se, int e) throws IOException {int[][] arr = new int[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int se, int e) throws IOException {long[][] arr = new long[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList(int n) throws IOException {List<Long> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextLong());return list;}List<Integer> asIntList(int n) throws IOException {List<Integer> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextInt());return list;}}\n    ^\nMain.java:122: error: illegal start of expression\n    static class FastReader { BufferedReader br;StringTokenizer st;public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));}String next() {while (st == null || !st.hasMoreElements()) try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();}return st.nextToken();}int nextInt() {return Integer.parseInt(next());}long nextLong() {return Long.parseLong(next());}double nextDouble() {return Double.parseDouble(next());}String nextLine() {String str = \"\";try {if (st.hasMoreTokens()) str = st.nextToken(\"\\n\"); else str = br.readLine();} catch (IOException e) {e.printStackTrace();}return str;}public int[] readIntArray(int n, int s, int e) {int[] ar = new int[n];for (int i = s; i < e; ++i) ar[i] = se.nextInt();return ar;}public long[] readIntArrayLONG(int n, int s, int e) {long[] ar = new long[n];for (int i = s; i < e; ++i) ar[i] = se.nextLong();return ar;}int[][] next2DInt(int n, int m, int s, int e) {int[][] arr = new int[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int s, int e) {long[][] arr = new long[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList() throws IOException {List<Long> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Long.parseLong(string));return list;}List<Integer> asIntList() throws IOException {List<Integer> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Integer.parseInt(string));return list;}}static class Reader { final private int BUFFER_SIZE = 1 << 16;private DataInputStream din;private byte[] buffer;private int bufferPointer, bytesRead;public Reader() {din = new DataInputStream(System.in);buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public Reader(String file_name) throws IOException {din = new DataInputStream(new FileInputStream(file_name));buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public String readLine() throws IOException {byte[] buf = new byte[64];int cnt = 0, c;while ((c = read()) != -1) {if (c == '\\n') break;buf[cnt++] = (byte) c;}return new String(buf, 0, cnt);}public int nextInt() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public long nextLong() throws IOException {long ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10L + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public double nextDouble() throws IOException {double ret = 0, div = 1;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (c == '.') while ((c = read()) >= '0' && c <= '9') ret += (c - '0') / (div *= 10);if (neg) return -ret;return ret;}private void fillBuffer() throws IOException {bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);if (bytesRead == -1) buffer[0] = -1;}private byte read() throws IOException {if (bufferPointer == bytesRead) fillBuffer();return buffer[bufferPointer++];}public char[] next() throws IOException {StringBuilder sb = new StringBuilder();byte c;while ((c = read()) <= ' ') ;do sb.append((char) c); while ((c = read()) > ' ');return sb.toString().toCharArray();}public int nextInt2() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public void close() throws IOException {if (din == null) return;din.close();}public int[] readIntArray(int n, int se, int e) throws IOException {int[] ar = new int[n];for (int i = se; i < e; ++i) ar[i] = s.nextInt();return ar;}public long[] readIntArrayLONG(int n, int se, int e) throws IOException {long[] ar = new long[n];for (int i = se; i < e; ++i) ar[i] = s.nextLong();return ar;}int[][] next2DInt(int n, int m, int se, int e) throws IOException {int[][] arr = new int[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int se, int e) throws IOException {long[][] arr = new long[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList(int n) throws IOException {List<Long> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextLong());return list;}List<Integer> asIntList(int n) throws IOException {List<Integer> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextInt());return list;}}\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n    ^\nMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n           ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                 ^\nMain.java:124: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                 ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                         ^\nMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                               ^\nMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                      ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                            ^\nMain.java:124: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                           ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                            ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                    ^\nMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                   ^\nMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                          ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                ^\nMain.java:124: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                    ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                     ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                             ^\nMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                     ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                           ^\nMain.java:124: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                               ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                       ^\nMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^\nMain.java:124: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^\nMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ^\nMain.java:124: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:124: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:127: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n    ^\nMain.java:127: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n           ^\nMain.java:127: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                 ^\nMain.java:127: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                    ^\nMain.java:127: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                     ^\nMain.java:127: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                        ^\nMain.java:127: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                               ^\nMain.java:127: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                     ^\nMain.java:127: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                      ^\nMain.java:127: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                       ^\nMain.java:127: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                        ^\nMain.java:127: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                               ^\nMain.java:127: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                     ^\n100 errors\n"
                }
            }
        },
        "prompt_apr_4": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:64: error: cannot find symbol\n        sum = Arrays.stream(weight).sum();\n                    ^\n  symbol:   method stream(long[])\n  location: class Arrays\nNote: Main.java uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n1 error\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:64: error: cannot find symbol\n        sum = Arrays.stream(weight).sum();\n                    ^\n  symbol:   method stream(long[])\n  location: class Arrays\nNote: Main.java uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n1 error\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:64: error: cannot find symbol\n        sum = Arrays.stream(weight).sum();\n                    ^\n  symbol:   method stream(long[])\n  location: class Arrays\nNote: Main.java uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n1 error\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:64: error: cannot find symbol\n        sum = Arrays.stream(weight).sum();\n                    ^\n  symbol:   method stream(long[])\n  location: class Arrays\nNote: Main.java uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n1 error\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:64: error: cannot find symbol\n        sum = Arrays.stream(weight).sum();\n                    ^\n  symbol:   method stream(long[])\n  location: class Arrays\nNote: Main.java uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n1 error\n"
                }
            }
        },
        "prompt_apr_5": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:64: error: cannot find symbol\n        sum = Arrays.stream(weight).sum();\n                    ^\n  symbol:   method stream(long[])\n  location: class Arrays\nNote: Main.java uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n1 error\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:64: error: cannot find symbol\n        sum = Arrays.stream(weight).sum();\n                    ^\n  symbol:   method stream(long[])\n  location: class Arrays\nNote: Main.java uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n1 error\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:97: error: illegal start of expression\n    static class Point{\n    ^\nMain.java:107: error: illegal start of expression\n    static class Tri{\n    ^\nMain.java:120: error: illegal start of expression\n    static int[][] mv = new int[][]{{1,0},{-1,0},{0,1},{0,-1}};\n    ^\nMain.java:124: error: illegal start of expression\n    static class FastReader { BufferedReader br;StringTokenizer st;public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));}String next() {while (st == null || !st.hasMoreElements()) try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();}return st.nextToken();}int nextInt() {return Integer.parseInt(next());}long nextLong() {return Long.parseLong(next());}double nextDouble() {return Double.parseDouble(next());}String nextLine() {String str = \"\";try {if (st.hasMoreTokens()) str = st.nextToken(\"\\n\"); else str = br.readLine();} catch (IOException e) {e.printStackTrace();}return str;}public int[] readIntArray(int n, int s, int e) {int[] ar = new int[n];for (int i = s; i < e; ++i) ar[i] = se.nextInt();return ar;}public long[] readIntArrayLONG(int n, int s, int e) {long[] ar = new long[n];for (int i = s; i < e; ++i) ar[i] = se.nextLong();return ar;}int[][] next2DInt(int n, int m, int s, int e) {int[][] arr = new int[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int s, int e) {long[][] arr = new long[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList() throws IOException {List<Long> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Long.parseLong(string));return list;}List<Integer> asIntList() throws IOException {List<Integer> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Integer.parseInt(string));return list;}}static class Reader { final private int BUFFER_SIZE = 1 << 16;private DataInputStream din;private byte[] buffer;private int bufferPointer, bytesRead;public Reader() {din = new DataInputStream(System.in);buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public Reader(String file_name) throws IOException {din = new DataInputStream(new FileInputStream(file_name));buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public String readLine() throws IOException {byte[] buf = new byte[64];int cnt = 0, c;while ((c = read()) != -1) {if (c == '\\n') break;buf[cnt++] = (byte) c;}return new String(buf, 0, cnt);}public int nextInt() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public long nextLong() throws IOException {long ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10L + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public double nextDouble() throws IOException {double ret = 0, div = 1;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (c == '.') while ((c = read()) >= '0' && c <= '9') ret += (c - '0') / (div *= 10);if (neg) return -ret;return ret;}private void fillBuffer() throws IOException {bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);if (bytesRead == -1) buffer[0] = -1;}private byte read() throws IOException {if (bufferPointer == bytesRead) fillBuffer();return buffer[bufferPointer++];}public char[] next() throws IOException {StringBuilder sb = new StringBuilder();byte c;while ((c = read()) <= ' ') ;do sb.append((char) c); while ((c = read()) > ' ');return sb.toString().toCharArray();}public int nextInt2() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public void close() throws IOException {if (din == null) return;din.close();}public int[] readIntArray(int n, int se, int e) throws IOException {int[] ar = new int[n];for (int i = se; i < e; ++i) ar[i] = s.nextInt();return ar;}public long[] readIntArrayLONG(int n, int se, int e) throws IOException {long[] ar = new long[n];for (int i = se; i < e; ++i) ar[i] = s.nextLong();return ar;}int[][] next2DInt(int n, int m, int se, int e) throws IOException {int[][] arr = new int[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int se, int e) throws IOException {long[][] arr = new long[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList(int n) throws IOException {List<Long> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextLong());return list;}List<Integer> asIntList(int n) throws IOException {List<Integer> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextInt());return list;}}\n    ^\nMain.java:124: error: illegal start of expression\n    static class FastReader { BufferedReader br;StringTokenizer st;public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));}String next() {while (st == null || !st.hasMoreElements()) try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();}return st.nextToken();}int nextInt() {return Integer.parseInt(next());}long nextLong() {return Long.parseLong(next());}double nextDouble() {return Double.parseDouble(next());}String nextLine() {String str = \"\";try {if (st.hasMoreTokens()) str = st.nextToken(\"\\n\"); else str = br.readLine();} catch (IOException e) {e.printStackTrace();}return str;}public int[] readIntArray(int n, int s, int e) {int[] ar = new int[n];for (int i = s; i < e; ++i) ar[i] = se.nextInt();return ar;}public long[] readIntArrayLONG(int n, int s, int e) {long[] ar = new long[n];for (int i = s; i < e; ++i) ar[i] = se.nextLong();return ar;}int[][] next2DInt(int n, int m, int s, int e) {int[][] arr = new int[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int s, int e) {long[][] arr = new long[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList() throws IOException {List<Long> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Long.parseLong(string));return list;}List<Integer> asIntList() throws IOException {List<Integer> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Integer.parseInt(string));return list;}}static class Reader { final private int BUFFER_SIZE = 1 << 16;private DataInputStream din;private byte[] buffer;private int bufferPointer, bytesRead;public Reader() {din = new DataInputStream(System.in);buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public Reader(String file_name) throws IOException {din = new DataInputStream(new FileInputStream(file_name));buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public String readLine() throws IOException {byte[] buf = new byte[64];int cnt = 0, c;while ((c = read()) != -1) {if (c == '\\n') break;buf[cnt++] = (byte) c;}return new String(buf, 0, cnt);}public int nextInt() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public long nextLong() throws IOException {long ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10L + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public double nextDouble() throws IOException {double ret = 0, div = 1;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (c == '.') while ((c = read()) >= '0' && c <= '9') ret += (c - '0') / (div *= 10);if (neg) return -ret;return ret;}private void fillBuffer() throws IOException {bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);if (bytesRead == -1) buffer[0] = -1;}private byte read() throws IOException {if (bufferPointer == bytesRead) fillBuffer();return buffer[bufferPointer++];}public char[] next() throws IOException {StringBuilder sb = new StringBuilder();byte c;while ((c = read()) <= ' ') ;do sb.append((char) c); while ((c = read()) > ' ');return sb.toString().toCharArray();}public int nextInt2() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public void close() throws IOException {if (din == null) return;din.close();}public int[] readIntArray(int n, int se, int e) throws IOException {int[] ar = new int[n];for (int i = se; i < e; ++i) ar[i] = s.nextInt();return ar;}public long[] readIntArrayLONG(int n, int se, int e) throws IOException {long[] ar = new long[n];for (int i = se; i < e; ++i) ar[i] = s.nextLong();return ar;}int[][] next2DInt(int n, int m, int se, int e) throws IOException {int[][] arr = new int[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int se, int e) throws IOException {long[][] arr = new long[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList(int n) throws IOException {List<Long> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextLong());return list;}List<Integer> asIntList(int n) throws IOException {List<Integer> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextInt());return list;}}\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n    ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n           ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                 ^\nMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                 ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                         ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                               ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                      ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                            ^\nMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                           ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                            ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                    ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                   ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                          ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                ^\nMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                    ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                     ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                             ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                     ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                           ^\nMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                               ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                       ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n    ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n           ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                 ^\nMain.java:129: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                    ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                     ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                        ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                               ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                     ^\nMain.java:129: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                      ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                       ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                        ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                               ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                     ^\nMain.java:129: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                     ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                      ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                       ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                              ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                    ^\nMain.java:129: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                      ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                       ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                          ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                 ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                       ^\nMain.java:129: error: ')' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                         ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                           ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                            ^\n97 errors\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:64: error: cannot find symbol\n        sum = Arrays.stream(weight).sum();\n                    ^\n  symbol:   method stream(long[])\n  location: class Arrays\nNote: Main.java uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n1 error\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:64: error: cannot find symbol\n        sum = Arrays.stream(weight).sum();\n                    ^\n  symbol:   method stream(long[])\n  location: class Arrays\nNote: Main.java uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n1 error\n"
                }
            }
        },
        "prompt_apr_6": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:64: error: cannot find symbol\n        sum = Arrays.stream(weight).sum();\n                    ^\n  symbol:   method stream(long[])\n  location: class Arrays\nMain.java:92: error: bad operand types for binary operator '+'\n            sum += dfs(next, dep + 1);            sum += weight[next];\n                ^\n  first type:  long\n  second type: void\nNote: Main.java uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n2 errors\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:94: error: ']' expected\n        child[cur] = sum;\n              ^\nMain.java:94: error: ';' expected\n        child[cur] = sum;\n                 ^\nMain.java:94: error: <identifier> expected\n        child[cur] = sum;\n                        ^\nMain.java:120: error: class, interface, or enum expected\n    static int[][] mv = new int[][]{{1,0},{-1,0},{0,1},{0,-1}};\n           ^\nMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                  ^\nMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                 ^\nMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                          ^\nMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                             ^\nMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                              ^\nMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                 ^\nMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                         ^\nMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                       ^\nMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                    ^\nMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                            ^\nMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                   ^\nMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^\nMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^\nMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ^\nMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^\nMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: class, interface, or enum expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                  ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                       ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                      ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                       ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                      ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                      ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                     ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                         ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                        ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                                           ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                                                          ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                                                                                                 ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                                                                                                                ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                                                                                                                                                        ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                                                                                                                                                                       ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                                                                                                                                                                                                            ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                                                                                                                                                                                                                           ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\nnMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\nnMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\nnMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\nnMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\nnMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\nnMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\nnMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\nnMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\nnMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^\nMain.java:129: error: class, interface, or enum expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\nn73 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:97: error: illegal start of expression\n    static class Point{\n    ^\nMain.java:107: error: illegal start of expression\n    static class Tri{\n    ^\nMain.java:120: error: illegal start of expression\n    static int[][] mv = new int[][]{{1,0},{-1,0},{0,1},{0,-1}};\n    ^\nMain.java:124: error: illegal start of expression\n    static class FastReader { BufferedReader br;StringTokenizer st;public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));}String next() {while (st == null || !st.hasMoreElements()) try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();}return st.nextToken();}int nextInt() {return Integer.parseInt(next());}long nextLong() {return Long.parseLong(next());}double nextDouble() {return Double.parseDouble(next());}String nextLine() {String str = \"\";try {if (st.hasMoreTokens()) str = st.nextToken(\"\\n\"); else str = br.readLine();} catch (IOException e) {e.printStackTrace();}return str;}public int[] readIntArray(int n, int s, int e) {int[] ar = new int[n];for (int i = s; i < e; ++i) ar[i] = se.nextInt();return ar;}public long[] readIntArrayLONG(int n, int s, int e) {long[] ar = new long[n];for (int i = s; i < e; ++i) ar[i] = se.nextLong();return ar;}int[][] next2DInt(int n, int m, int s, int e) {int[][] arr = new int[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int s, int e) {long[][] arr = new long[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList() throws IOException {List<Long> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Long.parseLong(string));return list;}List<Integer> asIntList() throws IOException {List<Integer> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Integer.parseInt(string));return list;}}static class Reader { final private int BUFFER_SIZE = 1 << 16;private DataInputStream din;private byte[] buffer;private int bufferPointer, bytesRead;public Reader() {din = new DataInputStream(System.in);buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public Reader(String file_name) throws IOException {din = new DataInputStream(new FileInputStream(file_name));buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public String readLine() throws IOException {byte[] buf = new byte[64];int cnt = 0, c;while ((c = read()) != -1) {if (c == '\\n') break;buf[cnt++] = (byte) c;}return new String(buf, 0, cnt);}public int nextInt() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public long nextLong() throws IOException {long ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10L + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public double nextDouble() throws IOException {double ret = 0, div = 1;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (c == '.') while ((c = read()) >= '0' && c <= '9') ret += (c - '0') / (div *= 10);if (neg) return -ret;return ret;}private void fillBuffer() throws IOException {bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);if (bytesRead == -1) buffer[0] = -1;}private byte read() throws IOException {if (bufferPointer == bytesRead) fillBuffer();return buffer[bufferPointer++];}public char[] next() throws IOException {StringBuilder sb = new StringBuilder();byte c;while ((c = read()) <= ' ') ;do sb.append((char) c); while ((c = read()) > ' ');return sb.toString().toCharArray();}public int nextInt2() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public void close() throws IOException {if (din == null) return;din.close();}public int[] readIntArray(int n, int se, int e) throws IOException {int[] ar = new int[n];for (int i = se; i < e; ++i) ar[i] = s.nextInt();return ar;}public long[] readIntArrayLONG(int n, int se, int e) throws IOException {long[] ar = new long[n];for (int i = se; i < e; ++i) ar[i] = s.nextLong();return ar;}int[][] next2DInt(int n, int m, int se, int e) throws IOException {int[][] arr = new int[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int se, int e) throws IOException {long[][] arr = new long[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList(int n) throws IOException {List<Long> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextLong());return list;}List<Integer> asIntList(int n) throws IOException {List<Integer> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextInt());return list;}}\n    ^\nMain.java:124: error: illegal start of expression\n    static class FastReader { BufferedReader br;StringTokenizer st;public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));}String next() {while (st == null || !st.hasMoreElements()) try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();}return st.nextToken();}int nextInt() {return Integer.parseInt(next());}long nextLong() {return Long.parseLong(next());}double nextDouble() {return Double.parseDouble(next());}String nextLine() {String str = \"\";try {if (st.hasMoreTokens()) str = st.nextToken(\"\\n\"); else str = br.readLine();} catch (IOException e) {e.printStackTrace();}return str;}public int[] readIntArray(int n, int s, int e) {int[] ar = new int[n];for (int i = s; i < e; ++i) ar[i] = se.nextInt();return ar;}public long[] readIntArrayLONG(int n, int s, int e) {long[] ar = new long[n];for (int i = s; i < e; ++i) ar[i] = se.nextLong();return ar;}int[][] next2DInt(int n, int m, int s, int e) {int[][] arr = new int[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int s, int e) {long[][] arr = new long[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList() throws IOException {List<Long> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Long.parseLong(string));return list;}List<Integer> asIntList() throws IOException {List<Integer> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Integer.parseInt(string));return list;}}static class Reader { final private int BUFFER_SIZE = 1 << 16;private DataInputStream din;private byte[] buffer;private int bufferPointer, bytesRead;public Reader() {din = new DataInputStream(System.in);buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public Reader(String file_name) throws IOException {din = new DataInputStream(new FileInputStream(file_name));buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public String readLine() throws IOException {byte[] buf = new byte[64];int cnt = 0, c;while ((c = read()) != -1) {if (c == '\\n') break;buf[cnt++] = (byte) c;}return new String(buf, 0, cnt);}public int nextInt() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public long nextLong() throws IOException {long ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10L + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public double nextDouble() throws IOException {double ret = 0, div = 1;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (c == '.') while ((c = read()) >= '0' && c <= '9') ret += (c - '0') / (div *= 10);if (neg) return -ret;return ret;}private void fillBuffer() throws IOException {bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);if (bytesRead == -1) buffer[0] = -1;}private byte read() throws IOException {if (bufferPointer == bytesRead) fillBuffer();return buffer[bufferPointer++];}public char[] next() throws IOException {StringBuilder sb = new StringBuilder();byte c;while ((c = read()) <= ' ') ;do sb.append((char) c); while ((c = read()) > ' ');return sb.toString().toCharArray();}public int nextInt2() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public void close() throws IOException {if (din == null) return;din.close();}public int[] readIntArray(int n, int se, int e) throws IOException {int[] ar = new int[n];for (int i = se; i < e; ++i) ar[i] = s.nextInt();return ar;}public long[] readIntArrayLONG(int n, int se, int e) throws IOException {long[] ar = new long[n];for (int i = se; i < e; ++i) ar[i] = s.nextLong();return ar;}int[][] next2DInt(int n, int m, int se, int e) throws IOException {int[][] arr = new int[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int se, int e) throws IOException {long[][] arr = new long[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList(int n) throws IOException {List<Long> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextLong());return list;}List<Integer> asIntList(int n) throws IOException {List<Integer> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextInt());return list;}}\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n    ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n           ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                 ^\nMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                 ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                         ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                               ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                      ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                            ^\nMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                           ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                            ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                    ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                   ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                          ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                ^\nMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                    ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                     ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                             ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                     ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                           ^\nMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                               ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                       ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^\nMain.java:126: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ^\nMain.java:126: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n    ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n           ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                 ^\nMain.java:129: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                    ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                     ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                        ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                               ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                     ^\nMain.java:129: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                      ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                       ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                        ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                               ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                     ^\nMain.java:129: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                     ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                      ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                       ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                              ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                    ^\nMain.java:129: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                      ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                       ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                          ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                 ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                       ^\nMain.java:129: error: ')' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                         ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                           ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                            ^\n97 errors\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:97: error: illegal start of expression\n    static class Point{\n    ^\nMain.java:107: error: illegal start of expression\n    static class Tri{\n    ^\nMain.java:120: error: illegal start of expression\n    static int[][] mv = new int[][]{{1,0},{-1,0},{0,1},{0,-1}};\n    ^\nMain.java:124: error: illegal start of expression\n    static class FastReader { BufferedReader br;StringTokenizer st;public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));}String next() {while (st == null || !st.hasMoreElements()) try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();}return st.nextToken();}int nextInt() {return Integer.parseInt(next());}long nextLong() {return Long.parseLong(next());}double nextDouble() {return Double.parseDouble(next());}String nextLine() {String str = \"\";try {if (st.hasMoreTokens()) str = st.nextToken(\"\\n\"); else str = br.readLine();} catch (IOException e) {e.printStackTrace();}return str;}public int[] readIntArray(int n, int s, int e) {int[] ar = new int[n];for (int i = s; i < e; ++i) ar[i] = se.nextInt();return ar;}public long[] readIntArrayLONG(int n, int s, int e) {long[] ar = new long[n];for (int i = s; i < e; ++i) ar[i] = se.nextLong();return ar;}int[][] next2DInt(int n, int m, int s, int e) {int[][] arr = new int[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int s, int e) {long[][] arr = new long[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList() throws IOException {List<Long> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Long.parseLong(string));return list;}List<Integer> asIntList() throws IOException {List<Integer> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Integer.parseInt(string));return list;}}static class Reader { final private int BUFFER_SIZE = 1 << 16;private DataInputStream din;private byte[] buffer;private int bufferPointer, bytesRead;public Reader() {din = new DataInputStream(System.in);buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public Reader(String file_name) throws IOException {din = new DataInputStream(new FileInputStream(file_name));buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public String readLine() throws IOException {byte[] buf = new byte[64];int cnt = 0, c;while ((c = read()) != -1) {if (c == '\\n') break;buf[cnt++] = (byte) c;}return new String(buf, 0, cnt);}public int nextInt() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public long nextLong() throws IOException {long ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10L + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public double nextDouble() throws IOException {double ret = 0, div = 1;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (c == '.') while ((c = read()) >= '0' && c <= '9') ret += (c - '0') / (div *= 10);if (neg) return -ret;return ret;}private void fillBuffer() throws IOException {bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);if (bytesRead == -1) buffer[0] = -1;}private byte read() throws IOException {if (bufferPointer == bytesRead) fillBuffer();return buffer[bufferPointer++];}public char[] next() throws IOException {StringBuilder sb = new StringBuilder();byte c;while ((c = read()) <= ' ') ;do sb.append((char) c); while ((c = read()) > ' ');return sb.toString().toCharArray();}public int nextInt2() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public void close() throws IOException {if (din == null) return;din.close();}public int[] readIntArray(int n, int se, int e) throws IOException {int[] ar = new int[n];for (int i = se; i < e; ++i) ar[i] = s.nextInt();return ar;}public long[] readIntArrayLONG(int n, int se, int e) throws IOException {long[] ar = new long[n];for (int i = se; i < e; ++i) ar[i] = s.nextLong();return ar;}int[][] next2DInt(int n, int m, int se, int e) throws IOException {int[][] arr = new int[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int se, int e) throws IOException {long[][] arr = new long[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList(int n) throws IOException {List<Long> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextLong());return list;}List<Integer> asIntList(int n) throws IOException {List<Integer> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextInt());return list;}}\n    ^\nMain.java:124: error: illegal start of expression\n    static class FastReader { BufferedReader br;StringTokenizer st;public FastReader() {br = new BufferedReader(new InputStreamReader(System.in));}String next() {while (st == null || !st.hasMoreElements()) try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();}return st.nextToken();}int nextInt() {return Integer.parseInt(next());}long nextLong() {return Long.parseLong(next());}double nextDouble() {return Double.parseDouble(next());}String nextLine() {String str = \"\";try {if (st.hasMoreTokens()) str = st.nextToken(\"\\n\"); else str = br.readLine();} catch (IOException e) {e.printStackTrace();}return str;}public int[] readIntArray(int n, int s, int e) {int[] ar = new int[n];for (int i = s; i < e; ++i) ar[i] = se.nextInt();return ar;}public long[] readIntArrayLONG(int n, int s, int e) {long[] ar = new long[n];for (int i = s; i < e; ++i) ar[i] = se.nextLong();return ar;}int[][] next2DInt(int n, int m, int s, int e) {int[][] arr = new int[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int s, int e) {long[][] arr = new long[n][];for (int i = s; i < e; i++) arr[i] = se.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList() throws IOException {List<Long> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Long.parseLong(string));return list;}List<Integer> asIntList() throws IOException {List<Integer> list = new ArrayList<>();String s = se.next();String[] str = s.split(\" \");for (String string : str) list.add(Integer.parseInt(string));return list;}}static class Reader { final private int BUFFER_SIZE = 1 << 16;private DataInputStream din;private byte[] buffer;private int bufferPointer, bytesRead;public Reader() {din = new DataInputStream(System.in);buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public Reader(String file_name) throws IOException {din = new DataInputStream(new FileInputStream(file_name));buffer = new byte[BUFFER_SIZE];bufferPointer = bytesRead = 0;}public String readLine() throws IOException {byte[] buf = new byte[64];int cnt = 0, c;while ((c = read()) != -1) {if (c == '\\n') break;buf[cnt++] = (byte) c;}return new String(buf, 0, cnt);}public int nextInt() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public long nextLong() throws IOException {long ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10L + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public double nextDouble() throws IOException {double ret = 0, div = 1;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (c == '.') while ((c = read()) >= '0' && c <= '9') ret += (c - '0') / (div *= 10);if (neg) return -ret;return ret;}private void fillBuffer() throws IOException {bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);if (bytesRead == -1) buffer[0] = -1;}private byte read() throws IOException {if (bufferPointer == bytesRead) fillBuffer();return buffer[bufferPointer++];}public char[] next() throws IOException {StringBuilder sb = new StringBuilder();byte c;while ((c = read()) <= ' ') ;do sb.append((char) c); while ((c = read()) > ' ');return sb.toString().toCharArray();}public int nextInt2() throws IOException {int ret = 0;byte c = read();while (c <= ' ') c = read();boolean neg = (c == '-');if (neg) c = read();do ret = ret * 10 + c - '0'; while ((c = read()) >= '0' && c <= '9');if (neg) return -ret;return ret;}public void close() throws IOException {if (din == null) return;din.close();}public int[] readIntArray(int n, int se, int e) throws IOException {int[] ar = new int[n];for (int i = se; i < e; ++i) ar[i] = s.nextInt();return ar;}public long[] readIntArrayLONG(int n, int se, int e) throws IOException {long[] ar = new long[n];for (int i = se; i < e; ++i) ar[i] = s.nextLong();return ar;}int[][] next2DInt(int n, int m, int se, int e) throws IOException {int[][] arr = new int[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArray(m, 0, m);return arr;}long[][] next2DLong(int n, int m, int se, int e) throws IOException {long[][] arr = new long[n][];for (int i = se; i < e; i++) arr[i] = s.readIntArrayLONG(m, 0, m);return arr;}List<Long> asLongList(int n) throws IOException {List<Long> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextLong());return list;}List<Integer> asIntList(int n) throws IOException {List<Integer> list = new ArrayList<>(n);for (int i = 0; i < n; i++) list.add(s.nextInt());return list;}}\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n    ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n           ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                 ^\nMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                 ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                         ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                               ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                      ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                            ^\nMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                           ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                            ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                    ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                   ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                          ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                ^\nMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                    ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                     ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                             ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                     ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                           ^\nMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                               ^\nMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                       ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:126: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^\nMain.java:126: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ^\nMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^\nMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: <identifier> expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: not a statement\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^\nMain.java:126: error: illegal start of expression\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: '.class' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:126: error: ';' expected\n    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }    public static long LCM(long u, long v) {        return (u / gcd(u, v)) * v;    }    public static void debugL(long[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    public static void debugI(int[] a, long s) {        for (long i = s; i < a.length; i++) {            System.out.print(a[(int) i] + \" \");        }    }    static int max3(int a,int b,int c){        return max(max(a,b),c);    }    static long max3(long a,long b,long c){        return max(max(a,b),c);    }    static int min3(int a,int b,int c){        return min(min(a,b),c);    }    static long min3(long a,long b,long c){        return min(min(a,b),c);    }    public static long sumofarray(int[] arr) {        long n = arr.length, sum = 0;        for (long i = 0; i < n; i++) sum += arr[(int) i];        return sum;    }    public static long power(long x, long y, long p) {        long res = 1;        x = x % p;        while (y > 0) {            if (y % 2 == 1) res = (res * x) % p;            y = y >> 1;            x = (x * x) % p;        }        return res;    }    public static String numToBinary(long num) {        String str = \"\";        while (num > 0) {            if ((num & 1) == 1) str += '1'; else str += '0';            num >>= 1;        }        return str;    }\nnMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n    ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n           ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                 ^\nMain.java:129: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                    ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                     ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                        ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                               ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                     ^\nMain.java:129: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                      ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                       ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                        ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                               ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                     ^\nMain.java:129: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                     ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                      ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                       ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                              ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                    ^\nMain.java:129: error: '.class' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                      ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                       ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                          ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                 ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                       ^\nMain.java:129: error: ')' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                         ^\nMain.java:129: error: illegal start of expression\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                           ^\nMain.java:129: error: ';' expected\n    public static void println(long c) {out.println(c);}public static void print(long c) {out.print(c);}public static void print(int c) {out.print(c);}public static void println(int x) {out.println(x);}public static void print(String s) {out.print(s);}public static void println(String s) {out.println(s);}public static void println(boolean b) {out.println(b);}public static void println(char x) {out.println(x);}public static void reverseArray(int[] a) {int n = a.length, arr[] = new int[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }public static void reverseArray(long[] a) {int n = a.length; long arr[] = new long[n];for (int i = 0; i < n; i++) arr[i] = a[n - i - 1]; for (int i = 0; i < n; i++) a[i] = arr[i]; }\n                                                                                                                                                                                                                                            ^\n97 errors\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:64: error: cannot find symbol\n        sum = Arrays.stream(weight).sum();\n                    ^\n  symbol:   method stream(long[])\n  location: class Arrays\nMain.java:91: error: bad operand types for binary operator '+'\nsum += dfs(next, dep + 1);            dfs(next,dep+1);\n    ^\n  first type:  long\n  second type: void\nNote: Main.java uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n2 errors\n"
                }
            }
        }
    }
}