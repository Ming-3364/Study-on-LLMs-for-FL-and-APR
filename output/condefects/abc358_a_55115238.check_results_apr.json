{
    "overall_status": {
        "prompt_apr_1": {
            "ernie-3.5-128k": "Fail some tests",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Fail some tests",
            "gpt-4o-mini": "Fail some tests",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_2": {
            "ernie-3.5-128k": "Fail some tests",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Fail some tests",
            "gpt-4o-mini": "Fail some tests",
            "deepseek-chat": "Pass all tests"
        },
        "prompt_apr_3": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Fail some tests",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_4": {
            "ernie-3.5-128k": "Fail some tests",
            "qwen-turbo": "Fail some tests",
            "doubao-pro-4k": "Fail some tests",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Pass all tests"
        },
        "prompt_apr_5": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Fail some tests",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_6": {
            "ernie-3.5-128k": "Fail some tests",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Fail some tests"
        }
    },
    "check_results_list": {
        "prompt_apr_1": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_random_04",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_05",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_03",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:4: error: illegal character: \\96\n```java\n^\nMain.java:4: error: illegal character: \\96\n```java\n ^\nMain.java:4: error: illegal character: \\96\n```java\n  ^\nMain.java:16: error: illegal character: \\96\n``` \n^\nMain.java:16: error: illegal character: \\96\n``` \n ^\nMain.java:16: error: illegal character: \\96\n``` \n  ^\nMain.java:18: error: ';' expected\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                ^\nMain.java:18: error: <identifier> expected\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                     ^\nMain.java:18: error: ';' expected\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                    ^\nMain.java:18: error: ';' expected\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                         ^\nMain.java:18: error: ';' expected\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                                              ^\nMain.java:18: error: ';' expected\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                                                            ^\nMain.java:18: error: illegal character: \\96\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                                                                           ^\nMain.java:18: error: illegal character: \\96\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                                                                             ^\nMain.java:18: error: illegal character: \\96\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                                                                                   ^\nMain.java:18: error: illegal character: \\96\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                                                                                     ^\nMain.java:18: error: illegal start of type\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                                                                                      ^\nMain.java:18: error: ';' expected\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                                                                                           ^\nMain.java:18: error: ';' expected\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                                                                                                               ^\nMain.java:18: error: ';' expected\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                                                                                                                            ^\nMain.java:18: error: <identifier> expected\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                                                                                                                                   ^\nMain.java:18: error: illegal character: \\96\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                                                                                                                                       ^\nMain.java:18: error: illegal character: \\96\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                                                                                                                                         ^\nMain.java:18: error: illegal character: \\96\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                                                                                                                                                       ^\nMain.java:18: error: illegal character: \\96\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                                                                                                                                                         ^\nMain.java:18: error: illegal start of type\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                                                                                                                                                          ^\nMain.java:18: error: <identifier> expected\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                                                                                                                                                           ^\nMain.java:18: error: reached end of file while parsing\nThe condition on line 6 was checking for specific strings \"AtCoder\" instead of comparing the input strings `S` and `T`. The corrected condition now properly checks if `S` is equal to `T`.}\n                                                                                                                                                                                            ^\nMain.java:19: error: reached end of file while parsing\n29 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_random_04",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_05",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_03",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_random_04",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_05",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_03",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:16: error: ';' expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n       ^\nMain.java:16: error: ']' expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                 ^\nMain.java:16: error: illegal start of type\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                  ^\nMain.java:16: error: ';' expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                       ^\nMain.java:16: error: ';' expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                ^\nMain.java:16: error: ';' expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                              ^\nMain.java:16: error: <identifier> expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                       ^\nMain.java:16: error: illegal character: \\96\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                ^\nMain.java:16: error: illegal character: \\96\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                  ^\nMain.java:16: error: illegal character: \\96\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                        ^\nMain.java:16: error: illegal character: \\96\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                          ^\nMain.java:16: error: ';' expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                      ^\nMain.java:16: error: <identifier> expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                         ^\nMain.java:16: error: illegal start of type\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                   ^\nMain.java:16: error: ';' expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                   ^\nMain.java:16: error: ';' expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                          ^\nMain.java:16: error: <identifier> expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                  ^\nMain.java:16: error: ';' expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                      ^\nMain.java:16: error: ';' expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                                 ^\nMain.java:16: error: ';' expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                                             ^\nMain.java:16: error: ';' expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                                                              ^\nMain.java:16: error: ';' expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                                                                          ^\nMain.java:16: error: illegal character: \\96\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                                                                              ^\nMain.java:16: error: illegal character: \\96\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                                                                                ^\nMain.java:16: error: <identifier> expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                                                                                    ^\nMain.java:16: error: illegal character: \\96\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                                                                                                   ^\nMain.java:16: error: illegal character: \\96\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                                                                                                     ^\nMain.java:16: error: <identifier> expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                                                                                                         ^\nMain.java:16: error: illegal start of type\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                                                                                                                ^\nMain.java:16: error: ';' expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                                                                                                                      ^\nMain.java:16: error: ';' expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                                                                                                                               ^\nMain.java:16: error: ';' expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                                                                                                                                            ^\nMain.java:16: error: ';' expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                                                                                                                                                     ^\nMain.java:16: error: <identifier> expected\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                                                                                                                                                            ^\nMain.java:16: error: reached end of file while parsing\nThe bug in line [6] was that the condition was checking if both `S` and `T` were equal to \"AtCoder\". However, based on the context, it seems that the correct condition should be checking if `S` is \"AtCoder\" and `T` is \"Land\". This has been corrected in the code above.}\n                                                                                                                                                                                                                                                                             ^\nMain.java:17: error: reached end of file while parsing\n36 errors\n"
                }
            }
        },
        "prompt_apr_2": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_random_04",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_05",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_00",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_03",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_02",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:4: error: illegal character: \\96\n```java\n^\nMain.java:4: error: illegal character: \\96\n```java\n ^\nMain.java:4: error: illegal character: \\96\n```java\n  ^\nMain.java:16: error: illegal character: \\96\n```}\n^\nMain.java:16: error: illegal character: \\96\n```}\n ^\nMain.java:16: error: illegal character: \\96\n```}\n  ^\nMain.java:17: error: reached end of file while parsing\n7 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_random_04",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_05",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_03",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_random_04",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_05",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_03",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_random_04",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_05",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_03",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        }
                    ]
                }
            }
        },
        "prompt_apr_3": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:9: error: reached end of file while parsing\n        if (S.equals(\"AtCoder\") && T.equals(\"AtCoder\")) {}\n                                                          ^\n1 error\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:4: error: illegal character: \\96\n```java\n^\nMain.java:4: error: illegal character: \\96\n```java\n ^\nMain.java:4: error: illegal character: \\96\n```java\n  ^\nMain.java:11: error: illegal character: \\96\n```}\n^\nMain.java:11: error: illegal character: \\96\n```}\n ^\nMain.java:11: error: illegal character: \\96\n```}\n  ^\nMain.java:11: error: reached end of file while parsing\n```}\n    ^\n7 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_random_04",
                            "returncode": null,
                            "stdout": "",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_05",
                            "returncode": null,
                            "stdout": "",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_00",
                            "returncode": null,
                            "stdout": "",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_03",
                            "returncode": null,
                            "stdout": "",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_01",
                            "returncode": null,
                            "stdout": "",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_00",
                            "returncode": null,
                            "stdout": "",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_02",
                            "returncode": null,
                            "stdout": "",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_01",
                            "returncode": null,
                            "stdout": "",
                            "stderr": ""
                        }
                    ]
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:9: error: reached end of file while parsing\n        if (S.equals(\"AtCoder\") && T.equals(\"AtCoder\")) {}\n                                                          ^\n1 error\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:4: error: illegal character: \\96\n```java\n^\nMain.java:4: error: illegal character: \\96\n```java\n ^\nMain.java:4: error: illegal character: \\96\n```java\n  ^\nMain.java:11: error: illegal character: \\96\n```}\n^\nMain.java:11: error: illegal character: \\96\n```}\n ^\nMain.java:11: error: illegal character: \\96\n```}\n  ^\nMain.java:11: error: reached end of file while parsing\n```}\n    ^\n7 errors\n"
                }
            }
        },
        "prompt_apr_4": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_random_04",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_05",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_03",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_random_04",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_05",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_00",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_03",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_01",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_00",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_02",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_01",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_random_04",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_05",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_03",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:9: error: ';' expected\nS.equalsIgnoreCase(T)            System.out.println(\"Yes\");\n                     ^\nMain.java:10: error: illegal start of type\n        }else {\n         ^\nMain.java:10: error: ';' expected\n        }else {\n             ^\nMain.java:11: error: <identifier> expected\n            System.out.println(\"No\");\n                              ^\nMain.java:11: error: illegal start of type\n            System.out.println(\"No\");\n                               ^\nMain.java:13: error: class, interface, or enum expected\n    }\n    ^\n6 errors\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_random_04",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_05",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_03",
                            "returncode": null,
                            "stdout": "Yes\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        }
                    ]
                }
            }
        },
        "prompt_apr_5": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:14: error: reached end of file while parsing\n}\n ^\n1 error\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:14: error: reached end of file while parsing\n}\n ^\n1 error\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:14: error: reached end of file while parsing\n}\n ^\n1 error\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_random_04",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_05",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_03",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:14: error: reached end of file while parsing\n}\n ^\n1 error\n"
                }
            }
        },
        "prompt_apr_6": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_random_04",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_05",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_03",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:8: error: illegal start of type\n}        if (S.equals(\"AtCoder\") && T.equals(\"AtCoder\")) {\n         ^\nMain.java:8: error: <identifier> expected\n}        if (S.equals(\"AtCoder\") && T.equals(\"AtCoder\")) {\n                     ^\nMain.java:8: error: ';' expected\n}        if (S.equals(\"AtCoder\") && T.equals(\"AtCoder\")) {\n                      ^\nMain.java:8: error: illegal start of type\n}        if (S.equals(\"AtCoder\") && T.equals(\"AtCoder\")) {\n                               ^\nMain.java:8: error: <identifier> expected\n}        if (S.equals(\"AtCoder\") && T.equals(\"AtCoder\")) {\n                                ^\nMain.java:8: error: ';' expected\n}        if (S.equals(\"AtCoder\") && T.equals(\"AtCoder\")) {\n                                   ^\nMain.java:8: error: illegal start of type\n}        if (S.equals(\"AtCoder\") && T.equals(\"AtCoder\")) {\n                                     ^\nMain.java:8: error: illegal start of type\n}        if (S.equals(\"AtCoder\") && T.equals(\"AtCoder\")) {\n                                             ^\nMain.java:8: error: ';' expected\n}        if (S.equals(\"AtCoder\") && T.equals(\"AtCoder\")) {\n                                                       ^\nMain.java:10: error: illegal start of type\n        }else {\n         ^\nMain.java:10: error: ';' expected\n        }else {\n             ^\nMain.java:11: error: <identifier> expected\n            System.out.println(\"No\");\n                              ^\nMain.java:11: error: illegal start of type\n            System.out.println(\"No\");\n                               ^\nMain.java:13: error: class, interface, or enum expected\n    }\n    ^\n14 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:13: error: reached end of file while parsing\n}\n ^\n1 error\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:14: error: reached end of file while parsing\n}\n ^\n1 error\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "01_random_04",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_05",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_03",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_00",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_random_02",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_handmade_01",
                            "returncode": null,
                            "stdout": "No\n",
                            "stderr": ""
                        }
                    ]
                }
            }
        }
    }
}