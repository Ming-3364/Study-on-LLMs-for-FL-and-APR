[
    {
        "buggy_file": "src/java/org/apache/commons/jxpath/ri/compiler/CoreFunction.java",
        "buggy_method": {
            "method_name": "functionCeiling",
            "method_body": "protected Object functionCeiling(EvalContext context) {\n        assertArgCount(1);\n        double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n        return new Double(Math.ceil(v));\n    }",
            "start_line": 659,
            "end_line": 663,
            "buggy_lines": [
                658
            ]
        },
        "buggy_method_src": "protected Object functionCeiling(EvalContext context) {\n        assertArgCount(1);\n        double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n        return new Double(Math.ceil(v));\n    }",
        "test_stack": "org.apache.commons.jxpath.ri.compiler.CoreFunctionTest::testCoreFunctions\njunit.framework.AssertionFailedError: Evaluating <round('NaN')> expected:<NaN> but was:<0.0>\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.failNotEquals(Assert.java:329)\n\tat junit.framework.Assert.assertEquals(Assert.java:78)\n\tat junit.framework.TestCase.assertEquals(TestCase.java:244)\n\tat org.apache.commons.jxpath.JXPathTestCase.assertXPathValue(JXPathTestCase.java:55)\n\tat org.apache.commons.jxpath.ri.compiler.CoreFunctionTest.testCoreFunctions(CoreFunctionTest.java:126)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n",
        "test_assert": "assertXPathValue(context, \"round('NaN')\", new Double(Double.NaN));\n",
        "buggy_lines_in_method": [
            0
        ],
        "buggy_statements": [
            "    }"
        ],
        "buggy_method_src_endswith_buggy_statement": ""
    },
    {
        "buggy_file": "src/java/org/apache/commons/jxpath/ri/compiler/CoreFunction.java",
        "buggy_method": {
            "method_name": "functionRound",
            "method_body": "protected Object functionRound(EvalContext context) {\n        assertArgCount(1);\n        double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n        return new Double(Math.round(v));\n    }",
            "start_line": 665,
            "end_line": 669,
            "buggy_lines": [
                667
            ]
        },
        "buggy_method_src": "protected Object functionRound(EvalContext context) {\n        assertArgCount(1);\n        double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n        return new Double(Math.round(v));\n    }",
        "test_stack": "org.apache.commons.jxpath.ri.compiler.CoreFunctionTest::testCoreFunctions\njunit.framework.AssertionFailedError: Evaluating <round('NaN')> expected:<NaN> but was:<0.0>\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.failNotEquals(Assert.java:329)\n\tat junit.framework.Assert.assertEquals(Assert.java:78)\n\tat junit.framework.TestCase.assertEquals(TestCase.java:244)\n\tat org.apache.commons.jxpath.JXPathTestCase.assertXPathValue(JXPathTestCase.java:55)\n\tat org.apache.commons.jxpath.ri.compiler.CoreFunctionTest.testCoreFunctions(CoreFunctionTest.java:126)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n",
        "test_assert": "assertXPathValue(context, \"round('NaN')\", new Double(Double.NaN));\n",
        "buggy_lines_in_method": [
            3
        ],
        "buggy_statements": [
            "        double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));"
        ],
        "buggy_method_src_endswith_buggy_statement": "protected Object functionRound(EvalContext context) {\n        assertArgCount(1);\n        double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));"
    },
    {
        "buggy_file": "src/java/org/apache/commons/jxpath/ri/compiler/CoreFunction.java",
        "buggy_method": {
            "method_name": "functionFormatNumber",
            "method_body": "private Object functionFormatNumber(EvalContext context) {\n        int ac = getArgumentCount();\n        if (ac != 2 && ac != 3) {\n            assertArgCount(2);\n        }\n\n        double number =\n            InfoSetUtil.doubleValue(getArg1().computeValue(context));\n        String pattern =\n            InfoSetUtil.stringValue(getArg2().computeValue(context));\n\n        DecimalFormatSymbols symbols = null;\n        if (ac == 3) {\n            String symbolsName =\n                InfoSetUtil.stringValue(getArg3().computeValue(context));\n            symbols =\n                context.getJXPathContext().getDecimalFormatSymbols(symbolsName);\n        }\n        else {\n            NodePointer pointer = context.getCurrentNodePointer();\n            Locale locale;\n            if (pointer != null) {\n                locale = pointer.getLocale();\n            }\n            else {\n                locale = context.getJXPathContext().getLocale();\n            }\n            symbols = new DecimalFormatSymbols(locale);\n        }\n        \n        DecimalFormat format = (DecimalFormat) NumberFormat.getInstance();\n        format.setDecimalFormatSymbols(symbols);\n        format.applyLocalizedPattern(pattern);\n        return format.format(number);\n    }",
            "start_line": 671,
            "end_line": 705,
            "buggy_lines": [
                676
            ]
        },
        "buggy_method_src": "private Object functionFormatNumber(EvalContext context) {\n        int ac = getArgumentCount();\n        if (ac != 2 && ac != 3) {\n            assertArgCount(2);\n        }\n\n        double number =\n            InfoSetUtil.doubleValue(getArg1().computeValue(context));\n        String pattern =\n            InfoSetUtil.stringValue(getArg2().computeValue(context));\n\n        DecimalFormatSymbols symbols = null;\n        if (ac == 3) {\n            String symbolsName =\n                InfoSetUtil.stringValue(getArg3().computeValue(context));\n            symbols =\n                context.getJXPathContext().getDecimalFormatSymbols(symbolsName);\n        }\n        else {\n            NodePointer pointer = context.getCurrentNodePointer();\n            Locale locale;\n            if (pointer != null) {\n                locale = pointer.getLocale();\n            }\n            else {\n                locale = context.getJXPathContext().getLocale();\n            }\n            symbols = new DecimalFormatSymbols(locale);\n        }\n        \n        DecimalFormat format = (DecimalFormat) NumberFormat.getInstance();\n        format.setDecimalFormatSymbols(symbols);\n        format.applyLocalizedPattern(pattern);\n        return format.format(number);\n    }",
        "test_stack": "org.apache.commons.jxpath.ri.compiler.CoreFunctionTest::testCoreFunctions\njunit.framework.AssertionFailedError: Evaluating <round('NaN')> expected:<NaN> but was:<0.0>\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.failNotEquals(Assert.java:329)\n\tat junit.framework.Assert.assertEquals(Assert.java:78)\n\tat junit.framework.TestCase.assertEquals(TestCase.java:244)\n\tat org.apache.commons.jxpath.JXPathTestCase.assertXPathValue(JXPathTestCase.java:55)\n\tat org.apache.commons.jxpath.ri.compiler.CoreFunctionTest.testCoreFunctions(CoreFunctionTest.java:126)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n",
        "test_assert": "assertXPathValue(context, \"round('NaN')\", new Double(Double.NaN));\n",
        "buggy_lines_in_method": [
            6
        ],
        "buggy_statements": [
            ""
        ],
        "buggy_method_src_endswith_buggy_statement": "private Object functionFormatNumber(EvalContext context) {\n        int ac = getArgumentCount();\n        if (ac != 2 && ac != 3) {\n            assertArgCount(2);\n        }\n"
    }
]