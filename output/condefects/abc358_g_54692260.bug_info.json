[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "main",
            "method_body": "public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        int h = sc.nextInt();\n        int w = sc.nextInt();\n        int k = sc.nextInt();\n        int sx = sc.nextInt();\n        sx -= 1;\n        int sy = sc.nextInt();\n        sy -= 1;\n        long res = 0;\n        /*\n        \u5c3d\u53ef\u80fd\u5728 k \u6b65\u4ee5\u5185\u8d70\u5230\u5c3d\u53ef\u80fd\u5927\u7684\u683c\u5b50\uff0c\u5982\u679c\u6b65\u6570\u8fd8\u6709\u5269\u4f59\u5c31\u4e00\u76f4\u505c\u7559\u5728\u539f\u5730\uff0c\u5bb9\u6613\u60f3\u5230\u5728\u5230\u8fbe\u6700\u5927\u503c\u7684\u683c\u5b50\u4e4b\u524d\u4e0d\u4f1a\u5728\u8def\u5f84\u4e0a\u67d0\u4e2a\u683c\u5b50\u505a\u505c\u7559\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u66f4\u52a3\n        \u8bb0 dp[i][j][l] \u8868\u793a\u5230 (i,j) \u4e3a\u6b62\u5df2\u7ecf\u8d70\u4e86l\u6b65\u65f6\u7684\u6700\u5927\u6109\u60a6\u503c\n         */\n        int move = Math.min(k+1,h*w+1);\n        long[][][] dp = new long[h][w][move];\n        for(int x = 0;x < move;x++) {\n            for (int i = 0; i < h; i++) {\n                for (int j = 0; j < w; j++) {\n                    dp[i][j][x] = Long.MIN_VALUE;\n                }\n            }\n        }\n        dp[sx][sy][0] = 0;\n        long[][] grid = new long[h][w];\n        for (int i = 0; i < h; i++) {\n            for(int j = 0;j < w;j++) {\n                grid[i][j] = sc.nextLong();\n            }\n        }\n        int[][] direction = {{1,0},{-1,0},{0,1},{0,-1}};\n        for(int x = 1;x < move;x++){\n            for(int i = 0; i < h;i++){\n                for(int j = 0;j < w;j++){\n                    for(int m = 0; m < 4;m++){\n                        int x1 = direction[m][0] + i;\n                        int y1 = direction[m][1] + j;\n                        if (x1 >= 0 && x1 < h && y1 >=0 && y1 < w){\n                            dp[x1][y1][x] = Math.max(dp[x1][y1][x],dp[i][j][x-1] + grid[x1][y1]);\n                        }\n                    }\n\n                }\n            }\n        }\n        for(int i = 0; i < h;i++){\n            for(int j = 0;j < w;j++){\n                for(int x = 1;x < move;x++){\n                    res = Math.max(res,dp[i][j][x]);\n                    int diff = k - x;\n                    if (diff > 0){\n                        res = Math.max(res, dp[i][j][x] + (long) diff * grid[i][j]);\n                    }\n                }\n            }\n        }\n        // Arrays.sort(arr);\n        System.out.println(res);\n        sc.close();\n    }\n}",
            "start_line": 4,
            "end_line": 63
        },
        "buggy_method_src": "public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        int h = sc.nextInt();\n        int w = sc.nextInt();\n        int k = sc.nextInt();\n        int sx = sc.nextInt();\n        sx -= 1;\n        int sy = sc.nextInt();\n        sy -= 1;\n        long res = 0;\n        /*\n        \u5c3d\u53ef\u80fd\u5728 k \u6b65\u4ee5\u5185\u8d70\u5230\u5c3d\u53ef\u80fd\u5927\u7684\u683c\u5b50\uff0c\u5982\u679c\u6b65\u6570\u8fd8\u6709\u5269\u4f59\u5c31\u4e00\u76f4\u505c\u7559\u5728\u539f\u5730\uff0c\u5bb9\u6613\u60f3\u5230\u5728\u5230\u8fbe\u6700\u5927\u503c\u7684\u683c\u5b50\u4e4b\u524d\u4e0d\u4f1a\u5728\u8def\u5f84\u4e0a\u67d0\u4e2a\u683c\u5b50\u505a\u505c\u7559\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u66f4\u52a3\n        \u8bb0 dp[i][j][l] \u8868\u793a\u5230 (i,j) \u4e3a\u6b62\u5df2\u7ecf\u8d70\u4e86l\u6b65\u65f6\u7684\u6700\u5927\u6109\u60a6\u503c\n         */\n        int move = Math.min(k+1,h*w+1);\n        long[][][] dp = new long[h][w][move];\n        for(int x = 0;x < move;x++) {\n            for (int i = 0; i < h; i++) {\n                for (int j = 0; j < w; j++) {\n                    dp[i][j][x] = Long.MIN_VALUE;\n                }\n            }\n        }\n        dp[sx][sy][0] = 0;\n        long[][] grid = new long[h][w];\n        for (int i = 0; i < h; i++) {\n            for(int j = 0;j < w;j++) {\n                grid[i][j] = sc.nextLong();\n            }\n        }\n        int[][] direction = {{1,0},{-1,0},{0,1},{0,-1}};\n        for(int x = 1;x < move;x++){\n            for(int i = 0; i < h;i++){\n                for(int j = 0;j < w;j++){\n                    for(int m = 0; m < 4;m++){\n                        int x1 = direction[m][0] + i;\n                        int y1 = direction[m][1] + j;\n                        if (x1 >= 0 && x1 < h && y1 >=0 && y1 < w){\n                            dp[x1][y1][x] = Math.max(dp[x1][y1][x],dp[i][j][x-1] + grid[x1][y1]);\n                        }\n                    }\n\n                }\n            }\n        }\n        for(int i = 0; i < h;i++){\n            for(int j = 0;j < w;j++){\n                for(int x = 1;x < move;x++){\n                    res = Math.max(res,dp[i][j][x]);\n                    int diff = k - x;\n                    if (diff > 0){\n                        res = Math.max(res, dp[i][j][x] + (long) diff * grid[i][j]);\n                    }\n                }\n            }\n        }\n        // Arrays.sort(arr);\n        System.out.println(res);\n        sc.close();\n    }\n}",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            31
        ],
        "buggy_statements": [
            "        int[][] direction = {{1,0},{-1,0},{0,1},{0,-1}};"
        ],
        "buggy_method_src_endswith_buggy_statement": "public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        int h = sc.nextInt();\n        int w = sc.nextInt();\n        int k = sc.nextInt();\n        int sx = sc.nextInt();\n        sx -= 1;\n        int sy = sc.nextInt();\n        sy -= 1;\n        long res = 0;\n        /*\n        \u5c3d\u53ef\u80fd\u5728 k \u6b65\u4ee5\u5185\u8d70\u5230\u5c3d\u53ef\u80fd\u5927\u7684\u683c\u5b50\uff0c\u5982\u679c\u6b65\u6570\u8fd8\u6709\u5269\u4f59\u5c31\u4e00\u76f4\u505c\u7559\u5728\u539f\u5730\uff0c\u5bb9\u6613\u60f3\u5230\u5728\u5230\u8fbe\u6700\u5927\u503c\u7684\u683c\u5b50\u4e4b\u524d\u4e0d\u4f1a\u5728\u8def\u5f84\u4e0a\u67d0\u4e2a\u683c\u5b50\u505a\u505c\u7559\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u66f4\u52a3\n        \u8bb0 dp[i][j][l] \u8868\u793a\u5230 (i,j) \u4e3a\u6b62\u5df2\u7ecf\u8d70\u4e86l\u6b65\u65f6\u7684\u6700\u5927\u6109\u60a6\u503c\n         */\n        int move = Math.min(k+1,h*w+1);\n        long[][][] dp = new long[h][w][move];\n        for(int x = 0;x < move;x++) {\n            for (int i = 0; i < h; i++) {\n                for (int j = 0; j < w; j++) {\n                    dp[i][j][x] = Long.MIN_VALUE;\n                }\n            }\n        }\n        dp[sx][sy][0] = 0;\n        long[][] grid = new long[h][w];\n        for (int i = 0; i < h; i++) {\n            for(int j = 0;j < w;j++) {\n                grid[i][j] = sc.nextLong();\n            }\n        }\n        int[][] direction = {{1,0},{-1,0},{0,1},{0,-1}};"
    }
]