
================== buggy_file ==================
faultyVersion.java
================== buggy_method ==================
{'method_name': 'main', 'method_body': 'public static void main(String[] args) {\n    FastScanner sc = new FastScanner();\n    long a = sc.nextLong();\n    long b = sc.nextLong();\n    long c = sc.nextLong();\n    long d = sc.nextLong();\n    c = Math.abs(c - a);\n    a = 0L;\n    d = Math.abs(d - b);\n    b = 0L;\n    long ans = 0L;\n    \n    if(d%2L == 1L && c%2L == 0L) c = Math.abs(c - 1L);\n    if(d%2L == 0L && c%2L == 1L) c = Math.abs(c - 1L);\n    if(d > c) {\n      ans = d;\n    \n    } else {\n      ans = d;\n      ans += (c - d) / 2L;\n    }\n    System.out.println(ans);\n    \n  }', 'start_line': 5, 'end_line': 28}
================== buggy_method_src ==================
public static void main(String[] args) {
    FastScanner sc = new FastScanner();
    long a = sc.nextLong();
    long b = sc.nextLong();
    long c = sc.nextLong();
    long d = sc.nextLong();
    c = Math.abs(c - a);
    a = 0L;
    d = Math.abs(d - b);
    b = 0L;
    long ans = 0L;
    
    if(d%2L == 1L && c%2L == 0L) c = Math.abs(c - 1L);
    if(d%2L == 0L && c%2L == 1L) c = Math.abs(c - 1L);
    if(d > c) {
      ans = d;
    
    } else {
      ans = d;
      ans += (c - d) / 2L;
    }
    System.out.println(ans);
    
  }
================== test_stack ==================
None
================== test_assert ==================
None
================== buggy_lines_in_method ==================
[7]
================== buggy_statements ==================
['    c = Math.abs(c - a);']
================== buggy_method_src_endswith_buggy_statement ==================
public static void main(String[] args) {
    FastScanner sc = new FastScanner();
    long a = sc.nextLong();
    long b = sc.nextLong();
    long c = sc.nextLong();
    long d = sc.nextLong();
    c = Math.abs(c - a);