[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "Test_Case",
            "method_body": "static void Test_Case() { \n       int n = fs.nextInt() ;\n       List<IdVal> v = new ArrayList<> ();\n       for ( int i = 0 ; i < n ; i ++ ) {\n        int val = fs.nextInt() ;\n        v.add(new IdVal(i , val )) ;\n       }\n       Collections.sort( v , ( node1 , node2 ) -> {\n        if ( node1.value != node2.value ) {\n            return Integer.compare(node2.value, node1.value) ;\n        }else {\n            return Integer.compare(node2.id , node1.id ) ;\n        }\n        });\n        long ans = 0 ;\n        SegmentTree segTree = new SegmentTree(n) ;\n        for ( IdVal nw : v ) {\n            int id = nw.id ;\n            int value = nw.value ;\n            int l = id + 1 , r = n - 1 ;\n            Node node = segTree.getSum ( 0 , 0 , n - 1 , l , r ) ;\n            ans += node.sum - ( value * node.nums ) ;\n            segTree.update(0, 0, n - 1, id , value ); \n        }\n        System.out.println( ans );\n       \n    }",
            "start_line": 75,
            "end_line": 101
        },
        "buggy_method_src": "static void Test_Case() { \n       int n = fs.nextInt() ;\n       List<IdVal> v = new ArrayList<> ();\n       for ( int i = 0 ; i < n ; i ++ ) {\n        int val = fs.nextInt() ;\n        v.add(new IdVal(i , val )) ;\n       }\n       Collections.sort( v , ( node1 , node2 ) -> {\n        if ( node1.value != node2.value ) {\n            return Integer.compare(node2.value, node1.value) ;\n        }else {\n            return Integer.compare(node2.id , node1.id ) ;\n        }\n        });\n        long ans = 0 ;\n        SegmentTree segTree = new SegmentTree(n) ;\n        for ( IdVal nw : v ) {\n            int id = nw.id ;\n            int value = nw.value ;\n            int l = id + 1 , r = n - 1 ;\n            Node node = segTree.getSum ( 0 , 0 , n - 1 , l , r ) ;\n            ans += node.sum - ( value * node.nums ) ;\n            segTree.update(0, 0, n - 1, id , value ); \n        }\n        System.out.println( ans );\n       \n    }",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            19
        ],
        "buggy_statements": [
            "            int value = nw.value ;"
        ],
        "buggy_method_src_endswith_buggy_statement": "static void Test_Case() { \n       int n = fs.nextInt() ;\n       List<IdVal> v = new ArrayList<> ();\n       for ( int i = 0 ; i < n ; i ++ ) {\n        int val = fs.nextInt() ;\n        v.add(new IdVal(i , val )) ;\n       }\n       Collections.sort( v , ( node1 , node2 ) -> {\n        if ( node1.value != node2.value ) {\n            return Integer.compare(node2.value, node1.value) ;\n        }else {\n            return Integer.compare(node2.id , node1.id ) ;\n        }\n        });\n        long ans = 0 ;\n        SegmentTree segTree = new SegmentTree(n) ;\n        for ( IdVal nw : v ) {\n            int id = nw.id ;\n            int value = nw.value ;"
    }
]