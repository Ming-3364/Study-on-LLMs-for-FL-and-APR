
================== buggy_file ==================
src/com/google/javascript/jscomp/CollapseProperties.java
================== buggy_method ==================
{'method_name': 'collapseDeclarationOfNameAndDescendants', 'method_body': 'private void collapseDeclarationOfNameAndDescendants(Name n, String alias) {\n    boolean canCollapseChildNames = n.canCollapseUnannotatedChildNames();\n\n    // Handle this name first so that nested object literals get unrolled.\n    if (n.canCollapse() && canCollapseChildNames) {\n      updateObjLitOrFunctionDeclaration(n, alias);\n    }\n\n    if (n.props != null) {\n      for (Name p : n.props) {\n        // Recurse first so that saved node ancestries are intact when needed.\n        collapseDeclarationOfNameAndDescendants(\n            p, appendPropForAlias(alias, p.name));\n\n        if (!p.inExterns && canCollapseChildNames && p.declaration != null &&\n            p.declaration.node != null &&\n            p.declaration.node.getParent() != null &&\n            p.declaration.node.getParent().getType() == Token.ASSIGN) {\n          updateSimpleDeclaration(\n              appendPropForAlias(alias, p.name), p, p.declaration);\n        }\n      }\n    }\n  }', 'start_line': 451, 'end_line': 474, 'buggy_lines': [455, 456]}
================== buggy_method_src ==================
private void collapseDeclarationOfNameAndDescendants(Name n, String alias) {
    boolean canCollapseChildNames = n.canCollapseUnannotatedChildNames();

    // Handle this name first so that nested object literals get unrolled.
    if (n.canCollapse() && canCollapseChildNames) {
      updateObjLitOrFunctionDeclaration(n, alias);
    }

    if (n.props != null) {
      for (Name p : n.props) {
        // Recurse first so that saved node ancestries are intact when needed.
        collapseDeclarationOfNameAndDescendants(
            p, appendPropForAlias(alias, p.name));

        if (!p.inExterns && canCollapseChildNames && p.declaration != null &&
            p.declaration.node != null &&
            p.declaration.node.getParent() != null &&
            p.declaration.node.getParent().getType() == Token.ASSIGN) {
          updateSimpleDeclaration(
              appendPropForAlias(alias, p.name), p, p.declaration);
        }
      }
    }
  }
================== test_stack ==================
com.google.javascript.jscomp.CollapsePropertiesTest::testAliasedTopLevelEnum
junit.framework.AssertionFailedError:
Expected: function alias(){}var dojo={};dojo.gfx={};dojo.declare=function(){};var dojo$gfx$Shape={SQUARE:2};dojo$gfx$Shape=dojo.declare("dojo.gfx.Shape");alias(dojo);alias(dojo$gfx$Shape.SQUARE)
Result: function alias(){}var dojo={};dojo.gfx={};dojo.declare=function(){};dojo.gfx.Shape={SQUARE:2};dojo$gfx$Shape=dojo.declare("dojo.gfx.Shape");alias(dojo);alias(dojo$gfx$Shape.SQUARE)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION alias 1 [sourcename: expected0]
            NAME alias 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME dojo 1 [sourcename: expected0]
                OBJECTLIT 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME dojo 1 [sourcename: expected0]
                    STRING gfx 1 [sourcename: expected0]
                OBJECTLIT 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME dojo 1 [sourcename: expected0]
                    STRING declare 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0] [jsdoc_info: JSDocInfo]
            NAME dojo$gfx$Shape 1 [sourcename: expected0]
                OBJECTLIT 1 [sourcename: expected0]
                    STRING SQUARE 1 [sourcename: expected0] [is_constant_name: 1]
                        NUMBER 2.0 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME dojo$gfx$Shape 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME dojo 1 [sourcename: expected0]
                        STRING declare 1 [sourcename: expected0]
                    STRING dojo.gfx.Shape 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME alias 1 [sourcename: expected0]
                NAME dojo 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME alias 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME dojo$gfx$Shape 1 [sourcename: expected0]
                    STRING SQUARE 1 [sourcename: expected0] [is_constant_name: 1]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION alias 1 [sourcename: testcode]
            NAME alias 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME dojo 1 [sourcename: testcode]
                OBJECTLIT 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                GETPROP 1 [sourcename: testcode]
                    NAME dojo 1 [sourcename: testcode]
                    STRING gfx 1 [sourcename: testcode]
                OBJECTLIT 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                GETPROP 1 [sourcename: testcode]
                    NAME dojo 1 [sourcename: testcode]
                    STRING declare 1 [sourcename: testcode]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode] [jsdoc_info: JSDocInfo]
                GETPROP 1 [sourcename: testcode]
                    GETPROP 1 [sourcename: testcode]
                        NAME dojo 1 [sourcename: testcode]
                        STRING gfx 1 [sourcename: testcode]
                    STRING Shape 1 [sourcename: testcode]
                OBJECTLIT 1 [sourcename: testcode]
                    STRING SQUARE 1 [sourcename: testcode] [is_constant_name: 1]
                        NUMBER 2.0 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME dojo$gfx$Shape 1 [sourcename: testcode] [originalname: dojo.gfx.Shape]
                CALL 1 [sourcename: testcode]
                    GETPROP 1 [sourcename: testcode]
                        NAME dojo 1 [sourcename: testcode]
                        STRING declare 1 [sourcename: testcode]
                    STRING dojo.gfx.Shape 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME alias 1 [sourcename: testcode]
                NAME dojo 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME alias 1 [sourcename: testcode]
                GETPROP 1 [sourcename: testcode]
                    NAME dojo$gfx$Shape 1 [sourcename: testcode] [originalname: dojo.gfx.Shape.SQUARE]
                    STRING SQUARE 1 [sourcename: testcode] [is_constant_name: 1]


Subtree1: VAR 1 [sourcename: expected0] [jsdoc_info: JSDocInfo]
    NAME dojo$gfx$Shape 1 [sourcename: expected0]
        OBJECTLIT 1 [sourcename: expected0]
            STRING SQUARE 1 [sourcename: expected0] [is_constant_name: 1]
                NUMBER 2.0 1 [sourcename: expected0]


Subtree2: EXPR_RESULT 1 [sourcename: testcode]
    ASSIGN 1 [sourcename: testcode] [jsdoc_info: JSDocInfo]
        GETPROP 1 [sourcename: testcode]
            GETPROP 1 [sourcename: testcode]
                NAME dojo 1 [sourcename: testcode]
                STRING gfx 1 [sourcename: testcode]
            STRING Shape 1 [sourcename: testcode]
        OBJECTLIT 1 [sourcename: testcode]
            STRING SQUARE 1 [sourcename: testcode] [is_constant_name: 1]
                NUMBER 2.0 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testAliasedTopLevelEnum(CollapsePropertiesTest.java:1309)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
com.google.javascript.jscomp.CollapsePropertiesTest::testIssue389
junit.framework.AssertionFailedError:
Expected: function alias(){}var dojo={};dojo.gfx={};dojo.declare=function(){};var dojo$gfx$Shape=function(){};dojo$gfx$Shape=dojo.declare("dojo.gfx.Shape");alias(dojo)
Result: function alias(){}var dojo={};dojo.gfx={};dojo.declare=function(){};dojo.gfx.Shape=function(){};dojo$gfx$Shape=dojo.declare("dojo.gfx.Shape");alias(dojo)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: expected0] [synthetic: 1]
        FUNCTION alias 1 [sourcename: expected0]
            NAME alias 1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0]
            NAME dojo 1 [sourcename: expected0]
                OBJECTLIT 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME dojo 1 [sourcename: expected0]
                    STRING gfx 1 [sourcename: expected0]
                OBJECTLIT 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                GETPROP 1 [sourcename: expected0]
                    NAME dojo 1 [sourcename: expected0]
                    STRING declare 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        VAR 1 [sourcename: expected0] [jsdoc_info: JSDocInfo]
            NAME dojo$gfx$Shape 1 [sourcename: expected0]
                FUNCTION  1 [sourcename: expected0]
                    NAME  1 [sourcename: expected0]
                    LP 1 [sourcename: expected0]
                    BLOCK 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            ASSIGN 1 [sourcename: expected0]
                NAME dojo$gfx$Shape 1 [sourcename: expected0]
                CALL 1 [sourcename: expected0]
                    GETPROP 1 [sourcename: expected0]
                        NAME dojo 1 [sourcename: expected0]
                        STRING declare 1 [sourcename: expected0]
                    STRING dojo.gfx.Shape 1 [sourcename: expected0]
        EXPR_RESULT 1 [sourcename: expected0]
            CALL 1 [sourcename: expected0] [free_call: 1]
                NAME alias 1 [sourcename: expected0]
                NAME dojo 1 [sourcename: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [sourcename: testcode] [synthetic: 1]
        FUNCTION alias 1 [sourcename: testcode]
            NAME alias 1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]
        VAR 1 [sourcename: testcode]
            NAME dojo 1 [sourcename: testcode]
                OBJECTLIT 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                GETPROP 1 [sourcename: testcode]
                    NAME dojo 1 [sourcename: testcode]
                    STRING gfx 1 [sourcename: testcode]
                OBJECTLIT 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                GETPROP 1 [sourcename: testcode]
                    NAME dojo 1 [sourcename: testcode]
                    STRING declare 1 [sourcename: testcode]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode] [jsdoc_info: JSDocInfo]
                GETPROP 1 [sourcename: testcode]
                    GETPROP 1 [sourcename: testcode]
                        NAME dojo 1 [sourcename: testcode]
                        STRING gfx 1 [sourcename: testcode]
                    STRING Shape 1 [sourcename: testcode]
                FUNCTION  1 [sourcename: testcode]
                    NAME  1 [sourcename: testcode]
                    LP 1 [sourcename: testcode]
                    BLOCK 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            ASSIGN 1 [sourcename: testcode]
                NAME dojo$gfx$Shape 1 [sourcename: testcode] [originalname: dojo.gfx.Shape]
                CALL 1 [sourcename: testcode]
                    GETPROP 1 [sourcename: testcode]
                        NAME dojo 1 [sourcename: testcode]
                        STRING declare 1 [sourcename: testcode]
                    STRING dojo.gfx.Shape 1 [sourcename: testcode]
        EXPR_RESULT 1 [sourcename: testcode]
            CALL 1 [sourcename: testcode] [free_call: 1]
                NAME alias 1 [sourcename: testcode]
                NAME dojo 1 [sourcename: testcode]


Subtree1: VAR 1 [sourcename: expected0] [jsdoc_info: JSDocInfo]
    NAME dojo$gfx$Shape 1 [sourcename: expected0]
        FUNCTION  1 [sourcename: expected0]
            NAME  1 [sourcename: expected0]
            LP 1 [sourcename: expected0]
            BLOCK 1 [sourcename: expected0]


Subtree2: EXPR_RESULT 1 [sourcename: testcode]
    ASSIGN 1 [sourcename: testcode] [jsdoc_info: JSDocInfo]
        GETPROP 1 [sourcename: testcode]
            GETPROP 1 [sourcename: testcode]
                NAME dojo 1 [sourcename: testcode]
                STRING gfx 1 [sourcename: testcode]
            STRING Shape 1 [sourcename: testcode]
        FUNCTION  1 [sourcename: testcode]
            NAME  1 [sourcename: testcode]
            LP 1 [sourcename: testcode]
            BLOCK 1 [sourcename: testcode]

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNull(Assert.java:277)
	at junit.framework.TestCase.assertNull(TestCase.java:447)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)
	at com.google.javascript.jscomp.CollapsePropertiesTest.testIssue389(CollapsePropertiesTest.java:1275)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:392)
	at org.apache.tools.ant.Target.performTasks(Target.java:413)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
	at org.apache.tools.ant.Main.runBuild(Main.java:811)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)

================== test_assert ==================
test(

================== buggy_lines_in_method ==================
[5, 6]
================== buggy_statements ==================
['    if (n.canCollapse() && canCollapseChildNames) {', '      updateObjLitOrFunctionDeclaration(n, alias);']
================== buggy_method_src_endswith_buggy_statement ==================
private void collapseDeclarationOfNameAndDescendants(Name n, String alias) {
    boolean canCollapseChildNames = n.canCollapseUnannotatedChildNames();

    // Handle this name first so that nested object literals get unrolled.
    if (n.canCollapse() && canCollapseChildNames) {
      updateObjLitOrFunctionDeclaration(n, alias);