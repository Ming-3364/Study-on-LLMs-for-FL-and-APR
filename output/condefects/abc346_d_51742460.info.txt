
================== buggy_file ==================
faultyVersion.java
================== buggy_method ==================
{'method_name': 'cal', 'method_body': "static long cal(int index, int last, int re, String c, long[] data) {\n        if (index == data.length) {\n            if (re == 0) {\n                return MAX;\n            }\n            return 0;\n        }\n        if (dp[last][re][index] != -1) {\n            return dp[last][re][index];\n        }\n        int cur = c.charAt(index) - '0';\n        long res = cal(index + 1, 1 - last, re, c, data);\n        if (res != MAX) {\n            res += (cur == last ? data[index] : 0);\n        }\n        if (re == 0) {\n            long tmp = cal(index + 1, last, 1, c, data);\n            if (tmp != MAX) {\n                tmp += (cur == last ? 0 : data[index]);\n            }\n            res = Long.min(res, tmp);\n        }\n        return dp[last][re][index] = res;\n    }", 'start_line': 49, 'end_line': 72}
================== buggy_method_src ==================
static long cal(int index, int last, int re, String c, long[] data) {
        if (index == data.length) {
            if (re == 0) {
                return MAX;
            }
            return 0;
        }
        if (dp[last][re][index] != -1) {
            return dp[last][re][index];
        }
        int cur = c.charAt(index) - '0';
        long res = cal(index + 1, 1 - last, re, c, data);
        if (res != MAX) {
            res += (cur == last ? data[index] : 0);
        }
        if (re == 0) {
            long tmp = cal(index + 1, last, 1, c, data);
            if (tmp != MAX) {
                tmp += (cur == last ? 0 : data[index]);
            }
            res = Long.min(res, tmp);
        }
        return dp[last][re][index] = res;
    }
================== test_stack ==================
None
================== test_assert ==================
None
================== buggy_lines_in_method ==================
[16]
================== buggy_statements ==================
['        if (re == 0) {']
================== buggy_method_src_endswith_buggy_statement ==================
static long cal(int index, int last, int re, String c, long[] data) {
        if (index == data.length) {
            if (re == 0) {
                return MAX;
            }
            return 0;
        }
        if (dp[last][re][index] != -1) {
            return dp[last][re][index];
        }
        int cur = c.charAt(index) - '0';
        long res = cal(index + 1, 1 - last, re, c, data);
        if (res != MAX) {
            res += (cur == last ? data[index] : 0);
        }
        if (re == 0) {