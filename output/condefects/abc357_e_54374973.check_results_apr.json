{
    "overall_status": {
        "prompt_apr_1": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Fail some tests",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_2": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Fail some tests",
            "gpt-4o-mini": "Fail some tests",
            "deepseek-chat": "Fail some tests"
        },
        "prompt_apr_3": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_4": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_5": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Compile failed"
        },
        "prompt_apr_6": {
            "ernie-3.5-128k": "Compile failed",
            "qwen-turbo": "Compile failed",
            "doubao-pro-4k": "Compile failed",
            "gpt-4o-mini": "Compile failed",
            "deepseek-chat": "Compile failed"
        }
    },
    "check_results_list": {
        "prompt_apr_1": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:66: error: <identifier> expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n    ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n        ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                       ^\nMain.java:66: error: <identifier> expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                            ^\nMain.java:66: error: illegal start of type\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                               ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                   ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                           ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                       ^\nMain.java:66: error: illegal character: \\96\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                            ^\nMain.java:66: error: illegal character: \\96\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                 ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                       ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                               ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                           ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                              ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                       ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                        ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                  ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                            ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                    ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                               ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                          ^\nMain.java:66: error: illegal character: \\96\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                               ^\nMain.java:66: error: illegal character: \\96\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                    ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                 ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                       ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                                    ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                                                   ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                                                            ^\nMain.java:66: error: unclosed character literal\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                                                                           ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                                                                                     ^\nMain.java:66: error: illegal character: \\96\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                                                                                           ^\nMain.java:66: error: illegal character: \\96\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                                                                                                ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                                                                                                                ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                                                                                                                           ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                                                                                                                                         ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                                                                                                                                                  ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                                                                                                                                                            ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                                                                                                                                                                     ^\nMain.java:66: error: ';' expected\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                                                                                                                                                                               ^\nMain.java:66: error: illegal character: \\96\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                                                                                                                                                                                               ^\nMain.java:66: error: illegal character: \\96\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                                                                                                                                                                                                   ^\nMain.java:66: error: illegal start of type\nSure, to fix the bug in line 16, we need to ensure that the `list` variable used in the loop is defined and properly populated with the relevant indices or values before it is used. Since the context of how `list` is supposed to be populated is not explicitly given in the snippet, I'll assume that `list` should contain indices of elements that are part of cycles found in the graph represented by `arr`.\n                                                                                                                                                                                                                                                                                                                                                                                                                    ^\nMain.java:68: error: unclosed character literal\nHere's the corrected method with a plausible fix assuming `list` should be populated with cycle starting indices:\n    ^\nMain.java:68: error: ';' expected\nHere's the corrected method with a plausible fix assuming `list` should be populated with cycle starting indices:\n                    ^\nMain.java:68: error: ';' expected\nHere's the corrected method with a plausible fix assuming `list` should be populated with cycle starting indices:\n                                ^\nMain.java:68: error: ';' expected\nHere's the corrected method with a plausible fix assuming `list` should be populated with cycle starting indices:\n                                            ^\nMain.java:68: error: illegal character: \\96\nHere's the corrected method with a plausible fix assuming `list` should be populated with cycle starting indices:\n                                                          ^\nMain.java:68: error: illegal character: \\96\nHere's the corrected method with a plausible fix assuming `list` should be populated with cycle starting indices:\n                                                               ^\nMain.java:68: error: ';' expected\nHere's the corrected method with a plausible fix assuming `list` should be populated with cycle starting indices:\n                                                                          ^\nMain.java:68: error: ';' expected\nHere's the corrected method with a plausible fix assuming `list` should be populated with cycle starting indices:\n                                                                                         ^\nMain.java:68: error: ';' expected\nHere's the corrected method with a plausible fix assuming `list` should be populated with cycle starting indices:\n                                                                                                        ^\nMain.java:68: error: <identifier> expected\nHere's the corrected method with a plausible fix assuming `list` should be populated with cycle starting indices:\n                                                                                                                ^\nMain.java:70: error: illegal character: \\96\n```java\n^\nMain.java:70: error: illegal character: \\96\n```java\n ^\nMain.java:70: error: illegal character: \\96\n```java\n  ^\nMain.java:144: error: illegal character: \\96\n```\n^\nMain.java:144: error: illegal character: \\96\n```\n ^\nMain.java:144: error: illegal character: \\96\n```\n  ^\nMain.java:146: error: illegal character: \\35\n### Key Points:\n^\nMain.java:146: error: illegal character: \\35\n### Key Points:\n ^\nMain.java:146: error: illegal character: \\35\n### Key Points:\n  ^\nMain.java:146: error: ';' expected\n### Key Points:\n              ^\nMain.java:147: error: illegal character: \\96\n1. **Define `list`**: `list` is defined as an `ArrayList<Integer>` to store the starting indices of cycles.\n            ^\nMain.java:147: error: illegal character: \\96\n1. **Define `list`**: `list` is defined as an `ArrayList<Integer>` to store the starting indices of cycles.\n                 ^\nMain.java:147: error: illegal start of type\n1. **Define `list`**: `list` is defined as an `ArrayList<Integer>` to store the starting indices of cycles.\n                  ^\nMain.java:147: error: <identifier> expected\n1. **Define `list`**: `list` is defined as an `ArrayList<Integer>` to store the starting indices of cycles.\n                   ^\nMain.java:147: error: ';' expected\n1. **Define `list`**: `list` is defined as an `ArrayList<Integer>` to store the starting indices of cycles.\n                    ^\nMain.java:147: error: illegal character: \\96\n1. **Define `list`**: `list` is defined as an `ArrayList<Integer>` to store the starting indices of cycles.\n                      ^\nMain.java:147: error: illegal character: \\96\n1. **Define `list`**: `list` is defined as an `ArrayList<Integer>` to store the starting indices of cycles.\n                           ^\nMain.java:147: error: ';' expected\n1. **Define `list`**: `list` is defined as an `ArrayList<Integer>` to store the starting indices of cycles.\n                                          ^\nMain.java:147: error: illegal character: \\96\n1. **Define `list`**: `list` is defined as an `ArrayList<Integer>` to store the starting indices of cycles.\n                                              ^\nMain.java:147: error: illegal character: \\96\n1. **Define `list`**: `list` is defined as an `ArrayList<Integer>` to store the starting indices of cycles.\n                                                                 ^\nMain.java:147: error: ';' expected\n1. **Define `list`**: `list` is defined as an `ArrayList<Integer>` to store the starting indices of cycles.\n                                                                           ^\nMain.java:147: error: ';' expected\n1. **Define `list`**: `list` is defined as an `ArrayList<Integer>` to store the starting indices of cycles.\n                                                                                        ^\nMain.java:147: error: ';' expected\n1. **Define `list`**: `list` is defined as an `ArrayList<Integer>` to store the starting indices of cycles.\n                                                                                                   ^\nMain.java:147: error: <identifier> expected\n1. **Define `list`**: `list` is defined as an `ArrayList<Integer>` to store the starting indices of cycles.\n                                                                                                           ^\nMain.java:148: error: ';' expected\n2. **Modify `findcycle`**: The `findcycle` method is modified to accept `list` and populate it when a cycle is detected.\n  ^\nMain.java:148: error: illegal start of type\n2. **Modify `findcycle`**: The `findcycle` method is modified to accept `list` and populate it when a cycle is detected.\n    ^\nMain.java:148: error: illegal character: \\96\n2. **Modify `findcycle`**: The `findcycle` method is modified to accept `list` and populate it when a cycle is detected.\n            ^\nMain.java:148: error: illegal character: \\96\n2. **Modify `findcycle`**: The `findcycle` method is modified to accept `list` and populate it when a cycle is detected.\n                      ^\nMain.java:148: error: illegal start of type\n2. **Modify `findcycle`**: The `findcycle` method is modified to accept `list` and populate it when a cycle is detected.\n                       ^\nMain.java:148: error: <identifier> expected\n2. **Modify `findcycle`**: The `findcycle` method is modified to accept `list` and populate it when a cycle is detected.\n                        ^\nMain.java:148: error: ';' expected\n2. **Modify `findcycle`**: The `findcycle` method is modified to accept `list` and populate it when a cycle is detected.\n                         ^\nMain.java:148: error: illegal character: \\96\n2. **Modify `findcycle`**: The `findcycle` method is modified to accept `list` and populate it when a cycle is detected.\n                               ^\nMain.java:148: error: illegal character: \\96\n2. **Modify `findcycle`**: The `findcycle` method is modified to accept `list` and populate it when a cycle is detected.\n                                         ^\nMain.java:148: error: ';' expected\n2. **Modify `findcycle`**: The `findcycle` method is modified to accept `list` and populate it when a cycle is detected.\n                                                    ^\nMain.java:148: error: ';' expected\n2. **Modify `findcycle`**: The `findcycle` method is modified to accept `list` and populate it when a cycle is detected.\n                                                                ^\nMain.java:148: error: illegal character: \\96\n2. **Modify `findcycle`**: The `findcycle` method is modified to accept `list` and populate it when a cycle is detected.\n                                                                        ^\nMain.java:148: error: illegal character: \\96\n2. **Modify `findcycle`**: The `findcycle` method is modified to accept `list` and populate it when a cycle is detected.\n                                                                             ^\nMain.java:148: error: ';' expected\n2. **Modify `findcycle`**: The `findcycle` method is modified to accept `list` and populate it when a cycle is detected.\n                                                                                           ^\nMain.java:148: error: ';' expected\n2. **Modify `findcycle`**: The `findcycle` method is modified to accept `list` and populate it when a cycle is detected.\n                                                                                                   ^\nMain.java:148: error: ';' expected\n2. **Modify `findcycle`**: The `findcycle` method is modified to accept `list` and populate it when a cycle is detected.\n                                                                                                           ^\nMain.java:148: error: ';' expected\n2. **Modify `findcycle`**: The `findcycle` method is modified to accept `list` and populate it when a cycle is detected.\n                                                                                                                       ^\nMain.java:149: error: ';' expected\n3. **Scanner and PrintWriter**: Ensure `vt` (scanner) and `out` (print writer) are properly initialized and closed.\n                ^\nMain.java:149: error: <identifier> expected\n3. **Scanner and PrintWriter**: Ensure `vt` (scanner) and `out` (print writer) are properly initialized and closed.\n                            ^\nMain.java:149: error: illegal start of type\n3. **Scanner and PrintWriter**: Ensure `vt` (scanner) and `out` (print writer) are properly initialized and closed.\n                             ^\nMain.java:149: error: <identifier> expected\n3. **Scanner and PrintWriter**: Ensure `vt` (scanner) and `out` (print writer) are properly initialized and closed.\n                              ^\nMain.java:149: error: ';' expected\n3. **Scanner and PrintWriter**: Ensure `vt` (scanner) and `out` (print writer) are properly initialized and closed.\n                               ^\n100 errors\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:66: error: <identifier> expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n         ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                    ^\nMain.java:66: error: ']' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                              ^\nMain.java:66: error: illegal start of type\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                       ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                             ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                        ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                  ^\nMain.java:66: error: illegal character: \\96\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                      ^\nMain.java:66: error: illegal character: \\96\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                           ^\nMain.java:66: error: illegal start of type\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                            ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                   ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                          ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                           ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                  ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                    ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                             ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                         ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                      ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                                      ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                                                 ^\nMain.java:66: error: illegal character: \\96\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                                                                 ^\nMain.java:66: error: illegal character: \\96\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                                                                      ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                                                                                 ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                                                                                              ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                                                                                                         ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                                                                                                                   ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                                                                                                                         ^\nMain.java:66: error: <identifier> expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                                                                                                                                   ^\nMain.java:66: error: unclosed character literal\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                                                                                                                                        ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                                                                                                                                                    ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                                                                                                                                                         ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                                                                                                                                                                 ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                                                                                                                                                                                   ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                                                                                                                                                                                                 ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                                                                                                                                                                                                            ^\nMain.java:66: error: ';' expected\nCertainly! The issue on line [16] seems to be related to the usage of `list`, which is not defined anywhere in the provided code snippet. It appears that you intended to iterate over some collection of indices. Assuming that `list` should be a collection of indices that need to be processed, let's assume it is a list of integers. Here is the corrected version of the method:\n                                                                                                                                                                                                                                                                                                                                                                                       ^\nMain.java:68: error: illegal character: \\96\n```java\n^\nMain.java:68: error: illegal character: \\96\n```java\n ^\nMain.java:68: error: illegal character: \\96\n```java\n  ^\nMain.java:68: error: <identifier> expected\n```java\n       ^\nMain.java:69: error: <identifier> expected\nimport java.util.HashSet;\n                        ^\nMain.java:70: error: illegal start of type\nimport java.util.ArrayList;\n^\nMain.java:70: error: ';' expected\nimport java.util.ArrayList;\n      ^\nMain.java:70: error: illegal start of type\nimport java.util.ArrayList;\n           ^\nMain.java:70: error: ';' expected\nimport java.util.ArrayList;\n                ^\nMain.java:70: error: <identifier> expected\nimport java.util.ArrayList;\n                          ^\nMain.java:112: error: illegal character: \\96\n```\n^\nMain.java:112: error: illegal character: \\96\n```\n ^\nMain.java:112: error: illegal character: \\96\n```\n  ^\nMain.java:114: error: illegal start of type\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n   ^\nMain.java:114: error: ';' expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n       ^\nMain.java:114: error: <identifier> expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                         ^\nMain.java:114: error: ';' expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                            ^\nMain.java:114: error: illegal character: \\96\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                      ^\nMain.java:114: error: illegal character: \\96\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                              ^\nMain.java:114: error: ';' expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                        ^\nMain.java:114: error: ';' expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                    ^\nMain.java:114: error: ';' expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                            ^\nMain.java:114: error: <identifier> expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                     ^\nMain.java:114: error: ';' expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                    ^\nMain.java:114: error: ';' expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                ^\nMain.java:114: error: illegal character: \\96\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                      ^\nMain.java:114: error: illegal start of type\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                       ^\nMain.java:114: error: illegal character: \\96\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                        ^\nMain.java:114: error: ';' expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                         ^\nMain.java:114: error: illegal character: \\96\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                             ^\nMain.java:114: error: illegal start of type\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                               ^\nMain.java:114: error: ';' expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                                ^\nMain.java:114: error: illegal character: \\96\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                                 ^\nMain.java:114: error: ';' expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                                                ^\nMain.java:114: error: ';' expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                                                           ^\nMain.java:114: error: ';' expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                                                                    ^\nMain.java:114: error: ';' expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                                                                                 ^\nMain.java:114: error: ';' expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                                                                                                ^\nMain.java:114: error: ';' expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                                                                                                                 ^\nMain.java:114: error: illegal character: \\96\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                                                                                                                                ^\nMain.java:114: error: illegal character: \\96\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                                                                                                                                     ^\nMain.java:114: error: ';' expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                                                                                                                                             ^\nMain.java:114: error: ';' expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                                                                                                                                                           ^\nMain.java:114: error: <identifier> expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                                                                                                                                                                        ^\nMain.java:114: error: <identifier> expected\nIn this corrected version, I added an `ArrayList<Integer> list` to store the indices. I then populate this list with all indices from `0` to `n-1`. This ensures that every index is processed in the subsequent loop. Adjust the population of `list` as per your specific requirements if needed.\n                                                                                                                                                                                                                                                                                                   ^\nMain.java:115: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n          ^\nMain.java:115: error: invalid method declaration; return type required\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n               ^\n85 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:66: error: illegal character: \\96\n```java\n^\nMain.java:66: error: illegal character: \\96\n```java\n ^\nMain.java:66: error: illegal character: \\96\n```java\n  ^\nMain.java:102: error: illegal character: \\96\n```\n^\nMain.java:102: error: illegal character: \\96\n```\n ^\nMain.java:102: error: illegal character: \\96\n```\n  ^\n6 errors\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_random_04",
                            "returncode": null,
                            "stdout": "35583724\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_03",
                            "returncode": null,
                            "stdout": "116713307\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "04_tree_plus_an_edge_01",
                            "returncode": null,
                            "stdout": "5477616\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "03_large_cycle_01",
                            "returncode": null,
                            "stdout": "",
                            "stderr": "Exception in thread \"main\" java.lang.StackOverflowError\n\tat java.util.HashMap$Entry.<init>(HashMap.java:810)\n\tat java.util.HashMap.createEntry(HashMap.java:897)\n\tat java.util.HashMap.addEntry(HashMap.java:884)\n\tat java.util.HashMap.put(HashMap.java:505)\n\tat java.util.HashSet.add(HashSet.java:217)\n\tat Main.findcycle(Main.java:123)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n"
                        },
                        {
                            "case_name": "05_many_self_loops_00",
                            "returncode": null,
                            "stdout": "200000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_06",
                            "returncode": null,
                            "stdout": "580\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_09",
                            "returncode": null,
                            "stdout": "37746\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_07",
                            "returncode": null,
                            "stdout": "75611387\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "03_large_cycle_00",
                            "returncode": null,
                            "stdout": "",
                            "stderr": "Exception in thread \"main\" java.lang.StackOverflowError\n\tat java.util.HashMap$Entry.<init>(HashMap.java:810)\n\tat java.util.HashMap.createEntry(HashMap.java:897)\n\tat java.util.HashMap.addEntry(HashMap.java:884)\n\tat java.util.HashMap.put(HashMap.java:505)\n\tat java.util.HashSet.add(HashSet.java:217)\n\tat Main.findcycle(Main.java:123)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n\tat Main.findcycle(Main.java:124)\n"
                        },
                        {
                            "case_name": "02_random_06",
                            "returncode": null,
                            "stdout": "4781894\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "17\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "04_tree_plus_an_edge_00",
                            "returncode": null,
                            "stdout": "4323284\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_00",
                            "returncode": null,
                            "stdout": "132262443\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_01",
                            "returncode": null,
                            "stdout": "78528402\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_08",
                            "returncode": null,
                            "stdout": "17701\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_00",
                            "returncode": null,
                            "stdout": "7084\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_09",
                            "returncode": null,
                            "stdout": "90021611\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "10\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_02",
                            "returncode": null,
                            "stdout": "26383\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_04",
                            "returncode": null,
                            "stdout": "32968\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_07",
                            "returncode": null,
                            "stdout": "23890\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_02",
                            "returncode": null,
                            "stdout": "65310311\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_03",
                            "returncode": null,
                            "stdout": "29496\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_08",
                            "returncode": null,
                            "stdout": "64841085\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_05",
                            "returncode": null,
                            "stdout": "6553\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_01",
                            "returncode": null,
                            "stdout": "31066\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "48\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_05",
                            "returncode": null,
                            "stdout": "132862607\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n       ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n               ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                            ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                   ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                            ^\nMain.java:66: error: illegal character: \\96\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                      ^\nMain.java:66: error: illegal character: \\96\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                           ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                        ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                    ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                   ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                          ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                                        ^\nMain.java:66: error: illegal character: \\96\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                                                   ^\nMain.java:66: error: illegal character: \\96\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                                                        ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                                                                     ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                                                                                ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                                                                                             ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                                                                                                        ^\nMain.java:66: error: <identifier> expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                                                                                                               ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                                                                                                                   ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                                                                                                                           ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                                                                                                                                         ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                                                                                                                                                      ^\nMain.java:66: error: unclosed character literal\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                                                                                                                                                               ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                                                                                                                                                                               ^\nMain.java:66: error: ';' expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                                                                                                                                                                                          ^\nMain.java:66: error: illegal character: \\96\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                                                                                                                                                                                               ^\nMain.java:66: error: illegal character: \\96\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                                                                                                                                                                                                     ^\nMain.java:66: error: <identifier> expected\nThe bug in line 16 is likely due to the fact that the `list` variable is not defined or initialized in the provided code. Assuming `list` is supposed to contain the starting indices of cycles, we need to initialize it before using it. Here's the corrected version of the `solve` method:\n                                                                                                                                                                                                                                                                                             ^\nMain.java:68: error: illegal character: \\96\n```java\n^\nMain.java:68: error: illegal character: \\96\n```java\n ^\nMain.java:68: error: illegal character: \\96\n```java\n  ^\nMain.java:106: error: illegal character: \\96\n```\n^\nMain.java:106: error: illegal character: \\96\n```\n ^\nMain.java:106: error: illegal character: \\96\n```\n  ^\nMain.java:108: error: illegal start of type\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n   ^\nMain.java:108: error: ';' expected\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n       ^\nMain.java:108: error: <identifier> expected\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n                         ^\nMain.java:108: error: ';' expected\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n                            ^\nMain.java:108: error: ';' expected\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n                                      ^\nMain.java:108: error: ';' expected\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n                                                        ^\nMain.java:108: error: illegal character: \\96\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n                                                             ^\nMain.java:108: error: illegal character: \\96\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n                                                                  ^\nMain.java:108: error: ';' expected\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n                                                                               ^\nMain.java:108: error: illegal character: \\96\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n                                                                                   ^\nMain.java:108: error: illegal character: \\96\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n                                                                                                      ^\nMain.java:108: error: ';' expected\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n                                                                                                                 ^\nMain.java:108: error: ';' expected\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n                                                                                                                              ^\nMain.java:108: error: ';' expected\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n                                                                                                                                       ^\nMain.java:108: error: ';' expected\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n                                                                                                                                                  ^\nMain.java:108: error: <identifier> expected\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n                                                                                                                                                     ^\nMain.java:108: error: ';' expected\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n                                                                                                                                                                            ^\nMain.java:108: error: ';' expected\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n                                                                                                                                                                                        ^\nMain.java:108: error: ';' expected\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n                                                                                                                                                                                                 ^\nMain.java:108: error: <identifier> expected\nIn this corrected version, I added the initialization of the `list` variable as an `ArrayList<Integer>` and added the starting index of each cycle to this list. This should resolve the issue in line 16.\n                                                                                                                                                                                                      ^\n55 errors\n"
                }
            }
        },
        "prompt_apr_2": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n          ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                        ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                 ^\nMain.java:66: error: unclosed character literal\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                   ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                               ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                        ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                  ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                           ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                         ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                 ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                             ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                      ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                  ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                            ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                         ^\nMain.java:66: error: <identifier> expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                              ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                          ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                   ^\nMain.java:66: error: illegal character: \\96\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                          ^\nMain.java:66: error: illegal character: \\96\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                              ^\nMain.java:66: error: illegal character: \\96\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                      ^\nMain.java:66: error: ']' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                           ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                            ^\nMain.java:66: error: illegal character: \\96\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                             ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                            ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                      ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                              ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                                        ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                                                          ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                                                                   ^\nMain.java:66: error: illegal character: \\96\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                                                                       ^\nMain.java:66: error: illegal character: \\96\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                                                                          ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                                                                                          ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                                                                                                   ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                                                                                                            ^\nMain.java:66: error: illegal character: \\96\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                                                                                                               ^\nMain.java:66: error: illegal character: \\96\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                                                                                                                       ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                                                                                                                                   ^\nMain.java:66: error: <identifier> expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                                                                                                                                        ^\nMain.java:66: error: illegal character: \\96\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                                                                                                                                              ^\nMain.java:66: error: illegal character: \\96\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                                                                                                                                                  ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                                                                                                                                                             ^\nMain.java:66: error: <identifier> expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                                                                                                                                                                  ^\nMain.java:66: error: ';' expected\nTo address the potential issue in your code, let's first understand the context and flow. The code seems to be processing a graph where nodes are zero-indexed and stored in an adjacency list-like format using an array `arr` where `arr[i]` indicates the next node in some cyclic or acyclic structure. The use of `vt` suggests input is being read via a `Scanner` or similar tool, and `out` is likely used for printing output.\n                                                                                                                                                                                                                                                                                                                                                                                                                                      ^\nMain.java:68: error: ';' expected\nThe code involves several key steps:\n        ^\nMain.java:68: error: ';' expected\nThe code involves several key steps:\n                         ^\nMain.java:68: error: ';' expected\nThe code involves several key steps:\n                                   ^\nMain.java:69: error: ';' expected\n1. Identifying cycles and marking visited nodes.\n                     ^\nMain.java:69: error: ';' expected\n1. Identifying cycles and marking visited nodes.\n                                 ^\nMain.java:69: error: ';' expected\n1. Identifying cycles and marking visited nodes.\n                                               ^\nMain.java:70: error: ';' expected\n2. Calculating the length of cycles.\n                  ^\nMain.java:70: error: ';' expected\n2. Calculating the length of cycles.\n                            ^\nMain.java:70: error: <identifier> expected\n2. Calculating the length of cycles.\n                                    ^\nMain.java:71: error: ';' expected\n3. Using depth-first search (DFS) to compute the longest path for nodes not in any cycle.\n  ^\nMain.java:71: error: <identifier> expected\n3. Using depth-first search (DFS) to compute the longest path for nodes not in any cycle.\n              ^\nMain.java:71: error: <identifier> expected\n3. Using depth-first search (DFS) to compute the longest path for nodes not in any cycle.\n                                ^\nMain.java:71: error: ';' expected\n3. Using depth-first search (DFS) to compute the longest path for nodes not in any cycle.\n                                 ^\nMain.java:74: error: illegal character: \\96\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                  ^\nMain.java:74: error: illegal character: \\96\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                               ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                       ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                ^\nMain.java:74: error: <identifier> expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                    ^\nMain.java:74: error: <identifier> expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                 ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                        ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                               ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                      ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                  ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                           ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                         ^\nMain.java:74: error: unclosed character literal\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                    ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                   ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                          ^\nMain.java:74: error: <identifier> expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                                    ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                                         ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                                                      ^\nMain.java:74: error: <identifier> expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                                                            ^\nMain.java:74: error: illegal character: \\96\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                                                                ^\nMain.java:74: error: illegal character: \\96\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                                                                     ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                                                                                ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                                                                                         ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                                                                                                     ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                                                                                                            ^\nMain.java:74: error: <identifier> expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                                                                                                                    ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                                                                                                                            ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                                                                                                                                               ^\nMain.java:74: error: <identifier> expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                                                                                                                                                  ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                                                                                                                                                                 ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                                                                                                                                                                        ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                                                                                                                                                                                  ^\nMain.java:74: error: ';' expected\nThe specific line `int ans = 0;` initializes a variable to store the final answer, which is the sum of the longest paths or cycle lengths. There isn't inherently a bug in this line, but issues might arise if `list` (which is used but not defined in the snippet) is not properly populated or if other parts of the code have logical errors.\n                                                                                                                                                                                                                                                                                                                                                 ^\nMain.java:76: error: unclosed character literal\nHere's a corrected and complete version of the method, assuming `list` should contain the indices of cycle start nodes and that `findcycle`, `findcyclelength`, and `dfs` methods are correctly implemented:\n    ^\nMain.java:76: error: ';' expected\nHere's a corrected and complete version of the method, assuming `list` should contain the indices of cycle start nodes and that `findcycle`, `findcyclelength`, and `dfs` methods are correctly implemented:\n                  ^\nMain.java:76: error: ';' expected\nHere's a corrected and complete version of the method, assuming `list` should contain the indices of cycle start nodes and that `findcycle`, `findcyclelength`, and `dfs` methods are correctly implemented:\n                               ^\nMain.java:76: error: ';' expected\nHere's a corrected and complete version of the method, assuming `list` should contain the indices of cycle start nodes and that `findcycle`, `findcyclelength`, and `dfs` methods are correctly implemented:\n                                          ^\nMain.java:76: error: illegal character: \\96\nHere's a corrected and complete version of the method, assuming `list` should contain the indices of cycle start nodes and that `findcycle`, `findcyclelength`, and `dfs` methods are correctly implemented:\n                                                                ^\nMain.java:76: error: illegal character: \\96\nHere's a corrected and complete version of the method, assuming `list` should contain the indices of cycle start nodes and that `findcycle`, `findcyclelength`, and `dfs` methods are correctly implemented:\n                                                                     ^\nMain.java:76: error: ';' expected\nHere's a corrected and complete version of the method, assuming `list` should contain the indices of cycle start nodes and that `findcycle`, `findcyclelength`, and `dfs` methods are correctly implemented:\n                                                                                     ^\nMain.java:76: error: ';' expected\nHere's a corrected and complete version of the method, assuming `list` should contain the indices of cycle start nodes and that `findcycle`, `findcyclelength`, and `dfs` methods are correctly implemented:\n                                                                                                 ^\nMain.java:76: error: ';' expected\nHere's a corrected and complete version of the method, assuming `list` should contain the indices of cycle start nodes and that `findcycle`, `findcyclelength`, and `dfs` methods are correctly implemented:\n                                                                                                          ^\n100 errors\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:66: error: <identifier> expected\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n    ^\nMain.java:66: error: ';' expected\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n          ^\nMain.java:66: error: ';' expected\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n                 ^\nMain.java:66: error: ';' expected\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n                                    ^\nMain.java:66: error: ';' expected\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n                                                      ^\nMain.java:66: error: ';' expected\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n                                                               ^\nMain.java:66: error: illegal character: \\96\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n                                                                         ^\nMain.java:66: error: illegal character: \\96\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n                                                                              ^\nMain.java:66: error: ';' expected\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n                                                                                          ^\nMain.java:66: error: ';' expected\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n                                                                                                                 ^\nMain.java:66: error: ';' expected\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n                                                                                                                          ^\nMain.java:66: error: ';' expected\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n                                                                                                                                       ^\nMain.java:66: error: <identifier> expected\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n                                                                                                                                                     ^\nMain.java:66: error: ';' expected\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n                                                                                                                                                        ^\nMain.java:66: error: ';' expected\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n                                                                                                                                                                     ^\nMain.java:66: error: ';' expected\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n                                                                                                                                                                              ^\nMain.java:66: error: ';' expected\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n                                                                                                                                                                                       ^\nMain.java:66: error: ';' expected\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n                                                                                                                                                                                                ^\nMain.java:66: error: ';' expected\nSure, here is the complete corrected method. The issue with the variable `list` being used without initialization needs to be addressed. Additionally, I have ensured that all parts of the code are correctly implemented.\n                                                                                                                                                                                                              ^\nMain.java:68: error: illegal character: \\96\n```java\n^\nMain.java:68: error: illegal character: \\96\n```java\n ^\nMain.java:68: error: illegal character: \\96\n```java\n  ^\nMain.java:106: error: illegal character: \\96\n```\n^\nMain.java:106: error: illegal character: \\96\n```\n ^\nMain.java:106: error: illegal character: \\96\n```\n  ^\nMain.java:108: error: ';' expected\nThis should address the issues and ensure the method works as expected.\n                   ^\nMain.java:108: error: ';' expected\nThis should address the issues and ensure the method works as expected.\n                              ^\nMain.java:108: error: ';' expected\nThis should address the issues and ensure the method works as expected.\n                                         ^\nMain.java:108: error: ';' expected\nThis should address the issues and ensure the method works as expected.\n                                                    ^\nMain.java:108: error: ';' expected\nThis should address the issues and ensure the method works as expected.\n                                                             ^\nMain.java:108: error: <identifier> expected\nThis should address the issues and ensure the method works as expected.\n                                                                       ^\nMain.java:109: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n          ^\nMain.java:109: error: invalid method declaration; return type required\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n               ^\n33 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_random_04",
                            "returncode": null,
                            "stdout": "35133288\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_03",
                            "returncode": null,
                            "stdout": "115688056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "04_tree_plus_an_edge_01",
                            "returncode": null,
                            "stdout": "5304410\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "03_large_cycle_01",
                            "returncode": null,
                            "stdout": "",
                            "stderr": "Exception in thread \"main\" java.lang.StackOverflowError\n\tat java.util.HashMap$Entry.<init>(HashMap.java:810)\n\tat java.util.HashMap.createEntry(HashMap.java:897)\n\tat java.util.HashMap.addEntry(HashMap.java:884)\n\tat java.util.HashMap.put(HashMap.java:505)\n\tat java.util.HashSet.add(HashSet.java:217)\n\tat Main.findcycle(Main.java:117)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n"
                        },
                        {
                            "case_name": "05_many_self_loops_00",
                            "returncode": null,
                            "stdout": "200000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_06",
                            "returncode": null,
                            "stdout": "448\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_09",
                            "returncode": null,
                            "stdout": "35587\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_07",
                            "returncode": null,
                            "stdout": "74706446\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "03_large_cycle_00",
                            "returncode": null,
                            "stdout": "",
                            "stderr": "Exception in thread \"main\" java.lang.StackOverflowError\n\tat java.util.HashMap$Entry.<init>(HashMap.java:810)\n\tat java.util.HashMap.createEntry(HashMap.java:897)\n\tat java.util.HashMap.addEntry(HashMap.java:884)\n\tat java.util.HashMap.put(HashMap.java:505)\n\tat java.util.HashSet.add(HashSet.java:217)\n\tat Main.findcycle(Main.java:117)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n"
                        },
                        {
                            "case_name": "02_random_06",
                            "returncode": null,
                            "stdout": "4662202\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "14\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "04_tree_plus_an_edge_00",
                            "returncode": null,
                            "stdout": "4151164\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_00",
                            "returncode": null,
                            "stdout": "131246364\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_01",
                            "returncode": null,
                            "stdout": "77384555\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_08",
                            "returncode": null,
                            "stdout": "16377\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_00",
                            "returncode": null,
                            "stdout": "5967\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_09",
                            "returncode": null,
                            "stdout": "88907327\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "8\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_02",
                            "returncode": null,
                            "stdout": "24966\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_04",
                            "returncode": null,
                            "stdout": "30726\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_07",
                            "returncode": null,
                            "stdout": "21705\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_02",
                            "returncode": null,
                            "stdout": "64407360\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_03",
                            "returncode": null,
                            "stdout": "26810\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_08",
                            "returncode": null,
                            "stdout": "64000026\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_05",
                            "returncode": null,
                            "stdout": "5992\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_01",
                            "returncode": null,
                            "stdout": "28319\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "41\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_05",
                            "returncode": null,
                            "stdout": "131854830\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_random_04",
                            "returncode": null,
                            "stdout": "35133288\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_03",
                            "returncode": null,
                            "stdout": "115688056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "04_tree_plus_an_edge_01",
                            "returncode": null,
                            "stdout": "5304410\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "03_large_cycle_01",
                            "returncode": null,
                            "stdout": "",
                            "stderr": "Exception in thread \"main\" java.lang.StackOverflowError\n\tat java.util.HashMap$Entry.<init>(HashMap.java:810)\n\tat java.util.HashMap.createEntry(HashMap.java:897)\n\tat java.util.HashMap.addEntry(HashMap.java:884)\n\tat java.util.HashMap.put(HashMap.java:505)\n\tat java.util.HashSet.add(HashSet.java:217)\n\tat Main.findcycle(Main.java:117)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n"
                        },
                        {
                            "case_name": "05_many_self_loops_00",
                            "returncode": null,
                            "stdout": "200000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_06",
                            "returncode": null,
                            "stdout": "448\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_09",
                            "returncode": null,
                            "stdout": "35587\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_07",
                            "returncode": null,
                            "stdout": "74706446\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "03_large_cycle_00",
                            "returncode": null,
                            "stdout": "",
                            "stderr": "Exception in thread \"main\" java.lang.StackOverflowError\n\tat java.util.HashMap$Entry.<init>(HashMap.java:810)\n\tat java.util.HashMap.createEntry(HashMap.java:897)\n\tat java.util.HashMap.addEntry(HashMap.java:884)\n\tat java.util.HashMap.put(HashMap.java:505)\n\tat java.util.HashSet.add(HashSet.java:217)\n\tat Main.findcycle(Main.java:117)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n"
                        },
                        {
                            "case_name": "02_random_06",
                            "returncode": null,
                            "stdout": "4662202\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "14\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "04_tree_plus_an_edge_00",
                            "returncode": null,
                            "stdout": "4151164\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_00",
                            "returncode": null,
                            "stdout": "131246364\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_01",
                            "returncode": null,
                            "stdout": "77384555\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_08",
                            "returncode": null,
                            "stdout": "16377\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_00",
                            "returncode": null,
                            "stdout": "5967\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_09",
                            "returncode": null,
                            "stdout": "88907327\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "8\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_02",
                            "returncode": null,
                            "stdout": "24966\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_04",
                            "returncode": null,
                            "stdout": "30726\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_07",
                            "returncode": null,
                            "stdout": "21705\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_02",
                            "returncode": null,
                            "stdout": "64407360\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_03",
                            "returncode": null,
                            "stdout": "26810\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_08",
                            "returncode": null,
                            "stdout": "64000026\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_05",
                            "returncode": null,
                            "stdout": "5992\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_01",
                            "returncode": null,
                            "stdout": "28319\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "41\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_05",
                            "returncode": null,
                            "stdout": "131854830\n",
                            "stderr": ""
                        }
                    ]
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": ""
                },
                "test": {
                    "test_res_info_list": [
                        {
                            "case_name": "02_random_04",
                            "returncode": null,
                            "stdout": "35133288\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_03",
                            "returncode": null,
                            "stdout": "115688056\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "04_tree_plus_an_edge_01",
                            "returncode": null,
                            "stdout": "5304410\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "03_large_cycle_01",
                            "returncode": null,
                            "stdout": "",
                            "stderr": "Exception in thread \"main\" java.lang.StackOverflowError\n\tat java.util.HashMap$Entry.<init>(HashMap.java:810)\n\tat java.util.HashMap.createEntry(HashMap.java:897)\n\tat java.util.HashMap.addEntry(HashMap.java:884)\n\tat java.util.HashMap.put(HashMap.java:505)\n\tat java.util.HashSet.add(HashSet.java:217)\n\tat Main.findcycle(Main.java:117)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n"
                        },
                        {
                            "case_name": "05_many_self_loops_00",
                            "returncode": null,
                            "stdout": "200000\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_06",
                            "returncode": null,
                            "stdout": "448\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_09",
                            "returncode": null,
                            "stdout": "35587\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_07",
                            "returncode": null,
                            "stdout": "74706446\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "03_large_cycle_00",
                            "returncode": null,
                            "stdout": "",
                            "stderr": "Exception in thread \"main\" java.lang.StackOverflowError\n\tat java.util.HashMap$Entry.<init>(HashMap.java:810)\n\tat java.util.HashMap.createEntry(HashMap.java:897)\n\tat java.util.HashMap.addEntry(HashMap.java:884)\n\tat java.util.HashMap.put(HashMap.java:505)\n\tat java.util.HashSet.add(HashSet.java:217)\n\tat Main.findcycle(Main.java:117)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n\tat Main.findcycle(Main.java:118)\n"
                        },
                        {
                            "case_name": "02_random_06",
                            "returncode": null,
                            "stdout": "4662202\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_01",
                            "returncode": null,
                            "stdout": "14\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "04_tree_plus_an_edge_00",
                            "returncode": null,
                            "stdout": "4151164\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_00",
                            "returncode": null,
                            "stdout": "131246364\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_01",
                            "returncode": null,
                            "stdout": "77384555\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_08",
                            "returncode": null,
                            "stdout": "16377\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_00",
                            "returncode": null,
                            "stdout": "5967\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_09",
                            "returncode": null,
                            "stdout": "88907327\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_00",
                            "returncode": null,
                            "stdout": "8\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_02",
                            "returncode": null,
                            "stdout": "24966\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_04",
                            "returncode": null,
                            "stdout": "30726\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_07",
                            "returncode": null,
                            "stdout": "21705\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_02",
                            "returncode": null,
                            "stdout": "64407360\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_03",
                            "returncode": null,
                            "stdout": "26810\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_08",
                            "returncode": null,
                            "stdout": "64000026\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_05",
                            "returncode": null,
                            "stdout": "5992\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "01_small_01",
                            "returncode": null,
                            "stdout": "28319\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "00_sample_02",
                            "returncode": null,
                            "stdout": "41\n",
                            "stderr": ""
                        },
                        {
                            "case_name": "02_random_05",
                            "returncode": null,
                            "stdout": "131854830\n",
                            "stderr": ""
                        }
                    ]
                }
            }
        },
        "prompt_apr_3": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:82: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n    ^\nMain.java:82: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                              ^\nMain.java:82: error: <identifier> expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                     ^\nMain.java:82: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                         ^\nMain.java:82: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                          ^\nMain.java:82: error: not a statement\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                            ^\nMain.java:82: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                               ^\nMain.java:82: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                ^\nMain.java:82: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                          ^\nMain.java:82: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                             ^\nMain.java:82: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                              ^\n11 errors\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:66: error: illegal character: \\96\n```java\n^\nMain.java:66: error: illegal character: \\96\n```java\n ^\nMain.java:66: error: illegal character: \\96\n```java\n  ^\nMain.java:83: error: illegal character: \\96\n```\n^\nMain.java:83: error: illegal character: \\96\n```\n ^\nMain.java:83: error: illegal character: \\96\n```\n  ^\nMain.java:84: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n    ^\nMain.java:84: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n          ^\nMain.java:84: error: '.class' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                   ^\nMain.java:84: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                    ^\nMain.java:84: error: <identifier> expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                ^\nMain.java:84: error: not a statement\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                     ^\nMain.java:84: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                       ^\nMain.java:84: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                             ^\nMain.java:92: error: illegal start of expression\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n    ^\nMain.java:92: error: illegal start of expression\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n           ^\nMain.java:92: error: ';' expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                         ^\nMain.java:92: error: <identifier> expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                ^\nMain.java:92: error: illegal start of expression\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                    ^\nMain.java:92: error: ';' expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                     ^\nMain.java:92: error: not a statement\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                       ^\nMain.java:92: error: ';' expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                          ^\nMain.java:92: error: <identifier> expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                                      ^\nMain.java:92: error: not a statement\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                                           ^\nMain.java:92: error: ';' expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                                             ^\nMain.java:92: error: ';' expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                                                                   ^\nMain.java:104: error: illegal start of expression\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n    ^\nMain.java:104: error: ';' expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                  ^\nMain.java:104: error: <identifier> expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                         ^\nMain.java:104: error: illegal start of expression\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                             ^\nMain.java:104: error: ';' expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                              ^\nMain.java:104: error: not a statement\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                ^\nMain.java:104: error: ';' expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                   ^\nMain.java:104: error: <identifier> expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                              ^\nMain.java:104: error: illegal start of expression\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                                  ^\nMain.java:104: error: ';' expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                                   ^\nMain.java:104: error: not a statement\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                                     ^\nMain.java:104: error: ';' expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                                        ^\nMain.java:112: error: reached end of file while parsing\n}\n ^\n39 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:81: error: cannot find symbol\n        ans = 0;\n        ^\n  symbol:   variable ans\n  location: class Main\n1 error\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:82: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n    ^\nMain.java:82: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                              ^\nMain.java:82: error: <identifier> expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                     ^\nMain.java:82: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                         ^\nMain.java:82: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                          ^\nMain.java:82: error: not a statement\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                            ^\nMain.java:82: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                               ^\nMain.java:82: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                ^\nMain.java:82: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                          ^\nMain.java:82: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                             ^\nMain.java:82: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                              ^\n11 errors\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:66: error: illegal character: \\96\n```java\n^\nMain.java:66: error: illegal character: \\96\n```java\n ^\nMain.java:66: error: illegal character: \\96\n```java\n  ^\nMain.java:84: error: illegal character: \\96\n```\n^\nMain.java:84: error: illegal character: \\96\n```\n ^\nMain.java:84: error: illegal character: \\96\n```\n  ^\nMain.java:85: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n    ^\nMain.java:85: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n          ^\nMain.java:85: error: '.class' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                   ^\nMain.java:85: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                    ^\nMain.java:85: error: <identifier> expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                ^\nMain.java:85: error: not a statement\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                     ^\nMain.java:85: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                       ^\nMain.java:85: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                             ^\nMain.java:93: error: illegal start of expression\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n    ^\nMain.java:93: error: illegal start of expression\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n           ^\nMain.java:93: error: ';' expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                         ^\nMain.java:93: error: <identifier> expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                ^\nMain.java:93: error: illegal start of expression\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                    ^\nMain.java:93: error: ';' expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                     ^\nMain.java:93: error: not a statement\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                       ^\nMain.java:93: error: ';' expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                          ^\nMain.java:93: error: <identifier> expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                                      ^\nMain.java:93: error: not a statement\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                                           ^\nMain.java:93: error: ';' expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                                             ^\nMain.java:93: error: ';' expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                                                                   ^\nMain.java:105: error: illegal start of expression\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n    ^\nMain.java:105: error: ';' expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                  ^\nMain.java:105: error: <identifier> expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                         ^\nMain.java:105: error: illegal start of expression\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                             ^\nMain.java:105: error: ';' expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                              ^\nMain.java:105: error: not a statement\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                ^\nMain.java:105: error: ';' expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                   ^\nMain.java:105: error: <identifier> expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                              ^\nMain.java:105: error: illegal start of expression\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                                  ^\nMain.java:105: error: ';' expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                                   ^\nMain.java:105: error: not a statement\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                                     ^\nMain.java:105: error: ';' expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                                        ^\nMain.java:113: error: reached end of file while parsing\n}\n ^\n39 errors\n"
                }
            }
        },
        "prompt_apr_4": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:101: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n    ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                              ^\nMain.java:101: error: <identifier> expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                     ^\nMain.java:101: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                         ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                          ^\nMain.java:101: error: not a statement\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                            ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                               ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                ^\nMain.java:101: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                          ^\nMain.java:101: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                             ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                              ^\n11 errors\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:81: error: '.class' expected\nfor (Integer i : list)        int[] newvis = new int[n];\n                                    ^\nMain.java:81: error: not a statement\nfor (Integer i : list)        int[] newvis = new int[n];\n                                 ^\nMain.java:81: error: illegal start of expression\nfor (Integer i : list)        int[] newvis = new int[n];\n                                           ^\nMain.java:81: error: ';' expected\nfor (Integer i : list)        int[] newvis = new int[n];\n                                            ^\nMain.java:81: error: ']' expected\nfor (Integer i : list)        int[] newvis = new int[n];\n                                                     ^\nMain.java:81: error: ';' expected\nfor (Integer i : list)        int[] newvis = new int[n];\n                                                      ^\n6 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:101: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n    ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                              ^\nMain.java:101: error: <identifier> expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                     ^\nMain.java:101: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                         ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                          ^\nMain.java:101: error: not a statement\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                            ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                               ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                ^\nMain.java:101: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                          ^\nMain.java:101: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                             ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                              ^\n11 errors\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:81: error: cannot find symbol\nfindcycle(i, arr, vis, id, set);        int[] newvis = new int[n];\n          ^\n  symbol:   variable i\n  location: class Main\nMain.java:81: error: cannot find symbol\nfindcycle(i, arr, vis, id, set);        int[] newvis = new int[n];\n                           ^\n  symbol:   variable set\n  location: class Main\nMain.java:96: error: cannot find symbol\n            ans = ans + dp[i];\n            ^\n  symbol:   variable ans\n  location: class Main\nMain.java:96: error: cannot find symbol\n            ans = ans + dp[i];\n                  ^\n  symbol:   variable ans\n  location: class Main\nMain.java:98: error: cannot find symbol\n        out.println(ans);\n                    ^\n  symbol:   variable ans\n  location: class Main\n5 errors\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:81: error: cannot find symbol\n                findcycle(i, arr, vis, id++, set);        int[] newvis = new int[n];\n                          ^\n  symbol:   variable i\n  location: class Main\nMain.java:81: error: cannot find symbol\n                findcycle(i, arr, vis, id++, set);        int[] newvis = new int[n];\n                                             ^\n  symbol:   variable set\n  location: class Main\nMain.java:96: error: cannot find symbol\n            ans = ans + dp[i];\n            ^\n  symbol:   variable ans\n  location: class Main\nMain.java:96: error: cannot find symbol\n            ans = ans + dp[i];\n                  ^\n  symbol:   variable ans\n  location: class Main\nMain.java:98: error: cannot find symbol\n        out.println(ans);\n                    ^\n  symbol:   variable ans\n  location: class Main\n5 errors\n"
                }
            }
        },
        "prompt_apr_5": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:100: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n    ^\nMain.java:100: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                              ^\nMain.java:100: error: <identifier> expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                     ^\nMain.java:100: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                         ^\nMain.java:100: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                          ^\nMain.java:100: error: not a statement\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                            ^\nMain.java:100: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                               ^\nMain.java:100: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                ^\nMain.java:100: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                          ^\nMain.java:100: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                             ^\nMain.java:100: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                              ^\nMain.java:108: error: illegal start of expression\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n    ^\nMain.java:108: error: illegal start of expression\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n           ^\nMain.java:108: error: ';' expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                         ^\nMain.java:108: error: <identifier> expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                ^\nMain.java:108: error: illegal start of expression\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                    ^\nMain.java:108: error: ';' expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                     ^\nMain.java:108: error: not a statement\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                       ^\nMain.java:108: error: ';' expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                          ^\nMain.java:108: error: <identifier> expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                                      ^\nMain.java:108: error: not a statement\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                                           ^\nMain.java:108: error: ';' expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                                             ^\nMain.java:108: error: ';' expected\n    static void findcycle(int i, int[] arr, int[] vis, int id, HashSet<Integer> set) {\n                                                                                   ^\nMain.java:120: error: illegal start of expression\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n    ^\nMain.java:120: error: ';' expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                  ^\nMain.java:120: error: <identifier> expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                         ^\nMain.java:120: error: illegal start of expression\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                             ^\nMain.java:120: error: ';' expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                              ^\nMain.java:120: error: not a statement\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                ^\nMain.java:120: error: ';' expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                   ^\nMain.java:120: error: <identifier> expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                              ^\nMain.java:120: error: illegal start of expression\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                                  ^\nMain.java:120: error: ';' expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                                   ^\nMain.java:120: error: not a statement\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                                     ^\nMain.java:120: error: ';' expected\n    static int dfs(int i, int[] arr, int[] dp, int[] vis) {\n                                                        ^\nMain.java:128: error: reached end of file while parsing\n}\n ^\n36 errors\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:101: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n    ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                              ^\nMain.java:101: error: <identifier> expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                     ^\nMain.java:101: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                         ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                          ^\nMain.java:101: error: not a statement\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                            ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                               ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                ^\nMain.java:101: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                          ^\nMain.java:101: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                             ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                              ^\n11 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:101: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n    ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                              ^\nMain.java:101: error: <identifier> expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                     ^\nMain.java:101: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                         ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                          ^\nMain.java:101: error: not a statement\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                            ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                               ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                ^\nMain.java:101: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                          ^\nMain.java:101: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                             ^\nMain.java:101: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                              ^\n11 errors\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:100: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n    ^\nMain.java:100: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                              ^\nMain.java:100: error: <identifier> expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                     ^\nMain.java:100: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                         ^\nMain.java:100: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                          ^\nMain.java:100: error: not a statement\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                            ^\nMain.java:100: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                               ^\nMain.java:100: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                ^\nMain.java:100: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                          ^\nMain.java:100: error: illegal start of expression\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                             ^\nMain.java:100: error: ';' expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n                                                                              ^\n11 errors\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:90: error: illegal start of type\n        for (int i = 0; i < n; i++) {\n        ^\nMain.java:90: error: ')' expected\n        for (int i = 0; i < n; i++) {\n                  ^\nMain.java:90: error: illegal start of type\n        for (int i = 0; i < n; i++) {\n                     ^\nMain.java:90: error: <identifier> expected\n        for (int i = 0; i < n; i++) {\n                      ^\nMain.java:90: error: ';' expected\n        for (int i = 0; i < n; i++) {\n                       ^\nMain.java:90: error: > expected\n        for (int i = 0; i < n; i++) {\n                             ^\nMain.java:90: error: '(' expected\n        for (int i = 0; i < n; i++) {\n                                ^\nMain.java:95: error: illegal start of type\n        for (int i = 0; i < n; i++) {\n        ^\nMain.java:95: error: ')' expected\n        for (int i = 0; i < n; i++) {\n                  ^\nMain.java:95: error: illegal start of type\n        for (int i = 0; i < n; i++) {\n                     ^\nMain.java:95: error: <identifier> expected\n        for (int i = 0; i < n; i++) {\n                      ^\nMain.java:95: error: ';' expected\n        for (int i = 0; i < n; i++) {\n                       ^\nMain.java:95: error: > expected\n        for (int i = 0; i < n; i++) {\n                             ^\nMain.java:95: error: '(' expected\n        for (int i = 0; i < n; i++) {\n                                ^\nMain.java:98: error: <identifier> expected\n        out.println(ans);\n                   ^\nMain.java:98: error: <identifier> expected\n        out.println(ans);\n                       ^\nMain.java:101: error: class, interface, or enum expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n           ^\nMain.java:104: error: class, interface, or enum expected\n        }\n        ^\nMain.java:106: error: class, interface, or enum expected\n        return 1 + findcyclelength(arr[i], arr, id, set);\n        ^\nMain.java:107: error: class, interface, or enum expected\n    }\n    ^\nMain.java:113: error: class, interface, or enum expected\n            }\n            ^\nMain.java:115: error: class, interface, or enum expected\n        }\n        ^\nMain.java:117: error: class, interface, or enum expected\n        set.add(i);\n        ^\nMain.java:118: error: class, interface, or enum expected\n        findcycle(arr[i], arr, vis, id, set);\n        ^\nMain.java:119: error: class, interface, or enum expected\n    }\n    ^\nMain.java:124: error: class, interface, or enum expected\n        }\n        ^\nMain.java:126: error: class, interface, or enum expected\n        int val = dfs(arr[i], arr, dp, vis) + 1;\n        ^\nMain.java:127: error: class, interface, or enum expected\n        return dp[i] = val;\n        ^\nMain.java:128: error: class, interface, or enum expected\n    }\n    ^\n29 errors\n"
                }
            }
        },
        "prompt_apr_6": {
            "ernie-3.5-128k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:87: error: cannot find symbol\nans = calculateAnswer(dp, arr);                newvis[j] = 1;\n      ^\n  symbol:   method calculateAnswer(int[],int[])\n  location: class Main\n1 error\n"
                }
            },
            "qwen-turbo": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:74: error: cannot find symbol\nans = set.size();        for (int i = 0; i < n; i++) {\n^\n  symbol:   variable ans\n  location: class Main\nMain.java:74: error: cannot find symbol\nans = set.size();        for (int i = 0; i < n; i++) {\n      ^\n  symbol:   variable set\n  location: class Main\nMain.java:77: error: cannot find symbol\n                findcycle(i, arr, vis, id, set);\n                                       ^\n  symbol:   variable id\n  location: class Main\nMain.java:84: error: cannot find symbol\n            int len = findcyclelength(i, arr, id, set);\n                                              ^\n  symbol:   variable id\n  location: class Main\n4 errors\n"
                }
            },
            "doubao-pro-4k": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:84: error: variable ans is already defined in method solve()\nint ans = 0; for (int i = 0; i < n; i++) { ans += dp[i]; }            int len = findcyclelength(i, arr, id, set);\n    ^\nMain.java:84: error: variable i is already defined in method solve()\nint ans = 0; for (int i = 0; i < n; i++) { ans += dp[i]; }            int len = findcyclelength(i, arr, id, set);\n                      ^\nMain.java:84: error: cannot find symbol\nint ans = 0; for (int i = 0; i < n; i++) { ans += dp[i]; }            int len = findcyclelength(i, arr, id, set);\n                                                                                                            ^\n  symbol:   variable set\n  location: class Main\nMain.java:85: error: cannot find symbol\n            for (Integer j : set) {\n                             ^\n  symbol:   variable set\n  location: class Main\n4 errors\n"
                }
            },
            "gpt-4o-mini": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:90: error: illegal start of type\n        for (int i = 0; i < n; i++) {\n        ^\nMain.java:90: error: ')' expected\n        for (int i = 0; i < n; i++) {\n                  ^\nMain.java:90: error: illegal start of type\n        for (int i = 0; i < n; i++) {\n                     ^\nMain.java:90: error: <identifier> expected\n        for (int i = 0; i < n; i++) {\n                      ^\nMain.java:90: error: ';' expected\n        for (int i = 0; i < n; i++) {\n                       ^\nMain.java:90: error: > expected\n        for (int i = 0; i < n; i++) {\n                             ^\nMain.java:90: error: '(' expected\n        for (int i = 0; i < n; i++) {\n                                ^\nMain.java:95: error: illegal start of type\n        for (int i = 0; i < n; i++) {\n        ^\nMain.java:95: error: ')' expected\n        for (int i = 0; i < n; i++) {\n                  ^\nMain.java:95: error: illegal start of type\n        for (int i = 0; i < n; i++) {\n                     ^\nMain.java:95: error: <identifier> expected\n        for (int i = 0; i < n; i++) {\n                      ^\nMain.java:95: error: ';' expected\n        for (int i = 0; i < n; i++) {\n                       ^\nMain.java:95: error: > expected\n        for (int i = 0; i < n; i++) {\n                             ^\nMain.java:95: error: '(' expected\n        for (int i = 0; i < n; i++) {\n                                ^\nMain.java:98: error: <identifier> expected\n        out.println(ans);\n                   ^\nMain.java:98: error: <identifier> expected\n        out.println(ans);\n                       ^\nMain.java:101: error: class, interface, or enum expected\n    static int findcyclelength(int i, int[] arr, int id, HashSet<Integer> set) {\n           ^\nMain.java:104: error: class, interface, or enum expected\n        }\n        ^\nMain.java:106: error: class, interface, or enum expected\n        return 1 + findcyclelength(arr[i], arr, id, set);\n        ^\nMain.java:107: error: class, interface, or enum expected\n    }\n    ^\nMain.java:113: error: class, interface, or enum expected\n            }\n            ^\nMain.java:115: error: class, interface, or enum expected\n        }\n        ^\nMain.java:117: error: class, interface, or enum expected\n        set.add(i);\n        ^\nMain.java:118: error: class, interface, or enum expected\n        findcycle(arr[i], arr, vis, id, set);\n        ^\nMain.java:119: error: class, interface, or enum expected\n    }\n    ^\nMain.java:124: error: class, interface, or enum expected\n        }\n        ^\nMain.java:126: error: class, interface, or enum expected\n        int val = dfs(arr[i], arr, dp, vis) + 1;\n        ^\nMain.java:127: error: class, interface, or enum expected\n        return dp[i] = val;\n        ^\nMain.java:128: error: class, interface, or enum expected\n    }\n    ^\n29 errors\n"
                }
            },
            "deepseek-chat": {
                "compile": {
                    "rc": null,
                    "so": "",
                    "se": "Main.java:82: error: variable ans is already defined in method solve()\nint ans = findcycle(i, arr, vis, id, set);        for (Integer i : list) {\n    ^\nMain.java:82: error: cannot find symbol\nint ans = findcycle(i, arr, vis, id, set);        for (Integer i : list) {\n                    ^\n  symbol:   variable i\n  location: class Main\nMain.java:82: error: cannot find symbol\nint ans = findcycle(i, arr, vis, id, set);        for (Integer i : list) {\n                                     ^\n  symbol:   variable set\n  location: class Main\nMain.java:87: error: cannot find symbol\n                newvis[j] = 1;\n                ^\n  symbol:   variable newvis\n  location: class Main\nMain.java:91: error: cannot find symbol\n            if (newvis[i] == 0) {\n                ^\n  symbol:   variable newvis\n  location: class Main\nMain.java:92: error: cannot find symbol\n                dp[i] = dfs(i, arr, dp, newvis);\n                                        ^\n  symbol:   variable newvis\n  location: class Main\n6 errors\n"
                }
            }
        }
    }
}