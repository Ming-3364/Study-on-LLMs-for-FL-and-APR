[
    {
        "buggy_file": "src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "buggy_method": {
            "method_name": "isVariableReadBeforeKill",
            "method_body": "private VariableLiveness isVariableReadBeforeKill(\n      Node n, String variable) {\n    if (NodeUtil.isName(n) && variable.equals(n.getString())) {\n      if (NodeUtil.isLhs(n, n.getParent())) {\n        // The expression to which the assignment is made is evaluated before\n        // the RHS is evaluated (normal left to right evaluation) but the KILL\n        // occurs after the RHS is evaluated.\n        return VariableLiveness.KILL;\n      } else {\n        return VariableLiveness.READ;\n      }\n    }\n\n    // Expressions are evaluated left-right, depth first.\n    for (Node child = n.getFirstChild();\n        child != null; child = child.getNext()) {\n      if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION\n        VariableLiveness state = isVariableReadBeforeKill(child, variable);\n        if (state != VariableLiveness.MAYBE_LIVE) {\n          return state;\n        }\n      }\n    }\n    return VariableLiveness.MAYBE_LIVE;\n  }",
            "start_line": 323,
            "end_line": 347,
            "buggy_lines": [
                327,
                335
            ]
        },
        "buggy_method_src": "private VariableLiveness isVariableReadBeforeKill(\n      Node n, String variable) {\n    if (NodeUtil.isName(n) && variable.equals(n.getString())) {\n      if (NodeUtil.isLhs(n, n.getParent())) {\n        // The expression to which the assignment is made is evaluated before\n        // the RHS is evaluated (normal left to right evaluation) but the KILL\n        // occurs after the RHS is evaluated.\n        return VariableLiveness.KILL;\n      } else {\n        return VariableLiveness.READ;\n      }\n    }\n\n    // Expressions are evaluated left-right, depth first.\n    for (Node child = n.getFirstChild();\n        child != null; child = child.getNext()) {\n      if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION\n        VariableLiveness state = isVariableReadBeforeKill(child, variable);\n        if (state != VariableLiveness.MAYBE_LIVE) {\n          return state;\n        }\n      }\n    }\n    return VariableLiveness.MAYBE_LIVE;\n  }",
        "test_stack": "com.google.javascript.jscomp.CommandLineRunnerTest::testIssue297\njunit.framework.AssertionFailedError:\nExpected: function f(b){var a;return(a=b.id)&&(a=parseInt(a.substr(1)))&&a>0}\nResult: function f(b){var a;return b.id&&(a=parseInt(a.substr(1)))&&a>0}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: input0] [synthetic: 1]\n        FUNCTION  1 [sourcename: input0]\n            NAME f 1 [sourcename: input0]\n            LP 1 [sourcename: input0]\n                NAME b 1 [sourcename: input0]\n            BLOCK 1 [sourcename: input0]\n                VAR 1 [sourcename: input0]\n                    NAME a 1 [sourcename: input0]\n                RETURN 1 [sourcename: input0]\n                    AND 1 [sourcename: input0] [parenthesized: true]\n                        ASSIGN 1 [sourcename: input0] [parenthesized: true]\n                            NAME a 1 [sourcename: input0]\n                            GETPROP 1 [sourcename: input0]\n                                NAME b 1 [sourcename: input0]\n                                STRING id 1 [sourcename: input0]\n                        AND 1 [sourcename: input0]\n                            ASSIGN 1 [sourcename: input0] [parenthesized: true]\n                                NAME a 1 [sourcename: input0]\n                                CALL 1 [sourcename: input0] [free_call: 1]\n                                    NAME parseInt 1 [sourcename: input0]\n                                    CALL 1 [sourcename: input0]\n                                        GETPROP 1 [sourcename: input0]\n                                            NAME a 1 [sourcename: input0]\n                                            STRING substr 1 [sourcename: input0]\n                                        NUMBER 1.0 1 [sourcename: input0]\n                            GT 1 [sourcename: input0]\n                                NAME a 1 [sourcename: input0]\n                                NUMBER 0.0 1 [sourcename: input0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: input0] [synthetic: 1]\n        FUNCTION  1 [sourcename: input0]\n            NAME f 1 [sourcename: input0]\n            LP 1 [sourcename: input0]\n                NAME b 1 [sourcename: input0]\n            BLOCK 1 [sourcename: input0]\n                VAR 1 [sourcename: input0]\n                    NAME a 1 [sourcename: input0]\n                RETURN 1 [sourcename: input0]\n                    AND 1 [sourcename: input0] [parenthesized: true]\n                        GETPROP 1 [sourcename: input0]\n                            NAME b 1 [sourcename: input0]\n                            STRING id 1 [sourcename: input0]\n                        AND 1 [sourcename: input0]\n                            ASSIGN 1 [sourcename: input0] [parenthesized: true]\n                                NAME a 1 [sourcename: input0]\n                                CALL 1 [sourcename: input0] [free_call: 1]\n                                    NAME parseInt 1 [sourcename: input0]\n                                    CALL 1 [sourcename: input0]\n                                        GETPROP 1 [sourcename: input0]\n                                            NAME a 1 [sourcename: input0]\n                                            STRING substr 1 [sourcename: input0]\n                                        NUMBER 1.0 1 [sourcename: input0]\n                            GT 1 [sourcename: input0]\n                                NAME a 1 [sourcename: input0]\n                                NUMBER 0.0 1 [sourcename: input0]\n\n\nSubtree1: ASSIGN 1 [sourcename: input0] [parenthesized: true]\n    NAME a 1 [sourcename: input0]\n    GETPROP 1 [sourcename: input0]\n        NAME b 1 [sourcename: input0]\n        STRING id 1 [sourcename: input0]\n\n\nSubtree2: GETPROP 1 [sourcename: input0]\n    NAME b 1 [sourcename: input0]\n    STRING id 1 [sourcename: input0]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:655)\n\tat com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:626)\n\tat com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:618)\n\tat com.google.javascript.jscomp.CommandLineRunnerTest.testIssue297(CommandLineRunnerTest.java:252)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.DeadAssignmentsEliminationTest::testIssue297a\njunit.framework.AssertionFailedError:\nExpected: function f(p){var x;return(x=p.id)&&(x=parseInt(x.substr(1)))&&x>0}f(\"\")\nResult: function f(p){var x;return p.id&&(x=parseInt(x.substr(1)))&&x>0}f(\"\")\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: expected0] [synthetic: 1]\n        FUNCTION  1 [sourcename: expected0]\n            NAME f 1 [sourcename: expected0]\n            LP 1 [sourcename: expected0]\n                NAME p 1 [sourcename: expected0]\n            BLOCK 1 [sourcename: expected0]\n                VAR 1 [sourcename: expected0]\n                    NAME x 1 [sourcename: expected0]\n                RETURN 1 [sourcename: expected0]\n                    AND 1 [sourcename: expected0] [parenthesized: true]\n                        ASSIGN 1 [sourcename: expected0] [parenthesized: true]\n                            NAME x 1 [sourcename: expected0]\n                            GETPROP 1 [sourcename: expected0]\n                                NAME p 1 [sourcename: expected0]\n                                STRING id 1 [sourcename: expected0]\n                        AND 1 [sourcename: expected0]\n                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]\n                                NAME x 1 [sourcename: expected0]\n                                CALL 1 [sourcename: expected0] [free_call: 1]\n                                    NAME parseInt 1 [sourcename: expected0]\n                                    CALL 1 [sourcename: expected0]\n                                        GETPROP 1 [sourcename: expected0]\n                                            NAME x 1 [sourcename: expected0]\n                                            STRING substr 1 [sourcename: expected0]\n                                        NUMBER 1.0 1 [sourcename: expected0]\n                            GT 1 [sourcename: expected0]\n                                NAME x 1 [sourcename: expected0]\n                                NUMBER 0.0 1 [sourcename: expected0]\n        EMPTY 1 [sourcename: expected0]\n        EXPR_RESULT 1 [sourcename: expected0]\n            CALL 1 [sourcename: expected0] [free_call: 1]\n                NAME f 1 [sourcename: expected0]\n                STRING  1 [sourcename: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: testcode] [synthetic: 1]\n        FUNCTION  1 [sourcename: testcode]\n            NAME f 1 [sourcename: testcode]\n            LP 1 [sourcename: testcode]\n                NAME p 1 [sourcename: testcode]\n            BLOCK 1 [sourcename: testcode]\n                VAR 1 [sourcename: testcode]\n                    NAME x 1 [sourcename: testcode]\n                RETURN 1 [sourcename: testcode]\n                    AND 1 [sourcename: testcode] [parenthesized: true]\n                        GETPROP 1 [sourcename: testcode]\n                            NAME p 1 [sourcename: testcode]\n                            STRING id 1 [sourcename: testcode]\n                        AND 1 [sourcename: testcode]\n                            ASSIGN 1 [sourcename: testcode] [parenthesized: true]\n                                NAME x 1 [sourcename: testcode]\n                                CALL 1 [sourcename: testcode] [free_call: 1]\n                                    NAME parseInt 1 [sourcename: testcode]\n                                    CALL 1 [sourcename: testcode]\n                                        GETPROP 1 [sourcename: testcode]\n                                            NAME x 1 [sourcename: testcode]\n                                            STRING substr 1 [sourcename: testcode]\n                                        NUMBER 1.0 1 [sourcename: testcode]\n                            GT 1 [sourcename: testcode]\n                                NAME x 1 [sourcename: testcode]\n                                NUMBER 0.0 1 [sourcename: testcode]\n        EMPTY 1 [sourcename: testcode]\n        EXPR_RESULT 1 [sourcename: testcode]\n            CALL 1 [sourcename: testcode] [free_call: 1]\n                NAME f 1 [sourcename: testcode]\n                STRING  1 [sourcename: testcode]\n\n\nSubtree1: ASSIGN 1 [sourcename: expected0] [parenthesized: true]\n    NAME x 1 [sourcename: expected0]\n    GETPROP 1 [sourcename: expected0]\n        NAME p 1 [sourcename: expected0]\n        STRING id 1 [sourcename: expected0]\n\n\nSubtree2: GETPROP 1 [sourcename: testcode]\n    NAME p 1 [sourcename: testcode]\n    STRING id 1 [sourcename: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)\n\tat com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:512)\n\tat com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue297a(DeadAssignmentsEliminationTest.java:368)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.DeadAssignmentsEliminationTest::testIssue297b\njunit.framework.AssertionFailedError:\nExpected: function f(){var x;return(x=\"\")&&x.substr(1)}\nResult: function f(){var x;return\"\"&&x.substr(1)}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: expected0] [synthetic: 1]\n        FUNCTION  1 [sourcename: expected0]\n            NAME f 1 [sourcename: expected0]\n            LP 1 [sourcename: expected0]\n            BLOCK 1 [sourcename: expected0]\n                VAR 1 [sourcename: expected0]\n                    NAME x 1 [sourcename: expected0]\n                RETURN 1 [sourcename: expected0]\n                    AND 1 [sourcename: expected0]\n                        ASSIGN 1 [sourcename: expected0] [parenthesized: true]\n                            NAME x 1 [sourcename: expected0]\n                            STRING  1 [sourcename: expected0]\n                        CALL 1 [sourcename: expected0] [parenthesized: true]\n                            GETPROP 1 [sourcename: expected0]\n                                NAME x 1 [sourcename: expected0]\n                                STRING substr 1 [sourcename: expected0]\n                            NUMBER 1.0 1 [sourcename: expected0]\n        EMPTY 1 [sourcename: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: testcode] [synthetic: 1]\n        FUNCTION  1 [sourcename: testcode]\n            NAME f 1 [sourcename: testcode]\n            LP 1 [sourcename: testcode]\n            BLOCK 1 [sourcename: testcode]\n                VAR 1 [sourcename: testcode]\n                    NAME x 1 [sourcename: testcode]\n                RETURN 1 [sourcename: testcode]\n                    AND 1 [sourcename: testcode]\n                        STRING  1 [sourcename: testcode]\n                        CALL 1 [sourcename: testcode]\n                            GETPROP 1 [sourcename: testcode]\n                                NAME x 1 [sourcename: testcode]\n                                STRING substr 1 [sourcename: testcode]\n                            NUMBER 1.0 1 [sourcename: testcode]\n        EMPTY 1 [sourcename: testcode]\n\n\nSubtree1: ASSIGN 1 [sourcename: expected0] [parenthesized: true]\n    NAME x 1 [sourcename: expected0]\n    STRING  1 [sourcename: expected0]\n\n\nSubtree2: STRING  1 [sourcename: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)\n\tat com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue297b(DeadAssignmentsEliminationTest.java:375)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.DeadAssignmentsEliminationTest::testIssue297c\njunit.framework.AssertionFailedError:\nExpected: function f(){var x;return(x=1)&&f(x)}\nResult: function f(){var x;return 1&&f(x)}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: expected0] [synthetic: 1]\n        FUNCTION  1 [sourcename: expected0]\n            NAME f 1 [sourcename: expected0]\n            LP 1 [sourcename: expected0]\n            BLOCK 1 [sourcename: expected0]\n                VAR 1 [sourcename: expected0]\n                    NAME x 1 [sourcename: expected0]\n                RETURN 1 [sourcename: expected0]\n                    AND 1 [sourcename: expected0]\n                        ASSIGN 1 [sourcename: expected0] [parenthesized: true]\n                            NAME x 1 [sourcename: expected0]\n                            NUMBER 1.0 1 [sourcename: expected0]\n                        CALL 1 [sourcename: expected0] [free_call: 1]\n                            NAME f 1 [sourcename: expected0]\n                            NAME x 1 [sourcename: expected0]\n        EMPTY 1 [sourcename: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: testcode] [synthetic: 1]\n        FUNCTION  1 [sourcename: testcode]\n            NAME f 1 [sourcename: testcode]\n            LP 1 [sourcename: testcode]\n            BLOCK 1 [sourcename: testcode]\n                VAR 1 [sourcename: testcode]\n                    NAME x 1 [sourcename: testcode]\n                RETURN 1 [sourcename: testcode]\n                    AND 1 [sourcename: testcode]\n                        NUMBER 1.0 1 [sourcename: testcode]\n                        CALL 1 [sourcename: testcode] [free_call: 1]\n                            NAME f 1 [sourcename: testcode]\n                            NAME x 1 [sourcename: testcode]\n        EMPTY 1 [sourcename: testcode]\n\n\nSubtree1: ASSIGN 1 [sourcename: expected0] [parenthesized: true]\n    NAME x 1 [sourcename: expected0]\n    NUMBER 1.0 1 [sourcename: expected0]\n\n\nSubtree2: NUMBER 1.0 1 [sourcename: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)\n\tat com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue297c(DeadAssignmentsEliminationTest.java:386)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.DeadAssignmentsEliminationTest::testIssue297d\njunit.framework.AssertionFailedError:\nExpected: function f(a){return(a=1)&&f(a)}\nResult: function f(a){return 1&&f(a)}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: expected0] [synthetic: 1]\n        FUNCTION  1 [sourcename: expected0]\n            NAME f 1 [sourcename: expected0]\n            LP 1 [sourcename: expected0]\n                NAME a 1 [sourcename: expected0]\n            BLOCK 1 [sourcename: expected0]\n                RETURN 1 [sourcename: expected0]\n                    AND 1 [sourcename: expected0]\n                        ASSIGN 1 [sourcename: expected0] [parenthesized: true]\n                            NAME a 1 [sourcename: expected0]\n                            NUMBER 1.0 1 [sourcename: expected0]\n                        CALL 1 [sourcename: expected0] [parenthesized: true] [free_call: 1]\n                            NAME f 1 [sourcename: expected0]\n                            NAME a 1 [sourcename: expected0]\n        EMPTY 1 [sourcename: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: testcode] [synthetic: 1]\n        FUNCTION  1 [sourcename: testcode]\n            NAME f 1 [sourcename: testcode]\n            LP 1 [sourcename: testcode]\n                NAME a 1 [sourcename: testcode]\n            BLOCK 1 [sourcename: testcode]\n                RETURN 1 [sourcename: testcode]\n                    AND 1 [sourcename: testcode]\n                        NUMBER 1.0 1 [sourcename: testcode]\n                        CALL 1 [sourcename: testcode] [free_call: 1]\n                            NAME f 1 [sourcename: testcode]\n                            NAME a 1 [sourcename: testcode]\n        EMPTY 1 [sourcename: testcode]\n\n\nSubtree1: ASSIGN 1 [sourcename: expected0] [parenthesized: true]\n    NAME a 1 [sourcename: expected0]\n    NUMBER 1.0 1 [sourcename: expected0]\n\n\nSubtree2: NUMBER 1.0 1 [sourcename: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)\n\tat com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue297d(DeadAssignmentsEliminationTest.java:397)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.DeadAssignmentsEliminationTest::testIssue297e\njunit.framework.AssertionFailedError:\nExpected: function f(a){return(a=1)-g(a)}\nResult: function f(a){return 1-g(a)}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: expected0] [synthetic: 1]\n        FUNCTION  1 [sourcename: expected0]\n            NAME f 1 [sourcename: expected0]\n            LP 1 [sourcename: expected0]\n                NAME a 1 [sourcename: expected0]\n            BLOCK 1 [sourcename: expected0]\n                RETURN 1 [sourcename: expected0]\n                    SUB 1 [sourcename: expected0]\n                        ASSIGN 1 [sourcename: expected0] [parenthesized: true]\n                            NAME a 1 [sourcename: expected0]\n                            NUMBER 1.0 1 [sourcename: expected0]\n                        CALL 1 [sourcename: expected0] [parenthesized: true] [free_call: 1]\n                            NAME g 1 [sourcename: expected0]\n                            NAME a 1 [sourcename: expected0]\n        EMPTY 1 [sourcename: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: testcode] [synthetic: 1]\n        FUNCTION  1 [sourcename: testcode]\n            NAME f 1 [sourcename: testcode]\n            LP 1 [sourcename: testcode]\n                NAME a 1 [sourcename: testcode]\n            BLOCK 1 [sourcename: testcode]\n                RETURN 1 [sourcename: testcode]\n                    SUB 1 [sourcename: testcode]\n                        NUMBER 1.0 1 [sourcename: testcode]\n                        CALL 1 [sourcename: testcode] [free_call: 1]\n                            NAME g 1 [sourcename: testcode]\n                            NAME a 1 [sourcename: testcode]\n        EMPTY 1 [sourcename: testcode]\n\n\nSubtree1: ASSIGN 1 [sourcename: expected0] [parenthesized: true]\n    NAME a 1 [sourcename: expected0]\n    NUMBER 1.0 1 [sourcename: expected0]\n\n\nSubtree2: NUMBER 1.0 1 [sourcename: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)\n\tat com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue297e(DeadAssignmentsEliminationTest.java:406)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\ncom.google.javascript.jscomp.DeadAssignmentsEliminationTest::testIssue297f\njunit.framework.AssertionFailedError:\nExpected: function f(a){h((a=1)-g(a))}\nResult: function f(a){h(1-g(a))}\nNode tree inequality:\nTree1:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: expected0] [synthetic: 1]\n        FUNCTION  1 [sourcename: expected0]\n            NAME f 1 [sourcename: expected0]\n            LP 1 [sourcename: expected0]\n                NAME a 1 [sourcename: expected0]\n            BLOCK 1 [sourcename: expected0]\n                EXPR_RESULT 1 [sourcename: expected0]\n                    CALL 1 [sourcename: expected0] [free_call: 1]\n                        NAME h 1 [sourcename: expected0]\n                        SUB 1 [sourcename: expected0]\n                            ASSIGN 1 [sourcename: expected0] [parenthesized: true]\n                                NAME a 1 [sourcename: expected0]\n                                NUMBER 1.0 1 [sourcename: expected0]\n                            CALL 1 [sourcename: expected0] [parenthesized: true] [free_call: 1]\n                                NAME g 1 [sourcename: expected0]\n                                NAME a 1 [sourcename: expected0]\n        EMPTY 1 [sourcename: expected0]\n\n\nTree2:\nBLOCK [synthetic: 1]\n    SCRIPT 1 [sourcename: testcode] [synthetic: 1]\n        FUNCTION  1 [sourcename: testcode]\n            NAME f 1 [sourcename: testcode]\n            LP 1 [sourcename: testcode]\n                NAME a 1 [sourcename: testcode]\n            BLOCK 1 [sourcename: testcode]\n                EXPR_RESULT 1 [sourcename: testcode]\n                    CALL 1 [sourcename: testcode] [free_call: 1]\n                        NAME h 1 [sourcename: testcode]\n                        SUB 1 [sourcename: testcode]\n                            NUMBER 1.0 1 [sourcename: testcode]\n                            CALL 1 [sourcename: testcode] [free_call: 1]\n                                NAME g 1 [sourcename: testcode]\n                                NAME a 1 [sourcename: testcode]\n        EMPTY 1 [sourcename: testcode]\n\n\nSubtree1: ASSIGN 1 [sourcename: expected0] [parenthesized: true]\n    NAME a 1 [sourcename: expected0]\n    NUMBER 1.0 1 [sourcename: expected0]\n\n\nSubtree2: NUMBER 1.0 1 [sourcename: testcode]\n\n\tat junit.framework.Assert.fail(Assert.java:57)\n\tat junit.framework.Assert.assertTrue(Assert.java:22)\n\tat junit.framework.Assert.assertNull(Assert.java:277)\n\tat junit.framework.TestCase.assertNull(TestCase.java:447)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)\n\tat com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)\n\tat com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue297f(DeadAssignmentsEliminationTest.java:415)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat junit.framework.TestCase.runTest(TestCase.java:176)\n\tat junit.framework.TestCase.runBare(TestCase.java:141)\n\tat junit.framework.TestResult$1.protect(TestResult.java:122)\n\tat junit.framework.TestResult.runProtected(TestResult.java:142)\n\tat junit.framework.TestResult.run(TestResult.java:125)\n\tat junit.framework.TestCase.run(TestCase.java:129)\n\tat junit.framework.TestSuite.runTest(TestSuite.java:255)\n\tat junit.framework.TestSuite.run(TestSuite.java:250)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)\n\tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\n\tat org.apache.tools.ant.Target.execute(Target.java:392)\n\tat org.apache.tools.ant.Target.performTasks(Target.java:413)\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n\tat org.apache.tools.ant.Main.runBuild(Main.java:811)\n\tat org.apache.tools.ant.Main.startAnt(Main.java:217)\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n",
        "test_assert": "test(\"function f(p) {\" +\n",
        "buggy_lines_in_method": [
            5,
            13
        ],
        "buggy_statements": [
            "        // The expression to which the assignment is made is evaluated before",
            ""
        ],
        "buggy_method_src_endswith_buggy_statement": "private VariableLiveness isVariableReadBeforeKill(\n      Node n, String variable) {\n    if (NodeUtil.isName(n) && variable.equals(n.getString())) {\n      if (NodeUtil.isLhs(n, n.getParent())) {\n        // The expression to which the assignment is made is evaluated before\n        // the RHS is evaluated (normal left to right evaluation) but the KILL\n        // occurs after the RHS is evaluated.\n        return VariableLiveness.KILL;\n      } else {\n        return VariableLiveness.READ;\n      }\n    }\n"
    }
]