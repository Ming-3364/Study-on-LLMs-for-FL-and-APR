
================== buggy_file ==================
faultyVersion.java
================== buggy_method ==================
{'method_name': 'solve', 'method_body': ';\n\t\tlong start = K;\n\t\tlong end = M-1;\n\t\tlong dif = end - start + 1;\n\t\tif(dif == 1){\n\t\t\tres = 0;\n\t\t}\n\t\telse{\n\t\t\tif(N > start-1){\n\t\t\t\tN -= start-1;\n\t\t\t\tlong remain = N % dif;\n\t\t\t\tif(remain == 0){\n\t\t\t\t\tremain = dif;\n\t\t\t\t}\n\t\t\t\tremain += start-1;\n\t\t\t\tremain %= 4;\n\t\t\t\tif(remain == 1){\n\t\t\t\t\tres = 2;\n\t\t\t\t}\n\t\t\t\telse if(remain == 2){\n\t\t\t\t\tres = 4;\n\t\t\t\t}\n\t\t\t\telse if(remain == 3){\n\t\t\t\t\tres = 8;\n\t\t\t\t}\n\t\t\t\telse if(remain == 0){\n\t\t\t\t\tres = 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(N % 4 == 1){\n\t\t\t\t\tres = 2;\n\t\t\t\t}\n\t\t\t\telse if(N % 4 == 2){\n\t\t\t\t\tres = 4;\n\t\t\t\t}\n\t\t\t\telse if(N % 4 == 3){\n\t\t\t\t\tres = 8;\n\t\t\t\t}\n\t\t\t\telse if(N % 4 == 0){\n\t\t\t\t\tres = 6;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn res;\n\t}\n\t\n\t// 関数\n\tpublic static void name(){\n\t}\n\t\n\t// インプット関数\n\tpublic', 'start_line': 33, 'end_line': 80}
================== buggy_method_src ==================
;
		long start = K;
		long end = M-1;
		long dif = end - start + 1;
		if(dif == 1){
			res = 0;
		}
		else{
			if(N > start-1){
				N -= start-1;
				long remain = N % dif;
				if(remain == 0){
					remain = dif;
				}
				remain += start-1;
				remain %= 4;
				if(remain == 1){
					res = 2;
				}
				else if(remain == 2){
					res = 4;
				}
				else if(remain == 3){
					res = 8;
				}
				else if(remain == 0){
					res = 6;
				}
			}
			else{
				if(N % 4 == 1){
					res = 2;
				}
				else if(N % 4 == 2){
					res = 4;
				}
				else if(N % 4 == 3){
					res = 8;
				}
				else if(N % 4 == 0){
					res = 6;
				}
			}
		}
		
		return res;
	}
	
	// 関数
	public static void name(){
	}
	
	// インプット関数
	public
================== test_stack ==================
None
================== test_assert ==================
None
================== buggy_lines_in_method ==================
[6]
================== buggy_statements ==================
['\t\t\tres = 0;']
================== buggy_method_src_endswith_buggy_statement ==================
;
		long start = K;
		long end = M-1;
		long dif = end - start + 1;
		if(dif == 1){
			res = 0;