[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "main",
            "method_body": "public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        char[] S = sc.next().toCharArray();\n        int[] C = new int[N];\n        for (int i = 0; i < N; i++) {\n            C[i] = sc.nextInt();\n        }\n        int[][][] dp = new int[N][2][2];\n        dp[0][0][0] = 0;\n        dp[0][0][1] = C[0];\n        dp[0][1][0] = Integer.MAX_VALUE;\n        dp[0][1][1] = Integer.MAX_VALUE;\n\n        dp[1][1][1] = S[0] == S[1] ? C[0]+C[1]: C[1];\n        dp[1][0][1] = S[0] == S[1] ? C[1] : C[0] + C[1];\n        dp[1][0][0] = S[0] == S[1] ? C[0] : 0;\n        dp[1][1][0] = S[0] == S[1] ? 0 : C[0];\n\n        for (int i = 2; i < S.length; i++) {\n            dp[i][0][0] = S[i] == S[i - 1] ? dp[i - 1][0][1] : dp[i - 1][0][0];\n            dp[i][1][0] = S[i] == S[i - 1] ? Math.min(dp[i - 1][1][1], dp[i - 1][0][0]) : Math.min(dp[i - 1][0][1], dp[i - 1][1][0]);\n            dp[i][0][1] = S[i] == S[i - 1] ? dp[i - 1][0][0] + C[i] : dp[i - 1][0][1] + C[i];\n            dp[i][1][1] = S[i] == S[i - 1] ? Math.min(dp[i - 1][1][0], dp[i - 1][0][1]) + C[i] : Math.min(dp[i - 1][1][1], dp[i - 1][0][0]) + C[i];\n        }\n\n        System.out.println(Math.min(dp[S.length - 1][1][0], dp[S.length - 1][1][1]));\n    }",
            "start_line": 5,
            "end_line": 32
        },
        "buggy_method_src": "public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        char[] S = sc.next().toCharArray();\n        int[] C = new int[N];\n        for (int i = 0; i < N; i++) {\n            C[i] = sc.nextInt();\n        }\n        int[][][] dp = new int[N][2][2];\n        dp[0][0][0] = 0;\n        dp[0][0][1] = C[0];\n        dp[0][1][0] = Integer.MAX_VALUE;\n        dp[0][1][1] = Integer.MAX_VALUE;\n\n        dp[1][1][1] = S[0] == S[1] ? C[0]+C[1]: C[1];\n        dp[1][0][1] = S[0] == S[1] ? C[1] : C[0] + C[1];\n        dp[1][0][0] = S[0] == S[1] ? C[0] : 0;\n        dp[1][1][0] = S[0] == S[1] ? 0 : C[0];\n\n        for (int i = 2; i < S.length; i++) {\n            dp[i][0][0] = S[i] == S[i - 1] ? dp[i - 1][0][1] : dp[i - 1][0][0];\n            dp[i][1][0] = S[i] == S[i - 1] ? Math.min(dp[i - 1][1][1], dp[i - 1][0][0]) : Math.min(dp[i - 1][0][1], dp[i - 1][1][0]);\n            dp[i][0][1] = S[i] == S[i - 1] ? dp[i - 1][0][0] + C[i] : dp[i - 1][0][1] + C[i];\n            dp[i][1][1] = S[i] == S[i - 1] ? Math.min(dp[i - 1][1][0], dp[i - 1][0][1]) + C[i] : Math.min(dp[i - 1][1][1], dp[i - 1][0][0]) + C[i];\n        }\n\n        System.out.println(Math.min(dp[S.length - 1][1][0], dp[S.length - 1][1][1]));\n    }",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            9
        ],
        "buggy_statements": [
            "        int[][][] dp = new int[N][2][2];"
        ],
        "buggy_method_src_endswith_buggy_statement": "public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        char[] S = sc.next().toCharArray();\n        int[] C = new int[N];\n        for (int i = 0; i < N; i++) {\n            C[i] = sc.nextInt();\n        }\n        int[][][] dp = new int[N][2][2];"
    }
]