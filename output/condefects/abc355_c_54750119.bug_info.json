[
    {
        "buggy_file": "faultyVersion.java",
        "buggy_method": {
            "method_name": "main",
            "method_body": "public static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\t\tint t = scan.nextInt();\n\t\tint[] numbers = new int[t];\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tnumbers[i] = scan.nextInt();\n\t\t}\n\n\t\tscan.close();\n\n\t\tint[] cols = new int[n];\n\t\tint[] rows = new int[n];\n\t\tint[] diag = new int[2];\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tint num = numbers[i] - 1;\n\t\t\tcols[num % n]++;\n\t\t\trows[num / n]++;\n\t\t\tif (num % (n + 1) == 0) {\n\t\t\t\tdiag[0]++;\n\t\t\t}\n\t\t\tif (num % (n - 1) == 0 && num != n * n - 1) {\n\t\t\t\tdiag[1]++;\n\t\t\t}\n\n\t\t\tif (i >= n - 1) {\n\t\t\t\tif (diag[0] == n || diag[1] == n) {\n\t\t\t\t\tSystem.out.println(i + 1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\t\tif (cols[j] == n || rows[j] == n) {\n\t\t\t\t\t\tSystem.out.println(i + 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(-1);\n\n\t}",
            "start_line": 5,
            "end_line": 45
        },
        "buggy_method_src": "public static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\t\tint t = scan.nextInt();\n\t\tint[] numbers = new int[t];\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tnumbers[i] = scan.nextInt();\n\t\t}\n\n\t\tscan.close();\n\n\t\tint[] cols = new int[n];\n\t\tint[] rows = new int[n];\n\t\tint[] diag = new int[2];\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tint num = numbers[i] - 1;\n\t\t\tcols[num % n]++;\n\t\t\trows[num / n]++;\n\t\t\tif (num % (n + 1) == 0) {\n\t\t\t\tdiag[0]++;\n\t\t\t}\n\t\t\tif (num % (n - 1) == 0 && num != n * n - 1) {\n\t\t\t\tdiag[1]++;\n\t\t\t}\n\n\t\t\tif (i >= n - 1) {\n\t\t\t\tif (diag[0] == n || diag[1] == n) {\n\t\t\t\t\tSystem.out.println(i + 1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\t\tif (cols[j] == n || rows[j] == n) {\n\t\t\t\t\t\tSystem.out.println(i + 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(-1);\n\n\t}",
        "test_stack": "None",
        "test_assert": "None",
        "buggy_lines_in_method": [
            22
        ],
        "buggy_statements": [
            "\t\t\tif (num % (n - 1) == 0 && num != n * n - 1) {"
        ],
        "buggy_method_src_endswith_buggy_statement": "public static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\n\t\tint n = scan.nextInt();\n\t\tint t = scan.nextInt();\n\t\tint[] numbers = new int[t];\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tnumbers[i] = scan.nextInt();\n\t\t}\n\n\t\tscan.close();\n\n\t\tint[] cols = new int[n];\n\t\tint[] rows = new int[n];\n\t\tint[] diag = new int[2];\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tint num = numbers[i] - 1;\n\t\t\tcols[num % n]++;\n\t\t\trows[num / n]++;\n\t\t\tif (num % (n + 1) == 0) {\n\t\t\t\tdiag[0]++;\n\t\t\t}\n\t\t\tif (num % (n - 1) == 0 && num != n * n - 1) {"
    }
]